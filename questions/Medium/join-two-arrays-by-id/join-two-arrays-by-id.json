{
    "acRate": 53.43317218567118,
    "difficulty": "Medium",
    "freqBar": null,
    "questionId": "2858",
    "frontendQuestionId": "2722",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Join Two Arrays by ID",
    "titleSlug": "join-two-arrays-by-id",
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false,
    "codeSnippets": [
        {
            "lang": "JavaScript",
            "langSlug": "javascript",
            "code": "/**\n * @param {Array} arr1\n * @param {Array} arr2\n * @return {Array}\n */\nvar join = function(arr1, arr2) {\n    \n};"
        },
        {
            "lang": "TypeScript",
            "langSlug": "typescript",
            "code": "type JSONValue = null | boolean | number | string | JSONValue[] | { [key: string]: JSONValue };\ntype ArrayType = { \"id\": number } & Record<string, JSONValue>;\n\nfunction join(arr1: ArrayType[], arr2: ArrayType[]): ArrayType[] {\n    \n};"
        }
    ],
    "content": "Given two arrays arr1 and arr2, return a newarray joinedArray. All the objects in eachof the two inputs arrays will contain anidfield that has an integer value.joinedArrayis an array formed by mergingarr1 and arr2 based ontheir idkey. The length ofjoinedArray should be the length of unique values of id. The returned array should be sorted inascendingorder based on the idkey.\nIf a givenidexists in one array but not the other, the single object with thatid should be included in the result array without modification.\nIf two objects share an id, their properties should be merged into a singleobject:\n\nIf a key only exists in one object, that single key-value pair should be included in the object.\nIf a key is included in both objects, the value in the object from arr2should override the value from arr1.\n\n\nExample 1:\n\nInput: \narr1 = [\n   {\"id\": 1, \"x\": 1},\n   {\"id\": 2, \"x\": 9}\n], \narr2 = [\n    {\"id\": 3, \"x\": 5}\n]\nOutput: \n[\n   {\"id\": 1, \"x\": 1},\n   {\"id\": 2, \"x\": 9},\n    {\"id\": 3, \"x\": 5}\n]\nExplanation: There are no duplicate ids so arr1 is simply concatenated with arr2.\n\nExample 2:\n\nInput: \narr1 = [\n    {\"id\": 1, \"x\": 2, \"y\": 3},\n    {\"id\": 2, \"x\": 3, \"y\": 6}\n], \narr2 = [\n    {\"id\": 2, \"x\": 10, \"y\": 20},\n    {\"id\": 3, \"x\": 0, \"y\": 0}\n]\nOutput: \n[\n    {\"id\": 1, \"x\": 2, \"y\": 3},\n    {\"id\": 2, \"x\": 10, \"y\": 20},\n   {\"id\": 3, \"x\": 0, \"y\": 0}\n]\nExplanation: The two objects with id=1 and id=3 are included in the result array without modifiction. The two objects with id=2 are merged together. The keys from arr2 override the values in arr1.\n\nExample 3:\n\nInput: \narr1 = [\n    {\"id\": 1, \"b\": {\"b\": 94},\"v\": [4, 3], \"y\": 48}\n]\narr2 = [\n    {\"id\": 1, \"b\": {\"c\": 84}, \"v\": [1, 3]}\n]\nOutput: [\n    {\"id\": 1, \"b\": {\"c\": 84}, \"v\": [1, 3], \"y\": 48}\n]\nExplanation: The two objects with id=1 are merged together. For the keys \"b\" and \"v\" the values from arr2 are used. Since the key \"y\" only exists in arr1, that value is taken form arr1.\n\nConstraints:\n\narr1 and arr2 are valid JSON arrays\nEach object in arr1 and arr2 has a uniqueinteger id key\n2 <= JSON.stringify(arr1).length <= 106\n2 <= JSON.stringify(arr2).length <= 106\n\n"
}