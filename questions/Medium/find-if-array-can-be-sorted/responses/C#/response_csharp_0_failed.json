{
    "status_code": 11,
    "lang": "csharp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 47212000,
    "question_id": "3291",
    "elapsed_time": 159,
    "compare_result
    "code_output": "false",
    "std_output": "",
    "last_testcase": "[1,2,3,4,5]",
    "expected_output": "true",
    "task_finish_time": 1707242861940,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 771,
    "total_testcases": 999,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C#",
    "submission_id": "1168058997",
    "input_formatted": "[1,2,3,4,5]",
    "input": "[1,2,3,4,5]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "public class Solution {\n    public bool CanSortArray(int[] nums) {\n        int[] bitCounts = new int[nums.Length];\n        for (int i = 0; i < nums.Length; i++) {\n            bitCounts[i] = BitCount(nums[i]);\n        }\n        \n        int[] sortedBitCounts = (int[])bitCounts.Clone();\n        Array.Sort(sortedBitCounts);\n        Array.Sort(nums);\n        \n        for (int i = 0; i < nums.Length; i++) {\n            if (BitCount(nums[i]) != sortedBitCounts[i]) {\n                return false;\n            }\n        }\n        \n        return true;\n    }\n    \n    private int BitCount(int n) {\n        int count = 0;\n        while (n > 0) {\n            count += n & 1;\n            n >>= 1;\n        }\n        return count;\n    }\n}"
}