{
    "status_code": 11,
    "lang": "rust",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 2192000,
    "question_id": "3291",
    "elapsed_time": 25,
    "compare_result
    "code_output": "false",
    "std_output": "",
    "last_testcase": "[1,2,3,4,5]",
    "expected_output": "true",
    "task_finish_time": 1707252558944,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 771,
    "total_testcases": 999,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Rust",
    "submission_id": "1168184297",
    "input_formatted": "[1,2,3,4,5]",
    "input": "[1,2,3,4,5]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "impl Solution {\n    pub fn can_sort_array(nums: Vec<i32>) -> bool {\n        let mut bit_counts = nums.iter().map(|&num| num.count_ones()).collect::<Vec<u32>>();\n        bit_counts.sort_unstable();\n        let mut sorted_nums = nums.clone();\n        sorted_nums.sort_unstable();\n        let sorted_bit_counts = sorted_nums.iter().map(|&num| num.count_ones()).collect::<Vec<u32>>();\n        bit_counts == sorted_bit_counts\n    }\n}"
}