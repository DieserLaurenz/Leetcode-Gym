{
    "status_code": 11,
    "lang": "java",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 44084000,
    "display_runtime": "1",
    "question_id": "3291",
    "elapsed_time": 150,
    "compare_result
    "code_output": "false",
    "std_output": "",
    "last_testcase": "[8,4,2,30,15]",
    "expected_output": "true",
    "task_finish_time": 1707242606676,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 618,
    "total_testcases": 999,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Java",
    "submission_id": "1168054701",
    "input_formatted": "[8,4,2,30,15]",
    "input": "[8,4,2,30,15]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    public boolean canSortArray(int[] nums) {\n        int[] bitCounts = new int[32];\n        for (int num : nums) {\n            bitCounts[Integer.bitCount(num)]++;\n        }\n        int prevCount = 0;\n        for (int count : bitCounts) {\n            if (count > 0) {\n                if (prevCount > 0 && prevCount != count) {\n                    return false;\n                }\n                prevCount = count;\n            }\n        }\n        return true;\n    }\n}"
}