{
    "status_code": 11,
    "lang": "java",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 44060000,
    "display_runtime": "4",
    "question_id": "3291",
    "elapsed_time": 141,
    "compare_result
    "code_output": "true",
    "std_output": "",
    "last_testcase": "[3,16,8,4,2]",
    "expected_output": "false",
    "task_finish_time": 1707242655072,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 608,
    "total_testcases": 999,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Java",
    "submission_id": "1168055490",
    "input_formatted": "[3,16,8,4,2]",
    "input": "[3,16,8,4,2]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    public boolean canSortArray(int[] nums) {\n        int[] freq = new int[15];\n        for (int num : nums) {\n            freq[Integer.bitCount(num)]++;\n        }\n        int[] sorted = nums.clone();\n        Arrays.sort(sorted);\n        int[] sortedFreq = new int[15];\n        for (int num : sorted) {\n            sortedFreq[Integer.bitCount(num)]++;\n        }\n        return Arrays.equals(freq, sortedFreq);\n    }\n}"
}