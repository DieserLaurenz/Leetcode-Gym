{
    "status_code": 11,
    "lang": "typescript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 58568000,
    "question_id": "3291",
    "elapsed_time": 157,
    "compare_result
    "code_output": "false",
    "std_output": "",
    "last_testcase": "[1,2,3,4,5]",
    "expected_output": "true",
    "task_finish_time": 1707243149925,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 771,
    "total_testcases": 999,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "TypeScript",
    "submission_id": "1168063882",
    "input_formatted": "[1,2,3,4,5]",
    "input": "[1,2,3,4,5]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "function canSortArray(nums: number[]): boolean {\n    const countBits = (n: number) => n.toString(2).split('').reduce((acc, bit) => acc + Number(bit), 0);\n    const groups: { [key: number]: number[] } = {};\n    nums.forEach(num => {\n        const bits = countBits(num);\n        if (!groups[bits]) groups[bits] = [];\n        groups[bits].push(num);\n    });\n\n    const sortedNums = Object.values(groups).reduce((acc, group) => acc.concat(group.sort((a, b) => a - b)), []);\n    for (let i = 0; i < sortedNums.length - 1; i++) {\n        if (sortedNums[i] > sortedNums[i + 1]) return false;\n    }\n    return true;\n};"
}