{
    "status_code": 20,
    "lang": "racket",
    "run_success": false,
    "compile_error": "Line 3: Char 39: count-bits: unbound identifier",
    "full_compile_error": "Line 3: Char 39: count-bits: unbound identifier\n  in: count-bits\n  compilation context...:\n   solution.rkt\n  location...:\n   prog_joined.rkt:14:38",
    "status_runtime": "N/A",
    "memory": 0,
    "question_id": "3291",
    "task_finish_time": 1707252709653,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": null,
    "total_testcases": null,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Racket",
    "submission_id": "1168185832",
    "status_msg": "Compile Error",
    "state": "SUCCESS",
    "code": "(define/contract (can-sort-array nums)\n  (-> (listof exact-integer?) boolean?)\n  (let ([bit-counts (map (lambda (x) (count-bits x)) nums)])\n    (define (count-bits n)\n      (if (= n 0) 0 (+ (modulo n 2) (count-bits (quotient n 2)))))\n    (let loop ([lst bit-counts] [sorted true])\n      (cond\n        [(null? lst) sorted]\n        [(null? (cdr lst)) sorted]\n        [else (if (<= (car lst) (cadr lst))\n                  (loop (cdr lst) sorted)\n                  (if (member (car lst) (cdr lst))\n                      (loop (cdr lst) false)\n                      sorted))])))\n)"
}