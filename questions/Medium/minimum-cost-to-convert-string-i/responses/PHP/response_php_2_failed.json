{
    "status_code": 11,
    "lang": "php",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 20516000,
    "question_id": "3235",
    "elapsed_time": 271,
    "compare_result
    "code_output": "30",
    "std_output": "",
    "last_testcase": "\"abcd\"\n\"acbe\"\n[\"a\",\"b\",\"c\",\"c\",\"e\",\"d\"]\n[\"b\",\"c\",\"b\",\"e\",\"b\",\"e\"]\n[2,5,5,1,2,20]",
    "expected_output": "28",
    "task_finish_time": 1707743348062,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 108,
    "total_testcases": 581,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "PHP",
    "submission_id": "1173169106",
    "input_formatted": "\"abcd\", \"acbe\", [\"a\",\"b\",\"c\",\"c\",\"e\",\"d\"], [\"b\",\"c\",\"b\",\"e\",\"b\",\"e\"], [2,5,5,1,2,20]",
    "input": "\"abcd\"\n\"acbe\"\n[\"a\",\"b\",\"c\",\"c\",\"e\",\"d\"]\n[\"b\",\"c\",\"b\",\"e\",\"b\",\"e\"]\n[2,5,5,1,2,20]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n\n    /**\n     * @param String $source\n     * @param String $target\n     * @param String[] $original\n     * @param String[] $changed\n     * @param Integer[] $cost\n     * @return Integer\n     */\n    function minimumCost($source, $target, $original, $changed, $cost) {\n        $n = strlen($source);\n        $costMap = [];\n        for ($i = 0; $i < count($original); $i++) {\n            if (!isset($costMap[$original[$i]][$changed[$i]])) {\n                $costMap[$original[$i]][$changed[$i]] = $cost[$i];\n            } else {\n                $costMap[$original[$i]][$changed[$i]] = min($costMap[$original[$i]][$changed[$i]], $cost[$i]);\n            }\n        }\n\n        $totalCost = 0;\n        for ($i = 0; $i < $n; $i++) {\n            if ($source[$i] == $target[$i]) {\n                continue;\n            }\n\n            if (!isset($costMap[$source[$i]][$target[$i]])) {\n                return -1; // No direct way to convert this character\n            }\n\n            $totalCost += $costMap[$source[$i]][$target[$i]];\n        }\n\n        return $totalCost;\n    }\n}"
}