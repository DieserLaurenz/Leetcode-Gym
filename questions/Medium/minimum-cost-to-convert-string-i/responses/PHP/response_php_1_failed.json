{
    "status_code": 11,
    "lang": "php",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 29576000,
    "question_id": "3235",
    "elapsed_time": 5219,
    "compare_result
    "code_output": "25",
    "std_output": "",
    "last_testcase": "\"abcd\"\n\"acbe\"\n[\"a\",\"b\",\"c\",\"c\",\"e\",\"d\"]\n[\"b\",\"c\",\"b\",\"e\",\"b\",\"e\"]\n[2,5,5,1,2,20]",
    "expected_output": "28",
    "task_finish_time": 1707743303503,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 50,
    "total_testcases": 581,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "PHP",
    "submission_id": "1173168573",
    "input_formatted": "\"abcd\", \"acbe\", [\"a\",\"b\",\"c\",\"c\",\"e\",\"d\"], [\"b\",\"c\",\"b\",\"e\",\"b\",\"e\"], [2,5,5,1,2,20]",
    "input": "\"abcd\"\n\"acbe\"\n[\"a\",\"b\",\"c\",\"c\",\"e\",\"d\"]\n[\"b\",\"c\",\"b\",\"e\",\"b\",\"e\"]\n[2,5,5,1,2,20]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n\n    /**\n     * @param String $source\n     * @param String $target\n     * @param String[] $original\n     * @param String[] $changed\n     * @param Integer[] $cost\n     * @return Integer\n     */\n    function minimumCost($source, $target, $original, $changed, $cost) {\n        $n = strlen($source);\n        $m = count($cost);\n        $dp = array_fill(0, $n+1, array_fill(0, 26, PHP_INT_MAX));\n        for ($i = 0; $i < 26; $i++) {\n            $dp[$n][$i] = 0; // cost to change from any char to any char at the end is 0\n        }\n\n        $charCost = [];\n        for ($i = 0; $i < $m; $i++) {\n            $o = ord($original[$i]) - ord('a');\n            $c = ord($changed[$i]) - ord('a');\n            if (!isset($charCost[$o][$c]) || $charCost[$o][$c] > $cost[$i]) {\n                $charCost[$o][$c] = $cost[$i];\n            }\n        }\n\n        for ($i = $n - 1; $i >= 0; $i--) {\n            for ($j = 0; $j < 26; $j++) {\n                $currentChar = ord($source[$i]) - ord('a');\n                $targetChar = ord($target[$i]) - ord('a');\n                if ($currentChar == $j) {\n                    $dp[$i][$j] = $dp[$i+1][$targetChar]; // no cost if already matches\n                } else {\n                    foreach ($charCost[$currentChar] ?? [] as $changeTo => $cost) {\n                        if ($dp[$i+1][$changeTo] != PHP_INT_MAX) {\n                            $dp[$i][$j] = min($dp[$i][$j], $dp[$i+1][$changeTo] + $cost);\n                        }\n                    }\n                }\n            }\n        }\n\n        $result = $dp[0][ord($source[0]) - ord('a')];\n        return $result == PHP_INT_MAX ? -1 : $result;\n    }\n}"
}