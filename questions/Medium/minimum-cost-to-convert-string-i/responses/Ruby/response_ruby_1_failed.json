{
    "status_code": 11,
    "lang": "ruby",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 217576000,
    "question_id": "3235",
    "elapsed_time": 3280,
    "compare_result
    "code_output": "0",
    "std_output": "",
    "last_testcase": "\"abcd\"\n\"acbe\"\n[\"a\",\"b\",\"c\",\"c\",\"e\",\"d\"]\n[\"b\",\"c\",\"b\",\"e\",\"b\",\"e\"]\n[2,5,5,1,2,20]",
    "expected_output": "28",
    "task_finish_time": 1707753181656,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 581,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Ruby",
    "submission_id": "1173297810",
    "input_formatted": "\"abcd\", \"acbe\", [\"a\",\"b\",\"c\",\"c\",\"e\",\"d\"], [\"b\",\"c\",\"b\",\"e\",\"b\",\"e\"], [2,5,5,1,2,20]",
    "input": "\"abcd\"\n\"acbe\"\n[\"a\",\"b\",\"c\",\"c\",\"e\",\"d\"]\n[\"b\",\"c\",\"b\",\"e\",\"b\",\"e\"]\n[2,5,5,1,2,20]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "# @param {String} source\n# @param {String} target\n# @param {Character[]} original\n# @param {Character[]} changed\n# @param {Integer[]} cost\n# @return {Integer}\ndef minimum_cost(source, target, original, changed, cost)\n    n = source.length\n    dp = Array.new(n+1) { Array.new(26, Float::INFINITY) }\n    26.times { |i| dp[n][i] = 0 }\n    change_map = {}\n    original.each_with_index do |char, i|\n        change_map[char] ||= {}\n        change_map[char][changed[i]] ||= []\n        change_map[char][changed[i]].push(cost[i])\n    end\n    (n-1).downto(0).each do |i|\n        26.times do |j|\n            dp[i][j] = dp[i+1][j]\n        end\n        next if change_map[source[i]].nil?\n        change_map[source[i]].each do |key, costs|\n            target_char = key\n            costs.each do |c|\n                dp[i][target[i].ord - 'a'.ord] = [\n                    dp[i][target[i].ord - 'a'.ord],\n                    c + dp[i+1][target_char.ord - 'a'.ord]\n                ].min\n            end\n        end\n    end\n    ans = dp[0][target[0].ord - 'a'.ord]\n    ans == Float::INFINITY ? -1 : ans\nend"
}