{
    "status_code": 10,
    "lang": "c",
    "run_success": true,
    "status_runtime": "81 ms",
    "memory": 11268000,
    "question_id": "3235",
    "elapsed_time": 120,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1707742753942,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 581,
    "total_testcases": 581,
    "runtime_percentile": 75.0,
    "status_memory": "11.3 MB",
    "memory_percentile": 100,
    "pretty_lang": "C",
    "submission_id": "1173162514",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "long long minimumCost(char* source, char* target, char* original, int originalSize, char* changed, int changedSize, int* cost, int costSize) {\n    long long dp[26][26];\n    for (int i = 0; i < 26; ++i) {\n        for (int j = 0; j < 26; ++j) {\n            dp[i][j] = (i == j) ? 0 : INT_MAX;\n        }\n    }\n    for (int i = 0; i < originalSize; ++i) {\n        int o = original[i] - 'a', c = changed[i] - 'a';\n        if (cost[i] < dp[o][c]) {\n            dp[o][c] = cost[i];\n        }\n    }\n    for (int k = 0; k < 26; ++k) {\n        for (int i = 0; i < 26; ++i) {\n            for (int j = 0; j < 26; ++j) {\n                if (dp[i][k] != INT_MAX && dp[k][j] != INT_MAX && dp[i][k] + dp[k][j] < dp[i][j]) {\n                    dp[i][j] = dp[i][k] + dp[k][j];\n                }\n            }\n        }\n    }\n    long long totalCost = 0;\n    for (int i = 0; source[i] && target[i]; ++i) {\n        int s = source[i] - 'a', t = target[i] - 'a';\n        if (dp[s][t] == INT_MAX) return -1;\n        totalCost += dp[s][t];\n    }\n    return totalCost;\n}"
}