{
    "status_code": 11,
    "lang": "python3",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 23132000,
    "question_id": "3235",
    "elapsed_time": 700,
    "compare_result
    "code_output": "30",
    "std_output": "",
    "last_testcase": "\"abcd\"\n\"acbe\"\n[\"a\",\"b\",\"c\",\"c\",\"e\",\"d\"]\n[\"b\",\"c\",\"b\",\"e\",\"b\",\"e\"]\n[2,5,5,1,2,20]",
    "expected_output": "28",
    "task_finish_time": 1708808649694,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 108,
    "total_testcases": 581,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python3",
    "submission_id": "1185168961",
    "input_formatted": "\"abcd\", \"acbe\", [\"a\",\"b\",\"c\",\"c\",\"e\",\"d\"], [\"b\",\"c\",\"b\",\"e\",\"b\",\"e\"], [2,5,5,1,2,20]",
    "input": "\"abcd\"\n\"acbe\"\n[\"a\",\"b\",\"c\",\"c\",\"e\",\"d\"]\n[\"b\",\"c\",\"b\",\"e\",\"b\",\"e\"]\n[2,5,5,1,2,20]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "from typing import List\n\nclass Solution:\n    def minimumCost(self, source: str, target: str, original: List[str], changed: List[str], cost: List[int]) -> int:\n        change_cost = {}\n        for o, c, co in zip(original, changed, cost):\n            key = (o, c)\n            if key not in change_cost:\n                change_cost[key] = co\n            else:\n                change_cost[key] = min(change_cost[key], co)\n        \n        dp = [0] * (len(source) + 1)\n        for i in range(len(source) - 1, -1, -1):\n            if source[i] == target[i]:\n                dp[i] = dp[i + 1]\n            else:\n                key = (source[i], target[i])\n                if key in change_cost:\n                    dp[i] = dp[i + 1] + change_cost[key]\n                else:\n                    return -1\n        return dp[0]"
}