{
    "status_code": 11,
    "lang": "golang",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 7228000,
    "question_id": "3235",
    "elapsed_time": 210,
    "compare_result": "00110001100100001010010001000000010000011000100000110001001111000101100000000000001100010000001000100100001000000101100100110000101000000100000001010000010110000011001010100001000000100010100010001000001000010010000010100000001000000110000000100000000000111000000000000000001000000000000000000010100000000001000000000010000000000010000000000000010010100001000000000000100100000000000000000000000000000000000000000000001000100000000000000000000000010000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111111111111111111111110000000000000",
    "code_output": "30",
    "std_output": "",
    "last_testcase": "\"abcd\"\n\"acbe\"\n[\"a\",\"b\",\"c\",\"c\",\"e\",\"d\"]\n[\"b\",\"c\",\"b\",\"e\",\"b\",\"e\"]\n[2,5,5,1,2,20]",
    "expected_output": "28",
    "task_finish_time": 1707753052016,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 108,
    "total_testcases": 581,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Go",
    "submission_id": "1173295945",
    "input_formatted": "\"abcd\", \"acbe\", [\"a\",\"b\",\"c\",\"c\",\"e\",\"d\"], [\"b\",\"c\",\"b\",\"e\",\"b\",\"e\"], [2,5,5,1,2,20]",
    "input": "\"abcd\"\n\"acbe\"\n[\"a\",\"b\",\"c\",\"c\",\"e\",\"d\"]\n[\"b\",\"c\",\"b\",\"e\",\"b\",\"e\"]\n[2,5,5,1,2,20]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "func minimumCost(source string, target string, original []byte, changed []byte, cost []int) int64 {\n    n := len(source)\n    costMap := make(map[byte]map[byte]int)\n    for i := 0; i < len(original); i++ {\n        if costMap[original[i]] == nil {\n            costMap[original[i]] = make(map[byte]int)\n        }\n        if _, exists := costMap[original[i]][changed[i]]; !exists || cost[i] < costMap[original[i]][changed[i]] {\n            costMap[original[i]][changed[i]] = cost[i]\n        }\n    }\n\n    totalCost := int64(0)\n    for i := 0; i < n; i++ {\n        if source[i] == target[i] {\n            continue // No cost if characters are already equal.\n        }\n\n        changeCost, exists := costMap[source[i]][target[i]]\n        if !exists {\n            return -1 // If no direct conversion exists, return -1.\n        }\n        totalCost += int64(changeCost)\n    }\n\n    return totalCost\n}"
}