{
    "status_code": 11,
    "lang": "cpp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 248280000,
    "question_id": "2867",
    "elapsed_time": 284,
    "compare_result
    "code_output": "0",
    "std_output": "",
    "last_testcase": "[0,1,0,0,1]",
    "expected_output": "3",
    "task_finish_time": 1708227799659,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 70,
    "total_testcases": 553,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C++",
    "submission_id": "1178489646",
    "input_formatted": "[0,1,0,0,1]",
    "input": "[0,1,0,0,1]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "#include <vector>\nusing namespace std;\n\nclass Solution {\npublic:\n    int numberOfGoodSubarraySplits(vector<int>& nums) {\n        const int mod = 1e9 + 7;\n        vector<int> prefix(nums.size() + 1, 0);\n        for (int i = 0; i < nums.size(); ++i) {\n            prefix[i + 1] = prefix[i] + nums[i];\n        }\n\n        if (prefix.back() < 2) return 0; // Not enough ones to form at least two good subarrays\n\n        long long ans = 0;\n        for (int i = 1; i < prefix.size(); ++i) {\n            if (nums[i - 1] == 1) {\n                long long leftOnes = prefix[i] - 1; // Ones on the left\n                long long rightOnes = prefix.back() - prefix[i]; // Ones on the right\n                ans = (ans + min(leftOnes, rightOnes)) % mod;\n            }\n        }\n\n        return ans;\n    }\n};"
}