{
    "status_code": 11,
    "lang": "cpp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 237868000,
    "question_id": "2867",
    "elapsed_time": 271,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "[1,0,0,0,0,0,1,0,1]",
    "expected_output": "12",
    "task_finish_time": 1708227766666,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 179,
    "total_testcases": 553,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C++",
    "submission_id": "1178488946",
    "input_formatted": "[1,0,0,0,0,0,1,0,1]",
    "input": "[1,0,0,0,0,0,1,0,1]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "#include <vector>\nusing namespace std;\n\nclass Solution {\npublic:\n    int numberOfGoodSubarraySplits(vector<int>& nums) {\n        const int mod = 1e9 + 7;\n        int onesCount = 0;\n        for (int num : nums) {\n            if (num == 1) ++onesCount;\n        }\n        \n        if (onesCount == 0) return 0; // No good subarrays possible\n        \n        int currentOnes = 0, ways = 0;\n        for (int i = 0; i < nums.size(); ++i) {\n            if (nums[i] == 1) ++currentOnes;\n            if (currentOnes == onesCount / 2) {\n                if (onesCount % 2 == 0) {\n                    ways = (ways + 1) % mod;\n                } else {\n                    if (i + 1 < nums.size() && nums[i + 1] == 1) {\n                        ways = (ways + 1) % mod;\n                    }\n                }\n            }\n        }\n        \n        return ways;\n    }\n};"
}