{
    "status_code": 11,
    "lang": "python3",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 20356000,
    "question_id": "2867",
    "elapsed_time": 1975,
    "compare_result
    "code_output": "4",
    "std_output": "",
    "last_testcase": "[0,1,0,0,1]",
    "expected_output": "3",
    "task_finish_time": 1708859830015,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 116,
    "total_testcases": 553,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python3",
    "submission_id": "1185709224",
    "input_formatted": "[0,1,0,0,1]",
    "input": "[0,1,0,0,1]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "from typing import List\n\nclass Solution:\n    def numberOfGoodSubarraySplits(self, nums: List[int]) -> int:\n        ones = sum(nums)\n        if ones < 2: return ones\n        \n        count, left_ones, res = 0, 0, 0\n        mod = 10**9 + 7\n        \n        for num in nums:\n            count += num\n            if num == 1: left_ones += 1\n            if left_ones == 1 or left_ones == ones: res += 1\n            elif num == 1 and left_ones < ones: res += (left_ones == count or ones - left_ones == ones - count)\n        \n        return res % mod"
}