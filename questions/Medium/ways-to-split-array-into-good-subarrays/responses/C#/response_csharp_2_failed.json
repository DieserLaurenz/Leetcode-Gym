{
    "status_code": 11,
    "lang": "csharp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 78096000,
    "question_id": "2867",
    "elapsed_time": 747,
    "compare_result
    "code_output": "0",
    "std_output": "",
    "last_testcase": "[0,1,0,0,1]",
    "expected_output": "3",
    "task_finish_time": 1708228151698,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 45,
    "total_testcases": 553,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C#",
    "submission_id": "1178497313",
    "input_formatted": "[0,1,0,0,1]",
    "input": "[0,1,0,0,1]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "public class Solution {\n    public int NumberOfGoodSubarraySplits(int[] nums) {\n        long totalSplits = 0;\n        int onesCount = 0;\n        for (int i = 0; i < nums.Length; i++) {\n            if (nums[i] == 1) onesCount++;\n        }\n\n        int mod = 1000000007;\n        if (onesCount != 1) return 0;\n\n        int leftZeros = 0;\n        while (leftZeros < nums.Length && nums[leftZeros] == 0) {\n            leftZeros++;\n        }\n\n        int rightZeros = 0;\n        while (rightZeros < nums.Length && nums[nums.Length - 1 - rightZeros] == 0) {\n            rightZeros++;\n        }\n\n        totalSplits = (long)(leftZeros + 1) * (rightZeros + 1) % mod;\n\n        return (int)totalSplits;\n    }\n}"
}