{
    "status_code": 11,
    "lang": "c",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 18656000,
    "question_id": "2867",
    "elapsed_time": 270,
    "compare_result
    "code_output": "2",
    "std_output": "",
    "last_testcase": "[1,0,0,0,0,0,1,0,1]",
    "expected_output": "12",
    "task_finish_time": 1708228017869,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 185,
    "total_testcases": 553,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C",
    "submission_id": "1178494456",
    "input_formatted": "[1,0,0,0,0,0,1,0,1]",
    "input": "[1,0,0,0,0,0,1,0,1]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "int numberOfGoodSubarraySplits(int* nums, int numsSize){\n    int ones = 0, ways = 0, mod = 1000000007;\n    for(int i = 0; i < numsSize; ++i) {\n        if(nums[i] == 1) ones++;\n    }\n    if(ones == 0) return 0; // No ones means no good subarrays\n    int prefixOnes = 0;\n    for(int i = 0; i < numsSize; ++i) {\n        if(nums[i] == 1) prefixOnes++;\n        if(prefixOnes == ones - 1) {\n            ways = (ways + 1) % mod;\n        }\n    }\n    return ways;\n}"
}