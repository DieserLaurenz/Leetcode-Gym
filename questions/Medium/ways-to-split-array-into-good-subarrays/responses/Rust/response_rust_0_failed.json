{
    "status_code": 11,
    "lang": "rust",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 2736000,
    "question_id": "2867",
    "elapsed_time": 38,
    "compare_result
    "code_output": "0",
    "std_output": "",
    "last_testcase": "[0,1,0]",
    "expected_output": "1",
    "task_finish_time": 1708237641056,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 99,
    "total_testcases": 553,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Rust",
    "submission_id": "1178612580",
    "input_formatted": "[0,1,0]",
    "input": "[0,1,0]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "impl Solution {\n    pub fn number_of_good_subarray_splits(nums: Vec<i32>) -> i32 {\n        let mut prefix_count = 0;\n        let mut suffix_count = nums.iter().filter(|&&x| x == 1).count() as i32;\n        let mut ans = 0;\n        const MOD: i32 = 1_000_000_007;\n\n        for &num in &nums[..nums.len() - 1] {\n            if num == 1 {\n                prefix_count += 1;\n                suffix_count -= 1;\n            }\n            if prefix_count == 1 && suffix_count == 1 {\n                ans = (ans + 1) % MOD;\n            }\n        }\n\n        ans\n    }\n}"
}