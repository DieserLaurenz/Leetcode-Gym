{
    "status_code": 11,
    "lang": "kotlin",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 75624000,
    "question_id": "2867",
    "elapsed_time": 1187,
    "compare_result
    "code_output": "6",
    "std_output": "",
    "last_testcase": "[1,0,0,0,0,0,1,0,1]",
    "expected_output": "12",
    "task_finish_time": 1708237075475,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 233,
    "total_testcases": 553,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Kotlin",
    "submission_id": "1178605516",
    "input_formatted": "[1,0,0,0,0,0,1,0,1]",
    "input": "[1,0,0,0,0,0,1,0,1]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    fun numberOfGoodSubarraySplits(nums: IntArray): Int {\n        val mod = 1000000007\n        var countOfOnes = nums.count { it == 1 }\n        if (countOfOnes <= 1) return countOfOnes\n\n        var result = 0\n        var leftOnes = 0\n\n        for (num in nums) {\n            if (num == 1) leftOnes++\n            if (leftOnes == countOfOnes / 2) result = (result + 1) % mod\n        }\n\n        return result\n    }\n}"
}