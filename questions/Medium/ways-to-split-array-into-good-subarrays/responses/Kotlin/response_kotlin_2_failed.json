{
    "status_code": 11,
    "lang": "kotlin",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 74116000,
    "question_id": "2867",
    "elapsed_time": 951,
    "compare_result
    "code_output": "4",
    "std_output": "",
    "last_testcase": "[0,1,0,0,1]",
    "expected_output": "3",
    "task_finish_time": 1708237147193,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 89,
    "total_testcases": 553,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Kotlin",
    "submission_id": "1178606384",
    "input_formatted": "[0,1,0,0,1]",
    "input": "[0,1,0,0,1]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    fun numberOfGoodSubarraySplits(nums: IntArray): Int {\n        val mod = 1000000007\n        var ones = nums.count { it == 1 }\n        if (ones == 0) return 0\n\n        var answer = 0\n        var prefixOnes = 0\n        for (num in nums) {\n            if (num == 1) prefixOnes++\n            if (prefixOnes == 1 || prefixOnes == ones) answer = (answer + 1) % mod\n        }\n        return answer\n    }\n}"
}