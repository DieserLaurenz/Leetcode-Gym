{
    "status_code": 11,
    "lang": "scala",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 72992000,
    "question_id": "2867",
    "elapsed_time": 991,
    "compare_result
    "code_output": "0",
    "std_output": "",
    "last_testcase": "[0,1,0]",
    "expected_output": "1",
    "task_finish_time": 1708237591854,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 99,
    "total_testcases": 553,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Scala",
    "submission_id": "1178611904",
    "input_formatted": "[0,1,0]",
    "input": "[0,1,0]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "object Solution {\n    def numberOfGoodSubarraySplits(nums: Array[Int]): Int = {\n        val mod = 1000000007\n        val prefixSum = Array.fill(nums.length + 1)(0)\n        for (i <- nums.indices) {\n            prefixSum(i + 1) = prefixSum(i) + nums(i)\n        }\n\n        var count = 0\n        for (i <- 1 until nums.length) {\n            if (prefixSum(i) == 1 && prefixSum(nums.length) - prefixSum(i) == 1) {\n                count = (count + 1) % mod\n            }\n        }\n        count\n    }\n}"
}