{
    "status_code": 11,
    "lang": "scala",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 70648000,
    "question_id": "2867",
    "elapsed_time": 1257,
    "compare_result
    "code_output": "2",
    "std_output": "",
    "last_testcase": "[0,1,0]",
    "expected_output": "1",
    "task_finish_time": 1708237567012,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 140,
    "total_testcases": 553,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Scala",
    "submission_id": "1178611604",
    "input_formatted": "[0,1,0]",
    "input": "[0,1,0]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "object Solution {\n    def numberOfGoodSubarraySplits(nums: Array[Int]): Int = {\n        val totalOnes = nums.count(_ == 1)\n        var answer = 0\n        val mod = 1000000007\n        \n        if (totalOnes == 1) return nums.length - 1\n        \n        var prefixOnes = 0\n        for (num <- nums) {\n            if (num == 1) prefixOnes += 1\n            if (prefixOnes > 0 && prefixOnes < totalOnes) answer = (answer + 1) % mod\n        }\n        \n        answer\n    }\n}"
}