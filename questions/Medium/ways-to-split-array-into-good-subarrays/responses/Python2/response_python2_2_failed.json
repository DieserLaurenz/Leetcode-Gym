{
    "status_code": 11,
    "lang": "python",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 15128000,
    "question_id": "2867",
    "elapsed_time": 1942,
    "compare_result
    "code_output": "2",
    "std_output": "",
    "last_testcase": "[0,1,0,0]",
    "expected_output": "1",
    "task_finish_time": 1708859746461,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 117,
    "total_testcases": 553,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python",
    "submission_id": "1185708284",
    "input_formatted": "[0,1,0,0]",
    "input": "[0,1,0,0]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution(object):\n    def numberOfGoodSubarraySplits(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: int\n        \"\"\"\n        ones = sum(nums)\n        if ones == 0:\n            return 0\n        count_ones, ans = 0, 0\n        for num in nums[:-1]:  # Exclude the last element to ensure subarrays are non-empty\n            if num == 1:\n                count_ones += 1\n            if count_ones == 1:\n                ans += 1\n            elif count_ones == ones:\n                break\n            elif count_ones > 1:\n                ans -= 1\n        return ans"
}