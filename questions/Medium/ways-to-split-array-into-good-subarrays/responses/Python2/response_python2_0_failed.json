{
    "status_code": 11,
    "lang": "python",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 20680000,
    "question_id": "2867",
    "elapsed_time": 2090,
    "compare_result
    "code_output": "0",
    "std_output": "",
    "last_testcase": "[0,1,0]",
    "expected_output": "1",
    "task_finish_time": 1708859695850,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 120,
    "total_testcases": 553,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python",
    "submission_id": "1185707732",
    "input_formatted": "[0,1,0]",
    "input": "[0,1,0]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution(object):\n    def numberOfGoodSubarraySplits(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: int\n        \"\"\"\n        prefix = [0]\n        for num in nums:\n            prefix.append(prefix[-1] + num)\n        \n        total = prefix[-1]\n        if total < 2:\n            return 0\n        \n        ans = 0\n        mod = 10**9 + 7\n        for i in range(1, len(prefix)):\n            if 1 <= prefix[i] <= total - 1:\n                left_ones = prefix[i]\n                right_ones = total - left_ones\n                if left_ones == 1 or right_ones == 1:\n                    ans += 1\n        \n        return ans % mod"
}