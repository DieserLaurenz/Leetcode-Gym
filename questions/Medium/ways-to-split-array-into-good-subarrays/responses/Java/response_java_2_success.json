{
    "status_code": 10,
    "lang": "java",
    "run_success": true,
    "status_runtime": "11 ms",
    "memory": 62532000,
    "display_runtime": "11",
    "question_id": "2867",
    "elapsed_time": 615,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1708227942826,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 553,
    "total_testcases": 553,
    "runtime_percentile": 42.0,
    "status_memory": "62.5 MB",
    "memory_percentile": 68.0,
    "pretty_lang": "Java",
    "submission_id": "1178492819",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\n    public int numberOfGoodSubarraySplits(int[] nums) {\n        final int MOD = 1000000007;\n        int onesCount = 0;\n        for (int num : nums) {\n            if (num == 1) onesCount++;\n        }\n        \n        if (onesCount == 0) return 0;\n        \n        long ways = 1;\n        int currentOnes = 0;\n        for (int i = 0; i < nums.length; i++) {\n            if (nums[i] == 1) {\n                currentOnes++;\n                if (currentOnes < onesCount && currentOnes > 0) {\n                    int zeros = 0;\n                    while (nums[i + 1] == 0) {\n                        zeros++;\n                        i++;\n                    }\n                    ways = (ways * (zeros + 1)) % MOD;\n                }\n            }\n        }\n        \n        return currentOnes == onesCount ? (int) ways : 0;\n    }\n}"
}