{
    "status_code": 11,
    "lang": "java",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 63896000,
    "display_runtime": "10",
    "question_id": "2867",
    "elapsed_time": 584,
    "compare_result
    "code_output": "0",
    "std_output": "",
    "last_testcase": "[1,0,0,0,0,0,1,0,1]",
    "expected_output": "12",
    "task_finish_time": 1708227909449,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 182,
    "total_testcases": 553,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Java",
    "submission_id": "1178492102",
    "input_formatted": "[1,0,0,0,0,0,1,0,1]",
    "input": "[1,0,0,0,0,0,1,0,1]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    public int numberOfGoodSubarraySplits(int[] nums) {\n        int ones = 0;\n        for (int num : nums) if (num == 1) ones++;\n        \n        if (ones < 2) return ones;\n        \n        int count = 0, prefixOnes = 0;\n        for (int i = 0; i < nums.length - 1; i++) {\n            if (nums[i] == 1) prefixOnes++;\n            if (prefixOnes == (ones - prefixOnes)) count++;\n        }\n        \n        return count;\n    }\n}"
}