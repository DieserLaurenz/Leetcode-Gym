{
    "status_code": 11,
    "lang": "php",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 27072000,
    "question_id": "2867",
    "elapsed_time": 791,
    "compare_result
    "code_output": "0",
    "std_output": "",
    "last_testcase": "[0,1,0,0,1]",
    "expected_output": "3",
    "task_finish_time": 1708236823512,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 154,
    "total_testcases": 553,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "PHP",
    "submission_id": "1178602463",
    "input_formatted": "[0,1,0,0,1]",
    "input": "[0,1,0,0,1]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @return Integer\n     */\n    function numberOfGoodSubarraySplits($nums) {\n        $totalOnes = array_sum($nums);\n        if ($totalOnes <= 1) return $totalOnes;\n\n        $mod = 1e9 + 7;\n        $count = 0;\n        $onesSoFar = 0;\n\n        foreach ($nums as $num) {\n            if ($num == 1) {\n                $onesSoFar++;\n            }\n            if ($onesSoFar == $totalOnes - 1) {\n                break;\n            }\n            if ($onesSoFar > 0 && $onesSoFar < $totalOnes) {\n                $count++;\n            }\n        }\n\n        return $count % $mod;\n    }\n}"
}