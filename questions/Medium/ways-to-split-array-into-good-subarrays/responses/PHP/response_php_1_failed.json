{
    "status_code": 11,
    "lang": "php",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 26752000,
    "question_id": "2867",
    "elapsed_time": 900,
    "compare_result
    "code_output": "0",
    "std_output": "",
    "last_testcase": "[0,1,0]",
    "expected_output": "1",
    "task_finish_time": 1708236857595,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 149,
    "total_testcases": 553,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "PHP",
    "submission_id": "1178602854",
    "input_formatted": "[0,1,0]",
    "input": "[0,1,0]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @return Integer\n     */\n    function numberOfGoodSubarraySplits($nums) {\n        $mod = 1000000007;\n        $prefixSum = [0];\n        foreach ($nums as $num) {\n            $prefixSum[] = $prefixSum[sizeof($prefixSum) - 1] + $num;\n        }\n\n        $totalCount = 0;\n        for ($i = 1; $i < sizeof($prefixSum); ++$i) {\n            if ($prefixSum[$i] - $prefixSum[0] == 1) {\n                $totalCount += ($prefixSum[sizeof($prefixSum) - 1] - $prefixSum[$i]);\n            }\n        }\n\n        return $totalCount % $mod;\n    }\n}"
}