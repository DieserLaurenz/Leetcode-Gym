{
    "status_code": 11,
    "lang": "swift",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 18652000,
    "question_id": "2867",
    "elapsed_time": 618,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "[0,1,0,0,1]",
    "expected_output": "3",
    "task_finish_time": 1708237016065,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 123,
    "total_testcases": 553,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Swift",
    "submission_id": "1178604799",
    "input_formatted": "[0,1,0,0,1]",
    "input": "[0,1,0,0,1]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    func numberOfGoodSubarraySplits(_ nums: [Int]) -> Int {\n        var ones = nums.filter { $0 == 1 }.count\n        var count = 0, currentOnes = 0\n        let mod = 1000000007\n        \n        for num in nums.dropLast() {\n            if num == 1 { currentOnes += 1 }\n            if currentOnes == 1 && ones > 1 {\n                count += 1\n            } else if currentOnes == ones - 1 && ones > 1 {\n                count += 1\n            }\n            ones -= num\n        }\n        \n        return count % mod\n    }\n}"
}