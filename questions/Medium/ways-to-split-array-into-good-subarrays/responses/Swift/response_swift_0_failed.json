{
    "status_code": 11,
    "lang": "swift",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 18864000,
    "question_id": "2867",
    "elapsed_time": 520,
    "compare_result
    "code_output": "0",
    "std_output": "",
    "last_testcase": "[0,1,0]",
    "expected_output": "1",
    "task_finish_time": 1708236949752,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 99,
    "total_testcases": 553,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Swift",
    "submission_id": "1178603967",
    "input_formatted": "[0,1,0]",
    "input": "[0,1,0]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    func numberOfGoodSubarraySplits(_ nums: [Int]) -> Int {\n        let mod = 1000000007\n        var prefixSum = [Int](repeating: 0, count: nums.count + 1)\n        for i in 0..<nums.count {\n            prefixSum[i + 1] = prefixSum[i] + nums[i]\n        }\n        \n        var count = 0\n        for i in 1..<nums.count {\n            if prefixSum[i] == 1 && prefixSum.last! - prefixSum[i] == 1 {\n                count += 1\n            }\n        }\n        \n        return count % mod\n    }\n}"
}