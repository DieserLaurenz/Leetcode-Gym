{
    "status_code": 11,
    "lang": "javascript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 62428000,
    "question_id": "2867",
    "elapsed_time": 182,
    "compare_result": "1001000000000000011000011000101010000000011000100001010000000100001010011000010000000000001011000000010001000001000000101001111010000000110010000000001010000000010101000001000000000100010000000000000101000000010010000001010100000001010000010001000010000000100000000010000010100100010100100000000001011100010000000010010010110011100000010011000000110100000110000101000000000000000100000010100000100000000010000000000011100010100000001000000000101000000000000000000000001000000000000101000101010000001000000000000000000000000000000000101100000010100000000",
    "code_output": "0",
    "std_output": "",
    "last_testcase": "[0,1,0]",
    "expected_output": "1",
    "task_finish_time": 1708228278886,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 112,
    "total_testcases": 553,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "JavaScript",
    "submission_id": "1178500117",
    "input_formatted": "[0,1,0]",
    "input": "[0,1,0]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "/**\n * @param {number[]} nums\n * @return {number}\n */\nvar numberOfGoodSubarraySplits = function(nums) {\n    let countOfOnes = nums.reduce((acc, val) => acc + (val === 1 ? 1 : 0), 0);\n    let mod = 1e9 + 7;\n    if (countOfOnes === 0 || countOfOnes === 1) return 0; // No split possible\n    \n    let prefixCount = 0, result = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] === 1) {\n            prefixCount++;\n        }\n        if (prefixCount === countOfOnes / 2) {\n            result = (result + 1) % mod;\n        }\n    }\n    return result;\n};"
}