{
    "status_code": 11,
    "lang": "golang",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 11368000,
    "question_id": "2867",
    "elapsed_time": 566,
    "compare_result
    "code_output": "6",
    "std_output": "",
    "last_testcase": "[1,0,0,0,0,0,1,0,1]",
    "expected_output": "12",
    "task_finish_time": 1708237310722,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 185,
    "total_testcases": 553,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Go",
    "submission_id": "1178608377",
    "input_formatted": "[1,0,0,0,0,0,1,0,1]",
    "input": "[1,0,0,0,0,0,1,0,1]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "func numberOfGoodSubarraySplits(nums []int) int {\n    totalOnes := 0\n    for _, num := range nums {\n        totalOnes += num\n    }\n\n    if totalOnes == 0 {\n        return 0\n    }\n\n    count, ways, mod := 0, 0, int(1e9+7)\n    for _, num := range nums {\n        count += num\n        if count == totalOnes/2 {\n            ways++\n        }\n    }\n\n    return ways % mod\n}"
}