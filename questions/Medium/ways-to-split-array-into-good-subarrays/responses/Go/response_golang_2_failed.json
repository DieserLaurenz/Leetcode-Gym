{
    "status_code": 11,
    "lang": "golang",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 7992000,
    "question_id": "2867",
    "elapsed_time": 280,
    "compare_result
    "code_output": "0",
    "std_output": "",
    "last_testcase": "[0,1,0]",
    "expected_output": "1",
    "task_finish_time": 1708237368609,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 112,
    "total_testcases": 553,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Go",
    "submission_id": "1178609104",
    "input_formatted": "[0,1,0]",
    "input": "[0,1,0]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "func numberOfGoodSubarraySplits(nums []int) int {\n    count1 := 0\n    for _, num := range nums {\n        if num == 1 {\n            count1++\n        }\n    }\n\n    if count1 == 0 {\n        return 0\n    }\n\n    mod := 1000000007\n    result, prefix1 := 0, 0\n    for _, num := range nums[:len(nums)-1] {\n        if num == 1 {\n            prefix1++\n        }\n        if prefix1 == count1-prefix1 {\n            result = (result + 1) % mod\n        }\n    }\n\n    return result\n}"
}