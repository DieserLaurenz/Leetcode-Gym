{
    "status_code": 11,
    "lang": "typescript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 63616000,
    "question_id": "2867",
    "elapsed_time": 201,
    "compare_result
    "code_output": "0",
    "std_output": "",
    "last_testcase": "[0,1,0]",
    "expected_output": "1",
    "task_finish_time": 1708236742139,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 122,
    "total_testcases": 553,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "TypeScript",
    "submission_id": "1178601447",
    "input_formatted": "[0,1,0]",
    "input": "[0,1,0]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "function numberOfGoodSubarraySplits(nums: number[]): number {\n    let countOfOnes = 0;\n    for (let num of nums) {\n        if (num === 1) countOfOnes++;\n    }\n\n    if (countOfOnes === 0) return 0; // No good subarray can be formed without any 1s.\n\n    let result = 0;\n    let prefixOnes = 0;\n    const mod = 1e9 + 7;\n\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] === 1) prefixOnes++;\n        if (prefixOnes > 0 && prefixOnes < countOfOnes) {\n            result = (result + 1) % mod;\n        }\n    }\n\n    return result;\n}"
}