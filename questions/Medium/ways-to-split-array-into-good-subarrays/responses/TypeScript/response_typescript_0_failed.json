{
    "status_code": 11,
    "lang": "typescript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 64756000,
    "question_id": "2867",
    "elapsed_time": 271,
    "compare_result
    "code_output": "0",
    "std_output": "",
    "last_testcase": "[0,1,0]",
    "expected_output": "1",
    "task_finish_time": 1708236709380,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 99,
    "total_testcases": 553,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "TypeScript",
    "submission_id": "1178601068",
    "input_formatted": "[0,1,0]",
    "input": "[0,1,0]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "function numberOfGoodSubarraySplits(nums: number[]): number {\n  const mod = 1e9 + 7;\n  let ones = nums.reduce((acc, val) => acc + val, 0);\n  let leftOnes = 0, ways = 0;\n\n  for (let i = 0; i < nums.length - 1; ++i) {\n    if (nums[i] === 1) leftOnes++;\n    if (leftOnes === 1 && ones - leftOnes === 1) ways = (ways + 1) % mod;\n  }\n\n  return ways;\n};"
}