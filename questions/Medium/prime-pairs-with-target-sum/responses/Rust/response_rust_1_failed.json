{
    "status_code": 14,
    "lang": "rust",
    "run_success": false,
    "status_runtime": "N/A",
    "memory": 3208000,
    "question_id": "2873",
    "elapsed_time": 2073,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "999863",
    "expected_output": "[]",
    "task_finish_time": 1708103778477,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 513,
    "total_testcases": 554,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Rust",
    "submission_id": "1177138868",
    "status_msg": "Time Limit Exceeded",
    "state": "SUCCESS",
    "code": "impl Solution {\n    pub fn find_prime_pairs(n: i32) -> Vec<Vec<i32>> {\n        fn is_prime(x: i32) -> bool {\n            if x <= 1 {\n                return false;\n            }\n            for i in 2..=((x as f64).sqrt() as i32) {\n                if x % i == 0 {\n                    return false;\n                }\n            }\n            true\n        }\n\n        let mut primes = Vec::new();\n        for i in 2..=n {\n            if is_prime(i) {\n                primes.push(i);\n            }\n        }\n\n        let mut result = Vec::new();\n        let mut i = 0;\n        let mut j = primes.len() as isize - 1;\n        while i <= j {\n            let sum = primes[i as usize] + primes[j as usize];\n            if sum == n {\n                result.push(vec![primes[i as usize], primes[j as usize]]);\n                i += 1;\n                j -= 1;\n            } else if sum < n {\n                i += 1;\n            } else {\n                j -= 1;\n            }\n        }\n\n        result\n    }\n}"
}