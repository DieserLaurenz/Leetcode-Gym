{
    "status_code": 14,
    "lang": "golang",
    "run_success": false,
    "status_runtime": "N/A",
    "memory": 7436000,
    "question_id": "2873",
    "elapsed_time": 2324,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1708103384499,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 554,
    "total_testcases": 554,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Go",
    "submission_id": "1177133091",
    "status_msg": "Time Limit Exceeded",
    "state": "SUCCESS",
    "code": "func findPrimePairs(n int) [][]int {\n    var primePairs [][]int\n    for x := 2; x <= n/2; x++ {\n        y := n - x\n        if isPrime(x) && isPrime(y) {\n            primePairs = append(primePairs, []int{x, y})\n        }\n    }\n    return primePairs\n}\n\nfunc isPrime(number int) bool {\n    if number <= 1 {\n        return false\n    }\n    for i := 2; i*i <= number; i++ {\n        if number%i == 0 {\n            return false\n        }\n    }\n    return true\n}"
}