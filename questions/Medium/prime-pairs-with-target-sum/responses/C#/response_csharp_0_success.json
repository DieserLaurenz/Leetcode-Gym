{
    "status_code": 10,
    "lang": "csharp",
    "run_success": true,
    "status_runtime": "2102 ms",
    "memory": 89524000,
    "question_id": "2873",
    "elapsed_time": 2293,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1708102900828,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 554,
    "total_testcases": 554,
    "runtime_percentile": 16.66650000000002,
    "status_memory": "89.5 MB",
    "memory_percentile": 16.66650000000002,
    "pretty_lang": "C#",
    "submission_id": "1177126018",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "public class Solution {\n    public IList<IList<int>> FindPrimePairs(int n) {\n        List<IList<int>> primePairs = new List<IList<int>>();\n        \n        for (int x = 2; x <= n / 2; x++) {\n            int y = n - x;\n            if (IsPrime(x) && IsPrime(y)) {\n                primePairs.Add(new List<int>() { x, y });\n            }\n        }\n        \n        return primePairs;\n    }\n    \n    private bool IsPrime(int num) {\n        if (num <= 1) return false;\n        for (int i = 2; i * i <= num; i++) {\n            if (num % i == 0) return false;\n        }\n        return true;\n    }\n}"
}