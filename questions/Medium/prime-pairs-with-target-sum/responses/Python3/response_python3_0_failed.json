{
    "status_code": 14,
    "lang": "python3",
    "run_success": false,
    "status_runtime": "N/A",
    "memory": 18448000,
    "question_id": "2873",
    "elapsed_time": 11015,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "999883",
    "expected_output": "[]",
    "task_finish_time": 1708839807321,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 512,
    "total_testcases": 554,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python3",
    "submission_id": "1185487145",
    "status_msg": "Time Limit Exceeded",
    "state": "SUCCESS",
    "code": "from typing import List\n\nclass Solution:\n    def findPrimePairs(self, n: int) -> List[List[int]]:\n        def is_prime(num):\n            if num < 2:\n                return False\n            for i in range(2, int(num**0.5) + 1):\n                if num % i == 0:\n                    return False\n            return True\n        \n        prime_pairs = []\n        for x in range(1, n // 2 + 1):\n            y = n - x\n            if is_prime(x) and is_prime(y):\n                prime_pairs.append([x, y])\n        \n        return prime_pairs"
}