{
    "status_code": 10,
    "lang": "swift",
    "run_success": true,
    "status_runtime": "2190 ms",
    "memory": 18776000,
    "question_id": "2873",
    "elapsed_time": 2250,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1708103209212,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 554,
    "total_testcases": 554,
    "runtime_percentile": 100,
    "status_memory": "18.8 MB",
    "memory_percentile": 100,
    "pretty_lang": "Swift",
    "submission_id": "1177130506",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\n    func findPrimePairs(_ n: Int) -> [[Int]] {\n        guard n >= 4 else {\n            return []\n        }\n\n        func isPrime(_ number: Int) -> Bool {\n            if number <= 1 {\n                return false\n            }\n            for i in 2..<Int(Double(number).squareRoot())+1 {\n                if number % i == 0 {\n                    return false\n                }\n            }\n            return true\n        }\n\n        var result: [[Int]] = []\n        for i in 2...n/2 {\n            if isPrime(i) && isPrime(n - i) {\n                result.append([i, n - i])\n            }\n        }\n        return result\n    }\n}"
}