{
    "status_code": 10,
    "lang": "javascript",
    "run_success": true,
    "status_runtime": "2196 ms",
    "memory": 60516000,
    "question_id": "2873",
    "elapsed_time": 2280,
    "compare_result": "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1708102961690,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 554,
    "total_testcases": 554,
    "runtime_percentile": 5.554900000000021,
    "status_memory": "60.5 MB",
    "memory_percentile": 72.22210000000001,
    "pretty_lang": "JavaScript",
    "submission_id": "1177126882",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "/**\n * @param {number} n\n * @return {number[][]}\n */\nvar findPrimePairs = function(n) {\n    const isPrime = (num) => {\n        if (num <= 1) return false;\n        for (let i = 2, sqrtNum = Math.sqrt(num); i <= sqrtNum; i++) {\n            if (num % i === 0) return false;\n        }\n        return true;\n    };\n\n    let result = [];\n    for (let x = 2; x <= n / 2; x++) {\n        let y = n - x;\n        if (isPrime(x) && isPrime(y)) {\n            result.push([x, y]);\n        }\n    }\n    return result;\n};"
}