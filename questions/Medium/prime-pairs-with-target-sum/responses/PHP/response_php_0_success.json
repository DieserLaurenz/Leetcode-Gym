{
    "status_code": 10,
    "lang": "php",
    "run_success": true,
    "status_runtime": "1497 ms",
    "memory": 42420000,
    "question_id": "2873",
    "elapsed_time": 1893,
    "compare_result": "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1708103084664,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 554,
    "total_testcases": 554,
    "runtime_percentile": 100,
    "status_memory": "42.4 MB",
    "memory_percentile": 100,
    "pretty_lang": "PHP",
    "submission_id": "1177128694",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\n\n    /**\n     * @param Integer $n\n     * @return Integer[][]\n     */\n    function findPrimePairs($n) {\n        $primes = array_fill(0, $n + 1, true);\n        $primes[0] = $primes[1] = false;\n        \n        for ($p = 2; $p * $p <= $n; $p++) {\n            if ($primes[$p]) {\n                for ($i = $p * $p; $i <= $n; $i += $p) {\n                    $primes[$i] = false;\n                }\n            }\n        }\n        \n        $pairs = [];\n        for ($i = 2; $i <= $n / 2; $i++) {\n            if ($primes[$i] && $primes[$n - $i]) {\n                $pairs[] = [$i, $n - $i];\n            }\n        }\n        \n        return $pairs;\n    }\n}"
}