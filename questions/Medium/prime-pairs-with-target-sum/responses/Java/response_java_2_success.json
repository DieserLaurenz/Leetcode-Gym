{
    "status_code": 10,
    "lang": "java",
    "run_success": true,
    "status_runtime": "1983 ms",
    "memory": 52376000,
    "display_runtime": "1983",
    "question_id": "2873",
    "elapsed_time": 2420,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1708102634345,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 554,
    "total_testcases": 554,
    "runtime_percentile": 6.500399999999973,
    "status_memory": "52.4 MB",
    "memory_percentile": 87.00379999999998,
    "pretty_lang": "Java",
    "submission_id": "1177122132",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "import java.util.ArrayList;\nimport java.util.List;\n\nclass Solution {\n    public List<List<Integer>> findPrimePairs(int n) {\n        List<List<Integer>> result = new ArrayList<>();\n        \n        for (int i = 2; i <= n / 2; i++) {\n            if (isPrime(i) && isPrime(n - i)) {\n                List<Integer> pair = new ArrayList<>();\n                pair.add(i);\n                pair.add(n - i);\n                result.add(pair);\n            }\n        }\n        return result;\n    }\n    \n    private boolean isPrime(int number) {\n        if (number < 2) return false;\n        for (int i = 2; i * i <= number; i++) {\n            if (number % i == 0) return false;\n        }\n        return true;\n    }\n}"
}