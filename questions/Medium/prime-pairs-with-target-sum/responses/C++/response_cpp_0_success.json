{
    "status_code": 10,
    "lang": "cpp",
    "run_success": true,
    "status_runtime": "542 ms",
    "memory": 35000000,
    "question_id": "2873",
    "elapsed_time": 581,
    "compare_result": "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1708094241915,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 554,
    "total_testcases": 554,
    "runtime_percentile": 73.39250000000038,
    "status_memory": "35 MB",
    "memory_percentile": 57.06410000000001,
    "pretty_lang": "C++",
    "submission_id": "1177013432",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "#include <vector>\nusing namespace std;\n\nclass Solution {\npublic:\n    vector<vector<int>> findPrimePairs(int n) {\n        vector<bool> prime(n + 1, true);\n        vector<vector<int>> result;\n        \n        prime[0] = prime[1] = false;\n        \n        for (int p = 2; p * p <= n; ++p) {\n            if (prime[p]) {\n                for (int i = p * p; i <= n; i += p)\n                    prime[i] = false;\n            }\n        }\n        \n        for (int x = 2; x <= n / 2; ++x) {\n            if (prime[x] && prime[n - x]) {\n                result.push_back({x, n - x});\n            }\n        }\n        \n        return result;\n    }\n};"
}