{
    "status_code": 11,
    "lang": "scala",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 3328000,
    "question_id": "2873",
    "elapsed_time": 11010,
    "compare_result
    "code_output": "[[5,5]]",
    "std_output": "",
    "last_testcase": "10",
    "expected_output": "[[3,7],[5,5]]",
    "task_finish_time": 1708103649990,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 170,
    "total_testcases": 554,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Scala",
    "submission_id": "1177136743",
    "input_formatted": "10",
    "input": "10",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "object Solution {\n    def findPrimePairs(n: Int): List[List[Int]] = {\n        def isPrime(num: Int): Boolean = {\n            if (num <= 1) false\n            else (2 to math.sqrt(num).toInt).forall(num % _ != 0)\n        }\n        \n        (for {\n            x <- (1 to n).filter(isPrime)\n            y <- List(x)\n            if x <= y && isPrime(y) && x + y == n\n        } yield List(x, y)).toList\n    }\n}"
}