{
    "status_code": 10,
    "lang": "scala",
    "run_success": true,
    "status_runtime": "6509 ms",
    "memory": 70076000,
    "question_id": "2873",
    "elapsed_time": 7416,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1708103681633,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 554,
    "total_testcases": 554,
    "runtime_percentile": 100,
    "status_memory": "70.1 MB",
    "memory_percentile": 100,
    "pretty_lang": "Scala",
    "submission_id": "1177137311",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "object Solution {\n    def findPrimePairs(n: Int): List[List[Int]] = {\n        def isPrime(num: Int): Boolean = {\n            if (num <= 1) false\n            else (2 to math.sqrt(num).toInt).forall(num % _ != 0)\n        }\n        \n        (for {\n            x <- (1 to n/2).filter(isPrime)\n            y = n - x if isPrime(y)\n        } yield List(x, y)).toList\n    }\n}"
}