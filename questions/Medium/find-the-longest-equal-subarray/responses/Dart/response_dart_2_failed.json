{
    "status_code": 11,
    "lang": "dart",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 178896000,
    "question_id": "2832",
    "elapsed_time": 5019,
    "compare_result
    "code_output": "6",
    "std_output": "",
    "last_testcase": "[1,3,2,3,1,3]\n3",
    "expected_output": "3",
    "task_finish_time": 1707325432001,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 133,
    "total_testcases": 1422,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Dart",
    "submission_id": "1168968771",
    "input_formatted": "[1,3,2,3,1,3], 3",
    "input": "[1,3,2,3,1,3]\n3",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n  int longestEqualSubarray(List<int> nums, int k) {\n    int maxLen = 0;\n    Map<int, int> count = {};\n\n    for (int start = 0, end = 0; end < nums.length; end++) {\n      count[nums[end]] = (count[nums[end]] ?? 0) + 1;\n\n      while ((end - start + 1) - count.values.reduce((a, b) => a > b ? a : b) > k) {\n        count[nums[start]] = (count[nums[start]] ?? 0) - 1;\n        if (count[nums[start]] == 0) {\n          count.remove(nums[start]);\n        }\n        start++;\n      }\n\n      maxLen = max(maxLen, end - start + 1);\n    }\n\n    return maxLen;\n  }\n\n  int max(int a, int b) => a > b ? a : b;\n}"
}