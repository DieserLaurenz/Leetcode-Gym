{
    "status_code": 11,
    "lang": "golang",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 9032000,
    "question_id": "2832",
    "elapsed_time": 3036,
    "compare_result
    "code_output": "0",
    "std_output": "",
    "last_testcase": "[1]\n1",
    "expected_output": "1",
    "task_finish_time": 1707325524007,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 1229,
    "total_testcases": 1422,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Go",
    "submission_id": "1168970297",
    "input_formatted": "[1], 1",
    "input": "[1]\n1",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "func longestEqualSubarray(nums []int, k int) int {\n    maxLen := 0\n    for val := 1; val <= len(nums); val++ {\n        left, right, count, maxCount := 0, 0, 0, 0\n        for right < len(nums) {\n            if nums[right] == val {\n                count++\n            }\n            maxCount = max(maxCount, count)\n            if (right - left + 1 - maxCount) > k {\n                if nums[left] == val {\n                    count--\n                }\n                left++\n            }\n            maxLen = max(maxLen, right-left+1)\n            right++\n        }\n    }\n    return maxLen - k\n}\n\nfunc max(a, b int) int {\n    if a > b {\n        return a\n    }\n    return b\n}"
}