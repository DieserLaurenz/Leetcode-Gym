{
    "status_code": 11,
    "lang": "golang",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 7316000,
    "question_id": "2832",
    "elapsed_time": 3010,
    "compare_result
    "code_output": "6",
    "std_output": "",
    "last_testcase": "[1,3,2,3,1,3]\n3",
    "expected_output": "3",
    "task_finish_time": 1707325492266,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 120,
    "total_testcases": 1422,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Go",
    "submission_id": "1168969796",
    "input_formatted": "[1,3,2,3,1,3], 3",
    "input": "[1,3,2,3,1,3]\n3",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "func longestEqualSubarray(nums []int, k int) int {\n    maxLen := 0\n    for i := 0; i < len(nums); i++ {\n        count := make(map[int]int)\n        deletions := k\n        for j := i; j < len(nums); j++ {\n            count[nums[j]]++\n            mostFreq := 0\n            for _, freq := range count {\n                if freq > mostFreq {\n                    mostFreq = freq\n                }\n            }\n            if j-i+1-mostFreq <= deletions {\n                if maxLen < j-i+1 {\n                    maxLen = j-i+1\n                }\n            } else {\n                break\n            }\n        }\n    }\n    return maxLen\n}"
}