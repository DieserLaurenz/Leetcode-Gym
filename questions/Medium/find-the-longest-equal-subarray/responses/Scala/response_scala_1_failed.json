{
    "status_code": 11,
    "lang": "scala",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 57948000,
    "question_id": "2832",
    "elapsed_time": 10187,
    "compare_result
    "code_output": "6",
    "std_output": "",
    "last_testcase": "[1,3,2,3,1,3]\n3",
    "expected_output": "3",
    "task_finish_time": 1707325792209,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 126,
    "total_testcases": 1422,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Scala",
    "submission_id": "1168974452",
    "input_formatted": "[1,3,2,3,1,3], 3",
    "input": "[1,3,2,3,1,3]\n3",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "object Solution {\n    def longestEqualSubarray(nums: List[Int], k: Int): Int = {\n        val freq = nums.groupBy(identity).mapValues(_.size)\n        var maxLen = 0\n        freq.keys.foreach { num =>\n            var i = 0\n            var deletions = 0\n            var currentLen = 0\n            nums.foreach { n =>\n                if (n == num) currentLen += 1\n                else {\n                    deletions += 1\n                    while (deletions > k) {\n                        if (nums(i) != num) deletions -= 1\n                        else currentLen -= 1\n                        i += 1\n                    }\n                }\n                maxLen = maxLen.max(currentLen + k.min(deletions))\n            }\n        }\n        maxLen\n    }\n}"
}