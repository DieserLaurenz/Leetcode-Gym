{
    "status_code": 11,
    "lang": "rust",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 2672000,
    "question_id": "2832",
    "elapsed_time": 2109,
    "compare_result
    "code_output": "5",
    "std_output": "",
    "last_testcase": "[1,3,2,3,1,3]\n3",
    "expected_output": "3",
    "task_finish_time": 1707325952456,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 136,
    "total_testcases": 1422,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Rust",
    "submission_id": "1168977249",
    "input_formatted": "[1,3,2,3,1,3], 3",
    "input": "[1,3,2,3,1,3]\n3",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "impl Solution {\n    pub fn longest_equal_subarray(nums: Vec<i32>, k: i32) -> i32 {\n        let mut answer = 0;\n        for i in 0..nums.len() {\n            let mut current = nums[i];\n            let mut count = 0;\n            let mut max_len = 0;\n            let mut deletions = k;\n\n            for j in i..nums.len() {\n                if nums[j] == current {\n                    count += 1;\n                    max_len = max_len.max(count);\n                } else if deletions > 0 {\n                    deletions -= 1;\n                    count += 1;\n                    max_len = max_len.max(count);\n                } else {\n                    break;\n                }\n            }\n            answer = answer.max(max_len);\n        }\n        answer\n    }\n}"
}