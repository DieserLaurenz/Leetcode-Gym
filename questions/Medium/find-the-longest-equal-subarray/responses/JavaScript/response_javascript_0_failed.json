{
    "status_code": 11,
    "lang": "javascript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 69916000,
    "question_id": "2832",
    "elapsed_time": 16013,
    "compare_result
    "code_output": "6",
    "std_output": "",
    "last_testcase": "[1,3,2,3,1,3]\n3",
    "expected_output": "3",
    "task_finish_time": 1707324574973,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 133,
    "total_testcases": 1422,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "JavaScript",
    "submission_id": "1168955298",
    "input_formatted": "[1,3,2,3,1,3], 3",
    "input": "[1,3,2,3,1,3]\n3",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "/**\n * @param {number[]} nums\n * @param {number} k\n * @return {number}\n */\nvar longestEqualSubarray = function(nums, k) {\n    let maxLen = 0;\n    for (let i = 0; i < nums.length; ++i) {\n        let count = new Map();\n        let maxFreq = 0;\n        let deletions = 0;\n        for (let j = i; j < nums.length; ++j) {\n            count.set(nums[j], (count.get(nums[j]) || 0) + 1);\n            maxFreq = Math.max(maxFreq, count.get(nums[j]));\n            deletions = j - i + 1 - maxFreq;\n            if (deletions <= k) {\n                maxLen = Math.max(maxLen, j - i + 1);\n            } else {\n                break;\n            }\n        }\n    }\n    return maxLen;\n};"
}