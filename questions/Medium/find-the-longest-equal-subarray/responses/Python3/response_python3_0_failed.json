{
    "status_code": 11,
    "lang": "python3",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 27636000,
    "question_id": "2832",
    "elapsed_time": 16010,
    "compare_result
    "code_output": "6",
    "std_output": "",
    "last_testcase": "[1,3,2,3,1,3]\n3",
    "expected_output": "3",
    "task_finish_time": 1708766889321,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 44,
    "total_testcases": 1422,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python3",
    "submission_id": "1184689310",
    "input_formatted": "[1,3,2,3,1,3], 3",
    "input": "[1,3,2,3,1,3]\n3",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "from typing import List\n\nclass Solution:\n    def longestEqualSubarray(self, nums: List[int], k: int) -> int:\n        from collections import defaultdict\n\n        def maxEqualFreq(nums):\n            freq = defaultdict(int)\n            count = defaultdict(int)\n            maxFreq = res = 0\n\n            for i, num in enumerate(nums):\n                count[freq[num]] -= 1\n                freq[num] += 1\n                count[freq[num]] += 1\n                maxFreq = max(maxFreq, freq[num])\n\n                if maxFreq == 1 or \\\n                   maxFreq * count[maxFreq] + 1 == i + 1 or \\\n                   (maxFreq - 1) * (count[maxFreq - 1] + 1) + 1 == i + 1:\n                    res = i + 1\n            return res\n\n        res = 0\n        for num in set(nums):\n            filtered = [n for n in nums if n == num]\n            res = max(res, maxEqualFreq(filtered) + min(k, len(nums) - len(filtered)))\n        return res"
}