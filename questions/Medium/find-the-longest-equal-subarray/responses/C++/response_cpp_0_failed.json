{
    "status_code": 11,
    "lang": "cpp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 487220000,
    "question_id": "2832",
    "elapsed_time": 4035,
    "compare_result
    "code_output": "6",
    "std_output": "",
    "last_testcase": "[1,3,2,3,1,3]\n3",
    "expected_output": "3",
    "task_finish_time": 1707314847593,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 129,
    "total_testcases": 1422,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C++",
    "submission_id": "1168823435",
    "input_formatted": "[1,3,2,3,1,3], 3",
    "input": "[1,3,2,3,1,3]\n3",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\npublic:\n    int longestEqualSubarray(vector<int>& nums, int k) {\n        int n = nums.size();\n        int maxLength = 0;\n        for (int i = 0; i < n; ++i) {\n            int count = 0;\n            unordered_map<int, int> freq;\n            int maxFreq = 0;\n            for (int j = i; j < n; ++j) {\n                freq[nums[j]]++;\n                maxFreq = max(maxFreq, freq[nums[j]]);\n                if (j - i + 1 - maxFreq <= k) {\n                    maxLength = max(maxLength, j - i + 1);\n                } else {\n                    break;\n                }\n            }\n        }\n        return maxLength;\n    }\n};"
}