{
    "status_code": 11,
    "lang": "kotlin",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 81184000,
    "question_id": "2832",
    "elapsed_time": 1551,
    "compare_result
    "code_output": "6",
    "std_output": "",
    "last_testcase": "[1,3,2,3,1,3]\n3",
    "expected_output": "3",
    "task_finish_time": 1707325219476,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 135,
    "total_testcases": 1422,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Kotlin",
    "submission_id": "1168965285",
    "input_formatted": "[1,3,2,3,1,3], 3",
    "input": "[1,3,2,3,1,3]\n3",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    fun longestEqualSubarray(nums: List<Int>, k: Int): Int {\n        var maxLen = 0\n        val countMap = mutableMapOf<Int, Int>()\n        var left = 0\n        var total = 0\n\n        for (right in nums.indices) {\n            countMap[nums[right]] = countMap.getOrDefault(nums[right], 0) + 1\n            total = maxOf(total, countMap[nums[right]]!!)\n            \n            if (right - left + 1 - total > k) {\n                countMap[nums[left]] = countMap[nums[left]]!! - 1\n                left++\n            }\n            \n            maxLen = maxOf(maxLen, right - left + 1)\n        }\n\n        return maxLen\n    }\n}"
}