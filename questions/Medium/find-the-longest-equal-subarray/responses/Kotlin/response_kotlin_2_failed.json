{
    "status_code": 11,
    "lang": "kotlin",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 63952000,
    "question_id": "2832",
    "elapsed_time": 5033,
    "compare_result
    "code_output": "6",
    "std_output": "",
    "last_testcase": "[1,3,2,3,1,3]\n3",
    "expected_output": "3",
    "task_finish_time": 1707325298641,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 133,
    "total_testcases": 1422,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Kotlin",
    "submission_id": "1168966589",
    "input_formatted": "[1,3,2,3,1,3], 3",
    "input": "[1,3,2,3,1,3]\n3",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    fun longestEqualSubarray(nums: List<Int>, k: Int): Int {\n        val freq = IntArray(nums.size + 1)\n        var maxFreq = 0\n        var start = 0\n        var maxLength = 0\n\n        for (end in nums.indices) {\n            freq[nums[end]]++\n            maxFreq = maxOf(maxFreq, freq[nums[end]])\n\n            while (end - start + 1 - maxFreq > k) {\n                freq[nums[start]]--\n                start++\n                // Update maxFreq after removing an element\n                for (i in freq.indices) {\n                    maxFreq = maxOf(maxFreq, freq[i])\n                }\n            }\n\n            maxLength = maxOf(maxLength, end - start + 1)\n        }\n\n        return maxLength\n    }\n}"
}