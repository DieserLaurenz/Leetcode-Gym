{
    "status_code": 11,
    "lang": "java",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 55884000,
    "question_id": "2832",
    "elapsed_time": 4012,
    "compare_result
    "code_output": "6",
    "std_output": "",
    "last_testcase": "[1,3,2,3,1,3]\n3",
    "expected_output": "3",
    "task_finish_time": 1707315020190,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 133,
    "total_testcases": 1422,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Java",
    "submission_id": "1168825644",
    "input_formatted": "[1,3,2,3,1,3], 3",
    "input": "[1,3,2,3,1,3]\n3",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    public int longestEqualSubarray(List<Integer> nums, int k) {\n        int result = 0;\n        Map<Integer, Integer> count = new HashMap<>();\n        int left = 0, maxCount = 0;\n        for (int right = 0; right < nums.size(); right++) {\n            count.put(nums.get(right), count.getOrDefault(nums.get(right), 0) + 1);\n            maxCount = Math.max(maxCount, count.get(nums.get(right)));\n            while (right - left + 1 - maxCount > k) {\n                count.put(nums.get(left), count.get(nums.get(left)) - 1);\n                if (count.get(nums.get(left)) == 0) {\n                    count.remove(nums.get(left));\n                }\n                left++;\n                for (int freq : count.values()) {\n                    maxCount = Math.max(maxCount, freq);\n                }\n            }\n            result = Math.max(result, right - left + 1);\n        }\n        return result;\n    }\n}"
}