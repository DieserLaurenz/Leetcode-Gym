{
    "status_code": 11,
    "lang": "csharp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 69136000,
    "question_id": "2832",
    "elapsed_time": 4010,
    "compare_result
    "code_output": "6",
    "std_output": "",
    "last_testcase": "[1,3,2,3,1,3]\n3",
    "expected_output": "3",
    "task_finish_time": 1707324397957,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 136,
    "total_testcases": 1422,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C#",
    "submission_id": "1168952757",
    "input_formatted": "[1,3,2,3,1,3], 3",
    "input": "[1,3,2,3,1,3]\n3",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "public class Solution {\n    public int LongestEqualSubarray(IList<int> nums, int k) {\n        int maxLength = 0;\n        for (int i = 0; i < nums.Count; i++) {\n            int current = nums[i];\n            int left = k;\n            int length = 0;\n            for (int j = i; j < nums.Count; j++) {\n                if (nums[j] == current) {\n                    length++;\n                } else if (left > 0) {\n                    left--;\n                    length++;\n                } else {\n                    break;\n                }\n            }\n            maxLength = Math.Max(maxLength, length);\n        }\n        return maxLength + k > nums.Count ? nums.Count : maxLength;\n    }\n}"
}