{
    "status_code": 11,
    "lang": "c",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 10568000,
    "question_id": "2832",
    "elapsed_time": 3009,
    "compare_result
    "code_output": "5",
    "std_output": "",
    "last_testcase": "[1,3,2,3,1,3]\n3",
    "expected_output": "3",
    "task_finish_time": 1707324248838,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 136,
    "total_testcases": 1422,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C",
    "submission_id": "1168950533",
    "input_formatted": "[1,3,2,3,1,3], 3",
    "input": "[1,3,2,3,1,3]\n3",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "int longestEqualSubarray(int* nums, int numsSize, int k) {\n    int maxLen = 0;\n    for (int i = 0; i < numsSize; ++i) {\n        int count = 0, deletions = k;\n        int j = i;\n        while (j < numsSize && (nums[j] == nums[i] || deletions > 0)) {\n            if (nums[j] != nums[i]) {\n                --deletions;\n            }\n            ++count;\n            ++j;\n        }\n        maxLen = count > maxLen ? count : maxLen;\n        while (j < numsSize && nums[j] == nums[i]) {\n            ++count;\n            ++j;\n            maxLen = count > maxLen ? count : maxLen;\n        }\n    }\n    return maxLen;\n}"
}