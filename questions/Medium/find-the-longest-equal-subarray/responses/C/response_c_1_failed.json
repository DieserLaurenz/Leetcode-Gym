{
    "status_code": 11,
    "lang": "c",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 7496000,
    "question_id": "2832",
    "elapsed_time": 3012,
    "compare_result
    "code_output": "6",
    "std_output": "",
    "last_testcase": "[1,3,2,3,1,3]\n3",
    "expected_output": "3",
    "task_finish_time": 1707324285771,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 133,
    "total_testcases": 1422,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C",
    "submission_id": "1168951094",
    "input_formatted": "[1,3,2,3,1,3], 3",
    "input": "[1,3,2,3,1,3]\n3",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "int longestEqualSubarray(int* nums, int numsSize, int k) {\n    int maxLen = 0;\n    for (int num = 1; num <= numsSize; ++num) {\n        int left = 0, right = 0, deletions = 0, currentLen = 0;\n        while (right < numsSize) {\n            if (nums[right] == num) {\n                currentLen++;\n                right++;\n            } else if (deletions < k) {\n                deletions++;\n                currentLen++;\n                right++;\n            } else {\n                if (nums[left] != num) {\n                    deletions--;\n                }\n                left++;\n                currentLen--;\n            }\n            maxLen = currentLen > maxLen ? currentLen : maxLen;\n        }\n    }\n    return maxLen;\n}"
}