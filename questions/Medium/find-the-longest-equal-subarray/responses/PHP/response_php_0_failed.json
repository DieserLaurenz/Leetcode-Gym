{
    "status_code": 11,
    "lang": "php",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 19976000,
    "question_id": "2832",
    "elapsed_time": 5424,
    "compare_result
    "code_output": "6",
    "std_output": "",
    "last_testcase": "[1,3,2,3,1,3]\n3",
    "expected_output": "3",
    "task_finish_time": 1707324901855,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 129,
    "total_testcases": 1422,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "PHP",
    "submission_id": "1168960366",
    "input_formatted": "[1,3,2,3,1,3], 3",
    "input": "[1,3,2,3,1,3]\n3",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @param Integer $k\n     * @return Integer\n     */\n    function longestEqualSubarray($nums, $k) {\n        $maxLength = 0;\n        for ($i = 0; $i < count($nums); ++$i) {\n            $count = [];\n            $maxFreq = 0;\n            for ($j = $i; $j < count($nums); ++$j) {\n                $num = $nums[$j];\n                if (!isset($count[$num])) {\n                    $count[$num] = 0;\n                }\n                $count[$num]++;\n                $maxFreq = max($maxFreq, $count[$num]);\n                if ($j - $i + 1 - $maxFreq <= $k) {\n                    $maxLength = max($maxLength, $j - $i + 1);\n                }\n            }\n        }\n        return $maxLength;\n    }\n}"
}