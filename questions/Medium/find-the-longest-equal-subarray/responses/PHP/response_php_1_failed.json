{
    "status_code": 11,
    "lang": "php",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 20368000,
    "question_id": "2832",
    "elapsed_time": 5158,
    "compare_result
    "code_output": "6",
    "std_output": "",
    "last_testcase": "[1,3,2,3,1,3]\n3",
    "expected_output": "3",
    "task_finish_time": 1707324947098,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 120,
    "total_testcases": 1422,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "PHP",
    "submission_id": "1168961037",
    "input_formatted": "[1,3,2,3,1,3], 3",
    "input": "[1,3,2,3,1,3]\n3",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @param Integer $k\n     * @return Integer\n     */\n    function longestEqualSubarray($nums, $k) {\n        $n = count($nums);\n        $result = 0;\n\n        for ($i = 1; $i <= $n; $i++) {\n            $freq = [];\n            $left = 0;\n            $maxFreq = 0;\n            for ($right = 0; $right < $n; $right++) {\n                $freq[$nums[$right]] = ($freq[$nums[$right]] ?? 0) + 1;\n                $maxFreq = max($maxFreq, $freq[$nums[$right]]);\n\n                while (($right - $left + 1) - $maxFreq > $k) {\n                    $freq[$nums[$left]] -= 1;\n                    $left += 1;\n                }\n\n                $result = max($result, $right - $left + 1);\n            }\n        }\n\n        return $result;\n    }\n}"
}