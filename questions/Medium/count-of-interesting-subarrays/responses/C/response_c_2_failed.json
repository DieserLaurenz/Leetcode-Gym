{
    "status_code": 11,
    "lang": "c",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 8308000,
    "question_id": "2915",
    "elapsed_time": 25,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "[11,12,21,31]\n10\n1",
    "expected_output": "5",
    "task_finish_time": 1707084170471,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 104,
    "total_testcases": 617,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C",
    "submission_id": "1166233167",
    "input_formatted": "[11,12,21,31], 10, 1",
    "input": "[11,12,21,31]\n10\n1",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "long long countInterestingSubarrays(int* nums, int numsSize, int modulo, int k) {\n    long long ans = 0;\n    int* prefixCounts = (int*)calloc((numsSize + 1) * (modulo + 1), sizeof(int));\n    int sum = 0;\n\n    prefixCounts[0] = 1; // Initialize base case\n\n    for (int i = 0; i < numsSize; i++) {\n        if (nums[i] % modulo == k) sum++;\n        ans += prefixCounts[(sum - k + (modulo + 1) * (i + 1)) % modulo];\n        prefixCounts[(sum + (modulo + 1) * (i + 1)) % modulo]++;\n    }\n\n    free(prefixCounts);\n    return ans;\n}"
}