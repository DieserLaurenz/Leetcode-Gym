{
    "status_code": 10,
    "lang": "swift",
    "run_success": true,
    "status_runtime": "393 ms",
    "memory": 25984000,
    "question_id": "2915",
    "elapsed_time": 428,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1707084571667,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 617,
    "total_testcases": 617,
    "runtime_percentile": 100,
    "status_memory": "26 MB",
    "memory_percentile": 100,
    "pretty_lang": "Swift",
    "submission_id": "1166236571",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\n    func countInterestingSubarrays(_ nums: [Int], _ modulo: Int, _ k: Int) -> Int {\n        var count = 0\n        var prefixCounts = [Int: Int]()\n        var currentCount = 0\n\n        prefixCounts[0] = 1 // Initialize for subarrays starting with index 0\n\n        for num in nums {\n            if num % modulo == k {\n                currentCount += 1\n            }\n            let targetCount = (currentCount - k + modulo) % modulo\n            count += prefixCounts[targetCount, default: 0]\n            prefixCounts[currentCount % modulo, default: 0] += 1\n        }\n\n        return count\n    }\n}"
}