{
    "status_code": 10,
    "lang": "python",
    "run_success": true,
    "status_runtime": "770 ms",
    "memory": 37180000,
    "question_id": "2915",
    "elapsed_time": 809,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1708746339230,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 617,
    "total_testcases": 617,
    "runtime_percentile": 66.66669999999999,
    "status_memory": "37.2 MB",
    "memory_percentile": 66.66669999999999,
    "pretty_lang": "Python",
    "submission_id": "1184485021",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution(object):\n    def countInterestingSubarrays(self, nums, modulo, k):\n        from collections import defaultdict\n        prefix_sum = 0\n        count = 0\n        count_modulo = defaultdict(int)\n        count_modulo[0] = 1\n\n        for num in nums:\n            if num % modulo == k:\n                prefix_sum += 1\n            prefix_sum_modulo = prefix_sum % modulo\n            count += count_modulo[(prefix_sum_modulo - k) % modulo]\n            count_modulo[prefix_sum_modulo] += 1\n\n        return count"
}