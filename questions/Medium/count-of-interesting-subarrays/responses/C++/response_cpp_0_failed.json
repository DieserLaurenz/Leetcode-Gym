{
    "status_code": 11,
    "lang": "cpp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 127868000,
    "question_id": "2915",
    "elapsed_time": 296,
    "compare_result
    "code_output": "6",
    "std_output": "",
    "last_testcase": "[3,2,4]\n2\n1",
    "expected_output": "3",
    "task_finish_time": 1707075831945,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 113,
    "total_testcases": 617,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C++",
    "submission_id": "1166151896",
    "input_formatted": "[3,2,4], 2, 1",
    "input": "[3,2,4]\n2\n1",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\npublic:\n    long long countInterestingSubarrays(vector<int>& nums, int modulo, int k) {\n        long long count = 0;\n        unordered_map<int, int> prefixCount{{0, 1}};\n        int currentCount = 0, prefixSum = 0;\n        \n        for (int num : nums) {\n            if (num % modulo == k) ++currentCount;\n            prefixSum = (prefixSum + (currentCount - k)) % modulo;\n            if (prefixSum < 0) prefixSum += modulo;\n            \n            count += prefixCount[prefixSum];\n            prefixCount[prefixSum]++;\n        }\n        \n        return count;\n    }\n};"
}