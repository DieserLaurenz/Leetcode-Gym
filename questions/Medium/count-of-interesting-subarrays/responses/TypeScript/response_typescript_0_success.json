{
    "status_code": 10,
    "lang": "typescript",
    "run_success": true,
    "status_runtime": "122 ms",
    "memory": 71732000,
    "question_id": "2915",
    "elapsed_time": 180,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1707084403285,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 617,
    "total_testcases": 617,
    "runtime_percentile": 100,
    "status_memory": "71.7 MB",
    "memory_percentile": 100,
    "pretty_lang": "TypeScript",
    "submission_id": "1166235131",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "function countInterestingSubarrays(nums: number[], modulo: number, k: number): number {\n    let count = 0;\n    const prefixSum = new Map<number, number>();\n    let currentSum = 0;\n    prefixSum.set(0, 1); // Initialize with sum 0 having 1 occurrence\n\n    for (let num of nums) {\n        if (num % modulo == k) {\n            currentSum = (currentSum + 1) % modulo;\n        }\n        const targetSum = (currentSum - k + modulo) % modulo;\n        count += (prefixSum.get(targetSum) || 0);\n        prefixSum.set(currentSum, (prefixSum.get(currentSum) || 0) + 1);\n    }\n\n    return count;\n};"
}