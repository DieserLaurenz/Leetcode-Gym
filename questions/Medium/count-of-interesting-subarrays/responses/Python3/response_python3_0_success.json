{
    "status_code": 10,
    "lang": "python3",
    "run_success": true,
    "status_runtime": "730 ms",
    "memory": 46052000,
    "question_id": "2915",
    "elapsed_time": 770,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1708746391551,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 617,
    "total_testcases": 617,
    "runtime_percentile": 83.50529999999999,
    "status_memory": "46.1 MB",
    "memory_percentile": 36.082599999999985,
    "pretty_lang": "Python3",
    "submission_id": "1184485449",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "from typing import List\nfrom collections import defaultdict\n\nclass Solution:\n    def countInterestingSubarrays(self, nums: List[int], modulo: int, k: int) -> int:\n        prefix_sum = 0\n        count = 0\n        freq = defaultdict(int)\n        freq[0] = 1\n\n        for num in nums:\n            if num % modulo == k:\n                prefix_sum += 1\n            prefix_sum_mod = prefix_sum % modulo\n\n            target_mod = (prefix_sum_mod - k) % modulo\n            count += freq[target_mod]\n            \n            freq[prefix_sum_mod] += 1\n\n        return count"
}