{
    "status_code": 10,
    "lang": "csharp",
    "run_success": true,
    "status_runtime": "359 ms",
    "memory": 66800000,
    "question_id": "2915",
    "elapsed_time": 443,
    "compare_result": "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1707084257003,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 617,
    "total_testcases": 617,
    "runtime_percentile": 33.33339999999999,
    "status_memory": "66.8 MB",
    "memory_percentile": 33.33339999999999,
    "pretty_lang": "C#",
    "submission_id": "1166233846",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "public class Solution {\n    public long CountInterestingSubarrays(IList<int> nums, int modulo, int k) {\n        long count = 0;\n        Dictionary<int, int> prefixSum = new Dictionary<int, int>();\n        int sum = 0;\n        prefixSum[0] = 1; // Initial condition, prefix sum of 0 appears once\n\n        foreach (var num in nums) {\n            if ((num % modulo) == k) sum++;\n            int modSum = (sum - k + modulo) % modulo;\n\n            if (prefixSum.ContainsKey(modSum)) {\n                count += prefixSum[modSum];\n            }\n\n            if (prefixSum.ContainsKey(sum % modulo)) {\n                prefixSum[sum % modulo]++;\n            } else {\n                prefixSum[sum % modulo] = 1;\n            }\n        }\n\n        return count;\n    }\n}"
}