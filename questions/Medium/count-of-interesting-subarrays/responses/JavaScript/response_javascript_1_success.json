{
    "status_code": 10,
    "lang": "javascript",
    "run_success": true,
    "status_runtime": "123 ms",
    "memory": 71848000,
    "question_id": "2915",
    "elapsed_time": 148,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1707084343765,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 617,
    "total_testcases": 617,
    "runtime_percentile": 25.0,
    "status_memory": "71.8 MB",
    "memory_percentile": 50.0,
    "pretty_lang": "JavaScript",
    "submission_id": "1166234601",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "/**\n * @param {number[]} nums\n * @param {number} modulo\n * @param {number} k\n * @return {number}\n */\nvar countInterestingSubarrays = function(nums, modulo, k) {\n    let count = 0;\n    const prefixCount = new Map([[0, 1]]);\n    let currentSum = 0, currentMod = 0;\n\n    for (let num of nums) {\n        if (num % modulo === k) currentSum++;\n        currentMod = ((currentSum - k) % modulo + modulo) % modulo;\n        count += prefixCount.get(currentMod) || 0;\n        prefixCount.set(currentSum % modulo, (prefixCount.get(currentSum % modulo) || 0) + 1);\n    }\n\n    return count;\n};"
}