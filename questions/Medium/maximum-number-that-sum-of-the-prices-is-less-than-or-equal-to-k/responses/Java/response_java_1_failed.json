{
    "status_code": 11,
    "lang": "java",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 41112000,
    "display_runtime": "1",
    "question_id": "3240",
    "elapsed_time": 97,
    "compare_result
    "code_output": "5",
    "std_output": "",
    "last_testcase": "9\n1",
    "expected_output": "6",
    "task_finish_time": 1707618305930,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 9,
    "total_testcases": 932,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Java",
    "submission_id": "1171863732",
    "input_formatted": "9, 1",
    "input": "9\n1",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    public long findMaximumNumber(long k, int x) {\n        long left = 0, right = 2 * (k / x) + 2;\n        while (left < right) {\n            long mid = left + (right - left) / 2;\n            if (calculateSum(mid, x) <= k) {\n                left = mid + 1;\n            } else {\n                right = mid;\n            }\n        }\n        return left - 1;\n    }\n\n    private long calculateSum(long num, int x) {\n        long sum = 0;\n        for (long i = x; i <= 64; i += x) {\n            sum += num >> i;\n        }\n        return sum;\n    }\n}"
}