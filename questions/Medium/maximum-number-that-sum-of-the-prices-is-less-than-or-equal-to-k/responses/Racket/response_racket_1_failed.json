{
    "status_code": 11,
    "lang": "racket",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 101116000,
    "question_id": "3240",
    "elapsed_time": 5015,
    "compare_result
    "code_output": "7",
    "std_output": "",
    "last_testcase": "9\n1",
    "expected_output": "6",
    "task_finish_time": 1707628315477,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 932,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Racket",
    "submission_id": "1172015732",
    "input_formatted": "9, 1",
    "input": "9\n1",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "(define/contract (find-maximum-number k x)\n  (-> exact-integer? exact-integer? exact-integer?)\n  (let loop ((num 0) (sum 0))\n    (if (> sum k)\n        (- num 1)\n        (let ((price (for/sum ([i (in-range 1 (+ 1 (integer-length num)))])\n                         (if (and (= (modulo i x) 0) (bitwise-bit-set? num (- i 1)))\n                             1\n                             0))))\n          (loop (+ num 1) (+ sum price))))))"
}