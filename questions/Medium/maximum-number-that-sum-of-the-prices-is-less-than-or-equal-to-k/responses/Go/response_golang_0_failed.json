{
    "status_code": 11,
    "lang": "golang",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 2000000,
    "question_id": "3240",
    "elapsed_time": 13,
    "compare_result
    "code_output": "19",
    "std_output": "",
    "last_testcase": "9\n1",
    "expected_output": "6",
    "task_finish_time": 1707619282135,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 932,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Go",
    "submission_id": "1171879739",
    "input_formatted": "9, 1",
    "input": "9\n1",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "func findMaximumNumber(k int64, x int) int64 {\n    low, high := int64(0), int64(1<<50)\n    for low < high {\n        mid := (low + high) / 2\n        sum := int64(0)\n        for i := 1; i <= x; i++ {\n            sum += mid / int64(1<<(i*x))\n        }\n        if sum > k {\n            high = mid\n        } else {\n            low = mid + 1\n        }\n    }\n    return low - 1\n}"
}