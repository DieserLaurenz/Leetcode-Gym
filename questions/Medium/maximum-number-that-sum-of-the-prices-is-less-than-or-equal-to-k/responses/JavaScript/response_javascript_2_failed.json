{
    "status_code": 11,
    "lang": "javascript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 50856000,
    "question_id": "3240",
    "elapsed_time": 4011,
    "compare_result": "10000000100000000000001001110000000100010000100000010000010000001000000000001100000000000000000000100000010100110000000010001100110010000010000000000000000010000010000000000010100001000001000000001000001000000100000000000000000010100010000100000000000100000000000000010000000010000000000000101000000000000010001100000100000010100000100000001000000000000000000001000000000000001000000000000000000000000010000000000010000000110000000100000100001100100000000000000010110001000001000001000101000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "code_output": "7",
    "std_output": "",
    "last_testcase": "7\n2",
    "expected_output": "9",
    "task_finish_time": 1707618649825,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 72,
    "total_testcases": 932,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "JavaScript",
    "submission_id": "1171865870",
    "input_formatted": "7, 2",
    "input": "7\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "/**\n * @param {number} k\n * @param {number} x\n * @return {number}\n */\nvar findMaximumNumber = function(k, x) {\n    let low = 1, high = k;\n    const countBits = (num) => {\n        let count = 0;\n        while (num) {\n            count += num & 1;\n            num >>= 1;\n        }\n        return count;\n    };\n    const calcPrice = (num) => {\n        let price = 0;\n        for (let i = 1; i <= num; ++i) {\n            let bits = countBits(i);\n            let posPrice = 0;\n            for (let j = 1; j <= bits; ++j) {\n                if ((j % x) === 0) posPrice++;\n            }\n            price += posPrice;\n        }\n        return price;\n    };\n    while (low < high) {\n        const mid = Math.floor((low + high + 1) / 2);\n        if (calcPrice(mid) <= k) low = mid;\n        else high = mid - 1;\n    }\n    return high;\n};"
}