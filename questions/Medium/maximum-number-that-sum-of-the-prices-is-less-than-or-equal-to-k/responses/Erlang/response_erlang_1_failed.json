{
    "status_code": 15,
    "lang": "erlang",
    "run_success": false,
    "runtime_error": "Line 27: exception error: badarg",
    "full_runtime_error": "Line 27: exception error: badarg\n[{erlang,bit_size,[[<<1:1>>]],[{error_info,#{module => erl_erts_errors}}]},\n {solution,sum_prices,4,[{file,\"solution.erl\"},{line,27}]},\n {solution,find_maximum,5,[{file,\"solution.erl\"},{line,7}]},\n {solution,consume_test_cases,2,[{file,\"solution.erl\"},{line,55}]},\n {solution,driver,0,[{file,\"solution.erl\"},{line,41}]},\n {solution,start,0,[{file,\"solution.erl\"},{line,72}]},\n {init,start_em,1,[]},\n {init,do_boot,3,[]}]",
    "status_runtime": "N/A",
    "memory": 59128000,
    "question_id": "3240",
    "elapsed_time": 1367,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "9\n1",
    "expected_output": "6",
    "task_finish_time": 1707628424235,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 932,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Erlang",
    "submission_id": "1172016914",
    "status_msg": "Runtime Error",
    "state": "SUCCESS",
    "code": "-spec find_maximum_number(K :: integer(), X :: integer()) -> integer().\nfind_maximum_number(K, X) ->\n    find_maximum(0, K, X, 1, K).\n\nfind_maximum(Sum, K, X, Low, High) when High >= Low ->\n    Mid = Low + (High - Low) div 2,\n    CurrentSum = sum_prices(Mid, X),\n    if\n        CurrentSum == K ->\n            Mid;\n        CurrentSum < K ->\n            find_maximum(CurrentSum, K, X, Mid + 1, High);\n        CurrentSum > K ->\n            find_maximum(Sum, K, X, Low, Mid - 1)\n    end;\nfind_maximum(_, _, _, _, High) ->\n    High.\n\nsum_prices(Num, X) ->\n    sum_prices(Num, X, 1, 0).\n\nsum_prices(0, _, _, Acc) ->\n    Acc;\nsum_prices(Num, X, Index, Acc) ->\n    if\n        Index rem X == 0 ->\n            Bits = bit_size(erlang:bitstring_to_list(<<Num:Index>>)),\n            NewAcc = Acc + Bits;\n        true ->\n            NewAcc = Acc\n    end,\n    if\n        Num == Index ->\n            NewAcc;\n        true ->\n            sum_prices(Num, X, Index + 1, NewAcc)\n    end."
}