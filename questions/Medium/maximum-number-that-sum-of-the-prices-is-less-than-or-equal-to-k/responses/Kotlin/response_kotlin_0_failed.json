{
    "status_code": 11,
    "lang": "kotlin",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 34136000,
    "question_id": "3240",
    "elapsed_time": 129,
    "compare_result
    "code_output": "9",
    "std_output": "",
    "last_testcase": "9\n1",
    "expected_output": "6",
    "task_finish_time": 1707619066745,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 4,
    "total_testcases": 932,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Kotlin",
    "submission_id": "1171874847",
    "input_formatted": "9, 1",
    "input": "9\n1",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    fun findMaximumNumber(k: Long, x: Int): Long {\n        var left = 0L\n        var right = k\n        while (left < right) {\n            val mid = left + (right - left + 1) / 2\n            if (sumOfPrices(mid, x) <= k) left = mid\n            else right = mid - 1\n        }\n        return left\n    }\n\n    private fun sumOfPrices(n: Long, x: Int): Long {\n        var sum = 0L\n        for (i in 1..x) {\n            var count = n / (1L shl i)\n            if (i % x == 0) sum += count\n            if (n % (1L shl i) >= (1L shl (i - 1))) {\n                sum += if (i % x == 0) 1 else 0\n            }\n        }\n        return sum\n    }\n}"
}