{
    "status_code": 11,
    "lang": "kotlin",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 33616000,
    "question_id": "3240",
    "elapsed_time": 141,
    "compare_result
    "code_output": "5",
    "std_output": "",
    "last_testcase": "9\n1",
    "expected_output": "6",
    "task_finish_time": 1707619129803,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 11,
    "total_testcases": 932,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Kotlin",
    "submission_id": "1171876268",
    "input_formatted": "9, 1",
    "input": "9\n1",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    fun findMaximumNumber(k: Long, x: Int): Long {\n        var left = 1L\n        var right = k\n        \n        while (left < right) {\n            val mid = (left + right + 1) / 2\n            if (calculateSum(mid, x) > k) right = mid - 1\n            else left = mid\n        }\n        \n        return left\n    }\n    \n    private fun calculateSum(num: Long, x: Int): Long {\n        var sum = 0L\n        for (i in 1..(64 / x)) {\n            val step = 1L shl (i * x - 1)\n            sum += (num / step)\n        }\n        return sum\n    }\n}"
}