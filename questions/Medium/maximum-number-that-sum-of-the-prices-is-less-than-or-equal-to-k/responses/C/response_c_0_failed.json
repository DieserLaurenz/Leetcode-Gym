{
    "status_code": 11,
    "lang": "c",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 5232000,
    "question_id": "3240",
    "elapsed_time": 15,
    "compare_result
    "code_output": "5",
    "std_output": "",
    "last_testcase": "9\n1",
    "expected_output": "6",
    "task_finish_time": 1707618382591,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 9,
    "total_testcases": 932,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C",
    "submission_id": "1171864194",
    "input_formatted": "9, 1",
    "input": "9\n1",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "long long findMaximumNumber(long long k, int x) {\n    long long left = 1, right = k, mid, ans = 0;\n    while (left <= right) {\n        mid = left + (right - left) / 2;\n        long long sum = 0;\n        for (long long i = 1; i <= mid; i <<= 1) {\n            for (int j = 1; j <= x; j <<= 1) {\n                if (i * j > mid) break;\n                sum += (mid / (i * j));\n            }\n        }\n        if (sum <= k) {\n            ans = mid;\n            left = mid + 1;\n        } else {\n            right = mid - 1;\n        }\n    }\n    return ans;\n}"
}