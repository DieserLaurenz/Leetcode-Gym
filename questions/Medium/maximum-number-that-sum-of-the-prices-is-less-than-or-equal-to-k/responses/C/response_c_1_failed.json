{
    "status_code": 11,
    "lang": "c",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 5296000,
    "question_id": "3240",
    "elapsed_time": 3009,
    "compare_result
    "code_output": "11",
    "std_output": "",
    "last_testcase": "7\n2",
    "expected_output": "9",
    "task_finish_time": 1707618405185,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 71,
    "total_testcases": 932,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C",
    "submission_id": "1171864320",
    "input_formatted": "7, 2",
    "input": "7\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "long long findMaximumNumber(long long k, int x) {\n    long long left = 1, right = 2 * k; // Increase upper bound\n    while (left < right) {\n        long long mid = left + (right - left) / 2;\n        long long sum = 0;\n        for (long long i = 1; i <= mid; i++) {\n            long long count = 0;\n            for (long long num = i; num > 0; num >>= 1) {\n                if (num & 1) count++;\n            }\n            if ((i % x) == 0) sum += count;\n        }\n        if (sum > k) right = mid;\n        else left = mid + 1;\n    }\n    return left - 1;\n}"
}