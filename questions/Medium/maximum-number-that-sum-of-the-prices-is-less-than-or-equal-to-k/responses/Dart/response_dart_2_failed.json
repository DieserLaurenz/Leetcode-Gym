{
    "status_code": 11,
    "lang": "dart",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 149164000,
    "question_id": "3240",
    "elapsed_time": 448,
    "compare_result
    "code_output": "5",
    "std_output": "",
    "last_testcase": "9\n1",
    "expected_output": "6",
    "task_finish_time": 1707619230577,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 10,
    "total_testcases": 932,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Dart",
    "submission_id": "1171878590",
    "input_formatted": "9, 1",
    "input": "9\n1",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n  int findMaximumNumber(int k, int x) {\n    int left = 1, right = 2 * (k ~/ x);\n    while (left < right) {\n      int mid = left + (right - left + 1) ~/ 2;\n      if (priceSum(mid, x) <= k) left = mid;\n      else right = mid - 1;\n    }\n    return left;\n  }\n\n  int priceSum(int num, int x) {\n    int sum = 0;\n    for (int i = 1; i <= num; i <<= 1) {\n      sum += ((num / i) ~/ x) * (i < x ? i : x);\n    }\n    return sum;\n  }\n}"
}