{
    "status_code": 15,
    "lang": "dart",
    "run_success": false,
    "runtime_error": "Line 9: Char 25: Error: A value of type 'double' can't be assigned to a variable of type 'int'.",
    "full_runtime_error": "Line 9: Char 25: Error: A value of type 'double' can't be assigned to a variable of type 'int'.\n        if (i == x) sum += (mid / i) % 2;\n                        ^",
    "status_runtime": "N/A",
    "memory": 144260000,
    "question_id": "3240",
    "elapsed_time": 527,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "9\n1",
    "expected_output": "6",
    "task_finish_time": 1707619181831,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 932,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Dart",
    "submission_id": "1171877519",
    "status_msg": "Runtime Error",
    "state": "SUCCESS",
    "code": "class Solution {\n  int findMaximumNumber(int k, int x) {\n    int low = 1, high = k;\n    while (low < high) {\n      int mid = (low + high + 1) >> 1;\n      int sum = 0;\n      for (int i = 1; i <= x; i *= 2) {\n        sum += (mid / i) ~/ 2;\n        if (i == x) sum += (mid / i) % 2;\n      }\n      if (sum <= k) low = mid;\n      else high = mid - 1;\n    }\n    return low;\n  }\n}"
}