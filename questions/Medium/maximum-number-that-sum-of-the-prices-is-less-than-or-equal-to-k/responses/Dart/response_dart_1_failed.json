{
    "status_code": 14,
    "lang": "dart",
    "run_success": false,
    "status_runtime": "N/A",
    "memory": 147440000,
    "question_id": "3240",
    "elapsed_time": 5016,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "9\n1",
    "expected_output": "6",
    "task_finish_time": 1707619207493,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 932,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Dart",
    "submission_id": "1171877979",
    "status_msg": "Time Limit Exceeded",
    "state": "SUCCESS",
    "code": "class Solution {\n  int findMaximumNumber(int k, int x) {\n    int low = 1, high = 1 << 30;\n    while (low < high) {\n      int mid = high - (high - low) ~/ 2;\n      int sum = 0;\n      for (int i = 1; i <= mid; i++) {\n        int count = 0, num = i;\n        while (num > 0) {\n          if ((num & 1) == 1 && (count % x == x - 1)) sum++;\n          num >>= 1;\n          count++;\n        }\n      }\n      if (sum > k) high = mid - 1;\n      else low = mid;\n    }\n    return low;\n  }\n}"
}