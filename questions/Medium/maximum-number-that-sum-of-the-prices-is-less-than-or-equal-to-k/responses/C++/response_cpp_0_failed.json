{
    "status_code": 11,
    "lang": "cpp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 7832000,
    "question_id": "3240",
    "elapsed_time": 86,
    "compare_result
    "code_output": "11",
    "std_output": "",
    "last_testcase": "9\n1",
    "expected_output": "6",
    "task_finish_time": 1707618161093,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 932,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C++",
    "submission_id": "1171862812",
    "input_formatted": "9, 1",
    "input": "9\n1",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\npublic:\n    long long findMaximumNumber(long long k, int x) {\n        long long left = 1, right = 2e18;\n        while (left < right) {\n            long long mid = (left + right + 1) / 2;\n            long long sum = 0;\n            for (long long p = x; p <= mid; p *= 2) {\n                sum += (mid / p - (p / x)) + 1;\n            }\n            if (sum <= k) left = mid;\n            else right = mid - 1;\n        }\n        return left;\n    }\n};"
}