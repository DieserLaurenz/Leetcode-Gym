{
    "status_code": 14,
    "lang": "typescript",
    "run_success": false,
    "status_runtime": "N/A",
    "memory": 50716000,
    "question_id": "3240",
    "elapsed_time": 4011,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "9\n1",
    "expected_output": "6",
    "task_finish_time": 1707618767275,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 932,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "TypeScript",
    "submission_id": "1171867102",
    "status_msg": "Time Limit Exceeded",
    "state": "SUCCESS",
    "code": "function findMaximumNumber(k: number, x: number): number {\n    let low = 1, high = 1e9;\n    while (low < high) {\n        const mid = Math.floor((low + high + 1) / 2);\n        let sum = 0;\n        for (let i = 1; i <= mid; i++) {\n            let num = i, count = 0;\n            while (num) {\n                if (num & 1) count++;\n                num >>= 1;\n            }\n            sum += Math.floor((count + x - 1) / x);\n        }\n        if (sum <= k) low = mid;\n        else high = mid - 1;\n    }\n    return low;\n};"
}