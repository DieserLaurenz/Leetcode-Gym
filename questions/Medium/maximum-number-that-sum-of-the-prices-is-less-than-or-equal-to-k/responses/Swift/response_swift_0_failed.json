{
    "status_code": 11,
    "lang": "swift",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 22020000,
    "question_id": "3240",
    "elapsed_time": 609,
    "compare_result
    "code_output": "0",
    "std_output": "",
    "last_testcase": "9\n1",
    "expected_output": "6",
    "task_finish_time": 1707618948888,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 932,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Swift",
    "submission_id": "1171871945",
    "input_formatted": "9, 1",
    "input": "9\n1",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    func findMaximumNumber(_ k: Int, _ x: Int) -> Int {\n        var left = 0\n        var right = Int(1e18)\n        while left < right {\n            let mid = left + (right - left + 1) / 2\n            if sumOfPrices(mid, x) <= k {\n                left = mid\n            } else {\n                right = mid - 1\n            }\n        }\n        return left\n    }\n\n    private func sumOfPrices(_ num: Int, _ x: Int) -> Int {\n        var sum = 0\n        var n = num\n        for i in 1...64 {\n            if i % x == 0 {\n                sum += n\n            }\n            n = (n + 1) / 2\n        }\n        return sum\n    }\n}"
}