{
    "status_code": 11,
    "lang": "scala",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 57068000,
    "question_id": "2754",
    "elapsed_time": 837,
    "compare_result": "11111111111111111011011100001011111111110011111111111111111111111110111111111111101111111111101111110011110110111111111010111111011110111101111111111110111011111111100011111101111111111111111111111001011111101110111111110111111001111110101111111110111011111101111110011110111101110101111111111011111110111110111111111101111111111110111111111111111111110110111100111111011111100111101110111111111011110111111110011100111111111011111111101011001111110111111001011111111111110111111111111011010111111111111111111111111110101111111110111111110110111101111111010110111111111110111110111111110011011110111111111111011111110111111111101110111111111101110111111011111111100110101111110111111111111011111111111110111101010111011111111101111111111101110111111110111111111111111111111101111111111111101011111111011111111111101101110111101001111111011111011011011110111101111111111111101111011110111111111111111111111111101011101110111100111110111111111110110110111110110110001111111111111111111110101101111111110110101111011111111110001111111011111111101111110111101011111101111101101110111111111111111100111110101111111111111111111110011111011101111111101111111110111011101101111111111111111011110111111111011110111100101111111111111111011111111111111111111111111111111010111111111111110101111111101111111110111111111111111011110111110111111111111111101111111111111111101111111111011111100001011011011111101111100111111011110111111100011111111111111111111101110110101011111011110111110111111101111111001111011101111111111011111101111101101111110111011011101101011111011010110111111011111111101111101011111011110111111011111101110111111100110111111111111110111111111011111110110111001111011111111011111111111111111111111111111111110111101111111111111010111111111111111111111011111011101110111111011111111011101101011011111111111111111001110101100111111111111111111100111111101111011111111101111111011111111111111111111111111111111111011111110111111111111111111111110101111111010111110111111011101101111111101111110110110111",
    "code_output": "-1",
    "std_output": "",
    "last_testcase": "[0,-1]",
    "expected_output": "0",
    "task_finish_time": 1707650085091,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 1708,
    "total_testcases": 2012,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Scala",
    "submission_id": "1172231873",
    "input_formatted": "[0,-1]",
    "input": "[0,-1]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "object Solution {\n    def maxStrength(nums: Array[Int]): Long = {\n        val positives = nums.filter(_ > 0).map(_.toLong)\n        val negatives = nums.filter(_ < 0).sorted.map(_.toLong)\n        val zeroCount = nums.count(_ == 0)\n\n        if (negatives.length % 2 != 0 && zeroCount == 0) {\n            if (positives.isEmpty && negatives.length == 1) return negatives.head\n            negatives.dropRight(1).product * positives.product\n        } else {\n            negatives.product * positives.product\n        }\n    }\n}"
}