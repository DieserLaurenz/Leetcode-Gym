{
    "status_code": 11,
    "lang": "rust",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 2220000,
    "question_id": "2754",
    "elapsed_time": 20,
    "compare_result
    "code_output": "0",
    "std_output": "",
    "last_testcase": "[2,2,7,0,-4,9,4]",
    "expected_output": "1008",
    "task_finish_time": 1707658792129,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 1642,
    "total_testcases": 2012,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Rust",
    "submission_id": "1172316951",
    "input_formatted": "[2,2,7,0,-4,9,4]",
    "input": "[2,2,7,0,-4,9,4]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "impl Solution {\n    pub fn max_strength(nums: Vec<i32>) -> i64 {\n        let (mut negatives, mut positives, mut zero) = (Vec::new(), Vec::new(), false);\n        for &num in &nums {\n            if num > 0 {\n                positives.push(num as i64);\n            } else if num < 0 {\n                negatives.push(num as i64);\n            } else {\n                zero = true;\n            }\n        }\n        negatives.sort();\n        if negatives.len() % 2 != 0 && !zero {\n            negatives.pop();\n        }\n        let negative_product = negatives.into_iter().fold(1, |acc, x| acc * x);\n        let positive_product = positives.into_iter().fold(1, |acc, x| acc * x);\n        std::cmp::max(negative_product * positive_product, if zero { 0 } else { negative_product * positive_product })\n    }\n}"
}