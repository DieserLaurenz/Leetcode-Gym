{
    "status_code": 11,
    "lang": "csharp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 46296000,
    "question_id": "2754",
    "elapsed_time": 144,
    "compare_result": "00000000010000000100110000011010110100010000100000110001000110001001010000011000100100111000000000000000100000000001000100001011100110000001000000101000101000000001110010000100000010111000000000100000110000000010000001000000000000001100000010100000000010010100010000010101000011000001000010100000101111100110000000001010001100011000000000000010011010100001000000000010000000100010000101000000001011100000010001000111000010111001101010000010001101110011100101000000001100000100001001000000100100000010001000010100000100000001111010000000000100001000000000110110000001001000100000000001111110000011000000001000000000011000000000000000000001000000100000011100000000010000110110100000100100001000000000000000100000010100101000010111000000001001000000101110000101010110001000100011011100001011000110000001000100010010011010001000010000011101101001010101101010000110000010101000001001011000100000110001100000010000000000001101000000010101000010000000000100000000110000000000000010100000110000000000010011000010000011000000010000000010010000000011000000000100010010110001001100010000011100010000010000011001100001010000001001010000000000000010001010100011000001000100000001100111000101011000110000000000001001100100001101000000101100000010000100001110000000000000000101000001000000000000000000100010000000000000000100010000000001110000010000000010100000010101100000100100000100010000100000010000010000001100000000000000110101001100000011110010001010000100110000001001000000000000001000001101000000100011010010000000010101000010100001100000011001010000110001000001001100000000000011000001010000001000000100001011110000100010100001010000000010000000010000100100001000010010000000101110000000000000110100000011000000011100100001001100000110111000101100101000100000001000001000100001000000000000010000010001000000000100100000110110001100000000101010100010001000000010000000000100010000000100100000011110110110000010000010000000010000111101100000110000100100100010000101010000110111000100000000000000000010011011001101101111",
    "code_output": "30",
    "std_output": "",
    "last_testcase": "[3,-1,-5,2,5,-9]",
    "expected_output": "1350",
    "task_finish_time": 1707648712607,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 517,
    "total_testcases": 2012,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C#",
    "submission_id": "1172218832",
    "input_formatted": "[3,-1,-5,2,5,-9]",
    "input": "[3,-1,-5,2,5,-9]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "public class Solution {\n    public long MaxStrength(int[] nums) {\n        long maxStrength = long.MinValue;\n        bool containsPositive = false;\n        int negativesCount = 0;\n        int maxNegative = int.MinValue;\n        long productOfNegatives = 1;\n        long totalProduct = 1;\n\n        foreach (var num in nums) {\n            if (num > 0) {\n                containsPositive = true;\n                totalProduct *= num;\n            } else if (num < 0) {\n                negativesCount++;\n                maxNegative = Math.Max(maxNegative, num);\n                productOfNegatives *= num;\n            } else if (num == 0) {\n                maxStrength = Math.Max(maxStrength, 0);\n            }\n        }\n\n        if (containsPositive || (negativesCount > 0 && negativesCount % 2 == 0)) {\n            maxStrength = Math.Max(maxStrength, totalProduct);\n        }\n\n        if (negativesCount > 1 && negativesCount % 2 != 0) {\n            totalProduct /= maxNegative;\n            maxStrength = Math.Max(maxStrength, totalProduct);\n        }\n\n        if (!containsPositive && negativesCount == 1) {\n            maxStrength = Math.Max(maxStrength, productOfNegatives);\n        }\n\n        return maxStrength == long.MinValue ? 0 : maxStrength;\n    }\n}"
}