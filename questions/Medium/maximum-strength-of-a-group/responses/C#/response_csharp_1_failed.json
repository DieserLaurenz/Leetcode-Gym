{
    "status_code": 11,
    "lang": "csharp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 46264000,
    "question_id": "2754",
    "elapsed_time": 143,
    "compare_result
    "code_output": "450",
    "std_output": "",
    "last_testcase": "[3,-1,-5,2,5,-9]",
    "expected_output": "1350",
    "task_finish_time": 1707648682438,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 1138,
    "total_testcases": 2012,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C#",
    "submission_id": "1172218553",
    "input_formatted": "[3,-1,-5,2,5,-9]",
    "input": "[3,-1,-5,2,5,-9]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "public class Solution {\n    public long MaxStrength(int[] nums) {\n        long maxProduct = nums[0];\n        long currentMax = 1;\n        long currentMin = 1;\n\n        for (int i = 0; i < nums.Length; i++) {\n            if (nums[i] > 0) {\n                currentMax = currentMax * nums[i];\n                currentMin = Math.Min(currentMin * nums[i], 1);\n            } else if (nums[i] == 0) {\n                currentMax = 1;\n                currentMin = 1;\n            } else {\n                long temp = currentMax;\n                currentMax = Math.Max(currentMin * nums[i], 1);\n                currentMin = temp * nums[i];\n            }\n\n            if (maxProduct < currentMax) {\n                maxProduct = currentMax;\n            }\n        }\n\n        return maxProduct;\n    }\n}"
}