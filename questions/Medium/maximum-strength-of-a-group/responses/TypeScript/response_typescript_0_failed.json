{
    "status_code": 11,
    "lang": "typescript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 56668000,
    "question_id": "2754",
    "elapsed_time": 135,
    "compare_result
    "code_output": "0",
    "std_output": "",
    "last_testcase": "[8,6,0,5,-4,-8,-4,9,-1,6,-4,8,-5]",
    "expected_output": "265420800",
    "task_finish_time": 1707648877502,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 1679,
    "total_testcases": 2012,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "TypeScript",
    "submission_id": "1172220394",
    "input_formatted": "[8,6,0,5,-4,-8,-4,9,-1,6,-4,8,-5]",
    "input": "[8,6,0,5,-4,-8,-4,9,-1,6,-4,8,-5]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "function maxStrength(nums: number[]): number {\n    nums.sort((a, b) => a - b);\n    let product = 1;\n    let negativeCount = nums.filter(num => num < 0).length;\n    let firstPositive = nums.findIndex(num => num > 0);\n\n    if (nums.length === 1) return nums[0];\n    if (negativeCount % 2 === 1 && firstPositive !== -1) {\n        // If there's an odd number of negatives and there are positives, remove the smallest negative\n        nums = nums.filter((_, index) => index !== negativeCount - 1);\n    } else if (negativeCount % 2 === 1) {\n        // If all are negatives with odd count, remove the largest negative\n        nums.splice(negativeCount - 1, 1);\n    }\n\n    nums = nums.filter(num => num !== 0 || negativeCount % 2 === 0);\n    nums.forEach(num => {\n        product *= num;\n    });\n\n    return product;\n};"
}