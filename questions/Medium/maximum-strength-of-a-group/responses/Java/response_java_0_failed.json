{
    "status_code": 11,
    "lang": "java",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 43224000,
    "display_runtime": "133",
    "question_id": "2754",
    "elapsed_time": 305,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "[0,-1]",
    "expected_output": "0",
    "task_finish_time": 1707639364500,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 1920,
    "total_testcases": 2012,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Java",
    "submission_id": "1172131909",
    "input_formatted": "[0,-1]",
    "input": "[0,-1]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    public long maxStrength(int[] nums) {\n        long max = Long.MIN_VALUE;\n        for (int i = 0; i < (1 << nums.length); i++) {\n            long product = 1;\n            boolean hasPositive = false;\n            int negCount = 0;\n            int minNeg = Integer.MAX_VALUE;\n            for (int j = 0; j < nums.length; j++) {\n                if ((i & (1 << j)) != 0) {\n                    if (nums[j] > 0) {\n                        hasPositive = true;\n                        product *= nums[j];\n                    } else if (nums[j] < 0) {\n                        negCount++;\n                        minNeg = Math.min(minNeg, Math.abs(nums[j]));\n                        product *= nums[j];\n                    }\n                }\n            }\n            if (hasPositive || negCount % 2 == 0) {\n                max = Math.max(max, product);\n            } else if (negCount > 1) {\n                product /= (-minNeg);\n                max = Math.max(max, product);\n            }\n        }\n        return max == Long.MIN_VALUE ? 0 : max;\n    }\n}"
}