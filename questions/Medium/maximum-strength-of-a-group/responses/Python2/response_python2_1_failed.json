{
    "status_code": 11,
    "lang": "python",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 11664000,
    "question_id": "2754",
    "elapsed_time": 56,
    "compare_result
    "code_output": "150",
    "std_output": "",
    "last_testcase": "[3,-1,-5,2,5,-9]",
    "expected_output": "1350",
    "task_finish_time": 1708797766690,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 1099,
    "total_testcases": 2012,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python",
    "submission_id": "1185044172",
    "input_formatted": "[3,-1,-5,2,5,-9]",
    "input": "[3,-1,-5,2,5,-9]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution(object):\n    def maxStrength(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: int\n        \"\"\"\n        nums.sort()\n        if nums[-1] == 0 and nums[0] < 0:\n            return 0\n        if len(nums) == 1:\n            return nums[0]\n        max_product = float('-inf')\n        temp_product = 1\n        for num in nums:\n            temp_product *= num\n            max_product = max(max_product, temp_product)\n            if temp_product == 0:\n                temp_product = 1\n        temp_product = 1\n        for num in reversed(nums):\n            temp_product *= num\n            max_product = max(max_product, temp_product)\n            if temp_product == 0:\n                temp_product = 1\n        return max_product"
}