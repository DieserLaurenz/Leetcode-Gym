{
    "status_code": 11,
    "lang": "elixir",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 75404000,
    "question_id": "2754",
    "elapsed_time": 372,
    "compare_result
    "code_output": "-270",
    "std_output": "",
    "last_testcase": "[3,-1,-5,2,5,-9]",
    "expected_output": "1350",
    "task_finish_time": 1707659216300,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 205,
    "total_testcases": 2012,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Elixir",
    "submission_id": "1172321530",
    "input_formatted": "[3,-1,-5,2,5,-9]",
    "input": "[3,-1,-5,2,5,-9]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "defmodule Solution do\n  @spec max_strength(nums :: [integer]) :: integer\n  def max_strength(nums) do\n    nums\n    |> Enum.filter(&(&1 != 0))\n    |> Enum.sort()\n    |> case do\n      [] -> Enum.max(nums, 0)\n      [a] -> a\n      sorted ->\n        neg_count = Enum.count(sorted, &(&1 < 0))\n        if rem(neg_count, 2) == 0 do\n          Enum.reduce(sorted, 1, &(&1 * &2))\n        else\n          sorted |> Enum.drop(-1) |> Enum.reduce(1, &(&1 * &2))\n        end\n    end\n  end\nend"
}