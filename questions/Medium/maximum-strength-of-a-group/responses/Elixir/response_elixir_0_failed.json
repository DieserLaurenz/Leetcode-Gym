{
    "status_code": 11,
    "lang": "elixir",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 72368000,
    "question_id": "2754",
    "elapsed_time": 580,
    "compare_result
    "code_output": "-1",
    "std_output": "",
    "last_testcase": "[0,-1]",
    "expected_output": "0",
    "task_finish_time": 1707659194504,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 2003,
    "total_testcases": 2012,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Elixir",
    "submission_id": "1172321272",
    "input_formatted": "[0,-1]",
    "input": "[0,-1]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "defmodule Solution do\n  @spec max_strength(nums :: [integer]) :: integer\n  def max_strength(nums) do\n    nums\n    |> Enum.filter(&(&1 != 0))\n    |> Enum.sort()\n    |> case do\n      [] -> 0\n      [a] -> a\n      sorted ->\n        neg_count = Enum.count(sorted, &(&1 < 0))\n        if rem(neg_count, 2) == 0 do\n          Enum.reduce(sorted, 1, &(&1 * &2))\n        else\n          List.delete_at(sorted, neg_count - 1)\n          |> Enum.reduce(1, &(&1 * &2))\n        end\n    end\n  end\nend"
}