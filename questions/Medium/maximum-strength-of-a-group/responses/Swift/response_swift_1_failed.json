{
    "status_code": 11,
    "lang": "swift",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 15120000,
    "question_id": "2754",
    "elapsed_time": 29,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "[0,-1]",
    "expected_output": "0",
    "task_finish_time": 1707649135089,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 1691,
    "total_testcases": 2012,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Swift",
    "submission_id": "1172222872",
    "input_formatted": "[0,-1]",
    "input": "[0,-1]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    func maxStrength(_ nums: [Int]) -> Int {\n        let negatives = nums.filter { $0 < 0 }.sorted()\n        let positives = nums.filter { $0 > 0 }.sorted(by: >)\n        let zeroCount = nums.filter { $0 == 0 }.count\n\n        if negatives.count % 2 == 1 {\n            if zeroCount > 0 {\n                return positives.reduce(1, *)\n            } else {\n                return max(calculateMaxStrength(negatives: Array(negatives.dropLast()), positives: positives),\n                           calculateMaxStrength(negatives: negatives, positives: Array(positives.dropLast())))\n            }\n        } else {\n            return calculateMaxStrength(negatives: negatives, positives: positives)\n        }\n    }\n\n    private func calculateMaxStrength(negatives: [Int], positives: [Int]) -> Int {\n        let allNumbers = negatives + positives\n        return allNumbers.reduce(1, *)\n    }\n}"
}