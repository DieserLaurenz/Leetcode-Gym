{
    "status_code": 10,
    "lang": "javascript",
    "run_success": true,
    "status_runtime": "80 ms",
    "memory": 60880000,
    "question_id": "2888",
    "elapsed_time": 117,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1707814712543,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 917,
    "total_testcases": 917,
    "runtime_percentile": 100,
    "status_memory": "60.9 MB",
    "memory_percentile": 83.3332,
    "pretty_lang": "JavaScript",
    "submission_id": "1173994486",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "/**\n * @param {number[]} nums\n * @return {number}\n */\nvar minimumIndex = function(nums) {\n    let dominant = nums[0], count = 1;\n    for (let i = 1; i < nums.length; i++) {\n        if (nums[i] === dominant) count++;\n        else count--;\n        if (count === 0) {\n            dominant = nums[i];\n            count = 1;\n        }\n    }\n    \n    let totalFreq = 0, validSplitFreq = 0, index = -1;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] === dominant) totalFreq++;\n    }\n    \n    for (let i = 0; i < nums.length - 1; i++) {\n        if (nums[i] === dominant) validSplitFreq++;\n        if (validSplitFreq * 2 > i + 1 && (totalFreq - validSplitFreq) * 2 > nums.length - i - 1) {\n            index = i;\n            break;\n        }\n    }\n    \n    return index;\n};"
}