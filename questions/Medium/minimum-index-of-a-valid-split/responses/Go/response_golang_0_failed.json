{
    "status_code": 11,
    "lang": "golang",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 12856000,
    "question_id": "2888",
    "elapsed_time": 129,
    "compare_result
    "code_output": "-1",
    "std_output": "",
    "last_testcase": "[1,1,1]",
    "expected_output": "0",
    "task_finish_time": 1707815083812,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 606,
    "total_testcases": 917,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Go",
    "submission_id": "1173998579",
    "input_formatted": "[1,1,1]",
    "input": "[1,1,1]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "func minimumIndex(nums []int) int {\n    count := make(map[int]int)\n    total := len(nums)\n    dominant := 0\n    for _, num := range nums {\n        count[num]++\n        if count[num]*2 > total {\n            dominant = num\n            break\n        }\n    }\n    leftCount, rightCount := 0, count[dominant]\n    for i := 0; i < total-1; i++ {\n        if nums[i] == dominant {\n            leftCount++\n            rightCount--\n        }\n        if leftCount*2 > i+1 && rightCount*2 > total-i-1 {\n            return i\n        }\n    }\n    return -1\n}"
}