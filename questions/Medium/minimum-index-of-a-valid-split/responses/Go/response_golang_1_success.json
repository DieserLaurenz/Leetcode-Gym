{
    "status_code": 10,
    "lang": "golang",
    "run_success": true,
    "status_runtime": "106 ms",
    "memory": 12580000,
    "question_id": "2888",
    "elapsed_time": 145,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1707815121303,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 917,
    "total_testcases": 917,
    "runtime_percentile": 66.66670000000002,
    "status_memory": "12.6 MB",
    "memory_percentile": 75.00010000000002,
    "pretty_lang": "Go",
    "submission_id": "1173999009",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "func minimumIndex(nums []int) int {\n    freq := make(map[int]int)\n    for _, num := range nums {\n        freq[num]++\n    }\n    var dominantElement int\n    n := len(nums)\n    for k, v := range freq {\n        if v*2 > n {\n            dominantElement = k\n            break\n        }\n    }\n    leftFreq := 0\n    for i, num := range nums {\n        if num == dominantElement {\n            leftFreq++\n        }\n        rightFreq := freq[dominantElement] - leftFreq\n        if leftFreq*2 > i+1 && rightFreq*2 > n-i-1 {\n            return i\n        }\n    }\n    return -1\n}"
}