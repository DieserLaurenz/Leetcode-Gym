{
    "acRate": 79.41613837364014,
    "difficulty": "Medium",
    "freqBar": null,
    "frontendQuestionId": "2649",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Nested Array Generator",
    "titleSlug": "nested-array-generator",
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false,
    "codeSnippets": [
        {
            "lang": "JavaScript",
            "langSlug": "javascript",
            "code": "/**  * @param {Array} arr  * @return {Generator}  */ var inorderTraversal = function*(arr) {      };  /**  * const gen = inorderTraversal([1, [2, 3]]);  * gen.next().value; // 1  * gen.next().value; // 2  * gen.next().value; // 3  */"
        },
        {
            "lang": "TypeScript",
            "langSlug": "typescript",
            "code": "type MultidimensionalArray = (MultidimensionalArray | number)[]  function* inorderTraversal(arr: MultidimensionalArray): Generator<number, void, unknown> {      };  /**  * const gen = inorderTraversal([1, [2, 3]]);  * gen.next().value; // 1  * gen.next().value; // 2  * gen.next().value; // 3  */"
        }
    ],
    "content": "Given amulti-dimensional array of integers, returna generator object whichyields integers in the same order asinorder traversal. Amulti-dimensional arrayis a recursive data structure that contains both integers and othermulti-dimensional arrays. inorder traversaliterates overeach array from left to right, yielding any integers it encounters or applyinginorder traversalto any arrays it encounters.  Example 1:  Input: arr = [[[6]],[1,3],[]] Output: [6,1,3] Explanation: const generator = inorderTraversal(arr); generator.next().value; // 6 generator.next().value; // 1 generator.next().value; // 3 generator.next().done; // true  Example 2:  Input: arr = [] Output: [] Explanation: There are no integers so the generator doesn't yield anything.   Constraints:  0 <= arr.flat().length <= 105 0 <= arr.flat()[i]<= 105 maxNestingDepth <= 105   Can you solve this without creating a new flattened version of the array?"
}