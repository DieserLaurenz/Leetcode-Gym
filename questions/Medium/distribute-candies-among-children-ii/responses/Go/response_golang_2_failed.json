{
    "status_code": 11,
    "lang": "golang",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 1988000,
    "question_id": "3201",
    "elapsed_time": 12,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "3\n3",
    "expected_output": "10",
    "task_finish_time": 1707181243010,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 1,
    "total_testcases": 958,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Go",
    "submission_id": "1167313543",
    "input_formatted": "3, 3",
    "input": "3\n3",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "func distributeCandies(n int, limit int) int64 {\n    dp := make([][]int64, n+1)\n    for i := range dp {\n        dp[i] = make([]int64, n+1)\n    }\n    mod := int64(1e9 + 7)\n\n    dp[0][0] = 1\n    for candies := 1; candies <= n; candies++ {\n        for given := 0; given <= limit && given <= candies; given++ {\n            for i := 0; i <= 2; i++ {\n                dp[candies][i+1] = (dp[candies][i+1] + dp[candies-given][i]) % mod\n            }\n        }\n    }\n\n    return dp[n][3]\n}"
}