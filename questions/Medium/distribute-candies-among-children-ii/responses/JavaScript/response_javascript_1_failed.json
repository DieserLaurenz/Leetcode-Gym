{
    "status_code": 11,
    "lang": "javascript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 49780000,
    "question_id": "3201",
    "elapsed_time": 4015,
    "compare_result
    "code_output": "0",
    "std_output": "",
    "last_testcase": "5\n2",
    "expected_output": "3",
    "task_finish_time": 1707180165424,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 361,
    "total_testcases": 958,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "JavaScript",
    "submission_id": "1167304403",
    "input_formatted": "5, 2",
    "input": "5\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "/**\n * @param {number} n\n * @param {number} limit\n * @return {number}\n */\nvar distributeCandies = function(n, limit) {\n    let ways = 0;\n    const minVal = Math.min(limit, n);\n    for (let i = 0; i <= minVal; i++) {\n        for (let j = 0; i + j <= minVal; j++) {\n            if (n - i - j <= limit && n - i - j >= 0) {\n                ways++;\n            }\n        }\n    }\n    return ways;\n};"
}