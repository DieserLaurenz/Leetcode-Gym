{
    "status_code": 14,
    "lang": "python",
    "run_success": false,
    "status_runtime": "N/A",
    "memory": 12080000,
    "question_id": "3201",
    "elapsed_time": 11009,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "10001\n20005",
    "expected_output": "50025003",
    "task_finish_time": 1708755679799,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 504,
    "total_testcases": 958,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python",
    "submission_id": "1184574445",
    "status_msg": "Time Limit Exceeded",
    "state": "SUCCESS",
    "code": "class Solution(object):\n    def distributeCandies(self, n, limit):\n        \"\"\"\n        :type n: int\n        :type limit: int\n        :rtype: int\n        \"\"\"\n        ways = 0\n        for i in range(min(n, limit) + 1):\n            for j in range(min(n - i, limit) + 1):\n                if n - i - j <= limit:\n                    ways += 1\n        return ways"
}