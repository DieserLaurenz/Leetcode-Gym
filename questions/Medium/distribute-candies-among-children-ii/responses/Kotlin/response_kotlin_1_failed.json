{
    "status_code": 15,
    "lang": "kotlin",
    "run_success": false,
    "runtime_error": "Line 8: Exception in thread \"main\" java.lang.ArrayIndexOutOfBoundsException: -1",
    "full_runtime_error": "Line 8: Exception in thread \"main\" java.lang.ArrayIndexOutOfBoundsException: -1",
    "status_runtime": "N/A",
    "memory": 26632000,
    "question_id": "3201",
    "elapsed_time": 56,
    "compare_result": "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "code_output": "",
    "std_output": "",
    "last_testcase": "5\n2",
    "expected_output": "3",
    "task_finish_time": 1707180977268,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 958,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Kotlin",
    "submission_id": "1167311255",
    "status_msg": "Runtime Error",
    "state": "SUCCESS",
    "code": "class Solution {\n    fun distributeCandies(n: Int, limit: Int): Long {\n        val dp = Array(n + 1) { LongArray(limit + 1) }\n        for (i in 0..limit) dp[0][i] = 1L\n        for (i in 1..n) {\n            for (j in 1..limit) {\n                for (k in 0..minOf(i, j)) {\n                    dp[i][j] += dp[i - k][k - 1]\n                }\n            }\n        }\n        var sum = 0L\n        for (i in 1..limit) {\n            sum += dp[n][i]\n        }\n        return sum\n    }\n}"
}