{
    "status_code": 14,
    "lang": "swift",
    "run_success": false,
    "status_runtime": "N/A",
    "memory": 14724000,
    "question_id": "3201",
    "elapsed_time": 5023,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "10005\n20002",
    "expected_output": "50065021",
    "task_finish_time": 1707180838154,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 557,
    "total_testcases": 958,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Swift",
    "submission_id": "1167310063",
    "status_msg": "Time Limit Exceeded",
    "state": "SUCCESS",
    "code": "class Solution {\n    func distributeCandies(_ n: Int, _ limit: Int) -> Int {\n        var ways = 0\n        let minLimit = min(n, limit)\n        for i in 0...minLimit {\n            for j in 0...minLimit where i + j <= n {\n                let k = n - i - j\n                if k <= minLimit {\n                    ways += 1\n                }\n            }\n        }\n        return ways\n    }\n}"
}