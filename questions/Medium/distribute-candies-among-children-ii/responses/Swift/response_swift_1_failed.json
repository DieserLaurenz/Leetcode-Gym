{
    "status_code": 11,
    "lang": "swift",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 986280000,
    "question_id": "3201",
    "elapsed_time": 378,
    "compare_result
    "code_output": "3",
    "std_output": "",
    "last_testcase": "3\n3",
    "expected_output": "10",
    "task_finish_time": 1707180868882,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 96,
    "total_testcases": 958,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Swift",
    "submission_id": "1167310384",
    "input_formatted": "3, 3",
    "input": "3\n3",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    func distributeCandies(_ n: Int, _ limit: Int) -> Int {\n        if n > limit * 3 {\n            return 0\n        }\n        var dp = Array(repeating: Array(repeating: 0, count: n + 1), count: limit + 1)\n        for i in 0...limit {\n            dp[i][0] = 1\n        }\n        for i in 1...limit {\n            for j in 1...n {\n                dp[i][j] = dp[i - 1][j]\n                if j >= i {\n                    dp[i][j] += dp[i][j - i]\n                }\n            }\n        }\n        return dp[limit][n]\n    }\n}"
}