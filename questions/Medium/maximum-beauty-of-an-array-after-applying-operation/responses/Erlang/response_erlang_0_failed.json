{
    "status_code": 15,
    "lang": "erlang",
    "run_success": false,
    "runtime_error": "Line 4: exception error: function_clause",
    "full_runtime_error": "Line 4: exception error: function_clause\n[{solution,'-maximum_beauty/2-inlined-0-',\n              [1,{0,[]}],\n              [{file,\"solution.erl\"},{line,4}]},\n {lists,foldl,3,[{file,\"lists.erl\"},{line,1594}]},\n {solution,maximum_beauty,2,[{file,\"solution.erl\"},{line,4}]},\n {solution,consume_test_cases,2,[{file,\"solution.erl\"},{line,28}]},\n {solution,driver,0,[{file,\"solution.erl\"},{line,14}]},\n {solution,start,0,[{file,\"solution.erl\"},{line,45}]},\n {init,start_em,1,[]},\n {init,do_boot,3,[]}]",
    "status_runtime": "N/A",
    "memory": 65720000,
    "question_id": "2891",
    "elapsed_time": 1529,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "[4,6,1,2]\n2",
    "expected_output": "3",
    "task_finish_time": 1707588051670,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 620,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Erlang",
    "submission_id": "1171618459",
    "status_msg": "Runtime Error",
    "state": "SUCCESS",
    "code": "-spec maximum_beauty(Nums :: [integer()], K :: integer()) -> integer().\nmaximum_beauty(Nums, K) ->\n    Sorted = lists:sort(Nums),\n    MaxBeauty = lists:foldl(fun(X, {Max, [H|T] = Acc}) ->\n                                case X - H =< 2*K of\n                                    true -> {Max, [X|Acc]};\n                                    false -> {max(Max, length(Acc)), [X|lists:droplast(Acc)]}\n                                end\n                            end, {0, []}, Sorted),\n    max(MaxBeauty, length(Sorted))."
}