{
    "status_code": 11,
    "lang": "java",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 56488000,
    "display_runtime": "43",
    "question_id": "2891",
    "elapsed_time": 446,
    "compare_result
    "code_output": "2",
    "std_output": "",
    "last_testcase": "[4,6,1,2]\n2",
    "expected_output": "3",
    "task_finish_time": 1707577911776,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 125,
    "total_testcases": 620,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Java",
    "submission_id": "1171490179",
    "input_formatted": "[4,6,1,2], 2",
    "input": "[4,6,1,2]\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    public int maximumBeauty(int[] nums, int k) {\n        Arrays.sort(nums);\n        int left = 0, right = 0, max = 0, n = nums.length;\n        int[] prefixSum = new int[n + 1];\n        \n        for (int i = 1; i <= n; ++i) {\n            prefixSum[i] = prefixSum[i - 1] + nums[i - 1];\n        }\n        \n        while (right < n) {\n            while (left < right && !(nums[right] - nums[left] <= k)) {\n                left++;\n            }\n            int cost = (nums[right] * (right - left + 1)) - (prefixSum[right + 1] - prefixSum[left]);\n            if (cost <= k) {\n                max = Math.max(max, right - left + 1);\n            }\n            right++;\n        }\n        \n        return max;\n    }\n}"
}