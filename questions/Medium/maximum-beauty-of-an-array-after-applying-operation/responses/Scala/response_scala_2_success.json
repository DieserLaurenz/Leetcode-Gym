{
    "status_code": 10,
    "lang": "scala",
    "run_success": true,
    "status_runtime": "967 ms",
    "memory": 80552000,
    "question_id": "2891",
    "elapsed_time": 1163,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1707587755266,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 620,
    "total_testcases": 620,
    "runtime_percentile": 100,
    "status_memory": "80.6 MB",
    "memory_percentile": 100,
    "pretty_lang": "Scala",
    "submission_id": "1171614327",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "object Solution {\n    def maximumBeauty(nums: Array[Int], k: Int): Int = {\n        val sortedNums = nums.sorted\n        var maxBeauty = 1\n        var tempBeauty = 1\n        var left = 0\n        for (right <- 1 until nums.length) {\n            while (sortedNums(right) - sortedNums(left) > 2 * k) {\n                left += 1\n            }\n            tempBeauty = right - left + 1\n            maxBeauty = maxBeauty.max(tempBeauty)\n        }\n        maxBeauty\n    }\n}"
}