{
    "status_code": 11,
    "lang": "scala",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 81744000,
    "question_id": "2891",
    "elapsed_time": 1434,
    "compare_result
    "code_output": "2",
    "std_output": "",
    "last_testcase": "[4,6,1,2]\n2",
    "expected_output": "3",
    "task_finish_time": 1707587698788,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 157,
    "total_testcases": 620,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Scala",
    "submission_id": "1171613562",
    "input_formatted": "[4,6,1,2], 2",
    "input": "[4,6,1,2]\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "object Solution {\n    def maximumBeauty(nums: Array[Int], k: Int): Int = {\n        val sortedNums = nums.sorted\n        var maxBeauty = 1\n        var left = 0\n        for (right <- nums.indices) {\n            while (sortedNums(right) - sortedNums(left) > k) left += 1\n            maxBeauty = maxBeauty.max(right - left + 1)\n        }\n        maxBeauty\n    }\n}"
}