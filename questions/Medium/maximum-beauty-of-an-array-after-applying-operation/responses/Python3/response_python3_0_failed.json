{
    "status_code": 11,
    "lang": "python3",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 30680000,
    "question_id": "2891",
    "elapsed_time": 973,
    "compare_result
    "code_output": "2",
    "std_output": "",
    "last_testcase": "[4,6,1,2]\n2",
    "expected_output": "3",
    "task_finish_time": 1708796571704,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 125,
    "total_testcases": 620,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python3",
    "submission_id": "1185026537",
    "input_formatted": "[4,6,1,2], 2",
    "input": "[4,6,1,2]\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "from typing import List\n\nclass Solution:\n    def maximumBeauty(self, nums: List[int], k: int) -> int:\n        nums.sort()\n        max_beauty, current_sum, left = 1, 0, 0\n        for right in range(len(nums)):\n            current_sum += nums[right]\n            while nums[right] * (right - left + 1) - current_sum > k:\n                current_sum -= nums[left]\n                left += 1\n            max_beauty = max(max_beauty, right - left + 1)\n        return max_beauty"
}