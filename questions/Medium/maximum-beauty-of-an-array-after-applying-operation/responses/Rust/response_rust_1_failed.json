{
    "status_code": 11,
    "lang": "rust",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 3396000,
    "question_id": "2891",
    "elapsed_time": 42,
    "compare_result
    "code_output": "2",
    "std_output": "",
    "last_testcase": "[4,6,1,2]\n2",
    "expected_output": "3",
    "task_finish_time": 1707587841625,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 157,
    "total_testcases": 620,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Rust",
    "submission_id": "1171615568",
    "input_formatted": "[4,6,1,2], 2",
    "input": "[4,6,1,2]\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "impl Solution {\n    pub fn maximum_beauty(nums: Vec<i32>, k: i32) -> i32 {\n        let mut nums = nums;\n        nums.sort_unstable();\n        let mut answer = 1;\n        let mut left = 0;\n        let mut right = 0;\n        let mut min_operations = 0;\n        while right < nums.len() {\n            while nums[right] - nums[left] > k {\n                left += 1;\n            }\n            min_operations = std::cmp::max(min_operations, right - left + 1);\n            right += 1;\n        }\n        answer = std::cmp::max(answer, min_operations as i32);\n        answer\n    }\n}"
}