{
    "status_code": 11,
    "lang": "c",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 7688000,
    "question_id": "2891",
    "elapsed_time": 3010,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "[49,26]\n12",
    "expected_output": "2",
    "task_finish_time": 1707578108596,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 249,
    "total_testcases": 620,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C",
    "submission_id": "1171492303",
    "input_formatted": "[49,26], 12",
    "input": "[49,26]\n12",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "int maximumBeauty(int* nums, int numsSize, int k) {\n    int maxBeauty = 1;\n    for (int i = 0; i < numsSize; ++i) {\n        int count = 1;\n        for (int j = i + 1; j < numsSize; ++j) {\n            if ((nums[i] >= nums[j] && nums[i] - nums[j] <= k) || (nums[j] >= nums[i] && nums[j] - nums[i] <= k)) {\n                ++count;\n            }\n        }\n        if (count > maxBeauty) {\n            maxBeauty = count;\n        }\n    }\n    return maxBeauty;\n}"
}