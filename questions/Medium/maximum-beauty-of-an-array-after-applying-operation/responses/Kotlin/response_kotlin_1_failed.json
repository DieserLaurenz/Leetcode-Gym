{
    "status_code": 11,
    "lang": "kotlin",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 79692000,
    "question_id": "2891",
    "elapsed_time": 811,
    "compare_result
    "code_output": "2",
    "std_output": "",
    "last_testcase": "[4,6,1,2]\n2",
    "expected_output": "3",
    "task_finish_time": 1707578816587,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 125,
    "total_testcases": 620,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Kotlin",
    "submission_id": "1171500412",
    "input_formatted": "[4,6,1,2], 2",
    "input": "[4,6,1,2]\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    fun maximumBeauty(nums: IntArray, k: Int): Int {\n        val sortedNums = nums.sorted()\n        val n = nums.size\n        var left = 0\n        var right = 0\n        var maxLen = 1\n        var sum = 0L\n\n        while (right < n) {\n            sum += sortedNums[right]\n            while (sortedNums[right] * (right - left + 1) - sum > k) {\n                sum -= sortedNums[left]\n                left += 1\n            }\n            maxLen = maxOf(maxLen, right - left + 1)\n            right += 1\n        }\n\n        return maxLen\n    }\n}"
}