{
    "status_code": 11,
    "lang": "csharp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 63716000,
    "question_id": "2891",
    "elapsed_time": 465,
    "compare_result
    "code_output": "2",
    "std_output": "",
    "last_testcase": "[4,6,1,2]\n2",
    "expected_output": "3",
    "task_finish_time": 1707578356214,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 125,
    "total_testcases": 620,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C#",
    "submission_id": "1171495136",
    "input_formatted": "[4,6,1,2], 2",
    "input": "[4,6,1,2]\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "public class Solution {\n    public int MaximumBeauty(int[] nums, int k) {\n        Array.Sort(nums);\n        int maxLen = 1;\n        int left = 0;\n        long sum = 0;\n        for (int right = 1; right < nums.Length; right++) {\n            sum += (long)(nums[right] - nums[right - 1]) * (right - left);\n            while (sum > k) {\n                sum -= nums[right] - nums[left];\n                left++;\n            }\n            maxLen = Math.Max(maxLen, right - left + 1);\n        }\n        return maxLen;\n    }\n}"
}