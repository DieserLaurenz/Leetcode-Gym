{
    "status_code": 11,
    "lang": "php",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 26776000,
    "question_id": "2893",
    "elapsed_time": 336,
    "compare_result
    "code_output": "4",
    "std_output": "",
    "last_testcase": "[2,3,6,1,9,2]\n5",
    "expected_output": "13",
    "task_finish_time": 1708207285803,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 1,
    "total_testcases": 744,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "PHP",
    "submission_id": "1178275754",
    "input_formatted": "[2,3,6,1,9,2], 5",
    "input": "[2,3,6,1,9,2]\n5",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @param Integer $x\n     * @return Integer\n     */\n    function maxScore($nums, $x) {\n        $total = array_sum($nums);\n        $n = count($nums);\n        $minMoveSum = PHP_INT_MAX;\n        $currentSum = 0;\n        $left = 0;\n        \n        for ($right = 0; $right < $n; $right++) {\n            $currentSum += $nums[$right];\n            while ($currentSum - $total + $x > 0 && $left <= $right) {\n                $currentSum -= $nums[$left++];\n            }\n            if ($currentSum - $total + $x == 0) {\n                $minMoveSum = min($minMoveSum, $left + $n - 1 - $right);\n            }\n        }\n        \n        return $minMoveSum == PHP_INT_MAX ? -1 : $n - $minMoveSum;\n    }\n}"
}