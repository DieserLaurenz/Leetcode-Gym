{
    "status_code": 11,
    "lang": "rust",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 3700000,
    "question_id": "2893",
    "elapsed_time": 26,
    "compare_result
    "code_output": "0",
    "std_output": "",
    "last_testcase": "[2,3,6,1,9,2]\n5",
    "expected_output": "13",
    "task_finish_time": 1708217085127,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 13,
    "total_testcases": 744,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Rust",
    "submission_id": "1178345783",
    "input_formatted": "[2,3,6,1,9,2], 5",
    "input": "[2,3,6,1,9,2]\n5",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "impl Solution {\n    pub fn max_score(nums: Vec<i32>, x: i32) -> i64 {\n        let n = nums.len();\n        let mut prefix_sum = vec![0; n + 1];\n        for i in 0..n {\n            prefix_sum[i + 1] = prefix_sum[i] + nums[i] as i64;\n        }\n        let mut max_score = 0;\n        let mut j = n;\n        for i in 0..=n {\n            while j > 0 && prefix_sum[i] - prefix_sum[j] > (i as i64 - j as i64) * x as i64 {\n                j -= 1;\n            }\n            if prefix_sum[i] - prefix_sum[j] == (i as i64 - j as i64) * x as i64 {\n                max_score = max_score.max(prefix_sum[i] - (i as i64 - j as i64) * x as i64);\n            }\n        }\n        max_score\n    }\n}"
}