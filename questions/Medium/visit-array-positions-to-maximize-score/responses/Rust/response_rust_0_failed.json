{
    "status_code": 11,
    "lang": "rust",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 3528000,
    "question_id": "2893",
    "elapsed_time": 32,
    "compare_result
    "code_output": "7",
    "std_output": "",
    "last_testcase": "[2,3,6,1,9,2]\n5",
    "expected_output": "13",
    "task_finish_time": 1708217059234,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 9,
    "total_testcases": 744,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Rust",
    "submission_id": "1178345581",
    "input_formatted": "[2,3,6,1,9,2], 5",
    "input": "[2,3,6,1,9,2]\n5",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "impl Solution {\n    pub fn max_score(nums: Vec<i32>, x: i32) -> i64 {\n        let mut dp: Vec<i64> = vec![0; nums.len() + 1];\n        let mut max_score: i64 = nums[0] as i64;\n\n        for i in 1..nums.len() {\n            dp[i + 1] = dp[i] + nums[i] as i64 - if nums[i] % 2 != nums[i - 1] % 2 { x as i64 } else { 0 };\n            max_score = max_score.max(dp[i + 1]);\n        }\n\n        for i in (1..nums.len()).rev() {\n            dp[i] = dp[i + 1] + nums[i] as i64 - if nums[i] % 2 != nums[i - 1] % 2 { x as i64 } else { 0 };\n            max_score = max_score.max(dp[i]);\n        }\n\n        max_score\n    }\n}"
}