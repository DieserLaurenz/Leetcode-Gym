{
    "status_code": 11,
    "lang": "ruby",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 224372000,
    "question_id": "2893",
    "elapsed_time": 256,
    "compare_result
    "code_output": "2",
    "std_output": "",
    "last_testcase": "[2,3,6,1,9,2]\n5",
    "expected_output": "13",
    "task_finish_time": 1708216833481,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 29,
    "total_testcases": 744,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Ruby",
    "submission_id": "1178344083",
    "input_formatted": "[2,3,6,1,9,2], 5",
    "input": "[2,3,6,1,9,2]\n5",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "# @param {Integer[]} nums\n# @param {Integer} x\n# @return {Integer}\ndef max_score(nums, x)\n    total_score = nums[0]\n    max_score = total_score\n    last_odd_index = nums[0].odd? ? 0 : nil\n    last_even_index = nums[0].even? ? 0 : nil\n\n    (1...nums.size).each do |i|\n        if nums[i].odd?\n            total_score += nums[i]\n            total_score -= x if !last_even_index.nil? && last_even_index < i\n            last_odd_index = i\n        else\n            total_score += nums[i]\n            total_score -= x if !last_odd_index.nil? && last_odd_index < i\n            last_even_index = i\n        end\n        max_score = [max_score, total_score].max\n    end\n\n    max_score\nend"
}