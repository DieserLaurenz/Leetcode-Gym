{
    "status_code": 11,
    "lang": "scala",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 71636000,
    "question_id": "2893",
    "elapsed_time": 10100,
    "compare_result
    "code_output": "8",
    "std_output": "",
    "last_testcase": "[2,3,6,1,9,2]\n5",
    "expected_output": "13",
    "task_finish_time": 1708216983943,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 70,
    "total_testcases": 744,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Scala",
    "submission_id": "1178345014",
    "input_formatted": "[2,3,6,1,9,2], 5",
    "input": "[2,3,6,1,9,2]\n5",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "object Solution {\n    def maxScore(nums: Array[Int], x: Int): Long = {\n        val dp = Array.fill(nums.length + 1)(0L)\n        for (i <- nums.indices) {\n            dp(i + 1) = dp(i) + nums(i)\n        }\n\n        var maxScore = 0L\n        var sum = 0L\n        for (i <- nums.indices) {\n            sum += nums(i)\n            if (i > 0 && nums(i) % 2 != nums(i - 1) % 2) sum -= x\n            maxScore = maxScore max sum\n            var j = nums.length - 1\n            var currentSum = sum\n            while (j > i) {\n                if (nums(j) % 2 != nums(j - 1) % 2) currentSum -= x\n                currentSum += nums(j)\n                maxScore = maxScore max currentSum\n                j -= 1\n            }\n        }\n        maxScore\n    }\n}"
}