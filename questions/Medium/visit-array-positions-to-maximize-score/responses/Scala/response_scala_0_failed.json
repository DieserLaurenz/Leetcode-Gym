{
    "status_code": 11,
    "lang": "scala",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 81032000,
    "question_id": "2893",
    "elapsed_time": 1250,
    "compare_result
    "code_output": "23",
    "std_output": "",
    "last_testcase": "[2,3,6,1,9,2]\n5",
    "expected_output": "13",
    "task_finish_time": 1708216943058,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 16,
    "total_testcases": 744,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Scala",
    "submission_id": "1178344798",
    "input_formatted": "[2,3,6,1,9,2], 5",
    "input": "[2,3,6,1,9,2]\n5",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "object Solution {\n    def maxScore(nums: Array[Int], x: Int): Long = {\n        val n = nums.length\n        val prefixSum = nums.scanLeft(0L)(_ + _)\n        var maxScore = prefixSum.last\n        var j = n\n\n        for (i <- n - 1 to 0 by -1) {\n            while (j > 0 && (nums(i) % 2 != nums(j - 1) % 2)) {\n                j -= 1\n            }\n            if (j > 0) {\n                maxScore = maxScore max (prefixSum(i) + prefixSum.last - prefixSum(j) - x)\n                j -= 1\n            }\n        }\n\n        maxScore\n    }\n}"
}