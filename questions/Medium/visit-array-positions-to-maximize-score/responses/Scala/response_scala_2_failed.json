{
    "status_code": 11,
    "lang": "scala",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 288344000,
    "question_id": "2893",
    "elapsed_time": 1290,
    "compare_result
    "code_output": "14",
    "std_output": "",
    "last_testcase": "[2,3,6,1,9,2]\n5",
    "expected_output": "13",
    "task_finish_time": 1708217008399,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 51,
    "total_testcases": 744,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Scala",
    "submission_id": "1178345222",
    "input_formatted": "[2,3,6,1,9,2], 5",
    "input": "[2,3,6,1,9,2]\n5",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "object Solution {\n    def maxScore(nums: Array[Int], x: Int): Long = {\n        val n = nums.length\n        var dp = Array.ofDim[Long](n, n)\n        for(i <- n-1 to 0 by -1){\n            for(j <- i until n){\n                if(i == j){\n                    dp(i)(j) = nums(i)\n                }else{\n                    val scoreIfMove = dp(i)(j-1) + nums(j) - (if(nums(i) % 2 != nums(j) % 2) x else 0)\n                    dp(i)(j) = Math.max(dp(i)(j-1), scoreIfMove)\n                }\n            }\n        }\n        dp(0)(n-1)\n    }\n}"
}