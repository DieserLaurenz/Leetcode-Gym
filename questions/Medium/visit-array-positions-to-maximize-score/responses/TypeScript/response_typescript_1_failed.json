{
    "status_code": 11,
    "lang": "typescript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 64228000,
    "question_id": "2893",
    "elapsed_time": 134,
    "compare_result
    "code_output": "2",
    "std_output": "",
    "last_testcase": "[2,3,6,1,9,2]\n5",
    "expected_output": "13",
    "task_finish_time": 1708207157855,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 35,
    "total_testcases": 744,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "TypeScript",
    "submission_id": "1178274850",
    "input_formatted": "[2,3,6,1,9,2], 5",
    "input": "[2,3,6,1,9,2]\n5",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "function maxScore(nums: number[], x: number): number {\n    let totalScore = nums[0];\n    let maxScore = nums[0];\n    let left = 0;\n    let right = nums.length - 1;\n    while (left < right) {\n        if (nums[left + 1] % 2 !== nums[left] % 2) {\n            if (totalScore + nums[left + 1] - x > totalScore) {\n                totalScore += nums[left + 1] - x;\n                left++;\n            } else {\n                break;\n            }\n        } else {\n            if (totalScore + nums[left + 1] > totalScore) {\n                totalScore += nums[left + 1];\n                left++;\n            } else {\n                break;\n            }\n        }\n        maxScore = Math.max(maxScore, totalScore);\n        \n        if (nums[right] % 2 !== nums[right - 1] % 2) {\n            if (totalScore + nums[right] - x > totalScore) {\n                totalScore += nums[right] - x;\n                right--;\n            } else {\n                break;\n            }\n        } else {\n            if (totalScore + nums[right] > totalScore) {\n                totalScore += nums[right];\n                right--;\n            } else {\n                break;\n            }\n        }\n        maxScore = Math.max(maxScore, totalScore);\n    }\n    return maxScore;\n}"
}