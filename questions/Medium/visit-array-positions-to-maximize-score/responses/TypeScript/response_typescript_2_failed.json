{
    "status_code": 11,
    "lang": "typescript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 61816000,
    "question_id": "2893",
    "elapsed_time": 4011,
    "compare_result
    "code_output": "23",
    "std_output": "",
    "last_testcase": "[2,3,6,1,9,2]\n5",
    "expected_output": "13",
    "task_finish_time": 1708207194771,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 15,
    "total_testcases": 744,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "TypeScript",
    "submission_id": "1178275059",
    "input_formatted": "[2,3,6,1,9,2], 5",
    "input": "[2,3,6,1,9,2]\n5",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "function maxScore(nums: number[], x: number): number {\n    let maxScore = 0;\n    let currentScore = 0;\n    let i = 0, j = nums.length - 1;\n    while (i < nums.length) {\n        currentScore += nums[i];\n        let tempScore = currentScore;\n        let penalty = 0;\n        for (let k = nums.length - 1; k > i; k--) {\n            if ((nums[k] % 2 !== nums[k - 1] % 2) && k - 1 === i) {\n                penalty = x;\n            }\n            tempScore += nums[k] - penalty;\n            penalty = 0; // Reset penalty after applying once\n        }\n        maxScore = Math.max(maxScore, tempScore);\n        i++;\n    }\n    return maxScore;\n}"
}