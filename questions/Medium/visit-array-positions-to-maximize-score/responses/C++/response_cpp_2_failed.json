{
    "status_code": 11,
    "lang": "cpp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 110784000,
    "question_id": "2893",
    "elapsed_time": 163,
    "compare_result
    "code_output": "6",
    "std_output": "",
    "last_testcase": "[2,3,6,1,9,2]\n5",
    "expected_output": "13",
    "task_finish_time": 1708206567847,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 95,
    "total_testcases": 744,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C++",
    "submission_id": "1178270168",
    "input_formatted": "[2,3,6,1,9,2], 5",
    "input": "[2,3,6,1,9,2]\n5",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "#include <vector>\nusing namespace std;\n\nclass Solution {\npublic:\n    long long maxScore(vector<int>& nums, int x) {\n        int n = nums.size();\n        vector<long long> dp(n + 1, 0); // dp[i] represents the max score up to i, considering penalties\n        dp[1] = nums[0];\n        for (int i = 1; i < n; ++i) {\n            dp[i + 1] = dp[i] + nums[i];\n            if (nums[i] % 2 != nums[i - 1] % 2) {\n                dp[i + 1] -= x;\n            }\n        }\n\n        long long maxScore = dp[1];\n        for (int i = 2; i <= n; ++i) {\n            maxScore = max(maxScore, dp[i]);\n        }\n\n        return maxScore;\n    }\n};"
}