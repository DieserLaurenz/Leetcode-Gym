{
    "status_code": 11,
    "lang": "kotlin",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 68852000,
    "question_id": "2893",
    "elapsed_time": 677,
    "compare_result": "010000000000100000000000000000001000000000000000000000100000000000000000010000000000000000000000000000011000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000001000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000000000000000010000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
    "code_output": "23",
    "std_output": "",
    "last_testcase": "[2,3,6,1,9,2]\n5",
    "expected_output": "13",
    "task_finish_time": 1708216560441,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 16,
    "total_testcases": 744,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Kotlin",
    "submission_id": "1178342323",
    "input_formatted": "[2,3,6,1,9,2], 5",
    "input": "[2,3,6,1,9,2]\n5",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    fun maxScore(nums: IntArray, x: Int): Long {\n        var maxScore = 0L\n        var score = 0L\n        var i = 0\n        var j = 0\n\n        while (i < nums.size) {\n            score += nums[i]\n            while (j < i && ((nums[i] % 2 != nums[j] % 2 && score - nums[j] - x > score) || (nums[i] % 2 == nums[j] % 2 && score - nums[j] > score))) {\n                score -= nums[j]\n                if (nums[i] % 2 != nums[j] % 2) score -= x\n                j++\n            }\n            maxScore = maxOf(maxScore, score)\n            i++\n        }\n\n        return maxScore\n    }\n}"
}