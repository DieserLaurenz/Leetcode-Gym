{
    "status_code": 11,
    "lang": "python3",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 31764000,
    "question_id": "2893",
    "elapsed_time": 1035,
    "compare_result
    "code_output": "23",
    "std_output": "",
    "last_testcase": "[2,3,6,1,9,2]\n5",
    "expected_output": "13",
    "task_finish_time": 1708850253071,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 16,
    "total_testcases": 744,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python3",
    "submission_id": "1185608829",
    "input_formatted": "[2,3,6,1,9,2], 5",
    "input": "[2,3,6,1,9,2]\n5",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "from typing import List\n\nclass Solution:\n    def maxScore(self, nums: List[int], x: int) -> int:\n        n = len(nums)\n        dp = [0] * (n + 1)\n        for i in range(1, n + 1):\n            dp[i] = dp[i - 1] + nums[i - 1]\n        max_score = dp[n]\n        j = n\n        for i in range(n - 1, 0, -1):\n            while j > i and (nums[i] % 2 != nums[j - 1] % 2):\n                j -= 1\n            if j <= i:\n                break\n            penalty = (n - j) * x\n            current_score = dp[i + 1] + (dp[n] - dp[j]) - penalty\n            max_score = max(max_score, current_score)\n        return max_score"
}