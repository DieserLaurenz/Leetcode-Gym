{
    "status_code": 11,
    "lang": "golang",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 9500000,
    "question_id": "2893",
    "elapsed_time": 146,
    "compare_result
    "code_output": "11",
    "std_output": "",
    "last_testcase": "[2,3,6,1,9,2]\n5",
    "expected_output": "13",
    "task_finish_time": 1708216725260,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 48,
    "total_testcases": 744,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Go",
    "submission_id": "1178343417",
    "input_formatted": "[2,3,6,1,9,2], 5",
    "input": "[2,3,6,1,9,2]\n5",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "func maxScore(nums []int, x int) int64 {\n    n := len(nums)\n    dp := make([]int64, n)\n    dp[0] = int64(nums[0])\n    for i := 1; i < n; i++ {\n        dp[i] = dp[i-1] + int64(nums[i])\n        if i > 1 && (nums[i-1]%2 != nums[i]%2) {\n            dp[i] -= int64(x)\n        }\n    }\n    maxScore := dp[0]\n    for i := 1; i < n; i++ {\n        if dp[i] > maxScore {\n            maxScore = dp[i]\n        }\n    }\n    return maxScore\n}"
}