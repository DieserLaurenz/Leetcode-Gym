{
    "acRate": 80.96685345236965,
    "difficulty": "Medium",
    "freqBar": null,
    "questionId": "2790",
    "frontendQuestionId": "2693",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Call Function with Custom Context",
    "titleSlug": "call-function-with-custom-context",
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false,
    "codeSnippets": [
        {
            "lang": "JavaScript",
            "langSlug": "javascript",
            "code": "/**\n * @param {Object} context\n * @param {Array} args\n * @return {null|boolean|number|string|Array|Object}\n */\nFunction.prototype.callPolyfill = function(context, ...args) {\n    \n}\n\n/**\n * function increment() { this.count++; return this.count; }\n * increment.callPolyfill({count: 1}); // 2\n */"
        },
        {
            "lang": "TypeScript",
            "langSlug": "typescript",
            "code": "type JSONValue = null | boolean | number | string | JSONValue[] | { [key: string]: JSONValue };\n\ndeclare global { \n    interface Function {\n        callPolyfill(context: Record<string, JSONValue>, ...args: JSONValue[]): JSONValue;\n    }\n}\n\nFunction.prototype.callPolyfill = function(context, ...args): JSONValue {\n    \n}\n\n/**\n * function increment() { this.count++; return this.count; }\n * increment.callPolyfill({count: 1}); // 2\n */"
        }
    ],
    "content": "Enhance all functions to have thecallPolyfillmethod. The method accepts an objectobjas it's first parameter and any number of additional arguments. Theobjbecomes thethiscontext for the function. The additional arguments are passed to the function (that the callPolyfillmethod belongs on).\nFor example if you had the function:\n\nfunction tax(price, taxRate) {\n  const totalCost = price * (1 + taxRate);\n console.log(`The cost of ${this.item} is ${totalCost}`);\n}\n\nCalling this function liketax(10, 0.1)will log\"The cost of undefined is 11\". This is because thethiscontext was not defined.\nHowever, calling the function liketax.callPolyfill({item: \"salad\"}, 10, 0.1)will log\"The cost of salad is 11\". Thethiscontext was appropriately set, and the function logged an appropriate output.\nPlease solve this without usingthe built-inFunction.callmethod.\n\nExample 1:\n\nInput:\nfn = function add(b) {\n  return this.a + b;\n}\nargs = [{\"a\": 5}, 7]\nOutput: 12\nExplanation:\nfn.callPolyfill({\"a\": 5}, 7); // 12\ncallPolyfill sets the \"this\" context to {\"a\": 5}. 7 is passed as an argument.\n\nExample 2:\n\nInput: \nfn = function tax(price, taxRate) { \nreturn `The cost of the ${this.item} is ${price * taxRate}`; \n}\nargs = [{\"item\": \"burger\"}, 10, 1.1]\nOutput: \"The cost of the burger is 11\"\nExplanation: callPolyfill sets the \"this\" context to {\"item\": \"burger\"}. 10 and 1.1 are passed as additional arguments.\n\n\nConstraints:\n\ntypeof args[0] == 'object' and args[0] != null\n1 <= args.length <= 100\n2 <= JSON.stringify(args[0]).length <= 105\n\n"
}