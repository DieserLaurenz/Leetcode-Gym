{
    "status_code": 10,
    "lang": "javascript",
    "run_success": true,
    "status_runtime": "53 ms",
    "memory": 50388000,
    "question_id": "3230",
    "elapsed_time": 74,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1708123530636,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 779,
    "total_testcases": 779,
    "runtime_percentile": 94.8276,
    "status_memory": "50.4 MB",
    "memory_percentile": 13.793899999999994,
    "pretty_lang": "JavaScript",
    "submission_id": "1177344842",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "/**\n * @param {string} word\n * @return {number}\n */\nvar removeAlmostEqualCharacters = function(word) {\n    let ops = 0;\n    for (let i = 1; i < word.length; ++i) {\n        if (word[i] === word[i - 1] || Math.abs(word.charCodeAt(i) - word.charCodeAt(i - 1)) === 1) {\n            ops++;\n            i++; // Skip the next character as we assume it's changed to something non-almost-equal.\n        }\n    }\n    return ops;\n};"
}