{
    "status_code": 10,
    "lang": "typescript",
    "run_success": true,
    "status_runtime": "65 ms",
    "memory": 52292000,
    "question_id": "3230",
    "elapsed_time": 112,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1708123582827,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 779,
    "total_testcases": 779,
    "runtime_percentile": 49.99990000000002,
    "status_memory": "52.3 MB",
    "memory_percentile": 16.66650000000002,
    "pretty_lang": "TypeScript",
    "submission_id": "1177345203",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "function removeAlmostEqualCharacters(word: string): number {\n    let operations = 0;\n    for (let i = 1; i < word.length; ++i) {\n        if (word[i] === word[i - 1] || Math.abs(word.charCodeAt(i) - word.charCodeAt(i - 1)) === 1) {\n            operations++;\n            i++; // Skip next character to avoid changing it to a nearby character\n        }\n    }\n    return operations;\n}"
}