{
    "status_code": 10,
    "lang": "csharp",
    "run_success": true,
    "status_runtime": "44 ms",
    "memory": 38712000,
    "question_id": "3230",
    "elapsed_time": 98,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1708123473628,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 779,
    "total_testcases": 779,
    "runtime_percentile": 75.75760000000002,
    "status_memory": "38.7 MB",
    "memory_percentile": 48.48490000000001,
    "pretty_lang": "C#",
    "submission_id": "1177344460",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "public class Solution {\n    public int RemoveAlmostEqualCharacters(string word) {\n        int operations = 0;\n        for (int i = 1; i < word.Length; i++) {\n            if (word[i] == word[i - 1] || Math.Abs(word[i] - word[i - 1]) == 1) {\n                operations++;\n                if (i + 1 < word.Length && (word[i + 1] == word[i] || Math.Abs(word[i + 1] - word[i]) == 1)) {\n                    i++;\n                }\n            }\n        }\n        return operations;\n    }\n}"
}