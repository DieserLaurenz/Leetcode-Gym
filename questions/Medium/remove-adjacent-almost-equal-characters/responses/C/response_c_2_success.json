{
    "status_code": 10,
    "lang": "c",
    "run_success": true,
    "status_runtime": "0 ms",
    "memory": 5612000,
    "question_id": "3230",
    "elapsed_time": 13,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1708123423986,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 779,
    "total_testcases": 779,
    "runtime_percentile": 100,
    "status_memory": "5.6 MB",
    "memory_percentile": 97.561,
    "pretty_lang": "C",
    "submission_id": "1177344088",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "int removeAlmostEqualCharacters(char* word) {\n    int ops = 0, i = 0;\n    while (word[i] != '\\0' && word[i+1] != '\\0') {\n        if (word[i] == word[i+1] || abs(word[i] - word[i+1]) == 1) {\n            ops++;\n            i += 2; // Skip the next character as well\n        } else {\n            i++;\n        }\n    }\n    return ops;\n}"
}