{
    "status_code": 11,
    "lang": "c",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 5528000,
    "question_id": "3230",
    "elapsed_time": 22,
    "compare_result
    "code_output": "2",
    "std_output": "",
    "last_testcase": "\"cba\"",
    "expected_output": "1",
    "task_finish_time": 1708123374393,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 736,
    "total_testcases": 779,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C",
    "submission_id": "1177343788",
    "input_formatted": "\"cba\"",
    "input": "\"cba\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "#include <stdbool.h>\n#include <string.h>\n\nint removeAlmostEqualCharacters(char* word) {\n    int ops = 0;\n    for (int i = 1; word[i] != '\\0'; ++i) {\n        if (word[i] == word[i - 1] || word[i] == word[i - 1] + 1 || word[i] == word[i - 1] - 1) {\n            ++ops;\n            if (word[i + 1] != '\\0') {\n                if (word[i + 1] != 'z' && word[i + 1] != 'a') {\n                    word[i] = (word[i - 1] != 'a' && word[i + 1] != 'b') ? 'a' : 'z';\n                } else {\n                    word[i] = (word[i - 1] != 'c' && word[i + 1] != 'c') ? 'c' : 'b';\n                }\n            } else {\n                word[i] = (word[i - 1] != 'a') ? 'a' : 'z';\n            }\n        }\n    }\n    return ops;\n}"
}