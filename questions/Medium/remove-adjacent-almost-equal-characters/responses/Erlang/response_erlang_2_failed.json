{
    "status_code": 11,
    "lang": "erlang",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 59864000,
    "question_id": "3230",
    "elapsed_time": 1417,
    "compare_result
    "code_output": "4",
    "std_output": "",
    "last_testcase": "\"aaaaa\"",
    "expected_output": "2",
    "task_finish_time": 1708124578452,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 240,
    "total_testcases": 779,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Erlang",
    "submission_id": "1177351742",
    "input_formatted": "\"aaaaa\"",
    "input": "\"aaaaa\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "-spec remove_almost_equal_characters(Word :: unicode:unicode_binary()) -> integer().\nremove_almost_equal_characters(Word) ->\n    Bytes = binary_to_list(Word),\n    count_operations(Bytes, 0).\n\ncount_operations([_], Ops) -> Ops;\ncount_operations([], Ops) -> Ops;\ncount_operations([A, B | Rest], Ops) when A =:= B; abs(A - B) =:= 1 ->\n    count_operations([B | Rest], Ops + 1);\ncount_operations([_A, B | Rest], Ops) ->\n    count_operations([B | Rest], Ops)."
}