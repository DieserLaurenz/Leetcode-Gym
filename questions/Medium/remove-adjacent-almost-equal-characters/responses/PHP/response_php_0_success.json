{
    "status_code": 10,
    "lang": "php",
    "run_success": true,
    "status_runtime": "12 ms",
    "memory": 20436000,
    "question_id": "3230",
    "elapsed_time": 28,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1708123632801,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 779,
    "total_testcases": 779,
    "runtime_percentile": 57.142900000000004,
    "status_memory": "20.4 MB",
    "memory_percentile": 28.571500000000007,
    "pretty_lang": "PHP",
    "submission_id": "1177345529",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\n\n    /**\n     * @param String $word\n     * @return Integer\n     */\n    function removeAlmostEqualCharacters($word) {\n        $operations = 0;\n        for ($i = 0; $i < strlen($word) - 1; $i++) {\n            if ($word[$i] == $word[$i + 1] || abs(ord($word[$i]) - ord($word[$i + 1])) == 1) {\n                $operations++;\n                $i++; // Skip next character as we already made a change that includes it\n            }\n        }\n        return $operations;\n    }\n}"
}