{
    "status_code": 10,
    "lang": "java",
    "run_success": true,
    "status_runtime": "1 ms",
    "memory": 42032000,
    "display_runtime": "1",
    "question_id": "3230",
    "elapsed_time": 118,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1708123314594,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 779,
    "total_testcases": 779,
    "runtime_percentile": 100,
    "status_memory": "42 MB",
    "memory_percentile": 61.30880000000001,
    "pretty_lang": "Java",
    "submission_id": "1177343405",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\n    public int removeAlmostEqualCharacters(String word) {\n        int ops = 0;\n        for (int i = 1; i < word.length(); i++) {\n            if (word.charAt(i) == word.charAt(i - 1) || \n                word.charAt(i) - word.charAt(i - 1) == 1 || \n                word.charAt(i - 1) - word.charAt(i) == 1) {\n                ops++;\n                i++; // Skip next character to avoid double counting\n            }\n        }\n        return ops;\n    }\n}"
}