{
    "status_code": 10,
    "lang": "scala",
    "run_success": true,
    "status_runtime": "459 ms",
    "memory": 54244000,
    "question_id": "3230",
    "elapsed_time": 500,
    "compare_result": "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1708124203799,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 779,
    "total_testcases": 779,
    "runtime_percentile": 62.5,
    "status_memory": "54.2 MB",
    "memory_percentile": 87.5,
    "pretty_lang": "Scala",
    "submission_id": "1177349271",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "object Solution {\n    def removeAlmostEqualCharacters(word: String): Int = {\n        var ops = 0\n        var i = 1\n        while(i < word.length) {\n            if(word(i) == word(i-1) || Math.abs(word(i) - word(i-1)) == 1) {\n                ops += 1\n                i += 1 // Skip next character if current and previous are almost equal\n            }\n            i += 1\n        }\n        ops\n    }\n}"
}