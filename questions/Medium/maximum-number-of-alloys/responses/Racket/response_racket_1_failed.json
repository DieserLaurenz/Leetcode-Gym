{
    "status_code": 11,
    "lang": "racket",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 124708000,
    "question_id": "3095",
    "elapsed_time": 317,
    "compare_result
    "code_output": "4",
    "std_output": "",
    "last_testcase": "4\n4\n17\n[[10,10,1,5],[9,7,7,1],[6,3,5,9],[2,10,2,7]]\n[9,8,2,7]\n[9,2,6,10]",
    "expected_output": "1",
    "task_finish_time": 1707598589602,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 192,
    "total_testcases": 731,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Racket",
    "submission_id": "1171733258",
    "input_formatted": "4, 4, 17, [[10,10,1,5],[9,7,7,1],[6,3,5,9],[2,10,2,7]], [9,8,2,7], [9,2,6,10]",
    "input": "4\n4\n17\n[[10,10,1,5],[9,7,7,1],[6,3,5,9],[2,10,2,7]]\n[9,8,2,7]\n[9,2,6,10]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "(define/contract (max-number-of-alloys n k budget composition stock cost)\n  (-> exact-integer? exact-integer? exact-integer? (listof (listof exact-integer?)) (listof exact-integer?) (listof exact-integer?) exact-integer?)\n  (let ((max-alloys 0))\n    (for ([i (in-range k)])\n      (let* ((machine-comp (list-ref composition i))\n             (cost-per-alloy (for/fold ([total-cost 0]) ([comp (in-list machine-comp)] [stock-qty (in-list stock)] [cost-qty (in-list cost)])\n                               (+ total-cost (* (max 0 (- comp stock-qty)) cost-qty))))\n             (alloys-possible (if (> cost-per-alloy 0) (floor (/ budget cost-per-alloy)) 0)))\n        (set! max-alloys (max max-alloys alloys-possible))))\n    max-alloys))"
}