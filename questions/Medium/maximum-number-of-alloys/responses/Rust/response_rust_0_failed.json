{
    "status_code": 15,
    "lang": "rust",
    "run_success": false,
    "runtime_error": "",
    "full_runtime_error": "",
    "status_runtime": "N/A",
    "memory": 2216000,
    "question_id": "3095",
    "elapsed_time": 9,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "2\n3\n10\n[[2,1],[1,2],[1,1]]\n[1,1]\n[5,5]",
    "expected_output": "2",
    "task_finish_time": 1707598446813,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 2,
    "total_testcases": 731,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Rust",
    "submission_id": "1171732064",
    "status_msg": "Runtime Error",
    "state": "SUCCESS",
    "code": "impl Solution {\n    pub fn max_number_of_alloys(n: i32, k: i32, budget: i32, composition: Vec<Vec<i32>>, stock: Vec<i32>, cost: Vec<i32>) -> i32 {\n        let mut max_alloys = 0;\n        for i in 0..k as usize {\n            let mut total_cost = 0;\n            for j in 0..n as usize {\n                let needed = composition[i][j] - stock[j];\n                if needed > 0 {\n                    total_cost += needed * cost[j];\n                }\n            }\n            let mut alloys = budget / total_cost;\n            while alloys * total_cost > budget {\n                alloys -= 1;\n            }\n            max_alloys = max_alloys.max(alloys);\n        }\n        max_alloys\n    }\n}"
}