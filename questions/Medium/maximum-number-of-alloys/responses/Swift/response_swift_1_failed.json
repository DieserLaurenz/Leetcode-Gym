{
    "status_code": 15,
    "lang": "swift",
    "run_success": false,
    "runtime_error": "*** Program crashed: Illegal instruction at 0x000055b3f2250e70 ***",
    "full_runtime_error": "*** Program crashed: Illegal instruction at 0x000055b3f2250e70 ***\nThread 0 \"prog\" crashed:\n0  0x000055b3f2250e70 specialized Solution.maxNumberOfAlloys(_:_:_:_:_:_:) + 704 in prog\nRegisters:\nrax 0x0000000000000007  07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07  \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\nrdx 0x8000000000000000  07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07  \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\nrcx 0x000055b3f3da6c80  e0 ae 24 11 22 7f 00 00 03 00 00 00 02 00 00 00  \u00e0\u00ae$\u00b7\"\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\nrbx 0x0000000000000001  e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0  \u00e0\u00e0\u00e0\u00e0\u00e0\u00e0\u00e0\u00e0\u00e0\u00e0\u00e0\u00e0\u00e0\u00e0\u00e0\u00e0\nrsi 0x0000000000000003  e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0  \u00e0\u00e0\u00e0\u00e0\u00e0\u00e0\u00e0\u00e0\u00e0\u00e0\u00e0\u00e0\u00e0\u00e0\u00e0\u00e0\nrdi 0x0000000000000002  e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0  \u00e0\u00e0\u00e0\u00e0\u00e0\u00e0\u00e0\u00e0\u00e0\u00e0\u00e0\u00e0\u00e0\u00e0\u00e0\u00e0\nrbp 0x0000000000000007  e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0  \u00e0\u00e0\u00e0\u00e0\u00e0\u00e0\u00e0\u00e0\u00e0\u00e0\u00e0\u00e0\u00e0\u00e0\u00e0\u00e0\nrsp 0x00007ffe08283a08  0f 00 00 00 00 00 00 00 00 00 00 00 00 00 00 e7  \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00e7\n r8 0x000055b3f3da6c00  b8 2e 14 11 22 7f 00 00 03 00 00 00 02 00 00 00  \u00b8.\u00b7\u00b7\"\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\n r9 0x000055b3f3da6780  b8 2e 14 11 22 7f 00 00 03 00 00 00 00 00 00 00  \u00b8.\u00b7\u00b7\"\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\nr10 0x000000000000000f  b8 b8 b8 b8 b8 b8 b8 b8 b8 b8 b8 b8 b8 b8 b8 b8  \u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\nr11 0x000055b3f3da6c40  b8 2e 14 11 22 7f 00 00 03 00 00 00 00 00 00 00  \u00b8.\u00b7\u00b7\"\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\nr12 0x0000000000000000  b8 b8 b8 b8 b8 b8 b8 b8 b8 b8 b8 b8 b8 b8 b8 b8  \u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\nr13 0x0000000000000003  b8 b8 b8 b8 b8 b8 b8 b8 b8 b8 b8 b8 b8 b8 b8 b8  \u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\nr14 0x0000000000000000  b8 b8 b8 b8 b8 b8 b8 b8 b8 b8 b8 b8 b8 b8 b8 b8  \u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\nr15 0x0000000000000000  b8 b8 b8 b8 b8 b8 b8 b8 b8 b8 b8 b8 b8 b8 b8 b8  \u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\nrip 0x000055b3f2250e70  0f 0b 0f 0b 0f 0b 0f 0b 0f 0b 0f 0b 0f 0b 0f 0b  \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\nrflags 0x0000000000010246  ZF PF\ncs 0x0033  fs 0x0000  gs 0x0000\nImages (18 omitted):",
    "status_runtime": "N/A",
    "memory": 18540000,
    "question_id": "3095",
    "elapsed_time": 580,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "3\n2\n15\n[[1,1,1],[1,1,10]]\n[0,0,100]\n[1,2,3]",
    "expected_output": "5",
    "task_finish_time": 1707597596226,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 1,
    "total_testcases": 731,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Swift",
    "submission_id": "1171724518",
    "status_msg": "Runtime Error",
    "state": "SUCCESS",
    "code": "class Solution {\n    func maxNumberOfAlloys(_ n: Int, _ k: Int, _ budget: Int, _ composition: [[Int]], _ stock: [Int], _ cost: [Int]) -> Int {\n        var result = 0\n        for i in 0..<k {\n            var minAlloy = Int.max\n            for j in 0..<n {\n                let needed = max(0, composition[i][j] - stock[j])\n                minAlloy = min(minAlloy, (budget / (needed * cost[j])))\n            }\n            var totalCost = 0\n            for j in 0..<n {\n                let needed = max(0, composition[i][j] * minAlloy - stock[j])\n                totalCost += needed * cost[j]\n            }\n            if totalCost <= budget {\n                result = max(result, minAlloy)\n            } else {\n                for alloys in stride(from: minAlloy, to: 0, by: -1) {\n                    totalCost = 0\n                    for j in 0..<n {\n                        let needed = max(0, composition[i][j] * alloys - stock[j])\n                        totalCost += needed * cost[j]\n                    }\n                    if totalCost <= budget {\n                        result = max(result, alloys)\n                        break\n                    }\n                }\n            }\n        }\n        return result\n    }\n}"
}