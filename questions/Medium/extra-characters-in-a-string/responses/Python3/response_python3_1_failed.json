{
    "status_code": 11,
    "lang": "python3",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 16604000,
    "question_id": "2755",
    "elapsed_time": 246,
    "compare_result
    "code_output": "2",
    "std_output": "",
    "last_testcase": "\"leetscode\"\n[\"leet\",\"code\",\"leetcode\"]",
    "expected_output": "1",
    "task_finish_time": 1708765409398,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 77,
    "total_testcases": 2028,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python3",
    "submission_id": "1184675109",
    "input_formatted": "\"leetscode\", [\"leet\",\"code\",\"leetcode\"]",
    "input": "\"leetscode\"\n[\"leet\",\"code\",\"leetcode\"]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "from typing import List\n\nclass Solution:\n    def minExtraChar(self, s: str, dictionary: List[str]) -> int:\n        n = len(s)\n        dp = [n+1] * (n+1)\n        dp[0] = 0\n        for i in range(1, n+1):\n            for word in dictionary:\n                word_len = len(word)\n                if i >= word_len and s[i-word_len:i] == word:\n                    dp[i] = min(dp[i], dp[i-word_len])\n            dp[i] = min(dp[i]+1, dp[i-1]+1)\n        return dp[-1] - 1"
}