{
    "status_code": 10,
    "lang": "golang",
    "run_success": true,
    "status_runtime": "22 ms",
    "memory": 6708000,
    "question_id": "2755",
    "elapsed_time": 41,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1707211741752,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 2028,
    "total_testcases": 2028,
    "runtime_percentile": 70.45459999999999,
    "status_memory": "6.7 MB",
    "memory_percentile": 81.81809999999999,
    "pretty_lang": "Go",
    "submission_id": "1167653444",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "func minExtraChar(s string, dictionary []string) int {\n    dp := make([]int, len(s)+1)\n    for i := 0; i <= len(s); i++ {\n        dp[i] = i // Set the maximum number of extra chars possible at each position.\n    }\n    dp[0] = 0 // Base case: no extra characters when s is empty.\n\n    for i := 1; i <= len(s); i++ {\n        for _, word := range dictionary {\n            if len(word) <= i && s[i-len(word):i] == word {\n                dp[i] = min(dp[i], dp[i-len(word)]) // If word matches, update dp[i] to the minimum extra chars.\n            }\n        }\n        if i > 0 {\n            dp[i] = min(dp[i], dp[i-1]+1) // Consider the character at i-1 as extra and increment the count.\n        }\n    }\n\n    return dp[len(s)]\n}\n\nfunc min(a, b int) int {\n    if a < b {\n        return a\n    }\n    return b\n}"
}