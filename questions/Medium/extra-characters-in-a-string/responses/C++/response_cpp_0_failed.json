{
    "status_code": 11,
    "lang": "cpp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 59784000,
    "question_id": "2755",
    "elapsed_time": 204,
    "compare_result
    "code_output": "5",
    "std_output": "",
    "last_testcase": "\"leetscode\"\n[\"leet\",\"code\",\"leetcode\"]",
    "expected_output": "1",
    "task_finish_time": 1707210697470,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 60,
    "total_testcases": 2028,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C++",
    "submission_id": "1167641528",
    "input_formatted": "\"leetscode\", [\"leet\",\"code\",\"leetcode\"]",
    "input": "\"leetscode\"\n[\"leet\",\"code\",\"leetcode\"]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\npublic:\n    int minExtraChar(string s, vector<string>& dictionary) {\n        int n = s.size();\n        vector<int> dp(n + 1, INT_MAX);\n        dp[0] = 0; // Base case: no extra chars with an empty string\n        for (int i = 0; i < n; ++i) {\n            if (dp[i] == INT_MAX) continue; // Skip if this position is unreachable\n            for (auto& word : dictionary) {\n                int wordLen = word.length();\n                if (i + wordLen <= n && s.substr(i, wordLen) == word) {\n                    dp[i + wordLen] = min(dp[i + wordLen], dp[i]);\n                }\n            }\n            dp[i + 1] = min(dp[i + 1], dp[i] + 1); // Consider current char as extra\n        }\n        return dp[n] == INT_MAX ? n : n - (dp[n] == INT_MAX ? 0 : *max_element(dp.begin(), dp.end()));\n    }\n};"
}