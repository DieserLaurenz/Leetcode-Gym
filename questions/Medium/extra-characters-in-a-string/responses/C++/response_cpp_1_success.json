{
    "status_code": 10,
    "lang": "cpp",
    "run_success": true,
    "status_runtime": "78 ms",
    "memory": 59740000,
    "question_id": "2755",
    "elapsed_time": 104,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1707210726021,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 2028,
    "total_testcases": 2028,
    "runtime_percentile": 89.73020000000007,
    "status_memory": "59.7 MB",
    "memory_percentile": 92.59180000000005,
    "pretty_lang": "C++",
    "submission_id": "1167641891",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\npublic:\n    int minExtraChar(string s, vector<string>& dictionary) {\n        int n = s.size();\n        vector<int> dp(n + 1, n); // Initialize dp array with max possible extra characters\n        dp[0] = 0; // No extra characters when string is empty\n        for (int i = 1; i <= n; ++i) {\n            for (const string& word : dictionary) {\n                int len = word.length();\n                if (i >= len && s.substr(i - len, len) == word) {\n                    dp[i] = min(dp[i], dp[i - len]); // If current segment matches a dictionary word\n                }\n            }\n            dp[i] = min(dp[i], dp[i - 1] + 1); // Consider current character as extra\n        }\n        return dp[n];\n    }\n};"
}