{
    "status_code": 10,
    "lang": "erlang",
    "run_success": true,
    "status_runtime": "769 ms",
    "memory": 155256000,
    "question_id": "3241",
    "elapsed_time": 1930,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1707191127658,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 1115,
    "total_testcases": 1115,
    "runtime_percentile": 42.85719999999999,
    "status_memory": "155.3 MB",
    "memory_percentile": 42.85719999999999,
    "pretty_lang": "Erlang",
    "submission_id": "1167407639",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "-spec divide_array(Nums :: [integer()], K :: integer()) -> [[integer()]].\ndivide_array(Nums, K) ->\n    SortedNums = lists:sort(Nums),\n    divide(SortedNums, K, []).\n\ndivide([], _K, Acc) ->\n    lists:reverse(Acc);\ndivide([A, B, C | Rest], K, Acc) when B - A =< K, C - B =< K, C - A =< K ->\n    divide(Rest, K, [[A, B, C] | Acc]);\ndivide(_Nums, _K, _Acc) ->\n    []."
}