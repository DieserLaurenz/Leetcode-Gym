{
    "status_code": 10,
    "lang": "kotlin",
    "run_success": true,
    "status_runtime": "1035 ms",
    "memory": 68324000,
    "question_id": "3241",
    "elapsed_time": 1517,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1707190740326,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 1115,
    "total_testcases": 1115,
    "runtime_percentile": 41.216600000000135,
    "status_memory": "68.3 MB",
    "memory_percentile": 81.75790000000008,
    "pretty_lang": "Kotlin",
    "submission_id": "1167403469",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\n    fun divideArray(nums: IntArray, k: Int): Array<IntArray> {\n        nums.sort()\n        val result = mutableListOf<IntArray>()\n        var i = 0\n        while (i < nums.size) {\n            if (i + 2 < nums.size && nums[i + 2] - nums[i] <= k) {\n                result.add(intArrayOf(nums[i], nums[i + 1], nums[i + 2]))\n                i += 3\n            } else {\n                return arrayOf()\n            }\n        }\n        return result.toTypedArray()\n    }\n}"
}