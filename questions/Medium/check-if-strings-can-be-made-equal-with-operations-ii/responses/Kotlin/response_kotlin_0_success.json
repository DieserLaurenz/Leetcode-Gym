{
    "status_code": 10,
    "lang": "kotlin",
    "run_success": true,
    "status_runtime": "286 ms",
    "memory": 39216000,
    "question_id": "2978",
    "elapsed_time": 492,
    "compare_result": "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706793724051,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 752,
    "total_testcases": 752,
    "runtime_percentile": 33.33339999999999,
    "status_memory": "39.2 MB",
    "memory_percentile": 100,
    "pretty_lang": "Kotlin",
    "submission_id": "1162965069",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\n    fun checkStrings(s1: String, s2: String): Boolean {\n        val evenFrequencyS1 = IntArray(26) { 0 }\n        val oddFrequencyS1 = IntArray(26) { 0 }\n        val evenFrequencyS2 = IntArray(26) { 0 }\n        val oddFrequencyS2 = IntArray(26) { 0 }\n\n        for (i in s1.indices) {\n            if (i % 2 == 0) { // Even index\n                evenFrequencyS1[s1[i] - 'a']++\n                evenFrequencyS2[s2[i] - 'a']++\n            } else { // Odd index\n                oddFrequencyS1[s1[i] - 'a']++\n                oddFrequencyS2[s2[i] - 'a']++\n            }\n        }\n\n        // Check if the frequencies match for both even and odd positions\n        return evenFrequencyS1.contentEquals(evenFrequencyS2) && oddFrequencyS1.contentEquals(oddFrequencyS2)\n    }\n}"
}