{
    "status_code": 10,
    "lang": "java",
    "run_success": true,
    "status_runtime": "14 ms",
    "memory": 46420000,
    "display_runtime": "14",
    "question_id": "2978",
    "elapsed_time": 230,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706793116821,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 752,
    "total_testcases": 752,
    "runtime_percentile": 33.33349999999999,
    "status_memory": "46.4 MB",
    "memory_percentile": 13.194499999999994,
    "pretty_lang": "Java",
    "submission_id": "1162958235",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\n    public boolean checkStrings(String s1, String s2) {\n        // Arrays to store characters at even and odd indices separately\n        int n = s1.length();\n        char[] even1 = new char[(n + 1) / 2]; // Adjusted for the possibility of n being odd\n        char[] odd1 = new char[n / 2];\n        char[] even2 = new char[(n + 1) / 2]; // Adjusted for the possibility of n being odd\n        char[] odd2 = new char[n / 2];\n        \n        // Separate the characters of both strings into even and odd\n        for (int i = 0; i < n; i++) {\n            if (i % 2 == 0) { // Even index\n                even1[i / 2] = s1.charAt(i);\n                even2[i / 2] = s2.charAt(i);\n            } else { // Odd index\n                // Correctly assigning to odd arrays, starting index from 0\n                odd1[i / 2] = s1.charAt(i);\n                odd2[i / 2] = s2.charAt(i);\n            }\n        }\n        \n        // Sort the characters in each array\n        java.util.Arrays.sort(even1);\n        java.util.Arrays.sort(odd1);\n        java.util.Arrays.sort(even2);\n        java.util.Arrays.sort(odd2);\n        \n        // Check if sorted characters at even and odd indices match\n        return java.util.Arrays.equals(even1, even2) && java.util.Arrays.equals(odd1, odd2);\n    }\n}"
}