{
    "status_code": 15,
    "lang": "java",
    "run_success": false,
    "runtime_error": "Line 12: java.lang.ArrayIndexOutOfBoundsException: Index 1 out of bounds for length 1",
    "full_runtime_error": "java.lang.ArrayIndexOutOfBoundsException: Index 1 out of bounds for length 1\n  at line 12, Solution.checkStrings\n  at line 54, __DriverSolution__.__helper__\n  at line 87, __Driver__.main",
    "status_runtime": "N/A",
    "memory": 41124000,
    "question_id": "2978",
    "elapsed_time": 185,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "\"abe\"\n\"bea\"",
    "expected_output": "false",
    "task_finish_time": 1706793040446,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 1,
    "total_testcases": 752,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Java",
    "submission_id": "1162957357",
    "status_msg": "Runtime Error",
    "state": "SUCCESS",
    "code": "class Solution {\n    public boolean checkStrings(String s1, String s2) {\n        // Arrays to store characters at even and odd indices separately\n        char[] even1 = new char[s1.length() / 2];\n        char[] odd1 = new char[s1.length() - s1.length() / 2];\n        char[] even2 = new char[s2.length() / 2];\n        char[] odd2 = new char[s2.length() - s2.length() / 2];\n        \n        // Separate the characters of both strings into even and odd\n        for (int i = 0; i < s1.length(); i++) {\n            if (i % 2 == 0) { // Even index\n                even1[i / 2] = s1.charAt(i);\n                even2[i / 2] = s2.charAt(i);\n            } else { // Odd index\n                odd1[i / 2] = s1.charAt(i);\n                odd2[i / 2] = s2.charAt(i);\n            }\n        }\n        \n        // Sort the characters in each array\n        java.util.Arrays.sort(even1);\n        java.util.Arrays.sort(odd1);\n        java.util.Arrays.sort(even2);\n        java.util.Arrays.sort(odd2);\n        \n        // Check if sorted characters at even and odd indices match\n        return java.util.Arrays.equals(even1, even2) && java.util.Arrays.equals(odd1, odd2);\n    }\n}"
}