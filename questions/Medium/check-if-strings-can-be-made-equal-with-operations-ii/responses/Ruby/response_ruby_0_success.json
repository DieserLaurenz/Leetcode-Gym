{
    "status_code": 10,
    "lang": "ruby",
    "run_success": true,
    "status_runtime": "670 ms",
    "memory": 240864000,
    "question_id": "2978",
    "elapsed_time": 860,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706865781316,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 752,
    "total_testcases": 752,
    "runtime_percentile": 100,
    "status_memory": "240.9 MB",
    "memory_percentile": 100,
    "pretty_lang": "Ruby",
    "submission_id": "1163770116",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "# @param {String} s1\n# @param {String} s2\n# @return {Boolean}\ndef check_strings(s1, s2)\n    # Separate characters by even and odd indices for both strings\n    s1_even, s1_odd, s2_even, s2_odd = '', '', '', ''\n    s1.chars.each_with_index do |char, index|\n        if index.even?\n            s1_even << char\n        else\n            s1_odd << char\n        end\n    end\n\n    s2.chars.each_with_index do |char, index|\n        if index.even?\n            s2_even << char\n        else\n            s2_odd << char\n        end\n    end\n\n    # Sort the characters to check if permutations match for even and odd separately\n    return s1_even.chars.sort == s2_even.chars.sort && s1_odd.chars.sort == s2_odd.chars.sort\nend"
}