{
    "status_code": 10,
    "lang": "ruby",
    "run_success": true,
    "status_runtime": "820 ms",
    "memory": 232652000,
    "question_id": "2978",
    "elapsed_time": 1059,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706803176925,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 752,
    "total_testcases": 752,
    "runtime_percentile": 100,
    "status_memory": "232.7 MB",
    "memory_percentile": 100,
    "pretty_lang": "Ruby",
    "submission_id": "1163090746",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "# @param {String} s1\n# @param {String} s2\n# @return {Boolean}\ndef check_strings(s1, s2)\n    # Separate characters located at even and odd indices for both strings\n    s1_even, s1_odd, s2_even, s2_odd = '', '', '', ''\n    \n    s1.chars.each_with_index do |c, i|\n        if i.even?\n            s1_even << c\n        else\n            s1_odd << c\n        end\n    end\n    \n    s2.chars.each_with_index do |c, i|\n        if i.even?\n            s2_even << c\n        else\n            s2_odd << c\n        end\n    end\n    \n    # Sort the characters at even and odd indices for comparison\n    s1_even, s1_odd, s2_even, s2_odd = [s1_even, s1_odd, s2_even, s2_odd].map { |str| str.chars.sort.join }\n    \n    # Return true if and only if the sorted sequences match for both even and odd indices\n    s1_even == s2_even && s1_odd == s2_odd\nend"
}