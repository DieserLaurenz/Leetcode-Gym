{
    "status_code": 10,
    "lang": "python3",
    "run_success": true,
    "status_runtime": "219 ms",
    "memory": 17864000,
    "question_id": "2978",
    "elapsed_time": 257,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1708745056028,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 752,
    "total_testcases": 752,
    "runtime_percentile": 35.0,
    "status_memory": "17.9 MB",
    "memory_percentile": 74.5,
    "pretty_lang": "Python3",
    "submission_id": "1184475367",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution:\n    def checkStrings(self, s1: str, s2: str) -> bool:\n        odd_counts1, even_counts1 = {}, {}\n        odd_counts2, even_counts2 = {}, {}\n        \n        for i in range(len(s1)):\n            if i % 2 == 0:\n                even_counts1[s1[i]] = even_counts1.get(s1[i], 0) + 1\n                even_counts2[s2[i]] = even_counts2.get(s2[i], 0) + 1\n            else:\n                odd_counts1[s1[i]] = odd_counts1.get(s1[i], 0) + 1\n                odd_counts2[s2[i]] = odd_counts2.get(s2[i], 0) + 1\n        \n        return even_counts1 == even_counts2 and odd_counts1 == odd_counts2"
}