{
    "status_code": 10,
    "lang": "python",
    "run_success": true,
    "status_runtime": "256 ms",
    "memory": 16500000,
    "question_id": "2978",
    "elapsed_time": 288,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1708744994980,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 752,
    "total_testcases": 752,
    "runtime_percentile": 42.85680000000002,
    "status_memory": "16.5 MB",
    "memory_percentile": 57.14270000000001,
    "pretty_lang": "Python",
    "submission_id": "1184474952",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution(object):\n    def checkStrings(self, s1, s2):\n        \"\"\"\n        :type s1: str\n        :type s2: str\n        :rtype: bool\n        \"\"\"\n        if len(s1) != len(s2):\n            return False\n        \n        odd_chars_s1, even_chars_s1 = {}, {}\n        odd_chars_s2, even_chars_s2 = {}, {}\n        \n        for i in range(len(s1)):\n            if i % 2 == 0:\n                even_chars_s1[s1[i]] = even_chars_s1.get(s1[i], 0) + 1\n                even_chars_s2[s2[i]] = even_chars_s2.get(s2[i], 0) + 1\n            else:\n                odd_chars_s1[s1[i]] = odd_chars_s1.get(s1[i], 0) + 1\n                odd_chars_s2[s2[i]] = odd_chars_s2.get(s2[i], 0) + 1\n        \n        return even_chars_s1 == even_chars_s2 and odd_chars_s1 == odd_chars_s2"
}