{
    "status_code": 10,
    "lang": "cpp",
    "run_success": true,
    "status_runtime": "51 ms",
    "memory": 18944000,
    "question_id": "2978",
    "elapsed_time": 75,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706792962607,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 752,
    "total_testcases": 752,
    "runtime_percentile": 76.57660000000001,
    "status_memory": "18.9 MB",
    "memory_percentile": 47.14720000000003,
    "pretty_lang": "C++",
    "submission_id": "1162956473",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\npublic:\n    bool checkStrings(string s1, string s2) {\n        // Arrays to store frequency of characters at even and odd indices\n        vector<int> s1_even(26, 0), s1_odd(26, 0), s2_even(26, 0), s2_odd(26, 0);\n        \n        // Count the frequency of each character at even and odd indices for both strings\n        for (int i = 0; i < s1.size(); ++i) {\n            if (i % 2 == 0) { // Even index\n                s1_even[s1[i] - 'a']++;\n                s2_even[s2[i] - 'a']++;\n            } else { // Odd index\n                s1_odd[s1[i] - 'a']++;\n                s2_odd[s2[i] - 'a']++;\n            }\n        }\n        \n        // Check if the frequency of characters at even and odd indices matches between s1 and s2\n        return s1_even == s2_even && s1_odd == s2_odd;\n    }\n};"
}