{
    "status_code": 15,
    "lang": "elixir",
    "run_success": false,
    "runtime_error": "Line 4: ** (Protocol.UndefinedError) protocol Enumerable not implemented for \"abcdba\" of type BitString",
    "full_runtime_error": "Line 4: ** (Protocol.UndefinedError) protocol Enumerable not implemented for \"abcdba\" of type BitString\n    (elixir 1.15.7) lib/enum.ex:1: Enumerable.impl_for!/1\n    (elixir 1.15.7) lib/enum.ex:166: Enumerable.reduce/3\n    (elixir 1.15.7) lib/enum.ex:4387: Enum.map_reduce/3\n    (elixir 1.15.7) lib/enum.ex:3841: Enum.with_index/2\n    solution.ex:4: Solution.check_strings/2\n    solution.ex:30: Driver.consume_test_cases/2\n    solution.ex:16: Driver.start/0\n    nofile:1: (file)",
    "status_runtime": "N/A",
    "memory": 75588000,
    "question_id": "2978",
    "elapsed_time": 523,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "\"abcdba\"\n\"cabdab\"",
    "expected_output": "true",
    "task_finish_time": 1706803815368,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 752,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Elixir",
    "submission_id": "1163100023",
    "status_msg": "Runtime Error",
    "state": "SUCCESS",
    "code": "defmodule Solution do\n  def check_strings(s1, s2) do\n    # Extract characters at even and odd indices for both strings\n    even_s1 = for {char, index} <- Enum.with_index(s1), rem(index, 2) == 0, do: char\n    odd_s1 = for {char, index} <- Enum.with_index(s1), rem(index, 2) == 1, do: char\n    even_s2 = for {char, index} <- Enum.with_index(s2), rem(index, 2) == 0, do: char\n    odd_s2 = for {char, index} <- Enum.with_index(s2), rem(index, 2) == 1, do: char\n\n    # Sort and compare even and odd characters separately\n    Enum.sort(even_s1) == Enum.sort(even_s2) and Enum.sort(odd_s1) == Enum.sort(odd_s2)\n  end\nend"
}