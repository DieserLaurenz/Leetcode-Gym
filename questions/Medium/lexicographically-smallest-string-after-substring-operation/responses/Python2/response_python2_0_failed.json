{
    "status_code": 11,
    "lang": "python",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 30168000,
    "question_id": "2828",
    "elapsed_time": 608,
    "compare_result
    "code_output": "\"bazab\"",
    "std_output": "",
    "last_testcase": "\"cbabc\"",
    "expected_output": "\"baabc\"",
    "task_finish_time": 1708785776385,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 1048,
    "total_testcases": 2241,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python",
    "submission_id": "1184880934",
    "input_formatted": "\"cbabc\"",
    "input": "\"cbabc\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution(object):\n    def smallestString(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: str\n        \"\"\"\n        for i in range(len(s)):\n            if s[i] != 'a':\n                return s[:i] + ''.join(chr(ord(c)-1) if c != 'a' else 'z' for c in s[i:])\n        return ''.join('z' if c == 'a' else chr(ord(c)-1) for c in s)"
}