{
    "status_code": 11,
    "lang": "racket",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 129104000,
    "question_id": "3262",
    "elapsed_time": 5017,
    "compare_result
    "code_output": "-1",
    "std_output": "",
    "last_testcase": "[5,5,5]",
    "expected_output": "15",
    "task_finish_time": 1707314498457,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 272,
    "total_testcases": 980,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Racket",
    "submission_id": "1168818797",
    "input_formatted": "[5,5,5]",
    "input": "[5,5,5]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "(define/contract (largest-perimeter nums)\n  (-> (listof exact-integer?) exact-integer?)\n  (let ([sorted-nums (sort nums >)])\n    (for/fold ([max-perimeter -1]) ([i (in-range 0 (- (length sorted-nums) 2))])\n      (let ([a (list-ref sorted-nums i)]\n            [b (list-ref sorted-nums (+ i 1))]\n            [c (list-ref sorted-nums (+ i 2))])\n        (if (and (> (+ b c) a) (> max-perimeter (+ a b c)))\n            (+ a b c)\n            max-perimeter)))))"
}