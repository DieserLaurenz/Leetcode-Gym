{
    "status_code": 11,
    "lang": "kotlin",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 69584000,
    "question_id": "3262",
    "elapsed_time": 693,
    "compare_result
    "code_output": "-1",
    "std_output": "",
    "last_testcase": "[1,12,1,2,5,50,3]",
    "expected_output": "12",
    "task_finish_time": 1707304368682,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 340,
    "total_testcases": 980,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Kotlin",
    "submission_id": "1168710752",
    "input_formatted": "[1,12,1,2,5,50,3]",
    "input": "[1,12,1,2,5,50,3]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    fun largestPerimeter(nums: IntArray): Long {\n        nums.sortDescending()\n        for (i in 0 until nums.size - 2) {\n            if (nums[i] < nums[i + 1] + nums[i + 2]) {\n                return (nums[i] + nums[i + 1] + nums[i + 2]).toLong()\n            }\n        }\n        return -1\n    }\n}"
}