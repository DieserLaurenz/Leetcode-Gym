{
    "status_code": 15,
    "lang": "elixir",
    "run_success": false,
    "runtime_error": "Line 6: ** (FunctionClauseError) no function clause matching in anonymous fn/2 in Solution.largest_perimeter/1",
    "full_runtime_error": "Line 6: ** (FunctionClauseError) no function clause matching in anonymous fn/2 in Solution.largest_perimeter/1\n    The following arguments were given to anonymous fn/2 in Solution.largest_perimeter/1:\n        # 1\n        5\n        # 2\n        {0, []}\n    solution.ex:6: anonymous fn/2 in Solution.largest_perimeter/1\n    (elixir 1.15.7) lib/enum.ex:4830: Enumerable.List.reduce/3\n    (elixir 1.15.7) lib/enum.ex:2564: Enum.reduce_while/3\n    solution.ex:6: Solution.largest_perimeter/1\n    solution.ex:30: Driver.consume_test_cases/2\n    solution.ex:18: Driver.start/0\n    nofile:1: (file)",
    "status_runtime": "N/A",
    "memory": 74928000,
    "question_id": "3262",
    "elapsed_time": 545,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "[5,5,5]",
    "expected_output": "15",
    "task_finish_time": 1707314756246,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 980,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Elixir",
    "submission_id": "1168822277",
    "status_msg": "Runtime Error",
    "state": "SUCCESS",
    "code": "defmodule Solution do\n  @spec largest_perimeter(nums :: [integer]) :: integer\n  def largest_perimeter(nums) do\n    nums\n    |> Enum.sort(:desc)\n    |> Enum.reduce_while({0, []}, fn x, {acc, [a, b | rest]} ->\n      if a + b > x, do: {:halt, a + b + x}, else: {:cont, {0, [x, a, b | rest]}}\n    end)\n    |> case do\n      {_, _} -> -1\n      perimeter -> perimeter\n    end\n  end\nend"
}