{
    "status_code": 10,
    "lang": "ruby",
    "run_success": true,
    "status_runtime": "232 ms",
    "memory": 229980000,
    "question_id": "2979",
    "elapsed_time": 473,
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1707568253687,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 435,
    "total_testcases": 435,
    "runtime_percentile": 100,
    "status_memory": "230 MB",
    "memory_percentile": 100,
    "pretty_lang": "Ruby",
    "submission_id": "1171389759",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "# @param {Integer} n\n# @param {Integer[][]} offers\n# @return {Integer}\ndef maximize_the_profit(n, offers)\n    dp = Array.new(n + 1, 0)\n    offer_map = Hash.new { |h, k| h[k] = [] }\n    offers.each { |starti, endi, goldi| offer_map[endi] << [starti, goldi] }\n    (0..n).each do |i|\n        dp[i] = dp[i - 1] if i > 0\n        offer_map[i].each do |starti, goldi|\n            dp[i] = [dp[i], dp[starti - 1] + goldi].max if starti > 0\n            dp[i] = [dp[i], goldi].max if starti == 0\n        end\n    end\n    dp[n]\nend"
}