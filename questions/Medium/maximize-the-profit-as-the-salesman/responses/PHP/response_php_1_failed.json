{
    "status_code": 11,
    "lang": "php",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 56208000,
    "question_id": "2979",
    "elapsed_time": 611,
    "compare_result": "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "code_output": "0",
    "std_output": "",
    "last_testcase": "5\n[[0,0,1],[0,2,2],[1,3,2]]",
    "expected_output": "3",
    "task_finish_time": 1707567785271,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 435,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "PHP",
    "submission_id": "1171385412",
    "input_formatted": "5, [[0,0,1],[0,2,2],[1,3,2]]",
    "input": "5\n[[0,0,1],[0,2,2],[1,3,2]]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n\n    /**\n     * @param Integer $n\n     * @param Integer[][] $offers\n     * @return Integer\n     */\n    function maximizeTheProfit($n, $offers) {\n        usort($offers, function($a, $b) {\n            return $a[1] - $b[1] ?: $a[0] - $b[0];\n        });\n        \n        $dp = array_fill(0, $n + 1, 0);\n        \n        foreach ($offers as $offer) {\n            list($start, $end, $gold) = $offer;\n            for ($i = $n; $i >= 0; $i--) {\n                if ($end < $i) break;\n                $dp[$i] = max($dp[$i], ($start > 0 ? $dp[$start - 1] : 0) + $gold);\n            }\n        }\n        \n        for ($i = 1; $i <= $n; $i++) {\n            $dp[$i] = max($dp[$i], $dp[$i - 1]);\n        }\n        \n        return $dp[$n];\n    }\n}"
}