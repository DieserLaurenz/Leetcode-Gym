{
    "status_code": 11,
    "lang": "csharp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 105344000,
    "question_id": "2979",
    "elapsed_time": 739,
    "compare_result": "100010000001001000000110011000000100000100100000000100001001101000000000000000001100000001000010100010000000000010000000101010000001000000000100000010111010000000110001000101001010001000000000000000000000000000000000000000000000000000000000001000010000000000000100000000000000000000000100000000000000000000000000000000001000010000000010001000100000001001010000000000001000000001000000000000000000100100000100010001000000000000000000010",
    "code_output": "11",
    "std_output": "",
    "last_testcase": "5\n[[0,0,1],[0,2,10],[1,3,2]]",
    "expected_output": "10",
    "task_finish_time": 1707567373248,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 61,
    "total_testcases": 435,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C#",
    "submission_id": "1171381629",
    "input_formatted": "5, [[0,0,1],[0,2,10],[1,3,2]]",
    "input": "5\n[[0,0,1],[0,2,10],[1,3,2]]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "public class Solution {\n    public int MaximizeTheProfit(int n, IList<IList<int>> offers) {\n        int[] dp = new int[n + 1];\n        List<(int start, int end, int gold)> sortedOffers = new List<(int start, int end, int gold)>();\n        foreach (var offer in offers) {\n            sortedOffers.Add((offer[0], offer[1], offer[2]));\n        }\n        sortedOffers.Sort((a, b) => a.end.CompareTo(b.end));\n\n        int idx = 0;\n        for (int i = 0; i <= n; i++) {\n            if (i > 0) dp[i] = dp[i - 1];\n            while (idx < sortedOffers.Count && sortedOffers[idx].end == i) {\n                var offer = sortedOffers[idx];\n                dp[i] = Math.Max(dp[i], dp[offer.start] + offer.gold);\n                idx++;\n            }\n        }\n\n        return dp[n];\n    }\n}"
}