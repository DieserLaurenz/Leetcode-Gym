{
    "status_code": 11,
    "lang": "csharp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 110812000,
    "question_id": "2979",
    "elapsed_time": 3053,
    "compare_result": "111110011011011111111111100010100111111111011011000111100010111111000101010111001100011111001011001110001111011111101010111011110111111001110110110101001101101110101101111001110111111001011011111111110000000010000000001101000000000001000000010000001000000000110000000010000000000000100000000000001011000000000100010100000000001001000001100010000001000000000010101000000000101000000100100001001001001000000000000100000000001000000011110",
    "code_output": "10",
    "std_output": "",
    "last_testcase": "10\n[[1,6,1],[0,1,10],[3,6,2],[0,5,10],[0,0,3],[0,0,4],[1,1,4],[0,6,7],[4,4,1]]",
    "expected_output": "12",
    "task_finish_time": 1707567439395,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 176,
    "total_testcases": 435,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C#",
    "submission_id": "1171382221",
    "input_formatted": "10, [[1,6,1],[0,1,10],[3,6,2],[0,5,10],[0,0,3],[0,0,4],[1,1,4],[0,6,7],[4,4,1]]",
    "input": "10\n[[1,6,1],[0,1,10],[3,6,2],[0,5,10],[0,0,3],[0,0,4],[1,1,4],[0,6,7],[4,4,1]]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "public class Solution {\n    public int MaximizeTheProfit(int n, IList<IList<int>> offers) {\n        List<(int start, int end, int gold)> events = new List<(int, int, int)>();\n        foreach (var offer in offers) {\n            events.Add((offer[0], offer[1], offer[2]));\n        }\n        events.Sort((a, b) => a.end.CompareTo(b.end));\n\n        int[] dp = new int[n + 1];\n        foreach (var e in events) {\n            for (int i = e.end; i >= e.start; i--) {\n                if (i == e.start) dp[e.end + 1] = Math.Max(dp[e.end + 1], dp[i] + e.gold);\n                else dp[e.end + 1] = Math.Max(dp[e.end + 1], dp[i]);\n            }\n        }\n\n        int maxGold = 0;\n        for (int i = 0; i <= n; i++) {\n            maxGold = Math.Max(maxGold, dp[i]);\n        }\n\n        return maxGold;\n    }\n}"
}