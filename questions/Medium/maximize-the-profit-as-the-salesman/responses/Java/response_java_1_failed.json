{
    "status_code": 11,
    "lang": "java",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 96700000,
    "question_id": "2979",
    "elapsed_time": 4033,
    "compare_result": "001000001001000100000100100000000100000100000001000100000000001000000000000010000100001111001110000110000000000010001000101000100000000000000010000100001001000000100001011000110010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "code_output": "5",
    "std_output": "",
    "last_testcase": "5\n[[0,0,1],[0,2,2],[1,3,2]]",
    "expected_output": "3",
    "task_finish_time": 1707567146786,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 38,
    "total_testcases": 435,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Java",
    "submission_id": "1171379499",
    "input_formatted": "5, [[0,0,1],[0,2,2],[1,3,2]]",
    "input": "5\n[[0,0,1],[0,2,2],[1,3,2]]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    public int maximizeTheProfit(int n, List<List<Integer>> offers) {\n        Collections.sort(offers, (a, b) -> Integer.compare(a.get(1), b.get(1)));\n        int[] dp = new int[n + 1];\n        for (int i = 1; i <= n; i++) dp[i] = 0;\n        for (int i = 0; i < offers.size(); i++) {\n            int start = offers.get(i).get(0);\n            int end = offers.get(i).get(1);\n            int gold = offers.get(i).get(2);\n            for (int j = end; j >= start; j--) {\n                if (j == start) dp[end + 1] = Math.max(dp[end + 1], dp[start] + gold);\n                else dp[end + 1] = Math.max(dp[end + 1], dp[j] + gold);\n            }\n        }\n        int maxGold = 0;\n        for (int i = 0; i <= n; i++) maxGold = Math.max(maxGold, dp[i]);\n        return maxGold;\n    }\n}"
}