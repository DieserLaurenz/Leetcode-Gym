{
    "status_code": 10,
    "lang": "c",
    "run_success": true,
    "status_runtime": "55 ms",
    "memory": 5584000,
    "question_id": "2802",
    "elapsed_time": 120,
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1707355733589,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 216,
    "total_testcases": 216,
    "runtime_percentile": 100,
    "status_memory": "5.6 MB",
    "memory_percentile": 100,
    "pretty_lang": "C",
    "submission_id": "1169287324",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "int punishmentNumber(int n){\n    int sum = 0;\n    for (int i = 1; i <= n; i++) {\n        int square = i * i;\n        char squareStr[12];\n        sprintf(squareStr, \"%d\", square);\n        int len = strlen(squareStr);\n        for (int j = 1; j < (1 << len); j++) {\n            int partSum = 0, part = 0;\n            for (int k = 0; k < len; k++) {\n                part = part * 10 + (squareStr[k] - '0');\n                if (j & (1 << k)) {\n                    partSum += part;\n                    part = 0;\n                }\n            }\n            if (partSum + part == i) {\n                sum += square;\n                break;\n            }\n        }\n    }\n    return sum;\n}"
}