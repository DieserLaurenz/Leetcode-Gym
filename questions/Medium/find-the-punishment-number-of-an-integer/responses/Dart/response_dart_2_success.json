{
    "status_code": 10,
    "lang": "dart",
    "run_success": true,
    "status_runtime": "469 ms",
    "memory": 148072000,
    "question_id": "2802",
    "elapsed_time": 608,
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1707365613729,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 216,
    "total_testcases": 216,
    "runtime_percentile": 100,
    "status_memory": "148.1 MB",
    "memory_percentile": 100,
    "pretty_lang": "Dart",
    "submission_id": "1169374657",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\n  int punishmentNumber(int n) {\n    int sum = 0;\n    for (int i = 1; i <= n; i++) {\n      int square = i * i;\n      if (canBePartitioned(i, square)) {\n        sum += square;\n      }\n    }\n    return sum;\n  }\n\n  bool canBePartitioned(int i, int square) {\n    String squareStr = square.toString();\n    int length = squareStr.length;\n    for (int mask = 0; mask < (1 << (length - 1)); mask++) {\n      int sum = 0;\n      int last = 0;\n      for (int j = 0; j < length; j++) {\n        if ((mask & (1 << j)) != 0 || j == length - 1) {\n          sum += int.parse(squareStr.substring(last, j + 1));\n          last = j + 1;\n        }\n      }\n      if (sum == i) {\n        return true;\n      }\n    }\n    return false;\n  }\n}"
}