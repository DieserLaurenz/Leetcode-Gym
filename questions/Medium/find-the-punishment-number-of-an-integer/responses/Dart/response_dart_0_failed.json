{
    "status_code": 11,
    "lang": "dart",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 148448000,
    "question_id": "2802",
    "elapsed_time": 485,
    "compare_result": "101111111111111111111111111111111111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "code_output": "182",
    "std_output": "",
    "last_testcase": "37",
    "expected_output": "1478",
    "task_finish_time": 1707365554731,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 36,
    "total_testcases": 216,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Dart",
    "submission_id": "1169374048",
    "input_formatted": "37",
    "input": "37",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n  int punishmentNumber(int n) {\n    int sum = 0;\n    for (int i = 1; i <= n; i++) {\n      int square = i * i;\n      String squareStr = square.toString();\n      for (int len = 1; len <= squareStr.length; len++) {\n        bool isValid = false;\n        for (int j = 0; j + len <= squareStr.length; j++) {\n          int sumParts = 0;\n          int start = 0;\n          while (start < squareStr.length) {\n            int end = (start + len > squareStr.length) ? squareStr.length : start + len;\n            String part = squareStr.substring(start, end);\n            sumParts += int.parse(part);\n            start += len;\n            if (sumParts > i) break;\n          }\n          if (sumParts == i) {\n            isValid = true;\n            break;\n          }\n        }\n        if (isValid) {\n          sum += square;\n          break;\n        }\n      }\n    }\n    return sum;\n  }\n}"
}