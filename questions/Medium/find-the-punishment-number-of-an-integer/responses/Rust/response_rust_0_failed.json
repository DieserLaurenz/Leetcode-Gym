{
    "status_code": 11,
    "lang": "rust",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 2092000,
    "question_id": "2802",
    "elapsed_time": 15,
    "compare_result": "101111111111111111111111111111111111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "code_output": "182",
    "std_output": "",
    "last_testcase": "37",
    "expected_output": "1478",
    "task_finish_time": 1707365970727,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 36,
    "total_testcases": 216,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Rust",
    "submission_id": "1169378512",
    "input_formatted": "37",
    "input": "37",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "impl Solution {\n    pub fn punishment_number(n: i32) -> i32 {\n        let mut sum = 0;\n        for i in 1..=n {\n            let square = i * i;\n            let s = square.to_string();\n            let mut can_partition = false;\n            for split_at in 1..s.len() {\n                let (left, right) = s.split_at(split_at);\n                let left_num: i32 = left.parse().unwrap_or(0);\n                let right_num: i32 = right.parse().unwrap_or(0);\n                if left_num + right_num == i {\n                    can_partition = true;\n                    break;\n                }\n            }\n            if can_partition || square == i {\n                sum += square;\n            }\n        }\n        sum\n    }\n}"
}