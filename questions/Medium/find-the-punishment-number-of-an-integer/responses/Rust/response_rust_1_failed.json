{
    "status_code": 11,
    "lang": "rust",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 2200000,
    "question_id": "2802",
    "elapsed_time": 29,
    "compare_result": "101111111111111111111111111111111111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "code_output": "182",
    "std_output": "",
    "last_testcase": "37",
    "expected_output": "1478",
    "task_finish_time": 1707365997822,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 36,
    "total_testcases": 216,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Rust",
    "submission_id": "1169378820",
    "input_formatted": "37",
    "input": "37",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "impl Solution {\n    pub fn punishment_number(n: i32) -> i32 {\n        fn can_partition(i: i32, s: &str) -> bool {\n            let sum: i32 = s.chars().map(|c| c.to_digit(10).unwrap() as i32).sum();\n            sum == i || (1..s.len()).any(|idx| {\n                let (left, right) = s.split_at(idx);\n                left.parse::<i32>().unwrap_or(0) + right.parse::<i32>().unwrap_or(0) == i\n            })\n        }\n\n        (1..=n).filter_map(|i| {\n            let square = i * i;\n            if can_partition(i, &square.to_string()) {\n                Some(square)\n            } else {\n                None\n            }\n        }).sum()\n    }\n}"
}