{
    "status_code": 11,
    "lang": "ruby",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 211536000,
    "question_id": "2802",
    "elapsed_time": 1288,
    "compare_result": "001111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "code_output": "243",
    "std_output": "",
    "last_testcase": "10",
    "expected_output": "182",
    "task_finish_time": 1707365805253,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 4,
    "total_testcases": 216,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Ruby",
    "submission_id": "1169376731",
    "input_formatted": "10",
    "input": "10",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "# @param {Integer} n\n# @return {Integer}\ndef punishment_number(n)\n    sum = 0\n    (1..n).each do |i|\n        square_str = (i * i).to_s\n        (1..square_str.length).each do |len|\n            (0..square_str.length - len).each do |start|\n                parts_sum = 0\n                (start...square_str.length).step(len) do |part_start|\n                    break if part_start + len > square_str.length\n                    parts_sum += square_str[part_start, len].to_i\n                end\n                if parts_sum == i\n                    sum += i * i\n                    break\n                end\n            end\n        end\n    end\n    sum\nend"
}