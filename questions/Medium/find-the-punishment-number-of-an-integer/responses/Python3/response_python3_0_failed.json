{
    "status_code": 11,
    "lang": "python3",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 16472000,
    "question_id": "2802",
    "elapsed_time": 156,
    "compare_result": "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "code_output": "181",
    "std_output": "",
    "last_testcase": "10",
    "expected_output": "182",
    "task_finish_time": 1708776416348,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 216,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python3",
    "submission_id": "1184780498",
    "input_formatted": "10",
    "input": "10",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution:\n    def punishmentNumber(self, n: int) -> int:\n        def can_partition(i, square):\n            str_sq = str(square)\n            for split_point in range(1, len(str_sq)):\n                left = int(str_sq[:split_point])\n                right = int(str_sq[split_point:])\n                if left + right == i:\n                    return True\n            return False\n\n        total = 0\n        for i in range(1, n + 1):\n            square = i * i\n            if \"0\" in str(i) or can_partition(i, square):\n                total += square\n        return total"
}