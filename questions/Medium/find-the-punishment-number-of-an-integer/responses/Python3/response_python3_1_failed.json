{
    "status_code": 11,
    "lang": "python3",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 16508000,
    "question_id": "2802",
    "elapsed_time": 405,
    "compare_result": "101111111111111111111111111111111111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "code_output": "182",
    "std_output": "",
    "last_testcase": "37",
    "expected_output": "1478",
    "task_finish_time": 1708776441853,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 36,
    "total_testcases": 216,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python3",
    "submission_id": "1184780708",
    "input_formatted": "37",
    "input": "37",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution:\n    def punishmentNumber(self, n: int) -> int:\n        def is_valid(i, square):\n            str_sq = str(square)\n            for start in range(1, len(str_sq)):\n                parts = [int(str_sq[j:j+start]) for j in range(0, len(str_sq), start)]\n                if sum(parts) == i:\n                    return True\n            return False\n\n        result = 0\n        for i in range(1, n + 1):\n            square = i * i\n            if i == 1 or i == sum([int(d) for d in str(square)]) or is_valid(i, square):\n                result += square\n        return result"
}