{
    "status_code": 11,
    "lang": "cpp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 10368000,
    "question_id": "2802",
    "elapsed_time": 91,
    "compare_result": "101111111111111111111111111111111111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "code_output": "182",
    "std_output": "",
    "last_testcase": "37",
    "expected_output": "1478",
    "task_finish_time": 1707355510128,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 36,
    "total_testcases": 216,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C++",
    "submission_id": "1169285578",
    "input_formatted": "37",
    "input": "37",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\npublic:\n    int punishmentNumber(int n) {\n        auto isValid = [](int i, int square) {\n            string s = to_string(square);\n            for (int len = 1; len <= s.length(); ++len) {\n                int sum = 0, j = 0;\n                while (j < s.length()) {\n                    if (j + len > s.length()) break;\n                    sum += stoi(s.substr(j, len));\n                    j += len;\n                    if (sum > i) break;\n                }\n                if (sum == i) return true;\n            }\n            return false;\n        };\n\n        int sum = 0;\n        for (int i = 1; i <= n; ++i) {\n            int square = i * i;\n            if (isValid(i, square)) sum += square;\n        }\n        return sum;\n    }\n};"
}