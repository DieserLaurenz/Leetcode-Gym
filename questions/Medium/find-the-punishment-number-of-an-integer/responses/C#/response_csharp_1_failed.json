{
    "status_code": 11,
    "lang": "csharp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 109252000,
    "question_id": "2802",
    "elapsed_time": 359,
    "compare_result": "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "code_output": "181",
    "std_output": "",
    "last_testcase": "10",
    "expected_output": "182",
    "task_finish_time": 1707355834714,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 216,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C#",
    "submission_id": "1169288102",
    "input_formatted": "10",
    "input": "10",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "public class Solution {\n    public int PunishmentNumber(int n) {\n        int result = 0;\n\n        for (int i = 1; i <= n; i++) {\n            int square = i * i;\n            if (CanPartition(square, i)) {\n                result += square;\n            }\n        }\n\n        return result;\n    }\n\n    private bool CanPartition(int square, int original) {\n        string squareStr = square.ToString();\n        int length = squareStr.Length;\n\n        for (int partition = 1; partition < (1 << (length - 1)); partition++) {\n            int sum = 0;\n            int lastCut = 0;\n            bool isValidPartition = true;\n\n            for (int bit = 0; bit < length - 1; bit++) {\n                if ((partition & (1 << bit)) != 0) {\n                    int num = int.Parse(squareStr.Substring(lastCut, bit + 1 - lastCut));\n                    sum += num;\n                    lastCut = bit + 1;\n                    if (sum > original) {\n                        isValidPartition = false;\n                        break;\n                    }\n                }\n            }\n\n            if (isValidPartition) {\n                sum += int.Parse(squareStr.Substring(lastCut, length - lastCut)); // Add last segment\n                if (sum == original) return true;\n            }\n        }\n\n        return false;\n    }\n}"
}