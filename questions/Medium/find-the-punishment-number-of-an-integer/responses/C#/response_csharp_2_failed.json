{
    "status_code": 11,
    "lang": "csharp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 109192000,
    "question_id": "2802",
    "elapsed_time": 402,
    "compare_result": "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "code_output": "181",
    "std_output": "",
    "last_testcase": "10",
    "expected_output": "182",
    "task_finish_time": 1707355864621,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 216,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C#",
    "submission_id": "1169288342",
    "input_formatted": "10",
    "input": "10",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "public class Solution {\n    public int PunishmentNumber(int n) {\n        int sum = 0;\n        for (int i = 1; i <= n; i++) {\n            if (IsValid(i)) {\n                sum += i * i;\n            }\n        }\n        return sum;\n    }\n\n    private bool IsValid(int i) {\n        string squareStr = (i * i).ToString();\n        for (int partition = 1; partition < (1 << (squareStr.Length - 1)); partition++) {\n            int sum = 0, last = 0;\n            bool add = true;\n            for (int j = 0; j < squareStr.Length; j++) {\n                if ((partition & (1 << j)) > 0 || j == squareStr.Length - 1) {\n                    int num = int.Parse(squareStr.Substring(last, j - last + 1));\n                    sum += num;\n                    last = j + 1;\n                }\n            }\n            if (sum == i) {\n                return true;\n            }\n        }\n        return false;\n    }\n}"
}