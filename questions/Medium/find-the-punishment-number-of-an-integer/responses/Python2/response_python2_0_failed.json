{
    "status_code": 11,
    "lang": "python",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 11780000,
    "question_id": "2802",
    "elapsed_time": 1694,
    "compare_result": "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "code_output": "181",
    "std_output": "",
    "last_testcase": "10",
    "expected_output": "182",
    "task_finish_time": 1708776303609,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 216,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python",
    "submission_id": "1184779386",
    "input_formatted": "10",
    "input": "10",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution(object):\n    def punishmentNumber(self, n):\n        def can_partition(num, i):\n            s = str(num)\n            for start in range(1, len(s)):\n                if int(s[:start]) + int(s[start:]) == i or (start < len(s) - 1 and can_partition(int(s[start:]), i)):\n                    return True\n            return False\n        \n        total = 0\n        for i in range(1, n + 1):\n            square = i * i\n            if can_partition(square, i):\n                total += square\n        return total"
}