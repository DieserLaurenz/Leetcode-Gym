{
    "status_code": 11,
    "lang": "python",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 11696000,
    "question_id": "2802",
    "elapsed_time": 5800,
    "compare_result": "101111111111111111111111111111111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "code_output": "2847",
    "std_output": "",
    "last_testcase": "37",
    "expected_output": "1478",
    "task_finish_time": 1708776366349,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 37,
    "total_testcases": 216,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python",
    "submission_id": "1184779958",
    "input_formatted": "37",
    "input": "37",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution(object):\n    def punishmentNumber(self, n):\n        \"\"\"\n        :type n: int\n        :rtype: int\n        \"\"\"\n\n        def check_partition(num, original):\n            num_str = str(num)\n            length = len(num_str)\n            for i in range(1, 2**length):\n                partition_sum = 0\n                last_cut = 0\n                for j in range(length):\n                    if i & (1 << j):\n                        partition_sum += int(num_str[last_cut:j+1])\n                        last_cut = j+1\n                if partition_sum == original:\n                    return True\n            return False\n\n        result = 0\n        for i in range(1, n+1):\n            square = i * i\n            if check_partition(square, i):\n                result += square\n        return result"
}