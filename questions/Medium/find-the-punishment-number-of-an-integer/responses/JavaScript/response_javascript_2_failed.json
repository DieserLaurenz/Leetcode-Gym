{
    "status_code": 11,
    "lang": "javascript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 53992000,
    "question_id": "2802",
    "elapsed_time": 229,
    "compare_result": "101111111111111111111111111111111111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "code_output": "182",
    "std_output": "",
    "last_testcase": "37",
    "expected_output": "1478",
    "task_finish_time": 1707365103686,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 36,
    "total_testcases": 216,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "JavaScript",
    "submission_id": "1169369256",
    "input_formatted": "37",
    "input": "37",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "/**\n * @param {number} n\n * @return {number}\n */\nvar punishmentNumber = function(n) {\n    function checkPartition(i, square) {\n        const str = square.toString();\n        for (let start = 1; start <= str.length; start++) {\n            for (let end = start; end <= str.length; end++) {\n                let substrings = [], sum = 0;\n                for (let k = 0; k < str.length; k += start) {\n                    let substring = str.substring(k, k + start);\n                    let num = parseInt(substring, 10);\n                    if (!isNaN(num)) {\n                        substrings.push(num);\n                        sum += num;\n                    }\n                }\n                if (sum === i) return true;\n            }\n        }\n        return false;\n    }\n\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        let square = i * i;\n        if (checkPartition(i, square)) sum += square;\n    }\n    return sum;\n};"
}