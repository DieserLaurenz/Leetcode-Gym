{
    "status_code": 11,
    "lang": "rust",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 7448000,
    "question_id": "3094",
    "elapsed_time": 851,
    "compare_result
    "code_output": "3",
    "std_output": "",
    "last_testcase": "[2,1,2,2,3,3]",
    "expected_output": "-1",
    "task_finish_time": 1707876420941,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 278,
    "total_testcases": 748,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Rust",
    "submission_id": "1174685482",
    "input_formatted": "[2,1,2,2,3,3]",
    "input": "[2,1,2,2,3,3]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "impl Solution {\n    pub fn min_operations(nums: Vec<i32>) -> i32 {\n        let mut freq = vec![0; 1000001];\n        for &num in &nums {\n            freq[num as usize] += 1;\n        }\n\n        let mut twos = 0;\n        let mut ones = 0;\n        for &f in freq.iter() {\n            twos += f / 3;\n            if f % 3 == 2 {\n                twos += 1;\n                ones += 1;\n            } else if f % 3 == 1 {\n                ones += 1;\n            }\n        }\n\n        if ones % 2 == 0 && ones / 2 <= twos {\n            twos + ones / 2\n        } else {\n            -1\n        }\n    }\n}"
}