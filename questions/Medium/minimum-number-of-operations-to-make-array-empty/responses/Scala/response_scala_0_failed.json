{
    "status_code": 11,
    "lang": "scala",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 57092000,
    "question_id": "3094",
    "elapsed_time": 10086,
    "compare_result": "0010000010000000100100101000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "code_output": "3",
    "std_output": "",
    "last_testcase": "[2,3,3,2,2,4,2,3,4]",
    "expected_output": "4",
    "task_finish_time": 1707876258054,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 7,
    "total_testcases": 748,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Scala",
    "submission_id": "1174684014",
    "input_formatted": "[2,3,3,2,2,4,2,3,4]",
    "input": "[2,3,3,2,2,4,2,3,4]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "object Solution {\n    def minOperations(nums: Array[Int]): Int = {\n        val counts = nums.groupBy(identity).mapValues(_.length)\n        val freq = counts.values.groupBy(identity).mapValues(_.size)\n\n        var (ones, twos, threes, operations) = (freq.getOrElse(1, 0), freq.getOrElse(2, 0), freq.values.sum - freq.getOrElse(1, 0) - freq.getOrElse(2, 0), 0)\n\n        while (threes > 0 || twos > 0 || ones > 1) {\n            if (threes > 0) {\n                operations += 1\n                threes -= 1\n            } else if (twos > 0) {\n                operations += 1\n                if (ones > 0) ones -= 1 else twos -= 1\n            } else if (ones > 1) {\n                operations += ones / 3\n                ones = ones % 3\n            }\n        }\n\n        if (ones == 1) -1 else operations\n    }\n}"
}