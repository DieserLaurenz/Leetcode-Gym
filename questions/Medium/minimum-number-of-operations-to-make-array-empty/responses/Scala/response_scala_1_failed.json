{
    "status_code": 11,
    "lang": "scala",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 81452000,
    "question_id": "3094",
    "elapsed_time": 1094,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "[2,3,3,2,2,4,2,3,4]",
    "expected_output": "4",
    "task_finish_time": 1707876280317,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 158,
    "total_testcases": 748,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Scala",
    "submission_id": "1174684290",
    "input_formatted": "[2,3,3,2,2,4,2,3,4]",
    "input": "[2,3,3,2,2,4,2,3,4]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "object Solution {\n    def minOperations(nums: Array[Int]): Int = {\n        val counts = nums.groupBy(identity).mapValues(_.length).values\n        val sum = counts.map(_ % 3).sum\n        val total = counts.size\n        \n        if (sum % 3 != 0) -1\n        else {\n            val twos = counts.count(_ % 3 == 2)\n            val ones = counts.count(_ % 3 == 1)\n            \n            if (twos > ones) ones + (twos - ones) / 3 * 2\n            else ones + (ones - twos) / 3 * 2\n        }\n    }\n}"
}