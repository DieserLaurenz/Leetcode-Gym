{
    "status_code": 11,
    "lang": "javascript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 63328000,
    "question_id": "3094",
    "elapsed_time": 128,
    "compare_result
    "code_output": "8",
    "std_output": "",
    "last_testcase": "[14,12,14,14,12,14,14,12,12,12,12,14,14,12,14,14,14,12,12]",
    "expected_output": "7",
    "task_finish_time": 1707866594751,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 437,
    "total_testcases": 748,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "JavaScript",
    "submission_id": "1174608643",
    "input_formatted": "[14,12,14,14,12,14,14,12,12,12,12,14,14,12,14,14,14,12,12]",
    "input": "[14,12,14,14,12,14,14,12,12,12,12,14,14,12,14,14,14,12,12]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "/**\n * @param {number[]} nums\n * @return {number}\n */\nvar minOperations = function(nums) {\n    const countMap = new Map();\n    nums.forEach(num => countMap.set(num, (countMap.get(num) || 0) + 1));\n    let operations = 0;\n    \n    for (const [num, count] of countMap) {\n        if (count % 2 === 0) {\n            operations += count / 2;\n        } else if (count % 3 === 0) {\n            operations += count / 3;\n        } else if ((count - 2) % 3 === 0 && count !== 2) {\n            operations += (count - 2) / 3 + 1;\n        } else {\n            return -1;\n        }\n    }\n    \n    return operations;\n};"
}