{
    "status_code": 11,
    "lang": "javascript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 62912000,
    "question_id": "3094",
    "elapsed_time": 198,
    "compare_result": "1000100101000001100110000000110100101010100100101100000001011000000000111001001001111100010101000100101001000011000110001001111100000010110100000110101010100110011111100010000100000100000110010000011000010000100000101011101100010010001011110010110101101011001110010001010100000001000101100000001111001011101000100100111110100110010011100110100110010010100100010011000101001001011110101010101100000010001111000001101001011100001010011000011100011010000011110001100011110000001110000101100010011000010011111000110101000111101110010101110010010100010001100100101100110001111010011110001000101001010100101101010010100100010110000001011001000100010010100011010000000001110101100110110110100101000010011000010001010101000010111000000010011100001011000000",
    "code_output": "3",
    "std_output": "",
    "last_testcase": "[2,1,2,2,3,3]",
    "expected_output": "-1",
    "task_finish_time": 1707866646076,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 306,
    "total_testcases": 748,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "JavaScript",
    "submission_id": "1174609019",
    "input_formatted": "[2,1,2,2,3,3]",
    "input": "[2,1,2,2,3,3]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "/**\n * @param {number[]} nums\n * @return {number}\n */\nvar minOperations = function(nums) {\n    let countMap = {};\n    nums.forEach(num => {\n        countMap[num] = (countMap[num] || 0) + 1;\n    });\n\n    let operations = 0;\n    let ones = 0, twos = 0;\n\n    for (let count of Object.values(countMap)) {\n        operations += Math.floor(count / 3);\n        if (count % 3 == 1) ones++;\n        if (count % 3 == 2) twos++;\n    }\n\n    while (ones > 0 && twos > 0) {\n        operations += 2;\n        ones--;\n        twos--;\n    }\n\n    if (ones % 3 == 0 && twos % 3 == 0) {\n        operations += (ones / 3) * 2;\n        operations += (twos / 3) * 2;\n    } else {\n        return -1;\n    }\n\n    return operations;\n};"
}