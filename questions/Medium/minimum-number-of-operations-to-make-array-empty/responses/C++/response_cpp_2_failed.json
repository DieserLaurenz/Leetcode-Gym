{
    "status_code": 11,
    "lang": "cpp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 95368000,
    "question_id": "3094",
    "elapsed_time": 169,
    "compare_result
    "code_output": "-1",
    "std_output": "",
    "last_testcase": "[2,3,3,2,2,4,2,3,4]",
    "expected_output": "4",
    "task_finish_time": 1707866051980,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 223,
    "total_testcases": 748,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C++",
    "submission_id": "1174604516",
    "input_formatted": "[2,3,3,2,2,4,2,3,4]",
    "input": "[2,3,3,2,2,4,2,3,4]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\npublic:\n    int minOperations(vector<int>& nums) {\n        unordered_map<int, int> freq;\n        for (int num : nums) {\n            ++freq[num];\n        }\n        int pairs = 0, triples = 0;\n        for (const auto& [num, count] : freq) {\n            triples += count / 3;\n            pairs += (count % 3) / 2;\n        }\n        int total = pairs + triples;\n        if ((pairs + 2 * triples) * 3 - nums.size() != 0) return -1;\n        return total;\n    }\n};"
}