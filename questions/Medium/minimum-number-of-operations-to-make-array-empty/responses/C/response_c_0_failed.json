{
    "status_code": 11,
    "lang": "c",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 15292000,
    "question_id": "3094",
    "elapsed_time": 622,
    "compare_result
    "code_output": "-1",
    "std_output": "",
    "last_testcase": "[2,3,3,2,2,4,2,3,4]",
    "expected_output": "4",
    "task_finish_time": 1707866217441,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 287,
    "total_testcases": 748,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C",
    "submission_id": "1174605802",
    "input_formatted": "[2,3,3,2,2,4,2,3,4]",
    "input": "[2,3,3,2,2,4,2,3,4]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "int minOperations(int* nums, int numsSize){\n    int count[1000001] = {0}, ops = 0, left = 0;\n    for (int i = 0; i < numsSize; ++i) {\n        count[nums[i]]++;\n    }\n    for (int i = 0; i < 1000001; ++i) {\n        if (count[i] > 0) {\n            ops += count[i] / 3;\n            int rem = count[i] % 3;\n            if (rem == 2) {\n                ops++;\n                left++;\n            } else if (rem == 1) {\n                left--;\n                if (left < 0) return -1;\n            }\n        }\n    }\n    return left == 0 ? ops : -1;\n}"
}