{
    "status_code": 11,
    "lang": "c",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 15396000,
    "question_id": "3094",
    "elapsed_time": 1053,
    "compare_result
    "code_output": "3",
    "std_output": "",
    "last_testcase": "[2,1,2,2,3,3]",
    "expected_output": "-1",
    "task_finish_time": 1707866276277,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 379,
    "total_testcases": 748,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C",
    "submission_id": "1174606256",
    "input_formatted": "[2,1,2,2,3,3]",
    "input": "[2,1,2,2,3,3]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "int minOperations(int* nums, int numsSize) {\n    int count[1000001] = {0};\n    for (int i = 0; i < numsSize; i++) {\n        count[nums[i]]++;\n    }\n    \n    int ops = 0, pairs = 0, singles = 0;\n    for (int i = 0; i < 1000001; i++) {\n        if (count[i] == 0) continue;\n        ops += count[i] / 3;\n        if (count[i] % 3 == 2) {\n            pairs++;\n        } else if (count[i] % 3 == 1) {\n            singles++;\n        }\n    }\n\n    if ((singles - pairs) == 0 || (singles == 0 && pairs % 2 == 0)) {\n        return ops + pairs + (singles ? 1 : 0);\n    } else {\n        return -1;\n    }\n}"
}