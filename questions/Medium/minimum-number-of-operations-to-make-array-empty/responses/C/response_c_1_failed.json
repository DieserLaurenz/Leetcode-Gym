{
    "status_code": 11,
    "lang": "c",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 15072000,
    "question_id": "3094",
    "elapsed_time": 1282,
    "compare_result
    "code_output": "3",
    "std_output": "",
    "last_testcase": "[2,1,2,2,3,3]",
    "expected_output": "-1",
    "task_finish_time": 1707866247612,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 315,
    "total_testcases": 748,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C",
    "submission_id": "1174606022",
    "input_formatted": "[2,1,2,2,3,3]",
    "input": "[2,1,2,2,3,3]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "int minOperations(int* nums, int numsSize) {\n    int count[1000001] = {0};\n    for (int i = 0; i < numsSize; i++) {\n        count[nums[i]]++;\n    }\n\n    int twoCount = 0, oneCount = 0, operations = 0;\n    for (int i = 0; i < 1000001; i++) {\n        if (count[i] > 0) {\n            operations += count[i] / 3;\n            int remainder = count[i] % 3;\n            if (remainder == 1) {\n                oneCount++;\n                operations++;\n            } else if (remainder == 2) {\n                twoCount++;\n                operations++;\n            }\n        }\n    }\n\n    if ((oneCount - twoCount) % 3 == 0 && oneCount >= twoCount) {\n        return operations;\n    } else {\n        return -1;\n    }\n}"
}