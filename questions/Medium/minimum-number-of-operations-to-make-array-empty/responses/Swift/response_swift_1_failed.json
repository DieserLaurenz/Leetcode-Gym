{
    "status_code": 11,
    "lang": "swift",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 22060000,
    "question_id": "3094",
    "elapsed_time": 425,
    "compare_result
    "code_output": "2",
    "std_output": "",
    "last_testcase": "[2,3,3,2,2,4,2,3,4]",
    "expected_output": "4",
    "task_finish_time": 1707866901988,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 44,
    "total_testcases": 748,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Swift",
    "submission_id": "1174610940",
    "input_formatted": "[2,3,3,2,2,4,2,3,4]",
    "input": "[2,3,3,2,2,4,2,3,4]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    func minOperations(_ nums: [Int]) -> Int {\n        var freq = [Int: Int]()\n        nums.forEach { freq[$0, default: 0] += 1 }\n        var pairs = 0, singles = 0\n        for (_, value) in freq {\n            pairs += value / 2\n            singles += value % 2\n        }\n        if singles > pairs { return -1 }\n        return (pairs - singles) / 2 + singles\n    }\n}"
}