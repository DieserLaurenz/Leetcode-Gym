{
    "status_code": 11,
    "lang": "swift",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 22560000,
    "question_id": "3094",
    "elapsed_time": 400,
    "compare_result
    "code_output": "-1",
    "std_output": "",
    "last_testcase": "[2,3,3,2,2,4,2,3,4]",
    "expected_output": "4",
    "task_finish_time": 1707866931094,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 417,
    "total_testcases": 748,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Swift",
    "submission_id": "1174611135",
    "input_formatted": "[2,3,3,2,2,4,2,3,4]",
    "input": "[2,3,3,2,2,4,2,3,4]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    func minOperations(_ nums: [Int]) -> Int {\n        var countMap = nums.reduce(into: [:]) { counts, num in counts[num, default: 0] += 1 }\n        var operations = 0\n        \n        for (_, count) in countMap {\n            operations += count / 3 + (count % 3 > 0 ? 1 : 0)\n        }\n        \n        let uniqueCounts = Set(countMap.values)\n        if uniqueCounts.count == 1 && uniqueCounts.first! % 3 == 0 {\n            return operations\n        }\n        \n        let totalElements = countMap.values.reduce(0, +)\n        if totalElements % 2 != 0 {\n            return -1\n        }\n        \n        return operations\n    }\n}"
}