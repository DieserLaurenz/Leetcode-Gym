{
    "status_code": 11,
    "lang": "python3",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 30932000,
    "question_id": "3094",
    "elapsed_time": 598,
    "compare_result
    "code_output": "-1",
    "std_output": "",
    "last_testcase": "[2,3,3,2,2,4,2,3,4]",
    "expected_output": "4",
    "task_finish_time": 1708828361151,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 448,
    "total_testcases": 748,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python3",
    "submission_id": "1185315022",
    "input_formatted": "[2,3,3,2,2,4,2,3,4]",
    "input": "[2,3,3,2,2,4,2,3,4]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "from typing import List\nfrom collections import Counter\n\nclass Solution:\n    def minOperations(self, nums: List[int]) -> int:\n        freq = Counter(nums)\n        twos, ones = 0, 0\n        for count in freq.values():\n            ones += count % 3\n            twos += count // 3\n        if ones > twos:\n            return -1\n        return twos + (ones + 1) // 2"
}