{
    "status_code": 11,
    "lang": "golang",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 10972000,
    "question_id": "3094",
    "elapsed_time": 139,
    "compare_result": "0000000000000001100100000000000100100000000010100100100010000000001000010001001001010000010001000100000000000001000000000001010010000000000101000000000010000000010010000000000000000101000000000000011000000000000000001011100100000010001011110000000101100000101100100000010000000001000101100010000010001010100000000100100100000100000000000100000010010010010100010011000001001000000010100000010000001000000011010001000000010000000000000000011000010000000000110001000001100000001010010100100000001000000000111000100000000000000010000001100000000000100000001011001000000000001000001100000100001001110000000000001000000100100000100000000001000000010010000011000000010000000000000100000001101000000000001000010001000000010010100100000010000000000001000000",
    "code_output": "-1",
    "std_output": "",
    "last_testcase": "[2,3,3,2,2,4,2,3,4]",
    "expected_output": "4",
    "task_finish_time": 1707876046082,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 141,
    "total_testcases": 748,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Go",
    "submission_id": "1174682246",
    "input_formatted": "[2,3,3,2,2,4,2,3,4]",
    "input": "[2,3,3,2,2,4,2,3,4]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "func minOperations(nums []int) int {\n    freq := make(map[int]int)\n    for _, num := range nums {\n        freq[num]++\n    }\n\n    var twos, ones int\n    for _, v := range freq {\n        twos += v / 2\n        ones += v % 2\n    }\n\n    if (twos+ones)%2 != 0 || ones > twos {\n        return -1\n    }\n    return twos - (twos-ones)/2\n}"
}