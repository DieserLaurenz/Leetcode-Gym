{
    "status_code": 11,
    "lang": "erlang",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 200000000,
    "question_id": "3094",
    "elapsed_time": 2375,
    "compare_result
    "code_output": "-1",
    "std_output": "",
    "last_testcase": "[2,3,3,2,2,4,2,3,4]",
    "expected_output": "4",
    "task_finish_time": 1707876641184,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 179,
    "total_testcases": 748,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Erlang",
    "submission_id": "1174687393",
    "input_formatted": "[2,3,3,2,2,4,2,3,4]",
    "input": "[2,3,3,2,2,4,2,3,4]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "-spec min_operations(Nums :: [integer()]) -> integer().\nmin_operations(Nums) ->\n    Counts = lists:foldl(fun (X, Acc) -> maps:update_with(X, fun (C) -> C + 1 end, 1, Acc) end, #{}, Nums),\n    {Pairs, Impairs, Total} = maps:fold(fun (_K, V, {P, I, T}) -> \n                                            {P + V div 2, I + V rem 2, T + V} \n                                        end, {0, 0, 0}, Counts),\n    if\n        Total rem 2 == 1 -> -1;\n        Impairs rem 2 == 1 -> -1;\n        true -> Pairs + Impairs div 2\n    end."
}