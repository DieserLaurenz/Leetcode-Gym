{
    "status_code": 11,
    "lang": "erlang",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 170804000,
    "question_id": "3094",
    "elapsed_time": 1881,
    "compare_result
    "code_output": "-1",
    "std_output": "",
    "last_testcase": "[2,3,3,2,2,4,2,3,4]",
    "expected_output": "4",
    "task_finish_time": 1707876618062,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 195,
    "total_testcases": 748,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Erlang",
    "submission_id": "1174687216",
    "input_formatted": "[2,3,3,2,2,4,2,3,4]",
    "input": "[2,3,3,2,2,4,2,3,4]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "-spec min_operations(Nums :: [integer()]) -> integer().\nmin_operations(Nums) ->\n    CountMap = lists:foldl(fun(X, Acc) -> maps:update_with(X, fun(C) -> C + 1 end, 1, Acc) end, #{}, Nums),\n    {Twos, Threes, Rest} = maps:fold(fun(_, V, {AccTwos, AccThrees, AccRest}) ->\n                                         {AccTwos + V div 2, AccThrees + V div 3, AccRest + V rem 3}\n                                     end, {0, 0, 0}, CountMap),\n    Ops = Twos div 2 + Threes,\n    if\n        Rest rem 2 == 0 -> Ops;\n        true -> -1\n    end."
}