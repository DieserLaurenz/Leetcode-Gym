{
    "status_code": 11,
    "lang": "csharp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 65520000,
    "question_id": "3094",
    "elapsed_time": 430,
    "compare_result": "0000100001000001100100000000110100101010100100100100000001001000000000011001001001110100010101000100001001000011000110001001111000000010000100000110100010100000011011100000000100000100000100000000011000000000000000101011101100010010001011110010110101101011001110010001010100000001000101100000001110001011100000100100111110000110010011000110100010010010000100010011000101001001011110100000001000000010000011000001100000011100001010001000011100010010000000110001100011110000001110000100100010011000010001111000110100000001001110010101110000010000010000000000001000100001101000001100000000101001010100101100010000100100000100000000010001000100010010100011000000000000010000100100100010100001000010001000010001000001000010100000000010001000001001000000",
    "code_output": "3",
    "std_output": "",
    "last_testcase": "[2,3,3,2,2,4,2,3,4]",
    "expected_output": "4",
    "task_finish_time": 1707866517040,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 226,
    "total_testcases": 748,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C#",
    "submission_id": "1174608094",
    "input_formatted": "[2,3,3,2,2,4,2,3,4]",
    "input": "[2,3,3,2,2,4,2,3,4]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "public class Solution {\n    public int MinOperations(int[] nums) {\n        Dictionary<int, int> freq = new Dictionary<int, int>();\n        foreach (var num in nums) {\n            if (freq.ContainsKey(num)) freq[num]++;\n            else freq[num] = 1;\n        }\n\n        int twos = 0, ones = 0, operations = 0;\n        foreach (var pair in freq) {\n            int count = pair.Value;\n            operations += count / 3;\n            count %= 3;\n            if (count == 1) {\n                ones++;\n            } else if (count == 2) {\n                twos++;\n            }\n        }\n\n        if ((twos + 2 * ones) % 3 != 0) return -1;\n        return operations + (twos + 2 * ones) / 3;\n    }\n}"
}