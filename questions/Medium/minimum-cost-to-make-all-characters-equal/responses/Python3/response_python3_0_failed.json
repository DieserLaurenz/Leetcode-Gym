{
    "status_code": 11,
    "lang": "python3",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 24964000,
    "question_id": "2817",
    "elapsed_time": 433,
    "compare_result
    "code_output": "0",
    "std_output": "",
    "last_testcase": "\"0011\"",
    "expected_output": "2",
    "task_finish_time": 1708808813311,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 20,
    "total_testcases": 1574,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python3",
    "submission_id": "1185170429",
    "input_formatted": "\"0011\"",
    "input": "\"0011\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution:\n    def minimumCost(self, s: str) -> int:\n        n = len(s)\n        prefix_ones = [0] * (n + 1)\n        suffix_ones = [0] * (n + 1)\n        \n        for i in range(1, n + 1):\n            prefix_ones[i] = prefix_ones[i - 1] + (s[i - 1] == '1')\n        \n        for i in range(n - 1, -1, -1):\n            suffix_ones[i] = suffix_ones[i + 1] + (s[i] == '1')\n        \n        min_cost = float('inf')\n        for i in range(n + 1):\n            cost_to_make_zero = prefix_ones[i] + (n - i - suffix_ones[i])\n            cost_to_make_one = (i - prefix_ones[i]) + suffix_ones[i]\n            min_cost = min(min_cost, cost_to_make_zero, cost_to_make_one)\n        \n        return min_cost"
}