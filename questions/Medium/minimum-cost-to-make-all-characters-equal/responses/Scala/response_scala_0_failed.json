{
    "status_code": 11,
    "lang": "scala",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 55408000,
    "question_id": "2817",
    "elapsed_time": 787,
    "compare_result
    "code_output": "0",
    "std_output": "",
    "last_testcase": "\"0011\"",
    "expected_output": "2",
    "task_finish_time": 1707764251729,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 57,
    "total_testcases": 1574,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Scala",
    "submission_id": "1173475108",
    "input_formatted": "\"0011\"",
    "input": "\"0011\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "object Solution {\n    def minimumCost(s: String): Long = {\n        val n = s.length\n        val prefixSum = new Array[Int](n + 1)\n        for (i <- s.indices) {\n            prefixSum(i + 1) = prefixSum(i) + (if (s(i) == '0') 1 else 0)\n        }\n        var minCost = Long.MaxValue\n        for (i <- 0 to n) {\n            val costLeft = i - prefixSum(i) // Cost to make all 0s to 1s in left part\n            val costRight = prefixSum(n) - prefixSum(i) // Cost to make all 0s to 1s in right part\n            minCost = minCost.min(costLeft + costRight)\n        }\n        minCost\n    }\n}"
}