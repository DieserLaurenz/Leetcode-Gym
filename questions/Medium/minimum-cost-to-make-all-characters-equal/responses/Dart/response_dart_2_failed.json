{
    "status_code": 15,
    "lang": "dart",
    "run_success": false,
    "runtime_error": "Line 19: Char 17: Error: The getter 'Math' isn't defined for the class 'Solution'.",
    "full_runtime_error": "Line 19: Char 17: Error: The getter 'Math' isn't defined for the class 'Solution'.\nTry correcting the name to the name of an existing getter, or defining a getter or field named 'Math'.\n      minCost = Math.min(minCost, Math.min(cost, altCost));\n                ^^^^\nLine 19: Char 35: Error: The getter 'Math' isn't defined for the class 'Solution'.\nTry correcting the name to the name of an existing getter, or defining a getter or field named 'Math'.\n      minCost = Math.min(minCost, Math.min(cost, altCost));\n                                  ^^^^",
    "status_runtime": "N/A",
    "memory": 150264000,
    "question_id": "2817",
    "elapsed_time": 387,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "\"0011\"",
    "expected_output": "2",
    "task_finish_time": 1707763959764,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 1574,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Dart",
    "submission_id": "1173471281",
    "status_msg": "Runtime Error",
    "state": "SUCCESS",
    "code": "class Solution {\n  int minimumCost(String s) {\n    int n = s.length;\n    List<int> prefixZero = List.filled(n + 1, 0);\n    List<int> prefixOne = List.filled(n + 1, 0);\n\n    for (int i = 1; i <= n; i++) {\n      prefixZero[i] = prefixZero[i - 1] + (s[i - 1] == '0' ? 1 : 0);\n      prefixOne[i] = prefixOne[i - 1] + (s[i - 1] == '1' ? 1 : 0);\n    }\n\n    int minCost = n; // Maximum possible cost\n\n    for (int i = 0; i <= n; i++) {\n      // Cost to make all 0s till i and all 1s from i+1 to n-1\n      int cost = prefixOne[i] + (prefixZero[n] - prefixZero[i]);\n      // Cost to make all 1s till i and all 0s from i+1 to n-1\n      int altCost = prefixZero[i] + (prefixOne[n] - prefixOne[i]);\n      minCost = Math.min(minCost, Math.min(cost, altCost));\n    }\n\n    return minCost;\n  }\n}"
}