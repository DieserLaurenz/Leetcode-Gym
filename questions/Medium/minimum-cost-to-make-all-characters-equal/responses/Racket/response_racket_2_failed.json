{
    "status_code": 11,
    "lang": "racket",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 129996000,
    "question_id": "2817",
    "elapsed_time": 361,
    "compare_result
    "code_output": "0",
    "std_output": "",
    "last_testcase": "\"0011\"",
    "expected_output": "2",
    "task_finish_time": 1707764566853,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 57,
    "total_testcases": 1574,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Racket",
    "submission_id": "1173479216",
    "input_formatted": "\"0011\"",
    "input": "\"0011\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "(define/contract (minimum-cost s)\n  (-> string? exact-integer?)\n  (let* ((n (string-length s))\n         (prefix-0 (make-vector (+ 1 n) 0))\n         (suffix-1 (make-vector (+ 1 n) 0)))\n    (for ([i (in-range 1 (+ 1 n))])\n      (vector-set! prefix-0 i (+ (vector-ref prefix-0 (- i 1))\n                                 (if (char=? (string-ref s (- i 1)) #\\0) 0 1))))\n    (for ([i (in-range (- n 1) -1 -1)])\n      (vector-set! suffix-1 i (+ (vector-ref suffix-1 (+ i 1))\n                                 (if (char=? (string-ref s i) #\\1) 0 1))))\n    (let loop ([i 0] [min-cost (vector-ref prefix-0 n)])\n      (if (< i n)\n          (let ([cost (+ (vector-ref prefix-0 i) (vector-ref suffix-1 i))])\n            (loop (+ i 1) (if (< cost min-cost) cost min-cost)))\n          min-cost))))"
}