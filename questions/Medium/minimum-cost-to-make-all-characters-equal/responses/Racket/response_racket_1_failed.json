{
    "status_code": 11,
    "lang": "racket",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 128140000,
    "question_id": "2817",
    "elapsed_time": 386,
    "compare_result
    "code_output": "0",
    "std_output": "",
    "last_testcase": "\"0011\"",
    "expected_output": "2",
    "task_finish_time": 1707764522201,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 88,
    "total_testcases": 1574,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Racket",
    "submission_id": "1173478682",
    "input_formatted": "\"0011\"",
    "input": "\"0011\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "(define/contract (minimum-cost s)\n  (-> string? exact-integer?)\n  (let loop ((i 0) (cost 0) (zeros (count (lambda (c) (equal? c #\\0)) (string->list s))) (ones 0))\n    (if (= i (string-length s))\n        (+ cost (min zeros ones))\n        (let ((new-zeros (if (char=? (string-ref s i) #\\0) (- zeros 1) zeros))\n              (new-ones (if (char=? (string-ref s i) #\\1) (+ ones 1) ones)))\n          (loop (+ i 1) (+ cost (min zeros ones)) new-zeros new-ones)))))"
}