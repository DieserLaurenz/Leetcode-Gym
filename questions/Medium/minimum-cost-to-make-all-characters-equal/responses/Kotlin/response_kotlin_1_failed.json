{
    "status_code": 11,
    "lang": "kotlin",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 38992000,
    "question_id": "2817",
    "elapsed_time": 285,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "\"0011\"",
    "expected_output": "2",
    "task_finish_time": 1707763801781,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 33,
    "total_testcases": 1574,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Kotlin",
    "submission_id": "1173469150",
    "input_formatted": "\"0011\"",
    "input": "\"0011\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    fun minimumCost(s: String): Long {\n        var cost = 0L\n        var flipCost = 0L\n        var minCost = Long.MAX_VALUE\n        val n = s.length\n\n        for (i in 0 until n) {\n            if (s[i] == '1') {\n                flipCost++\n            }\n            val costToMakeAllZero = flipCost + (n - i - 1 - (flipCost - cost))\n            val costToMakeAllOne = cost + (i + 1 - cost)\n            minCost = minOf(minCost, costToMakeAllZero, costToMakeAllOne)\n            if (s[i] == '0') cost++\n        }\n\n        return minCost\n    }\n}"
}