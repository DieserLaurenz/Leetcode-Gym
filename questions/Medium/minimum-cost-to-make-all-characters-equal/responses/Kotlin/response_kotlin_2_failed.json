{
    "status_code": 11,
    "lang": "kotlin",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 43192000,
    "question_id": "2817",
    "elapsed_time": 758,
    "compare_result
    "code_output": "3",
    "std_output": "",
    "last_testcase": "\"010101\"",
    "expected_output": "9",
    "task_finish_time": 1707763839491,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 58,
    "total_testcases": 1574,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Kotlin",
    "submission_id": "1173469630",
    "input_formatted": "\"010101\"",
    "input": "\"010101\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    fun minimumCost(s: String): Long {\n        val n = s.length\n        val prefix = LongArray(n + 1)\n        val suffix = LongArray(n + 1)\n        \n        for (i in 1..n) {\n            prefix[i] = prefix[i - 1] + if (s[i - 1] == '0') 1 else 0\n        }\n        \n        for (i in n - 1 downTo 0) {\n            suffix[i] = suffix[i + 1] + if (s[i] == '1') 1 else 0\n        }\n        \n        var minCost = Long.MAX_VALUE\n        for (i in 0..n) {\n            minCost = minOf(minCost, prefix[i] + suffix[i])\n        }\n        \n        return minCost\n    }\n}"
}