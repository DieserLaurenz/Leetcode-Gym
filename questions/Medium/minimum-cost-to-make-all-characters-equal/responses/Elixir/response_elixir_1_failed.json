{
    "status_code": 11,
    "lang": "elixir",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 130004000,
    "question_id": "2817",
    "elapsed_time": 924,
    "compare_result": "01111111111000000000000000000000000000001100000000000000000000000000001110000000000000011000000000000000000000000000000000000000000011100000000000000000000000000000011100000011000000000000000000000000000000000000000000000000000000000000000000000000000000000111000000000000000000000000000000000000000000000000000000000000001110000000000000011001100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001100000000000000000000000000000001100000001101100100000000000000100000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000001000000000000000010000101100010010000000000000001000000000000001000000000000000000000000000000000000000000000101100000001000100100000000000000000000000000001011000000000000000100000001000101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001100110",
    "code_output": "4",
    "std_output": "",
    "last_testcase": "\"0011\"",
    "expected_output": "2",
    "task_finish_time": 1707773723683,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 74,
    "total_testcases": 1574,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Elixir",
    "submission_id": "1173576099",
    "input_formatted": "\"0011\"",
    "input": "\"0011\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "defmodule Solution do\n  @spec minimum_cost(s :: String.t) :: integer\n  def minimum_cost(s) do\n    s\n    |> String.graphemes()\n    |> Enum.reduce({0, 0, 0}, fn\n      \"0\", {zeros, ones, cost} -> {zeros + 1, ones, cost + ones}\n      \"1\", {zeros, ones, cost} -> {zeros, ones + 1, cost + zeros}\n    end)\n    |> (fn {_, _, cost} -> cost end).()\n  end\nend"
}