{
    "status_code": 11,
    "lang": "rust",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 3316000,
    "question_id": "2817",
    "elapsed_time": 18,
    "compare_result
    "code_output": "0",
    "std_output": "",
    "last_testcase": "\"0011\"",
    "expected_output": "2",
    "task_finish_time": 1707764368903,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 31,
    "total_testcases": 1574,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Rust",
    "submission_id": "1173476743",
    "input_formatted": "\"0011\"",
    "input": "\"0011\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "impl Solution {\n    pub fn minimum_cost(s: String) -> i64 {\n        let n = s.len();\n        let mut cost = vec![0; n + 1]; // Cost to make all characters equal up to index i\n        let bytes = s.as_bytes();\n\n        // Calculate cost for converting all previous characters to '0'\n        for i in 1..=n {\n            cost[i] = cost[i - 1] + if bytes[i - 1] == b'1' { 1 } else { 0 };\n        }\n\n        let mut min_cost = i64::MAX;\n        let mut cost_to_convert_to_1 = 0;\n\n        // Calculate minimum cost by checking at each index if it's cheaper to convert\n        // all previous characters to '0' and all next characters to '1'\n        for i in (0..n).rev() {\n            min_cost = min_cost.min(cost[i + 1] + cost_to_convert_to_1);\n            if bytes[i] == b'0' {\n                cost_to_convert_to_1 += 1;\n            }\n        }\n\n        // Check if converting all to '0' is cheaper\n        min_cost.min(cost[n]) as i64\n    }\n}"
}