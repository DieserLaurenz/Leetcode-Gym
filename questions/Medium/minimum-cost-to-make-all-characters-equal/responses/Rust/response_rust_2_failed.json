{
    "status_code": 11,
    "lang": "rust",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 4048000,
    "question_id": "2817",
    "elapsed_time": 20,
    "compare_result
    "code_output": "0",
    "std_output": "",
    "last_testcase": "\"0011\"",
    "expected_output": "2",
    "task_finish_time": 1707764433498,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 57,
    "total_testcases": 1574,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Rust",
    "submission_id": "1173477544",
    "input_formatted": "\"0011\"",
    "input": "\"0011\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "impl Solution {\n    pub fn minimum_cost(s: String) -> i64 {\n        let n = s.len() as i64;\n        let mut prefix_ones = vec![0; n as usize + 1];\n        let mut suffix_zeros = vec![0; n as usize + 1];\n        let bytes = s.as_bytes();\n\n        for i in 1..=n as usize {\n            prefix_ones[i] = prefix_ones[i - 1] + if bytes[i - 1] == b'1' { 1 } else { 0 };\n        }\n\n        for i in (0..n as usize).rev() {\n            suffix_zeros[i] = suffix_zeros[i + 1] + if bytes[i] == b'0' { 1 } else { 0 };\n        }\n\n        let mut min_cost = i64::MAX;\n        for i in 0..=n as usize {\n            let cost = prefix_ones[i] + suffix_zeros[i]; // Cost of making left part all 1s and right part all 0s\n            min_cost = min_cost.min(cost);\n        }\n\n        min_cost\n    }\n}"
}