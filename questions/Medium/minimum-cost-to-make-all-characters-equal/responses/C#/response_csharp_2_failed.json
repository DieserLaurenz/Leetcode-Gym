{
    "status_code": 11,
    "lang": "csharp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 51724000,
    "question_id": "2817",
    "elapsed_time": 125,
    "compare_result": "00111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111111000000000000000000000000000000000000000000000000000000000111111000000000000000000000000001111100000000000111100001110111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001101000",
    "code_output": "0",
    "std_output": "",
    "last_testcase": "\"0011\"",
    "expected_output": "2",
    "task_finish_time": 1707763193076,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 57,
    "total_testcases": 1574,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C#",
    "submission_id": "1173460518",
    "input_formatted": "\"0011\"",
    "input": "\"0011\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "public class Solution {\n    public long MinimumCost(string s) {\n        int n = s.Length;\n        int[] prefixOnes = new int[n];\n        int[] suffixZeros = new int[n];\n        long minCost = long.MaxValue;\n\n        prefixOnes[0] = s[0] == '1' ? 1 : 0;\n        for (int i = 1; i < n; i++) {\n            prefixOnes[i] = prefixOnes[i - 1] + (s[i] == '1' ? 1 : 0);\n        }\n\n        suffixZeros[n - 1] = s[n - 1] == '0' ? 1 : 0;\n        for (int i = n - 2; i >= 0; i--) {\n            suffixZeros[i] = suffixZeros[i + 1] + (s[i] == '0' ? 1 : 0);\n        }\n\n        for (int i = 0; i < n; i++) {\n            long costToMakeAllOnes = prefixOnes[i] + (suffixZeros[i] - (s[i] == '0' ? 1 : 0));\n            long costToMakeAllZeros = (i + 1 - prefixOnes[i]) + suffixZeros[i];\n            minCost = Math.Min(minCost, Math.Min(costToMakeAllOnes, costToMakeAllZeros));\n        }\n\n        // Check for making all zeros without flipping the last character to one\n        minCost = Math.Min(minCost, n - prefixOnes[n - 1]);\n\n        return minCost == long.MaxValue ? 0 : minCost;\n    }\n}"
}