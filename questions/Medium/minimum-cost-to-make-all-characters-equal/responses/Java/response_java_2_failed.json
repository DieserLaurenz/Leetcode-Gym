{
    "status_code": 11,
    "lang": "java",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 45552000,
    "display_runtime": "13",
    "question_id": "2817",
    "elapsed_time": 230,
    "compare_result
    "code_output": "3",
    "std_output": "",
    "last_testcase": "\"010101\"",
    "expected_output": "9",
    "task_finish_time": 1707754182011,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 136,
    "total_testcases": 1574,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Java",
    "submission_id": "1173312971",
    "input_formatted": "\"010101\"",
    "input": "\"010101\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    public long minimumCost(String s) {\n        long cost = 0;\n        int n = s.length();\n        int[] prefixZeroes = new int[n];\n        int[] suffixOnes = new int[n];\n\n        prefixZeroes[0] = s.charAt(0) == '0' ? 1 : 0;\n        for (int i = 1; i < n; i++) {\n            prefixZeroes[i] = prefixZeroes[i - 1] + (s.charAt(i) == '0' ? 1 : 0);\n        }\n\n        suffixOnes[n - 1] = s.charAt(n - 1) == '1' ? 1 : 0;\n        for (int i = n - 2; i >= 0; i--) {\n            suffixOnes[i] = suffixOnes[i + 1] + (s.charAt(i) == '1' ? 1 : 0);\n        }\n\n        long minCost = Long.MAX_VALUE;\n        for (int i = 0; i < n; i++) {\n            long costToMakeAllZeroes = (i + 1) - prefixZeroes[i] + (i < n - 1 ? suffixOnes[i + 1] : 0);\n            long costToMakeAllOnes = prefixZeroes[i] + (i < n - 1 ? (n - i - 1) - suffixOnes[i + 1] : 0);\n            minCost = Math.min(minCost, Math.min(costToMakeAllZeroes, costToMakeAllOnes));\n        }\n\n        return minCost == Long.MAX_VALUE ? 0 : minCost;\n    }\n}"
}