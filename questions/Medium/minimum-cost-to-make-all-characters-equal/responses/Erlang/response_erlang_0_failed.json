{
    "status_code": 11,
    "lang": "erlang",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 94488000,
    "question_id": "2817",
    "elapsed_time": 1602,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "\"0011\"",
    "expected_output": "2",
    "task_finish_time": 1707764618485,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 105,
    "total_testcases": 1574,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Erlang",
    "submission_id": "1173479933",
    "input_formatted": "\"0011\"",
    "input": "\"0011\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "-spec minimum_cost(S :: unicode:unicode_binary()) -> integer().\nminimum_cost(S) ->\n    Bin = binary:bin_to_list(S),\n    N = length(Bin),\n    {Cost, _} = lists:foldl(\n        fun(X, {Acc, Ones}) ->\n            {Min1, Min2} = {Acc + Ones, N - Acc + Ones - 1},\n            {min(Min1, Min2), Ones + (X band 1)}\n        end,\n        {0, 0},\n        Bin\n    ),\n    Cost."
}