{
    "status_code": 15,
    "lang": "erlang",
    "run_success": false,
    "runtime_error": "Line 11: exception error: function_clause",
    "full_runtime_error": "Line 11: exception error: function_clause\n[{solution,'-minimum_cost/1-fun-1-',\n              [48,4],\n              [{file,\"solution.erl\"},{line,11}]},\n {lists,foldl,3,[{file,\"lists.erl\"},{line,1594}]},\n {solution,minimum_cost,1,[{file,\"solution.erl\"},{line,11}]},\n {solution,consume_test_cases,2,[{file,\"solution.erl\"},{line,35}]},\n {solution,driver,0,[{file,\"solution.erl\"},{line,23}]},\n {solution,start,0,[{file,\"solution.erl\"},{line,52}]},\n {init,start_em,1,[]},\n {init,do_boot,3,[]}]",
    "status_runtime": "N/A",
    "memory": 61348000,
    "question_id": "2817",
    "elapsed_time": 1374,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "\"0011\"",
    "expected_output": "2",
    "task_finish_time": 1707764679486,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 1574,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Erlang",
    "submission_id": "1173480684",
    "status_msg": "Runtime Error",
    "state": "SUCCESS",
    "code": "-spec minimum_cost(S :: unicode:unicode_binary()) -> integer().\nminimum_cost(S) ->\n    Bin = binary:bin_to_list(S),\n    N = length(Bin),\n    Counts = lists:foldl(fun(X, {ZeroCount, OneCount}) -> \n                            if \n                                X == $0 -> {ZeroCount + 1, OneCount}; \n                                true -> {ZeroCount, OneCount + 1} \n                            end \n                         end, {0, 0}, Bin),\n    MinCost = lists:foldl(fun(X, {Cost, ZeroCount, OneCount}) -> \n                            {NewCost, NewZeroCount, NewOneCount} = \n                                if \n                                    X == $0 -> {Cost + OneCount, ZeroCount + 1, OneCount};\n                                    true -> {Cost + ZeroCount, ZeroCount, OneCount - 1}\n                                end,\n                            min(Cost, NewCost)\n                          end, N, Bin),\n    min(element(1, Counts), MinCost)."
}