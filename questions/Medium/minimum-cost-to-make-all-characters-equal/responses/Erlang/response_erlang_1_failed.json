{
    "status_code": 11,
    "lang": "erlang",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 100784000,
    "question_id": "2817",
    "elapsed_time": 1810,
    "compare_result
    "code_output": "-292",
    "std_output": "",
    "last_testcase": "\"0011\"",
    "expected_output": "2",
    "task_finish_time": 1707764648506,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 2,
    "total_testcases": 1574,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Erlang",
    "submission_id": "1173480306",
    "input_formatted": "\"0011\"",
    "input": "\"0011\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "-spec minimum_cost(S :: unicode:unicode_binary()) -> integer().\nminimum_cost(S) ->\n    Bin = binary:bin_to_list(S),\n    N = length(Bin),\n    {Cost, _, _} = lists:foldl(\n        fun(X, {Acc, Ones, Zeros}) ->\n            NewOnes = Ones + (X band 1),\n            NewZeros = Zeros + (X bxor 1),\n            {Min1, Min2} = {Acc + Ones - Zeros, N - Acc - Ones + Zeros},\n            {min(Min1, Min2), NewOnes, NewZeros}\n        end,\n        {0, 0, 0},\n        Bin\n    ),\n    Cost."
}