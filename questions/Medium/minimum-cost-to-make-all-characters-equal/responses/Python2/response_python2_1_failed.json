{
    "status_code": 11,
    "lang": "python",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 19724000,
    "question_id": "2817",
    "elapsed_time": 403,
    "compare_result": "00111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001000000000000000100000001000101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001100000",
    "code_output": "0",
    "std_output": "",
    "last_testcase": "\"0011\"",
    "expected_output": "2",
    "task_finish_time": 1708808726574,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 20,
    "total_testcases": 1574,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python",
    "submission_id": "1185169710",
    "input_formatted": "\"0011\"",
    "input": "\"0011\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution(object):\n    def minimumCost(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: int\n        \"\"\"\n        n = len(s)\n        prefix_sum = [0] * (n + 1)  # Prefix sum of 1's\n        for i in range(1, n + 1):\n            prefix_sum[i] = prefix_sum[i - 1] + (s[i - 1] == '1')\n\n        # Min cost to make all characters '0' or '1' directly\n        min_cost = min(prefix_sum[n], n - prefix_sum[n])\n\n        for i in range(1, n):\n            # Cost to make all characters to the left of i (inclusive) '0'\n            # and all characters to the right of i '1'\n            cost = prefix_sum[i] + (n - i - (prefix_sum[n] - prefix_sum[i]))\n            min_cost = min(min_cost, cost)\n\n            # Cost to make all characters to the left of i (inclusive) '1'\n            # and all characters to the right of i '0'\n            cost = (i - prefix_sum[i]) + (prefix_sum[n] - prefix_sum[i])\n            min_cost = min(min_cost, cost)\n\n        return min_cost"
}