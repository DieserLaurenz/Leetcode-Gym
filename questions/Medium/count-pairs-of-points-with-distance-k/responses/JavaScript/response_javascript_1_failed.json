{
    "status_code": 11,
    "lang": "javascript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 76248000,
    "question_id": "2953",
    "elapsed_time": 285,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "[[1,2],[4,2],[1,3],[5,2]]\n5",
    "expected_output": "2",
    "task_finish_time": 1707095066487,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 41,
    "total_testcases": 1007,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "JavaScript",
    "submission_id": "1166322436",
    "input_formatted": "[[1,2],[4,2],[1,3],[5,2]], 5",
    "input": "[[1,2],[4,2],[1,3],[5,2]]\n5",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "/**\n * @param {number[][]} coordinates\n * @param {number} k\n * @return {number}\n */\nvar countPairs = function(coordinates, k) {\n    let count = 0;\n    const map = new Map();\n\n    coordinates.forEach(([x, y]) => {\n        const key = (x ^ k) + ',' + y;\n        const key2 = x + ',' + (y ^ k);\n        const key3 = (x ^ k) + ',' + (y ^ k);\n        const key4 = x + ',' + y;\n\n        count += (map.get(key) || 0) + (map.get(key2) || 0) - (map.get(key3) || 0);\n        map.set(key4, (map.get(key4) || 0) + 1);\n    });\n\n    return count;\n};"
}