{
    "status_code": 11,
    "lang": "java",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 77708000,
    "display_runtime": "38",
    "question_id": "2953",
    "elapsed_time": 380,
    "compare_result
    "code_output": "20",
    "std_output": "",
    "last_testcase": "[[1,3],[1,3],[1,3],[1,3],[1,3]]\n0",
    "expected_output": "10",
    "task_finish_time": 1707085594399,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 34,
    "total_testcases": 1007,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Java",
    "submission_id": "1166245141",
    "input_formatted": "[[1,3],[1,3],[1,3],[1,3],[1,3]], 0",
    "input": "[[1,3],[1,3],[1,3],[1,3],[1,3]]\n0",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    public int countPairs(List<List<Integer>> coordinates, int k) {\n        int count = 0;\n        Map<Integer, Integer> map = new HashMap<>();\n        for (List<Integer> coordinate : coordinates) {\n            int x = coordinate.get(0), y = coordinate.get(1);\n            int key = x - y;\n            count += map.getOrDefault(key + k, 0) + map.getOrDefault(key - k, 0);\n            map.put(key, map.getOrDefault(key, 0) + 1);\n\n            key = x + y;\n            count += map.getOrDefault(key + k, 0) + map.getOrDefault(key - k, 0);\n            map.put(key, map.getOrDefault(key, 0) + 1);\n        }\n        return count / 2; // Each pair counted twice, hence divide by 2\n    }\n}"
}