{
    "status_code": 11,
    "lang": "python",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 35080000,
    "question_id": "2953",
    "elapsed_time": 938,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "[[1,2],[4,2],[1,3],[5,2]]\n5",
    "expected_output": "2",
    "task_finish_time": 1708746471642,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 37,
    "total_testcases": 1007,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python",
    "submission_id": "1184486047",
    "input_formatted": "[[1,2],[4,2],[1,3],[5,2]], 5",
    "input": "[[1,2],[4,2],[1,3],[5,2]]\n5",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution(object):\n    def countPairs(self, coordinates, k):\n        \"\"\"\n        :type coordinates: List[List[int]]\n        :type k: int\n        :rtype: int\n        \"\"\"\n        from collections import defaultdict\n        xor_map = defaultdict(int)\n        count = 0\n        for x, y in coordinates:\n            target = k - (x ^ y)\n            if target in xor_map:\n                count += xor_map[target]\n            xor_map[x ^ y] += 1\n        return count"
}