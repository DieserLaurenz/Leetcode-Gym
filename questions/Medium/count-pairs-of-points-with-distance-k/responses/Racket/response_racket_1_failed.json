{
    "status_code": 14,
    "lang": "racket",
    "run_success": false,
    "status_runtime": "N/A",
    "memory": 126492000,
    "question_id": "2953",
    "elapsed_time": 5014,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "[[4733,8337],[4721,8340],[4733,8320],[5527,1652],[2401,7799],[5522,1656],[5531,1648],[4067,103],[4274,8828],[4877,2302],[8195,455],[8194,471],[5531,1649],[3012,8520],[5535,1661],[871,9936],[5526,1636],[4722,8339],[2946,3765],[2959,3761],[4424,2848],[6214,4437],[5068,8538],[5876,189],[6872,7958],[4218,2129],[2958,3760],[9685,2171],[7927,7822],[6874,7961],[4425,2864],[3938,4401],[5528,1654],[7010,387],[4724,8344],[3020,8513],[4735,8335],[4726,8350],[7656,5164],[4193,3353],[9692,2163],[4219,2113],[5059,8536],[8211,454],[2766,5936],[2753,5938],[6865,7967],[4727,8334],[3316,1900],[869,9951],[4511,5058],[4371,11],[6868,7955],[7479,6283],[5535,1644],[6748,1334],[785,3937],[5515,1649],[3037,8513],[9795,6851],[4368,5],[1416,354],[5060,8530],[8716,4677],[4007,9636],[8465,1294],[6947,1827],[563,7897],[7115,8238],[8211,471],[2946,3748],[3652,8043],[2159,8427],[4735,8343],[4382,6],[3313,1888],[7674,2587],[5525,1651],[5461,6219],[2824,9437],[4725,8328],[4221,2139],[3107,8134],[4378,2],[3967,9908],[2759,5944],[2753,5923],[6360,9639],[2507,5798],[4380,0],[4757,8495],[7798,3151],[9683,2161],[5582,9319],[877,9942],[6877,7955],[9695,2173],[6159,1362],[5169,1204],[7675,2571],[4767,8488],[9688,2175],[5199,2431],[9816,7879],[1625,578],[5137,9886],[8222,467],[7341,4555],[7131,8239],[4067,118],[3288,1893],[6117,3700],[2543,1187],[9684,2171],[7836,5943],[5259,3711],[5535,1660],[9682,4512],[9379,382],[874,9940],[2153,8416],[3662,8044],[4759,8481],[6931,6793],[248,8907],[2127,3642],[1085,7983],[5529,1662],[5177,1213],[5524,1642],[4211,2136],[2118,3634],[8126,4728],[5989,9877],[6914,8717],[4379,10],[2759,5944],[1455,1138],[7661,5152],[5071,8532],[5284,413],[7930,7818],[4508,5068],[6997,8283],[2303,6636],[1078,7977],[1084,7999],[4273,8818],[884,9951],[4693,5547],[9800,7878],[4735,8350],[9030,246],[4376,13],[2944,3763],[3377,4558],[2953,3770],[6945,1836],[4370,5605],[4492,5069],[3713,7632],[8219,5588],[4372,8],[2286,6636],[5580,9320],[3260,7821],[7821,2033],[4723,8338],[4735,8350],[4592,604],[3106,8150],[3181,726],[6869,7962],[5642,5446],[4727,8342],[1086,2816],[5030,7004],[6326,3393],[8104,343],[3027,5259],[4724,8329],[3503,3029],[1081,2002],[6152,1618],[9254,8584],[4722,8322],[6157,3463],[3727,9187],[4870,2296],[8292,5481],[1906,6537],[5191,2422],[9091,3415],[7367,6856],[5135,8772],[6734,6931],[3316,1900],[9046,247],[9251,8580],[2758,5945],[7588,2693],[9158,657],[2737,3497],[865,9938],[5528,1663],[6867,7952],[2949,3775],[5670,3798],[3418,5980],[5474,5466],[5720,8175],[3955,4401],[1078,2825],[4748,1582],[7490,3114],[8120,342],[8992,3718],[9251,8597],[4764,1583],[7874,7988],[4362,10],[2157,8420],[3156,5699],[8569,7955],[9257,8579],[66,5616],[4729,8348],[6168,3147],[5067,8528],[1631,585],[3095,946],[8148,6886],[4720,8324],[3724,2514],[4285,4088],[8288,5476],[2272,8977],[7650,5154],[3651,8040],[5036,8151],[6119,3707],[7126,8235],[9662,2153],[1295,2299],[6156,1631],[6659,2448],[6946,1826],[4905,1299],[7379,712],[4222,2140],[8210,5596],[4011,9633],[2147,8423],[9820,7882],[5877,173],[3257,7809],[4361,248],[3742,6942],[1178,645],[5531,1648],[1440,1136],[9267,8581],[3886,4713],[4210,2121],[561,3465],[9651,2157],[4895,3697],[396,4666],[427,4924],[2898,1154],[6992,2037],[5521,1655],[5381,5502],[4657,1955],[7681,4303],[9458,1199],[3205,7171],[2004,1871],[4423,2850],[2149,8429],[4368,4],[2159,8418],[4748,8019],[9145,9932],[416,4922],[2171,6078],[566,2541],[5716,8170],[9003,3712],[9443,1289],[9090,7828],[3017,8524],[7007,7380],[4493,5085],[6879,7957],[8210,5596],[3230,2302],[3738,6931],[6329,3395],[8922,746],[5533,1650],[8465,1311],[4207,2140],[3224,2293],[2975,3760],[3196,9932],[5530,1648],[112,2580],[9449,1294],[5724,8162],[7232,6969],[5529,1654],[6898,9725],[4392,2491],[8194,471],[5390,5496],[3792,4392],[6008,815],[423,4921],[74,5625],[3079,7459],[9455,3336],[544,8381],[134,888],[4209,3921],[5527,1653],[2762,5949],[2956,3766],[9895,284],[3310,8199],[9272,8579],[1474,6099],[7161,7292],[1989,4612],[6906,9716],[7663,8106],[1622,576],[4529,9658],[7026,386],[6151,3456],[1914,4622],[3580,6941],[4219,2128],[9123,1190],[1269,5997],[6181,5782],[9999,7315],[9159,641],[775,7292],[9251,8580],[5515,1648],[4890,3709],[7282,7856],[4033,6307],[2285,8981],[6449,7515],[2049,3085],[4094,2060],[7651,4355]]\n17",
    "expected_output": "253",
    "task_finish_time": 1707096175597,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 923,
    "total_testcases": 1007,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Racket",
    "submission_id": "1166331312",
    "status_msg": "Time Limit Exceeded",
    "state": "SUCCESS",
    "code": "(define/contract (count-pairs coordinates k)\n  (-> (listof (listof exact-integer?)) exact-integer? exact-integer?)\n  \n  (define (distance p1 p2)\n    (+ (bitwise-xor (first p1) (first p2))\n       (bitwise-xor (second p1) (second p2))))\n  \n  (let ([n (length coordinates)])\n    (let loop ([i 0] [count 0])\n      (if (= i n) count\n          (let inner-loop ([j (+ i 1)] [inner-count count])\n            (if (= j n) (loop (+ i 1) inner-count)\n                (inner-loop (+ j 1)\n                            (if (= (distance (list-ref coordinates i) (list-ref coordinates j)) k)\n                                (+ inner-count 1)\n                                inner-count))))))))"
}