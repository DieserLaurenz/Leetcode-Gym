{
    "status_code": 11,
    "lang": "typescript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 77492000,
    "question_id": "2953",
    "elapsed_time": 367,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "[[1,2],[4,2],[1,3],[5,2]]\n5",
    "expected_output": "2",
    "task_finish_time": 1707095183158,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 43,
    "total_testcases": 1007,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "TypeScript",
    "submission_id": "1166323342",
    "input_formatted": "[[1,2],[4,2],[1,3],[5,2]], 5",
    "input": "[[1,2],[4,2],[1,3],[5,2]]\n5",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "function countPairs(coordinates: number[][], k: number): number {\n    const freqMap = new Map<string, number>();\n    let count = 0;\n\n    for (const [x, y] of coordinates) {\n        const xorXK = (x ^ k).toString();\n        const xorYK = (y ^ k).toString();\n\n        // Increment count based on previous occurrences that satisfy the distance condition\n        count += freqMap.get(xorXK + ',' + y) || 0;\n        count += freqMap.get(x + ',' + xorYK) || 0;\n        count += freqMap.get(xorXK + ',' + xorYK) || 0;\n\n        // Handle case where XOR results in zero, which wasn't counted in the above steps\n        if (k === 0) count -= 2 * (freqMap.get(x + ',' + y) || 0);\n\n        // Update frequency map for current point\n        freqMap.set(x + ',' + y, (freqMap.get(x + ',' + y) || 0) + 1);\n    }\n\n    return count;\n};"
}