{
    "status_code": 11,
    "lang": "kotlin",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 77692000,
    "question_id": "2953",
    "elapsed_time": 758,
    "compare_result
    "code_output": "4",
    "std_output": "",
    "last_testcase": "[[27,94],[61,68],[47,0],[100,4],[127,89],[61,103],[26,4],[51,54],[91,26],[98,23],[80,74],[19,93]]\n95",
    "expected_output": "5",
    "task_finish_time": 1707095478353,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 94,
    "total_testcases": 1007,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Kotlin",
    "submission_id": "1166325768",
    "input_formatted": "[[27,94],[61,68],[47,0],[100,4],[127,89],[61,103],[26,4],[51,54],[91,26],[98,23],[80,74],[19,93]], 95",
    "input": "[[27,94],[61,68],[47,0],[100,4],[127,89],[61,103],[26,4],[51,54],[91,26],[98,23],[80,74],[19,93]]\n95",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    fun countPairs(coordinates: List<List<Int>>, k: Int): Int {\n        val map = HashMap<Int, Int>()\n        var count = 0\n        coordinates.forEach { (x, y) ->\n            val key = x xor y\n            count += map.getOrDefault(key xor k, 0)\n            map[key] = map.getOrDefault(key, 0) + 1\n        }\n        return count\n    }\n}"
}