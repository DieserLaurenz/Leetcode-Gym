{
    "status_code": 11,
    "lang": "cpp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 514548000,
    "question_id": "2953",
    "elapsed_time": 4037,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "[[1,2],[4,2],[1,3],[5,2]]\n5",
    "expected_output": "2",
    "task_finish_time": 1707085508946,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 31,
    "total_testcases": 1007,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C++",
    "submission_id": "1166244361",
    "input_formatted": "[[1,2],[4,2],[1,3],[5,2]], 5",
    "input": "[[1,2],[4,2],[1,3],[5,2]]\n5",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\npublic:\n    int countPairs(vector<vector<int>>& coordinates, int k) {\n        int count = 0;\n        unordered_map<int, vector<int>> xs, ys; // Maps to keep track of x and y coordinates separately\n\n        // Separately store indices of points with the same x or y coordinate\n        for (int i = 0; i < coordinates.size(); ++i) {\n            int x = coordinates[i][0], y = coordinates[i][1];\n            xs[x].push_back(i);\n            ys[y].push_back(i);\n        }\n\n        unordered_set<string> uniquePairs; // To avoid counting duplicates\n\n        for (int i = 0; i < coordinates.size(); ++i) {\n            int x = coordinates[i][0], y = coordinates[i][1];\n\n            // Look for points with the same x value\n            for (int j : xs[x ^ k]) {\n                if (y == coordinates[j][1]) {\n                    int small = min(i, j), large = max(i, j);\n                    uniquePairs.insert(to_string(small) + \",\" + to_string(large));\n                }\n            }\n\n            // Look for points with the same y value\n            for (int j : ys[y ^ k]) {\n                if (x == coordinates[j][0]) {\n                    int small = min(i, j), large = max(i, j);\n                    uniquePairs.insert(to_string(small) + \",\" + to_string(large));\n                }\n            }\n        }\n\n        count = uniquePairs.size();\n        return count;\n    }\n};"
}