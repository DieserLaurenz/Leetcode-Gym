{
    "status_code": 11,
    "lang": "swift",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 20828000,
    "question_id": "3229",
    "elapsed_time": 277,
    "compare_result
    "code_output": "46",
    "std_output": "",
    "last_testcase": "[10,12,13,14,15]",
    "expected_output": "11",
    "task_finish_time": 1707774990348,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 509,
    "total_testcases": 648,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Swift",
    "submission_id": "1173587043",
    "input_formatted": "[10,12,13,14,15]",
    "input": "[10,12,13,14,15]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    func minimumCost(_ nums: [Int]) -> Int {\n        func isPalindrome(_ x: Int) -> Bool {\n            let s = String(x)\n            return s == String(s.reversed())\n        }\n\n        let median = nums.sorted()[(nums.count - 1) / 2]\n        var target = median\n        while !isPalindrome(target) {\n            target += 1\n        }\n        var cost = 0\n        for num in nums {\n            cost += abs(num - target)\n        }\n        return cost\n    }\n}"
}