{
    "status_code": 11,
    "lang": "python",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 648256000,
    "question_id": "3229",
    "elapsed_time": 11042,
    "compare_result
    "code_output": "37",
    "std_output": "",
    "last_testcase": "[206,215,216,219,220,221]",
    "expected_output": "35",
    "task_finish_time": 1708818243469,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 485,
    "total_testcases": 648,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python",
    "submission_id": "1185243058",
    "input_formatted": "[206,215,216,219,220,221]",
    "input": "[206,215,216,219,220,221]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution(object):\n    def minimumCost(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: int\n        \"\"\"\n        nums.sort()\n        left, right = 0, max(nums)\n        \n        def cost_to_convert(target):\n            return sum(abs(num - target) for num in nums)\n        \n        def is_palindrome(n):\n            return str(n) == str(n)[::-1]\n        \n        min_cost = float('inf')\n        for num in range(left, right + 1):\n            if is_palindrome(num):\n                current_cost = cost_to_convert(num)\n                min_cost = min(min_cost, current_cost)\n        return min_cost"
}