{
    "status_code": 11,
    "lang": "typescript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 62888000,
    "question_id": "3229",
    "elapsed_time": 155,
    "compare_result
    "code_output": "7",
    "std_output": "",
    "last_testcase": "[10,12,13,14,15]",
    "expected_output": "11",
    "task_finish_time": 1707774662779,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 346,
    "total_testcases": 648,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "TypeScript",
    "submission_id": "1173584384",
    "input_formatted": "[10,12,13,14,15]",
    "input": "[10,12,13,14,15]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "function minimumCost(nums: number[]): number {\n    nums.sort((a, b) => a - b);\n    const median = nums.length % 2 === 0 ? Math.round((nums[nums.length / 2 - 1] + nums[nums.length / 2]) / 2) : nums[Math.floor(nums.length / 2)];\n\n    let minCost = Infinity;\n    for (let i = -1; i <= 1; i++) {\n        let target = median + i;\n        let cost = 0;\n        for (let num of nums) {\n            cost += Math.abs(num - target);\n        }\n        minCost = Math.min(minCost, cost);\n    }\n\n    return minCost;\n}"
}