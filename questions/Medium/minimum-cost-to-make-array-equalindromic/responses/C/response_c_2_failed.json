{
    "status_code": 11,
    "lang": "c",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 10360000,
    "question_id": "3229",
    "elapsed_time": 3008,
    "compare_result
    "code_output": "7",
    "std_output": "",
    "last_testcase": "[10,12,13,14,15]",
    "expected_output": "11",
    "task_finish_time": 1707774152423,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 345,
    "total_testcases": 648,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C",
    "submission_id": "1173579755",
    "input_formatted": "[10,12,13,14,15]",
    "input": "[10,12,13,14,15]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "long long minimumCost(int* nums, int numsSize) {\n    long long minCost = LLONG_MAX;\n    for (int i = 0; i < numsSize; ++i) {\n        long long cost = 0;\n        for (int j = 0; j < numsSize; ++j) {\n            cost += abs(nums[j] - nums[i]);\n        }\n        if (cost < minCost) {\n            minCost = cost;\n        }\n    }\n    return minCost;\n}"
}