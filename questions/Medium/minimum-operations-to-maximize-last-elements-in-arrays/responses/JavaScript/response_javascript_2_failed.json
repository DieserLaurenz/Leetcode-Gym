{
    "status_code": 11,
    "lang": "javascript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 51900000,
    "question_id": "3190",
    "elapsed_time": 116,
    "compare_result
    "code_output": "-1",
    "std_output": "",
    "last_testcase": "[2,3,4,5,9]\n[8,8,4,4,4]",
    "expected_output": "2",
    "task_finish_time": 1707932169011,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 123,
    "total_testcases": 702,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "JavaScript",
    "submission_id": "1175328431",
    "input_formatted": "[2,3,4,5,9], [8,8,4,4,4]",
    "input": "[2,3,4,5,9]\n[8,8,4,4,4]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "/**\n * @param {number[]} nums1\n * @param {number[]} nums2\n * @return {number}\n */\nvar minOperations = function(nums1, nums2) {\n    let operations = 0;\n    let maxNums1 = Math.max(...nums1);\n    let maxNums2 = Math.max(...nums2);\n\n    if (nums1[nums1.length - 1] === maxNums1 && nums2[nums2.length - 1] === maxNums2) {\n        return 0; // Already in desired state\n    }\n\n    // Swapping to make nums1[n-1] = max(nums1) and nums2[n-1] = max(nums2)\n    if (nums1[nums1.length - 1] !== maxNums1) {\n        let indexMaxNums2 = nums2.indexOf(maxNums2);\n        if (indexMaxNums2 !== -1 && nums1[indexMaxNums2] < maxNums2) {\n            [nums1[indexMaxNums2], nums2[indexMaxNums2]] = [nums2[indexMaxNums2], nums1[indexMaxNums2]];\n            operations++;\n        }\n    }\n\n    if (nums2[nums2.length - 1] !== maxNums2) {\n        let indexMaxNums1 = nums1.indexOf(maxNums1);\n        if (indexMaxNums1 !== -1 && nums2[indexMaxNums1] < maxNums1) {\n            [nums1[indexMaxNums1], nums2[indexMaxNums1]] = [nums2[indexMaxNums1], nums1[indexMaxNums1]];\n            operations++;\n        }\n    }\n\n    // Check if conditions are met after operations\n    if (nums1[nums1.length - 1] !== Math.max(...nums1) || nums2[nums2.length - 1] !== Math.max(...nums2)) {\n        return -1; // Impossible to satisfy conditions\n    }\n\n    return operations;\n};"
}