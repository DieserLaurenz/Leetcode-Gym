{
    "status_code": 11,
    "lang": "typescript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 53116000,
    "question_id": "3190",
    "elapsed_time": 126,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "[2,3,4,5,9]\n[8,8,4,4,4]",
    "expected_output": "2",
    "task_finish_time": 1707932243086,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 79,
    "total_testcases": 702,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "TypeScript",
    "submission_id": "1175329581",
    "input_formatted": "[2,3,4,5,9], [8,8,4,4,4]",
    "input": "[2,3,4,5,9]\n[8,8,4,4,4]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "function minOperations(nums1: number[], nums2: number[]): number {\n    let swapCount = 0;\n    const n = nums1.length;\n    // Swap to make nums1[n-1] the max in nums1 and nums2[n-1] the max in nums2 if needed\n    if (nums1[n-1] < Math.max(...nums1)) {\n        const maxIndex1 = nums1.indexOf(Math.max(...nums1));\n        [nums1[n-1], nums1[maxIndex1]] = [nums1[maxIndex1], nums1[n-1]];\n        swapCount++;\n    }\n    if (nums2[n-1] < Math.max(...nums2)) {\n        const maxIndex2 = nums2.indexOf(Math.max(...nums2));\n        [nums2[n-1], nums2[maxIndex2]] = [nums2[maxIndex2], nums2[n-1]];\n        swapCount++;\n    }\n    // Check if conditions are already met\n    if (nums1[n-1] === Math.max(...nums1) && nums2[n-1] === Math.max(...nums2)) {\n        return swapCount;\n    }\n    // Try swapping elements to meet conditions\n    for (let i = 0; i < n - 1; i++) {\n        if ((nums1[i] > nums1[n-1] || nums2[i] > nums2[n-1]) && nums1[i] !== nums2[i]) {\n            [nums1[i], nums2[i]] = [nums2[i], nums1[i]];\n            swapCount++;\n            if (nums1[n-1] === Math.max(...nums1) && nums2[n-1] === Math.max(...nums2)) {\n                return swapCount;\n            }\n        }\n    }\n    return -1;\n};"
}