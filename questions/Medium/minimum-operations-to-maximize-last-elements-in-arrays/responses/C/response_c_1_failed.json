{
    "status_code": 11,
    "lang": "c",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 6748000,
    "question_id": "3190",
    "elapsed_time": 37,
    "compare_result
    "code_output": "2",
    "std_output": "",
    "last_testcase": "[1,5,4]\n[2,5,3]",
    "expected_output": "-1",
    "task_finish_time": 1707929275779,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 87,
    "total_testcases": 702,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C",
    "submission_id": "1175284087",
    "input_formatted": "[1,5,4], [2,5,3]",
    "input": "[1,5,4]\n[2,5,3]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "#include <stdio.h>\n\nint minOperations(int* nums1, int nums1Size, int* nums2, int nums2Size) {\n    int max1 = nums1[0], max2 = nums2[0];\n    for (int i = 1; i < nums1Size; ++i) {\n        if (nums1[i] > max1) max1 = nums1[i];\n        if (nums2[i] > max2) max2 = nums2[i];\n    }\n    \n    int swapCount = 0;\n    for (int i = 0; i < nums1Size; ++i) {\n        if (nums1[i] == max1 && nums2[i] == max2) continue;\n        if (nums1[i] == max1 || nums2[i] == max2) continue;\n        if (nums1[i] < max2 && nums2[i] < max1) {\n            swapCount++;\n            int temp = nums1[i];\n            nums1[i] = nums2[i];\n            nums2[i] = temp;\n        }\n    }\n\n    int newMax1 = nums1[0], newMax2 = nums2[0];\n    for (int i = 1; i < nums1Size; ++i) {\n        if (nums1[i] > newMax1) newMax1 = nums1[i];\n        if (nums2[i] > newMax2) newMax2 = nums2[i];\n    }\n    \n    if (newMax1 == max1 && newMax2 == max2) return swapCount;\n    else return -1;\n}"
}