{
    "status_code": 11,
    "lang": "swift",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 15452000,
    "question_id": "3190",
    "elapsed_time": 110,
    "compare_result
    "code_output": "-1",
    "std_output": "",
    "last_testcase": "[1,2,7]\n[4,5,3]",
    "expected_output": "1",
    "task_finish_time": 1707939832733,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 111,
    "total_testcases": 702,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Swift",
    "submission_id": "1175430577",
    "input_formatted": "[1,2,7], [4,5,3]",
    "input": "[1,2,7]\n[4,5,3]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    func minOperations(_ nums1: [Int], _ nums2: [Int]) -> Int {\n        let n = nums1.count\n        var max1 = nums1.max() ?? 0\n        var max2 = nums2.max() ?? 0\n        var operations = 0\n\n        for i in 0..<n {\n            if nums1[i] == max1 && nums2[i] == max2 {\n                return operations\n            }\n            if nums1[i] == max1 || nums2[i] == max2 {\n                continue\n            }\n            if nums1[i] < max1 && nums2[i] > max2 {\n                max1 = max(max1, nums2[i])\n                max2 = max(max2, nums1[i])\n                operations += 1\n            } else if nums2[i] < max2 && nums1[i] > max1 {\n                max1 = max(max1, nums2[i])\n                max2 = max(max2, nums1[i])\n                operations += 1\n            }\n        }\n\n        if nums1[n-1] == max1 && nums2[n-1] == max2 {\n            return operations\n        } else {\n            return -1\n        }\n    }\n}"
}