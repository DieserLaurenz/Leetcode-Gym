{
    "status_code": 11,
    "lang": "ruby",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 214536000,
    "question_id": "3190",
    "elapsed_time": 306,
    "compare_result
    "code_output": "2",
    "std_output": "",
    "last_testcase": "[1,2,7]\n[4,5,3]",
    "expected_output": "1",
    "task_finish_time": 1707940602724,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 131,
    "total_testcases": 702,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Ruby",
    "submission_id": "1175439019",
    "input_formatted": "[1,2,7], [4,5,3]",
    "input": "[1,2,7]\n[4,5,3]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "# @param {Integer[]} nums1\n# @param {Integer[]} nums2\n# @return {Integer}\ndef min_operations(nums1, nums2)\n  n = nums1.length\n  max_nums1 = nums1.max\n  max_nums2 = nums2.max\n  operations = 0\n\n  if nums1[n - 1] == max_nums1 && nums2[n - 1] == max_nums2\n    return 0\n  elsif nums1[n - 1] < max_nums2 && nums2[n - 1] < max_nums1\n    operations += 1\n    nums1[n - 1], nums2[n - 1] = nums2[n - 1], nums1[n - 1]\n  end\n\n  max_nums1 = nums1.max\n  max_nums2 = nums2.max\n\n  (0...n).each do |i|\n    if nums1[i] < max_nums1 && nums2[i] > nums1[i] && nums2[i] <= max_nums2\n      nums1[i], nums2[i] = nums2[i], nums1[i]\n      operations += 1\n      max_nums1 = nums1.max\n      max_nums2 = nums2.max\n      break if nums1[n - 1] == max_nums1 && nums2[n - 1] == max_nums2\n    elsif nums2[i] < max_nums2 && nums1[i] > nums2[i] && nums1[i] <= max_nums1\n      nums1[i], nums2[i] = nums2[i], nums1[i]\n      operations += 1\n      max_nums1 = nums1.max\n      max_nums2 = nums2.max\n      break if nums1[n - 1] == max_nums1 && nums2[n - 1] == max_nums2\n    end\n  end\n\n  if nums1[n - 1] == max_nums1 && nums2[n - 1] == max_nums2\n    operations\n  else\n    -1\n  end\nend"
}