{
    "status_code": 11,
    "lang": "dart",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 148536000,
    "question_id": "3190",
    "elapsed_time": 465,
    "compare_result
    "code_output": "-1",
    "std_output": "",
    "last_testcase": "[1,2,7]\n[4,5,3]",
    "expected_output": "1",
    "task_finish_time": 1707940145487,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 118,
    "total_testcases": 702,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Dart",
    "submission_id": "1175434080",
    "input_formatted": "[1,2,7], [4,5,3]",
    "input": "[1,2,7]\n[4,5,3]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n  int minOperations(List<int> nums1, List<int> nums2) {\n    int n = nums1.length;\n    int maxNums1 = nums1.reduce((value, element) => value > element ? value : element);\n    int maxNums2 = nums2.reduce((value, element) => value > element ? value : element);\n    int operations = 0;\n\n    if (nums1[n - 1] == maxNums1 && nums2[n - 1] == maxNums2) {\n      return 0;\n    }\n\n    for (int i = 0; i < n; i++) {\n      if (nums1[i] == maxNums1 && nums2[i] == maxNums2) {\n        return -1;\n      }\n\n      if (nums1[i] != maxNums1 && nums2[i] != maxNums2) {\n        if ((nums1[i] == maxNums2 && nums2[i] == maxNums1) || (nums1[n - 1] != maxNums1 && nums2[n - 1] != maxNums2)) {\n          swap(nums1, nums2, i);\n          operations++;\n          if (nums1[n - 1] == maxNums1 && nums2[n - 1] == maxNums2) {\n            return operations;\n          }\n        }\n      }\n    }\n\n    if (nums1[n - 1] == maxNums1 && nums2[n - 1] == maxNums2) {\n      return operations;\n    } else {\n      return -1;\n    }\n  }\n\n  void swap(List<int> nums1, List<int> nums2, int i) {\n    int temp = nums1[i];\n    nums1[i] = nums2[i];\n    nums2[i] = temp;\n  }\n}"
}