{
    "status_code": 11,
    "lang": "python",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 11812000,
    "question_id": "3190",
    "elapsed_time": 148,
    "compare_result
    "code_output": "-1",
    "std_output": "",
    "last_testcase": "[1,2,7]\n[4,5,3]",
    "expected_output": "1",
    "task_finish_time": 1708829482005,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 118,
    "total_testcases": 702,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python",
    "submission_id": "1185339817",
    "input_formatted": "[1,2,7], [4,5,3]",
    "input": "[1,2,7]\n[4,5,3]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution(object):\n    def minOperations(self, nums1, nums2):\n        \"\"\"\n        :type nums1: List[int]\n        :type nums2: List[int]\n        :rtype: int\n        \"\"\"\n        n = len(nums1)\n        max1 = max(nums1)\n        max2 = max(nums2)\n        \n        if nums1[n-1] == max1 and nums2[n-1] == max2:\n            return 0\n        \n        ops = 0\n        for i in range(n):\n            if nums1[i] != max1 or nums2[i] != max2:\n                if nums1[i] == max2 and nums2[i] == max1:\n                    nums1[i], nums2[i] = nums2[i], nums1[i]\n                    ops += 1\n                    if nums1[n-1] == max(nums1) and nums2[n-1] == max(nums2):\n                        return ops\n                    \n        if nums1[n-1] == max1 and nums2[n-1] == max2:\n            return ops\n        else:\n            return -1"
}