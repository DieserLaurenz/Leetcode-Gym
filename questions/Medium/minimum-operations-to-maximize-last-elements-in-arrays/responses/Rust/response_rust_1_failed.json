{
    "status_code": 11,
    "lang": "rust",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 2232000,
    "question_id": "3190",
    "elapsed_time": 20,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "[2,3,4,5,9]\n[8,8,4,4,4]",
    "expected_output": "2",
    "task_finish_time": 1707940979935,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 65,
    "total_testcases": 702,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Rust",
    "submission_id": "1175442758",
    "input_formatted": "[2,3,4,5,9], [8,8,4,4,4]",
    "input": "[2,3,4,5,9]\n[8,8,4,4,4]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "impl Solution {\n    pub fn min_operations(nums1: Vec<i32>, nums2: Vec<i32>) -> i32 {\n        let n = nums1.len();\n        let mut max_num1 = nums1[0];\n        let mut max_num2 = nums2[0];\n        let mut swap_needed = 0;\n\n        // Find the maximum value in both arrays\n        for i in 0..n {\n            if nums1[i] > max_num1 {\n                max_num1 = nums1[i];\n            }\n            if nums2[i] > max_num2 {\n                max_num2 = nums2[i];\n            }\n        }\n\n        // Check if swapping is needed to make nums1[n-1] and nums2[n-1] the maximum values\n        for i in 0..n {\n            if nums1[i] == max_num1 && nums2[i] != max_num2 {\n                swap_needed += 1;\n                break;\n            }\n            if nums2[i] == max_num2 && nums1[i] != max_num1 {\n                swap_needed += 1;\n                break;\n            }\n        }\n\n        // Check final conditions\n        if nums1[n-1] != max_num1 && nums2[n-1] != max_num2 {\n            return -1; // Impossible to satisfy both conditions\n        }\n        if nums1[n-1] != max_num1 || nums2[n-1] != max_num2 {\n            swap_needed = 1;\n        }\n\n        swap_needed\n    }\n}"
}