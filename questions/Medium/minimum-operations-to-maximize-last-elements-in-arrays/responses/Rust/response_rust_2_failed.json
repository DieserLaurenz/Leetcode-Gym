{
    "status_code": 11,
    "lang": "rust",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 2196000,
    "question_id": "3190",
    "elapsed_time": 14,
    "compare_result
    "code_output": "-1",
    "std_output": "",
    "last_testcase": "[1,2,7]\n[4,5,3]",
    "expected_output": "1",
    "task_finish_time": 1707941020075,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 118,
    "total_testcases": 702,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Rust",
    "submission_id": "1175443142",
    "input_formatted": "[1,2,7], [4,5,3]",
    "input": "[1,2,7]\n[4,5,3]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "impl Solution {\n    pub fn min_operations(nums1: Vec<i32>, nums2: Vec<i32>) -> i32 {\n        let n = nums1.len();\n        let mut diff_pairs = Vec::new();\n\n        // Calculate the difference and check if swapping is needed\n        for i in 0..n {\n            diff_pairs.push((nums1[i] - nums2[i]).abs());\n        }\n\n        let mut max1 = nums1[n - 1];\n        let mut max2 = nums2[n - 1];\n        let mut operations = 0;\n\n        for i in (0..n - 1).rev() {\n            if nums1[i] > max1 {\n                if nums2[i] < nums1[i] && nums2[i] > max2 {\n                    max1 = nums2[i];\n                    max2 = nums1[i];\n                    operations += 1;\n                } else {\n                    max1 = nums1[i];\n                }\n            } else if nums2[i] > max2 {\n                if nums1[i] < nums2[i] && nums1[i] > max1 {\n                    max2 = nums1[i];\n                    max1 = nums2[i];\n                    operations += 1;\n                } else {\n                    max2 = nums2[i];\n                }\n            }\n        }\n\n        if max1 == nums1[n - 1] && max2 == nums2[n - 1] {\n            operations\n        } else {\n            -1\n        }\n    }\n}"
}