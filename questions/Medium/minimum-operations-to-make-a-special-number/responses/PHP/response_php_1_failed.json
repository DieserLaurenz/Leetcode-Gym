{
    "status_code": 11,
    "lang": "php",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 19876000,
    "question_id": "3046",
    "elapsed_time": 117,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "\"2908305\"",
    "expected_output": "3",
    "task_finish_time": 1707907281771,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 189,
    "total_testcases": 813,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "PHP",
    "submission_id": "1175033065",
    "input_formatted": "\"2908305\"",
    "input": "\"2908305\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n\n    /**\n     * @param String $num\n     * @return Integer\n     */\n    function minimumOperations($num) {\n        $n = strlen($num);\n        $ans = $n - 1; // Maximum number of operations needed\n        foreach ([25, 50, 75, 0] as $special) {\n            $t = $special;\n            $need = 0;\n            for ($i = $n - 1; $i >= 0; --$i) {\n                if (($t % 10) == ($num[$i] - '0')) {\n                    $t /= 10;\n                    if ($t == 0) break;\n                } else {\n                    $need++;\n                }\n            }\n            if ($t == 0) $ans = min($ans, $need);\n        }\n        return $ans;\n    }\n}"
}