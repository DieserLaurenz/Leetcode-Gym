{
    "status_code": 11,
    "lang": "php",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 20336000,
    "question_id": "3046",
    "elapsed_time": 33,
    "compare_result
    "code_output": "-1",
    "std_output": "",
    "last_testcase": "\"2245047\"",
    "expected_output": "2",
    "task_finish_time": 1707907314205,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 9,
    "total_testcases": 813,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "PHP",
    "submission_id": "1175033397",
    "input_formatted": "\"2245047\"",
    "input": "\"2245047\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n\n    /**\n     * @param String $num\n     * @return Integer\n     */\n    function minimumOperations($num) {\n        $result = PHP_INT_MAX;\n        $length = strlen($num);\n\n        // Check for all combinations to form 00, 25, 50, 75 at the end\n        $combinations = ['00', '25', '50', '75'];\n        foreach ($combinations as $combination) {\n            $lastIndex = $length;\n            $ops = 0;\n            for ($i = 1; $i >= 0; $i--) {\n                $pos = strrpos($num, $combination[$i], $i - $length);\n                if ($pos === false) {\n                    $ops = PHP_INT_MAX;\n                    break;\n                } else {\n                    $ops += $lastIndex - $pos - 1;\n                    $lastIndex = $pos;\n                }\n            }\n            $result = min($result, $ops);\n        }\n\n        return $result == PHP_INT_MAX ? -1 : $result;\n    }\n}"
}