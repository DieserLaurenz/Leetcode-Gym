{
    "status_code": 11,
    "lang": "php",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 19972000,
    "question_id": "3046",
    "elapsed_time": 71,
    "compare_result
    "code_output": "3",
    "std_output": "",
    "last_testcase": "\"2245047\"",
    "expected_output": "2",
    "task_finish_time": 1707907243164,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 203,
    "total_testcases": 813,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "PHP",
    "submission_id": "1175032692",
    "input_formatted": "\"2245047\"",
    "input": "\"2245047\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n\n    /**\n     * @param String $num\n     * @return Integer\n     */\n    function minimumOperations($num) {\n        $length = strlen($num);\n        $minOps = $length; // Worst case: delete all digits\n        for ($i = 0; $i < $length; $i++) {\n            for ($j = $i + 1; $j < $length; $j++) {\n                $lastTwoDigits = intval($num[$i] . $num[$j]);\n                if ($lastTwoDigits % 25 == 0) {\n                    // Operations = Total length - 2 (for the two digits) - (j - i - 1) (digits between i and j that are kept)\n                    $minOps = min($minOps, $length - 2 - ($j - $i - 1));\n                }\n            }\n        }\n        return $minOps;\n    }\n}"
}