{
    "status_code": 11,
    "lang": "csharp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 39700000,
    "question_id": "3046",
    "elapsed_time": 110,
    "compare_result
    "code_output": "0",
    "std_output": "",
    "last_testcase": "\"1\"",
    "expected_output": "1",
    "task_finish_time": 1707906864584,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 720,
    "total_testcases": 813,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C#",
    "submission_id": "1175028880",
    "input_formatted": "\"1\"",
    "input": "\"1\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "public class Solution {\n    public int MinimumOperations(string num) {\n        int n = num.Length;\n        int ans = n + 1;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                int val = (num[i] - '0') * 10 + (num[j] - '0');\n                if (val % 25 == 0) {\n                    ans = Math.Min(ans, j - i - 1 + n - j - 1);\n                }\n            }\n        }\n        return ans == n + 1 ? n - 1 : ans;\n    }\n}"
}