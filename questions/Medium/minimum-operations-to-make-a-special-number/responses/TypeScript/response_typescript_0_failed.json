{
    "status_code": 11,
    "lang": "typescript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 52532000,
    "question_id": "3046",
    "elapsed_time": 89,
    "compare_result
    "code_output": "2",
    "std_output": "",
    "last_testcase": "\"10\"",
    "expected_output": "1",
    "task_finish_time": 1707907117377,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 800,
    "total_testcases": 813,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "TypeScript",
    "submission_id": "1175031453",
    "input_formatted": "\"10\"",
    "input": "\"10\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "function minimumOperations(num: string): number {\n    const specialEndings = [\"00\", \"25\", \"50\", \"75\"];\n    let minOperations = num.length;\n\n    for (let ending of specialEndings) {\n        let i = num.length - 1;\n        let j = 1;\n        let operations = 0;\n        while (i >= 0 && j >= 0) {\n            if (num[i] === ending[j]) {\n                j--;\n            } else {\n                operations++;\n            }\n            i--;\n        }\n        if (j < 0) {\n            minOperations = Math.min(minOperations, operations);\n        }\n    }\n    return minOperations;\n};"
}