{
    "status_code": 15,
    "lang": "elixir",
    "run_success": false,
    "runtime_error": "Line 8: ** (FunctionClauseError) no function clause matching in anonymous fn/2 in Solution.minimum_operations/1",
    "full_runtime_error": "Line 8: ** (FunctionClauseError) no function clause matching in anonymous fn/2 in Solution.minimum_operations/1\n    The following arguments were given to anonymous fn/2 in Solution.minimum_operations/1:\n        # 1\n        {\"2\", 1}\n        # 2\n        7\n    solution.ex:8: anonymous fn/2 in Solution.minimum_operations/1\n    (elixir 1.15.7) lib/enum.ex:2510: Enum.\"-reduce/3-lists^foldl/2-0-\"/3\n    solution.ex:8: Solution.minimum_operations/1\n    solution.ex:36: Driver.consume_test_cases/2\n    solution.ex:24: Driver.start/0\n    nofile:1: (file)\n    (stdlib 5.1.1) erl_eval.erl:750: :erl_eval.do_apply/7",
    "status_runtime": "N/A",
    "memory": 73036000,
    "question_id": "3046",
    "elapsed_time": 355,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "\"2245047\"",
    "expected_output": "2",
    "task_finish_time": 1707917200656,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 813,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Elixir",
    "submission_id": "1175131659",
    "status_msg": "Runtime Error",
    "state": "SUCCESS",
    "code": "defmodule Solution do\n  @spec minimum_operations(num :: String.t) :: integer\n  def minimum_operations(num) do\n    suffixes = [\"00\", \"25\", \"50\", \"75\"]\n    num\n    |> String.graphemes()\n    |> Enum.with_index()\n    |> Enum.reduce({String.length(num), 0}, fn {digit, idx}, {min_ops, _} ->\n      Enum.reduce(suffixes, min_ops, fn suffix, acc ->\n        if String.ends_with?(String.slice(num, 0..idx), suffix) do\n          ops = String.length(num) - idx - 2\n          if ops < acc, do: ops, else: acc\n        else\n          acc\n        end\n      end)\n    end)\n    |> elem(0)\n  end\nend"
}