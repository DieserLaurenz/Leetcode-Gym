{
    "status_code": 11,
    "lang": "scala",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 53960000,
    "question_id": "3046",
    "elapsed_time": 584,
    "compare_result
    "code_output": "3",
    "std_output": "",
    "last_testcase": "\"2245047\"",
    "expected_output": "2",
    "task_finish_time": 1707908105055,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 115,
    "total_testcases": 813,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Scala",
    "submission_id": "1175041618",
    "input_formatted": "\"2245047\"",
    "input": "\"2245047\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "object Solution {\n    def minimumOperations(num: String): Int = {\n        val targets = List(\"00\", \"25\", \"50\", \"75\")\n        var ans = num.length\n\n        for (target <- targets) {\n            var i = num.length - 1\n            var count = 0\n            for (j <- 1 to 2) {\n                while (i >= 0 && num(i) != target(j - 1)) {\n                    i -= 1\n                    count += 1\n                }\n                if (i >= 0) i -= 1 else count = Int.MaxValue\n            }\n            ans = math.min(ans, count)\n        }\n\n        if (ans == num.length || ans == Int.MaxValue) num.length else num.length - ans - 2\n    }\n}"
}