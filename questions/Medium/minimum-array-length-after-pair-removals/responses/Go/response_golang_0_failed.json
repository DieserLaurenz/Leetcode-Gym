{
    "status_code": 11,
    "lang": "golang",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 8164000,
    "question_id": "3081",
    "elapsed_time": 157,
    "compare_result
    "code_output": "2",
    "std_output": "",
    "last_testcase": "[1,3,4,9]",
    "expected_output": "0",
    "task_finish_time": 1707741773192,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 297,
    "total_testcases": 635,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Go",
    "submission_id": "1173152007",
    "input_formatted": "[1,3,4,9]",
    "input": "[1,3,4,9]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "func minLengthAfterRemovals(nums []int) int {\n    even, odd := 0, 0\n    for _, num := range nums {\n        if num%2 == 0 {\n            even++\n        } else {\n            odd++\n        }\n    }\n    return abs(even - odd)\n}\n\nfunc abs(x int) int {\n    if x < 0 {\n        return -x\n    }\n    return x\n}"
}