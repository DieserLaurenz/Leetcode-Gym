{
    "status_code": 11,
    "lang": "rust",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 3484000,
    "question_id": "3081",
    "elapsed_time": 25,
    "compare_result
    "code_output": "2",
    "std_output": "",
    "last_testcase": "[1,3,4,9]",
    "expected_output": "0",
    "task_finish_time": 1707742110563,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 142,
    "total_testcases": 635,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Rust",
    "submission_id": "1173155629",
    "input_formatted": "[1,3,4,9]",
    "input": "[1,3,4,9]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "impl Solution {\n    pub fn min_length_after_removals(nums: Vec<i32>) -> i32 {\n        let mut pairs = 0;\n        for i in 0..nums.len() - 1 {\n            if nums[i] < nums[i + 1] {\n                pairs += 1;\n                break; // Skip the next element as it's part of a pair\n            }\n        }\n        (nums.len() as i32 - pairs * 2).max(0)\n    }\n}"
}