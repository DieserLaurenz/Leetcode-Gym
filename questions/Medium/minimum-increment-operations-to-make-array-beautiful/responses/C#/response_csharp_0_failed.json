{
    "status_code": 11,
    "lang": "csharp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 57148000,
    "question_id": "3178",
    "elapsed_time": 374,
    "compare_result
    "code_output": "23",
    "std_output": "",
    "last_testcase": "[2,3,0,0,2]\n4",
    "expected_output": "3",
    "task_finish_time": 1707804558919,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 24,
    "total_testcases": 570,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C#",
    "submission_id": "1173875031",
    "input_formatted": "[2,3,0,0,2], 4",
    "input": "[2,3,0,0,2]\n4",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "public class Solution {\n    public long MinIncrementOperations(int[] nums, int k) {\n        long operations = 0;\n        for (int i = 0; i < nums.Length; i++) {\n            if (nums[i] < k) {\n                int max = k - 1;\n                for (int j = i - 1; j <= i + 1 && j < nums.Length; j++) {\n                    if (j >= 0 && nums[j] > max) max = nums[j];\n                }\n                operations += max + 1 - nums[i];\n                nums[i] = max + 1;\n            }\n        }\n        return operations;\n    }\n}"
}