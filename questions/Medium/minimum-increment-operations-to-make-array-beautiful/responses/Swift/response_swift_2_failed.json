{
    "status_code": 11,
    "lang": "swift",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 20244000,
    "question_id": "3178",
    "elapsed_time": 341,
    "compare_result
    "code_output": "4",
    "std_output": "",
    "last_testcase": "[2,3,0,0,2]\n4",
    "expected_output": "3",
    "task_finish_time": 1707805065466,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 146,
    "total_testcases": 570,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Swift",
    "submission_id": "1173881964",
    "input_formatted": "[2,3,0,0,2], 4",
    "input": "[2,3,0,0,2]\n4",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    func minIncrementOperations(_ nums: [Int], _ k: Int) -> Int {\n        var ops = 0\n        var maxVal = nums[0]\n        for i in 1..<nums.count {\n            maxVal = max(maxVal, nums[i])\n            if i >= 2 {\n                let localMax = max(nums[i], nums[i-1], nums[i-2])\n                if localMax < k {\n                    ops += k - localMax\n                    maxVal = k // Update maxVal to reflect the increments\n                }\n            }\n        }\n        return ops\n    }\n}"
}