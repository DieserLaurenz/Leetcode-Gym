{
    "status_code": 10,
    "lang": "c",
    "run_success": true,
    "status_runtime": "94 ms",
    "memory": 13420000,
    "question_id": "3178",
    "elapsed_time": 113,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1707804345435,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 570,
    "total_testcases": 570,
    "runtime_percentile": 100,
    "status_memory": "13.4 MB",
    "memory_percentile": 100,
    "pretty_lang": "C",
    "submission_id": "1173872142",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "long long minIncrementOperations(int* nums, int numsSize, int k) {\n    long long operations = 0;\n    for (int i = 0; i < numsSize - 2; i++) {\n        int maxVal = nums[i];\n        for (int j = i; j < i + 3; j++) {\n            if (nums[j] > maxVal) maxVal = nums[j];\n        }\n        if (maxVal < k) {\n            operations += k - maxVal;\n            for (int j = i; j < i + 3; j++) {\n                nums[j] += k - maxVal;\n            }\n        }\n    }\n    return operations;\n}"
}