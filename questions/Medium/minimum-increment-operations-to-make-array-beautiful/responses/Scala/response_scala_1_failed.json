{
    "status_code": 11,
    "lang": "scala",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 80552000,
    "question_id": "3178",
    "elapsed_time": 987,
    "compare_result
    "code_output": "9",
    "std_output": "",
    "last_testcase": "[2,3,0,0,2]\n4",
    "expected_output": "3",
    "task_finish_time": 1707805555105,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 24,
    "total_testcases": 570,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Scala",
    "submission_id": "1173888692",
    "input_formatted": "[2,3,0,0,2], 4",
    "input": "[2,3,0,0,2]\n4",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "object Solution {\n    def minIncrementOperations(nums: Array[Int], k: Int): Long = {\n        nums.sortInPlace()\n        var ops = 0L\n        for (i <- nums.indices) {\n            if (nums(i) < k && (i < 2 || nums(i - 2) < k)) {\n                ops += k - nums(i)\n                nums(i) = k\n            }\n        }\n        ops\n    }\n}"
}