{
    "status_code": 11,
    "lang": "cpp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 83296000,
    "question_id": "3178",
    "elapsed_time": 136,
    "compare_result
    "code_output": "4",
    "std_output": "",
    "last_testcase": "[0,1,3,3]\n5",
    "expected_output": "2",
    "task_finish_time": 1707795127151,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 168,
    "total_testcases": 570,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C++",
    "submission_id": "1173754915",
    "input_formatted": "[0,1,3,3], 5",
    "input": "[0,1,3,3]\n5",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\npublic:\n    long long minIncrementOperations(vector<int>& nums, int k) {\n        long long operations = 0;\n        for (int i = 0; i < nums.size(); ++i) {\n            int maxInSubarray = nums[i];\n            for (int j = i; j < min(i + 3, (int)nums.size()); ++j) {\n                maxInSubarray = max(maxInSubarray, nums[j]);\n            }\n            if (maxInSubarray < k) {\n                operations += k - maxInSubarray;\n                for (int j = i; j < min(i + 3, (int)nums.size()); ++j) {\n                    nums[j] = max(nums[j], k - (maxInSubarray - nums[j]));\n                }\n            }\n        }\n        return operations;\n    }\n};"
}