{
    "status_code": 11,
    "lang": "rust",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 3612000,
    "question_id": "3178",
    "elapsed_time": 21,
    "compare_result
    "code_output": "2",
    "std_output": "",
    "last_testcase": "[2,3,0,0,2]\n4",
    "expected_output": "3",
    "task_finish_time": 1707805662349,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 94,
    "total_testcases": 570,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Rust",
    "submission_id": "1173890186",
    "input_formatted": "[2,3,0,0,2], 4",
    "input": "[2,3,0,0,2]\n4",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "impl Solution {\n    pub fn min_increment_operations(nums: Vec<i32>, k: i32) -> i64 {\n        let mut ops = 0;\n        let mut max_so_far = 0;\n        for &num in nums.iter().rev() {\n            max_so_far = max_so_far.max(num);\n            if max_so_far < k {\n                ops += k - max_so_far;\n                max_so_far = k;\n            }\n        }\n        ops as i64\n    }\n}"
}