{
    "status_code": 11,
    "lang": "ruby",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 220680000,
    "question_id": "3178",
    "elapsed_time": 283,
    "compare_result
    "code_output": "4",
    "std_output": "",
    "last_testcase": "[2,3,0,0,2]\n4",
    "expected_output": "3",
    "task_finish_time": 1707805476537,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 181,
    "total_testcases": 570,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Ruby",
    "submission_id": "1173887558",
    "input_formatted": "[2,3,0,0,2], 4",
    "input": "[2,3,0,0,2]\n4",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "# @param {Integer[]} nums\n# @param {Integer} k\n# @return {Integer}\ndef min_increment_operations(nums, k)\n    operations = 0\n    max_in_subarray = nums[0..2].max\n\n    nums.each_with_index do |num, i|\n        next if i < 2\n        if max_in_subarray < k\n            increment = k - max_in_subarray\n            operations += increment\n            nums[i] += increment\n        end\n        max_in_subarray = [max_in_subarray, nums[i-1], nums[i]].max\n        max_in_subarray = [nums[i-1], nums[i], nums[i+1]].max if i < nums.length - 1\n    end\n\n    operations\nend"
}