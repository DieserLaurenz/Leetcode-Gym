{
    "status_code": 11,
    "lang": "golang",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 8352000,
    "question_id": "3178",
    "elapsed_time": 123,
    "compare_result": "101111110010000111110100100100100100000000011111100000110111100101000001100001100000000111110100100100111011110000001101000001000100000101000100001100000100001000010100100000001011101101001000110001101111100010100010010010000000100001000000000010001000010000000101000000010100001101010000000000010000001010000100010000000000010010100001000010011101100010101000101001100011000000001010111000001010101101001000010100000011001000010011010001001001000100001000001000100000000000100000000000000000000010000000000000000000000000000000000000010001001000000000010011111101000101",
    "code_output": "4",
    "std_output": "",
    "last_testcase": "[0,1,3,3]\n5",
    "expected_output": "2",
    "task_finish_time": 1707805358941,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 168,
    "total_testcases": 570,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Go",
    "submission_id": "1173886035",
    "input_formatted": "[0,1,3,3], 5",
    "input": "[0,1,3,3]\n5",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "func minIncrementOperations(nums []int, k int) int64 {\n    var operations int64 = 0\n    for i := 0; i < len(nums); i++ {\n        maxInSubarray := nums[i]\n        for j := i; j < len(nums) && j < i+3; j++ {\n            if nums[j] > maxInSubarray {\n                maxInSubarray = nums[j]\n            }\n        }\n        if maxInSubarray < k {\n            diff := k - maxInSubarray\n            operations += int64(diff)\n            for j := i; j < len(nums) && j < i+3; j++ {\n                nums[j] += diff\n            }\n        }\n    }\n    return operations\n}"
}