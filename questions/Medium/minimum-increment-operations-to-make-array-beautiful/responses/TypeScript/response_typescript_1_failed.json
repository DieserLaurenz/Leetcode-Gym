{
    "status_code": 11,
    "lang": "typescript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 60288000,
    "question_id": "3178",
    "elapsed_time": 221,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "[2,3,0,0,2]\n4",
    "expected_output": "3",
    "task_finish_time": 1707804798636,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 133,
    "total_testcases": 570,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "TypeScript",
    "submission_id": "1173878326",
    "input_formatted": "[2,3,0,0,2], 4",
    "input": "[2,3,0,0,2]\n4",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "function minIncrementOperations(nums: number[], k: number): number {\n    let operations = 0, max = 0;\n    \n    for (let i = 0; i < nums.length; i++) {\n        max = Math.max(max, nums[i]);\n        if (i >= 2 && max < k) {\n            operations += k - max;\n            max = k;\n        }\n        // Update max for the next window\n        if (i >= 2) max = Math.max(max, nums[i - 1], nums[i]);\n    }\n\n    return operations;\n}"
}