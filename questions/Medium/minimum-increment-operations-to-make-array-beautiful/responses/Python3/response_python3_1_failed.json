{
    "status_code": 11,
    "lang": "python3",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 31688000,
    "question_id": "3178",
    "elapsed_time": 681,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "[2,3,0,0,2]\n4",
    "expected_output": "3",
    "task_finish_time": 1708818780730,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 133,
    "total_testcases": 570,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python3",
    "submission_id": "1185246690",
    "input_formatted": "[2,3,0,0,2], 4",
    "input": "[2,3,0,0,2]\n4",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "from typing import List\n\nclass Solution:\n    def minIncrementOperations(self, nums: List[int], k: int) -> int:\n        operations, max_in_window = 0, 0\n        window = []\n\n        for num in nums:\n            window.append(num)\n            if len(window) > 3:\n                window.pop(0)\n            max_in_window = max(max_in_window, num, max(window[-3:]))\n            if len(window) == 3 and max_in_window < k:\n                diff = k - max_in_window\n                operations += diff\n                max_in_window += diff\n                window[-1] += diff\n                \n        return operations"
}