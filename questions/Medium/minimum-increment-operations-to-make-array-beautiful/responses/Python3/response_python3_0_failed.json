{
    "status_code": 11,
    "lang": "python3",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 31776000,
    "question_id": "3178",
    "elapsed_time": 632,
    "compare_result
    "code_output": "4",
    "std_output": "",
    "last_testcase": "[2,3,0,0,2]\n4",
    "expected_output": "3",
    "task_finish_time": 1708818756370,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 181,
    "total_testcases": 570,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python3",
    "submission_id": "1185246551",
    "input_formatted": "[2,3,0,0,2], 4",
    "input": "[2,3,0,0,2]\n4",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "from typing import List\n\nclass Solution:\n    def minIncrementOperations(self, nums: List[int], k: int) -> int:\n        operations = 0\n        for i in range(len(nums) - 2):\n            max_val = max(nums[i], nums[i + 1], nums[i + 2])\n            if max_val < k:\n                diff = k - max_val\n                nums[i + 2] += diff\n                operations += diff\n        return operations"
}