{
    "status_code": 11,
    "lang": "python3",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 30920000,
    "question_id": "3178",
    "elapsed_time": 719,
    "compare_result
    "code_output": "4",
    "std_output": "",
    "last_testcase": "[2,3,0,0,2]\n4",
    "expected_output": "3",
    "task_finish_time": 1708818806282,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 99,
    "total_testcases": 570,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python3",
    "submission_id": "1185246856",
    "input_formatted": "[2,3,0,0,2], 4",
    "input": "[2,3,0,0,2]\n4",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "from typing import List\n\nclass Solution:\n    def minIncrementOperations(self, nums: List[int], k: int) -> int:\n        operations = 0\n        for i in range(len(nums)):\n            if nums[i] < k:\n                max_reachable = min(k, max(nums[i: i + 3])) if i + 3 <= len(nums) else nums[i]\n                increment = k - max_reachable\n                operations += increment\n                nums[i] += increment\n                for j in range(i + 1, min(i + 3, len(nums))):\n                    nums[j] = max(nums[j], nums[i])\n        return operations"
}