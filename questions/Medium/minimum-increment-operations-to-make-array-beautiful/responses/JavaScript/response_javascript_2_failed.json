{
    "status_code": 11,
    "lang": "javascript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 59132000,
    "question_id": "3178",
    "elapsed_time": 125,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "[2,3,0,0,2]\n4",
    "expected_output": "3",
    "task_finish_time": 1707804718567,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 162,
    "total_testcases": 570,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "JavaScript",
    "submission_id": "1173877213",
    "input_formatted": "[2,3,0,0,2], 4",
    "input": "[2,3,0,0,2]\n4",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "/**\n * @param {number[]} nums\n * @param {number} k\n * @return {number}\n */\nvar minIncrementOperations = function(nums, k) {\n    let operations = 0, max = 0;\n    for (let i = 0; i < nums.length; i++) {\n        max = Math.max(max, nums[i]);\n        if (i >= 2) {\n            if (max < k) {\n                operations += k - max;\n                max = k;\n            }\n            if (nums[i - 2] === max) {\n                max = Math.max(nums[i - 1], nums[i]);\n                for (let j = i - 3; j >= 0 && nums[j] === nums[i - 2]; j--) {\n                    max = Math.max(max, nums[j]);\n                }\n            }\n        }\n    }\n    return operations;\n};"
}