{
    "status_code": 11,
    "lang": "java",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 56668000,
    "display_runtime": "3",
    "question_id": "3178",
    "elapsed_time": 330,
    "compare_result": "001000000010000100000000000100000100000000001000100000100010000000000000000000000000000000000100100000010000000000000000000001000000000100000000000000000000000000000000000000000010100100000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111101000000",
    "code_output": "6",
    "std_output": "",
    "last_testcase": "[2,3,0,0,2]\n4",
    "expected_output": "3",
    "task_finish_time": 1707795291741,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 27,
    "total_testcases": 570,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Java",
    "submission_id": "1173756580",
    "input_formatted": "[2,3,0,0,2], 4",
    "input": "[2,3,0,0,2]\n4",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    public long minIncrementOperations(int[] nums, int k) {\n        long increments = 0;\n        for (int i = 0; i < nums.length; i++) {\n            int needed = k - nums[i];\n            if (needed > 0) {\n                increments += needed;\n                nums[i] += needed;\n                for (int j = i + 1; j < Math.min(nums.length, i + 3); j++) {\n                    if (nums[j] < k) {\n                        nums[j] += needed;\n                    }\n                }\n            }\n        }\n        return increments;\n    }\n}"
}