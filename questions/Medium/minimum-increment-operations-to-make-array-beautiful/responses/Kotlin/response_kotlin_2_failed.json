{
    "status_code": 11,
    "lang": "kotlin",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 71044000,
    "question_id": "3178",
    "elapsed_time": 837,
    "compare_result
    "code_output": "4",
    "std_output": "",
    "last_testcase": "[7,7,2,7]\n9",
    "expected_output": "2",
    "task_finish_time": 1707805174340,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 131,
    "total_testcases": 570,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Kotlin",
    "submission_id": "1173883467",
    "input_formatted": "[7,7,2,7], 9",
    "input": "[7,7,2,7]\n9",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    fun minIncrementOperations(nums: IntArray, k: Int): Long {\n        var ops = 0L\n        val n = nums.size\n        var max = 0\n\n        for (i in nums.indices) {\n            max = maxOf(max, nums[i])\n            if (i >= 2) {\n                max = maxOf(max, nums[i - 1], nums[i - 2])\n                if (max < k) {\n                    ops += (k - max)\n                    nums[i] += (k - max)\n                }\n            }\n        }\n\n        return ops\n    }\n}"
}