{
    "status_code": 11,
    "lang": "dart",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 183184000,
    "question_id": "3178",
    "elapsed_time": 767,
    "compare_result
    "code_output": "13",
    "std_output": "",
    "last_testcase": "[2,3,0,0,2]\n4",
    "expected_output": "3",
    "task_finish_time": 1707805231231,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 24,
    "total_testcases": 570,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Dart",
    "submission_id": "1173884267",
    "input_formatted": "[2,3,0,0,2], 4",
    "input": "[2,3,0,0,2]\n4",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n  int minIncrementOperations(List<int> nums, int k) {\n    int maxOperations = 0;\n    for (int i = 0; i < nums.length; i++) {\n      int needed = k - nums[i];\n      if (needed > 0) {\n        maxOperations += needed;\n        nums[i] += needed;\n      }\n      if (i >= 2) {\n        int localMax = nums.sublist(i - 2, i + 1).reduce((a, b) => a > b ? a : b);\n        if (localMax < k) {\n          int increment = k - localMax;\n          nums[i] += increment;\n          maxOperations += increment;\n        }\n      }\n    }\n    return maxOperations;\n  }\n}"
}