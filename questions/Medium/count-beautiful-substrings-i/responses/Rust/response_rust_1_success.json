{
    "status_code": 10,
    "lang": "rust",
    "run_success": true,
    "status_runtime": "21 ms",
    "memory": 2104000,
    "question_id": "3210",
    "elapsed_time": 70,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1707067277296,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 619,
    "total_testcases": 619,
    "runtime_percentile": 64.28550000000001,
    "status_memory": "2.1 MB",
    "memory_percentile": 71.4285,
    "pretty_lang": "Rust",
    "submission_id": "1166034371",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "impl Solution {\n    pub fn beautiful_substrings(s: String, k: i32) -> i32 {\n        let bytes = s.as_bytes();\n        let mut result = 0;\n        let mut prefix_sum = vec![(0, 0); s.len() + 1]; // (vowels, consonants)\n\n        for i in 0..s.len() {\n            let is_vowel = matches!(bytes[i], b'a' | b'e' | b'i' | b'o' | b'u');\n            prefix_sum[i + 1] = if is_vowel {\n                (prefix_sum[i].0 + 1, prefix_sum[i].1)\n            } else {\n                (prefix_sum[i].0, prefix_sum[i].1 + 1)\n            };\n        }\n\n        for i in 0..s.len() {\n            for j in (i + 1)..=s.len() {\n                let (vowels, consonants) = (prefix_sum[j].0 - prefix_sum[i].0, prefix_sum[j].1 - prefix_sum[i].1);\n                if vowels == consonants && (vowels * consonants) % k == 0 {\n                    result += 1;\n                }\n            }\n        }\n\n        result\n    }\n}"
}