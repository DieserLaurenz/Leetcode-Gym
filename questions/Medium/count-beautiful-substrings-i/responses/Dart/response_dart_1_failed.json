{
    "status_code": 11,
    "lang": "dart",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 325344000,
    "question_id": "3210",
    "elapsed_time": 2899,
    "compare_result": "1111111111111111111111111111111111111101111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111011111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111001011",
    "code_output": "38",
    "std_output": "",
    "last_testcase": "\"iuhoezpooxcohtlapolo\"\n1",
    "expected_output": "39",
    "task_finish_time": 1707064918820,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 614,
    "total_testcases": 619,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Dart",
    "submission_id": "1166000517",
    "input_formatted": "\"iuhoezpooxcohtlapolo\", 1",
    "input": "\"iuhoezpooxcohtlapolo\"\n1",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n  int beautifulSubstrings(String s, int k) {\n    int n = s.length;\n    List<int> vowels = List.filled(n + 1, 0), consonants = List.filled(n + 1, 0);\n    int count = 0;\n\n    // Precompute the cumulative count of vowels and consonants\n    for (int i = 0; i < n; i++) {\n      vowels[i + 1] = vowels[i] + ('aeiou'.contains(s[i]) ? 1 : 0);\n      consonants[i + 1] = consonants[i] + ('aeiou'.contains(s[i]) ? 0 : 1);\n    }\n\n    // Using a set to avoid counting duplicates\n    Set<String> checkedSubstrings = Set();\n\n    // Check every possible substring\n    for (int i = 0; i < n; i++) {\n      for (int j = i + 1; j <= n; j++) {\n        int vCount = vowels[j] - vowels[i];\n        int cCount = consonants[j] - consonants[i];\n        String subStr = s.substring(i, j);\n\n        if (vCount == cCount && (vCount * cCount) % k == 0 && !checkedSubstrings.contains(subStr)) {\n          count++;\n          checkedSubstrings.add(subStr);\n        }\n      }\n    }\n\n    return count;\n  }\n}"
}