{
    "status_code": 10,
    "lang": "cpp",
    "run_success": true,
    "status_runtime": "36 ms",
    "memory": 8296000,
    "question_id": "3210",
    "elapsed_time": 49,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1707054508186,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 619,
    "total_testcases": 619,
    "runtime_percentile": 71.16549999999997,
    "status_memory": "8.3 MB",
    "memory_percentile": 20.869000000000007,
    "pretty_lang": "C++",
    "submission_id": "1165873047",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "#include <string>\nusing namespace std;\n\nclass Solution {\npublic:\n    int beautifulSubstrings(string s, int k) {\n        int count = 0; // To keep track of the number of beautiful substrings\n        \n        // Helper lambda to check if a character is a vowel\n        auto isVowel = [](char ch) {\n            return ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u';\n        };\n        \n        // Iterate through all possible substrings\n        for (size_t i = 0; i < s.length(); ++i) {\n            int vowels = 0, consonants = 0;\n            for (size_t j = i; j < s.length(); ++j) {\n                // Increment the appropriate counter based on whether the current character is a vowel\n                isVowel(s[j]) ? ++vowels : ++consonants;\n                \n                // Check if the current substring is beautiful\n                if (vowels == consonants && (vowels * consonants) % k == 0) {\n                    ++count;\n                }\n            }\n        }\n        \n        return count;\n    }\n};"
}