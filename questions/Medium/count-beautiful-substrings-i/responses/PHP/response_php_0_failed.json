{
    "status_code": 11,
    "lang": "php",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 19832000,
    "question_id": "3210",
    "elapsed_time": 5178,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "\"abba\"\n1",
    "expected_output": "3",
    "task_finish_time": 1707064558295,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 225,
    "total_testcases": 619,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "PHP",
    "submission_id": "1165995241",
    "input_formatted": "\"abba\", 1",
    "input": "\"abba\"\n1",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n\n    /**\n     * @param String $s\n     * @param Integer $k\n     * @return Integer\n     */\n    function beautifulSubstrings($s, $k) {\n        $beautifulCount = 0;\n        $length = strlen($s);\n\n        for ($i = 0; $i < $length; $i++) {\n            for ($j = $i; $j < $length; $j++) {\n                $substring = substr($s, $i, $j - $i + 1);\n                $vowels = 0;\n                $consonants = 0;\n\n                // Count vowels and consonants\n                for ($k = 0, $subLen = strlen($substring); $k < $subLen; $k++) {\n                    if (strpos('aeiou', $substring[$k]) !== false) {\n                        $vowels++;\n                    } else {\n                        $consonants++;\n                    }\n                }\n\n                // Check if substring is beautiful\n                if ($vowels == $consonants && ($vowels * $consonants) % $k == 0) {\n                    $beautifulCount++;\n                }\n            }\n        }\n\n        return $beautifulCount;\n    }\n}"
}