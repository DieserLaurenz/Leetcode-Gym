{
    "status_code": 15,
    "lang": "erlang",
    "run_success": false,
    "runtime_error": "Line 6: exception error: undef",
    "full_runtime_error": "Line 6: exception error: undef\n[{binary,foldl,[#Fun<solution.1.20365281>,{0,0},<<\"b\">>],[]},\n {solution,'-beautiful_substrings/2-fun-3-',3,\n              [{file,\"solution.erl\"},{line,6}]},\n {lists,foldl,3,[{file,\"lists.erl\"},{line,1594}]},\n {solution,consume_test_cases,2,[{file,\"solution.erl\"},{line,37}]},\n {solution,driver,0,[{file,\"solution.erl\"},{line,23}]},\n {solution,start,0,[{file,\"solution.erl\"},{line,54}]},\n {init,start_em,1,[]},\n {init,do_boot,3,[]}]",
    "status_runtime": "N/A",
    "memory": 59516000,
    "question_id": "3210",
    "elapsed_time": 1279,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "\"baeyh\"\n2",
    "expected_output": "2",
    "task_finish_time": 1707074193606,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 619,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Erlang",
    "submission_id": "1166132167",
    "status_msg": "Runtime Error",
    "state": "SUCCESS",
    "code": "-spec beautiful_substrings(S :: unicode:unicode_binary(), K :: integer()) -> integer().\nbeautiful_substrings(S, K) ->\n    Substrs = [binary:part(S, Start, Length) || Start <- lists:seq(0, byte_size(S) - 1),\n                                                Length <- lists:seq(1, byte_size(S) - Start)],\n    CountBeautifulSubstrs = fun(Str, Acc) ->\n        {Vowels, Consonants} = binary:foldl(fun(Char, {V, C}) ->\n            case lists:member(Char, \"aeiou\") of\n                true -> {V + 1, C};\n                false -> {V, C + 1}\n            end\n        end, {0, 0}, Str),\n        if\n            Vowels == Consonants, (Vowels * Consonants) rem K == 0 ->\n                Acc + 1;\n            true ->\n                Acc\n        end\n    end,\n    lists:foldl(CountBeautifulSubstrs, 0, Substrs)."
}