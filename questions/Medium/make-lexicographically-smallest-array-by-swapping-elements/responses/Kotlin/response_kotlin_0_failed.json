{
    "status_code": 11,
    "lang": "kotlin",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 65100000,
    "question_id": "3219",
    "elapsed_time": 5158,
    "compare_result
    "code_output": "[1,79,10,77,36,2,81,12,20,87]",
    "std_output": "",
    "last_testcase": "[1,81,10,79,36,2,87,12,20,77]\n7",
    "expected_output": "[1,77,10,79,36,2,81,12,20,87]",
    "task_finish_time": 1707546669508,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 397,
    "total_testcases": 523,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Kotlin",
    "submission_id": "1171183439",
    "input_formatted": "[1,81,10,79,36,2,87,12,20,77], 7",
    "input": "[1,81,10,79,36,2,87,12,20,77]\n7",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    fun lexicographicallySmallestArray(nums: IntArray, limit: Int): IntArray {\n        val n = nums.size\n        val sortedIndices = nums.indices.sortedBy { nums[it] }\n        val position = IntArray(n) { 0 }\n        sortedIndices.forEachIndexed { index, value -> position[value] = index }\n\n        for (i in 0 until n) {\n            val minPosition = position[i]\n            for (j in i until n) {\n                if (Math.abs(nums[i] - nums[j]) <= limit && position[j] < minPosition) {\n                    nums[i] = nums[j].also { nums[j] = nums[i] }\n                    position[i] = position[j].also { position[j] = position[i] }\n                    break\n                }\n            }\n        }\n        return nums\n    }\n}"
}