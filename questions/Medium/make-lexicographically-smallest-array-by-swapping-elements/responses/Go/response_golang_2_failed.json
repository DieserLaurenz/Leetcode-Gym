{
    "status_code": 11,
    "lang": "golang",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 8696000,
    "question_id": "3219",
    "elapsed_time": 3013,
    "compare_result
    "code_output": "[5,15,67,47,49,68,6,9,35,14]",
    "std_output": "",
    "last_testcase": "[5,15,68,47,49,67,9,6,35,14]\n4",
    "expected_output": "[5,14,67,47,49,68,6,9,35,15]",
    "task_finish_time": 1707546968945,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 459,
    "total_testcases": 523,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Go",
    "submission_id": "1171186783",
    "input_formatted": "[5,15,68,47,49,67,9,6,35,14], 4",
    "input": "[5,15,68,47,49,67,9,6,35,14]\n4",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "func lexicographicallySmallestArray(nums []int, limit int) []int {\n    changed := true\n    for changed {\n        changed = false\n        for i := 0; i < len(nums); i++ {\n            minIndex, minValue := i, nums[i]\n            for j := i + 1; j < len(nums) && j <= i+limit; j++ {\n                if abs(nums[i]-nums[j]) <= limit && nums[j] < minValue {\n                    minIndex, minValue = j, nums[j]\n                    changed = true\n                }\n            }\n            if minIndex != i {\n                nums[i], nums[minIndex] = nums[minIndex], nums[i]\n                break\n            }\n        }\n    }\n    return nums\n}\n\nfunc abs(x int) int {\n    if x < 0 {\n        return -x\n    }\n    return x\n}"
}