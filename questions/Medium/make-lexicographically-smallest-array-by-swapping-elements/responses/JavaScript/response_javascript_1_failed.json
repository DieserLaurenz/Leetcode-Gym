{
    "status_code": 11,
    "lang": "javascript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 63668000,
    "question_id": "3219",
    "elapsed_time": 4011,
    "compare_result
    "code_output": "[1,34,56,60,84,62,38,39,76,49]",
    "std_output": "",
    "last_testcase": "[1,60,34,84,62,56,39,76,49,38]\n4",
    "expected_output": "[1,56,34,84,60,62,38,76,49,39]",
    "task_finish_time": 1707546248345,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 214,
    "total_testcases": 523,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "JavaScript",
    "submission_id": "1171178953",
    "input_formatted": "[1,60,34,84,62,56,39,76,49,38], 4",
    "input": "[1,60,34,84,62,56,39,76,49,38]\n4",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "/**\n * @param {number[]} nums\n * @param {number} limit\n * @return {number[]}\n */\nvar lexicographicallySmallestArray = function(nums, limit) {\n    for (let i = 0; i < nums.length; ++i) {\n        for (let j = i + 1; j < nums.length; ++j) {\n            if (Math.abs(nums[i] - nums[j]) <= limit) {\n                let minIndex = i;\n                for (let k = i + 1; k <= j; ++k) {\n                    if (nums[k] < nums[minIndex]) {\n                        minIndex = k;\n                    }\n                }\n                if (minIndex !== i) {\n                    let temp = nums[minIndex];\n                    for (let k = minIndex; k > i; --k) {\n                        nums[k] = nums[k - 1];\n                    }\n                    nums[i] = temp;\n                }\n            }\n        }\n    }\n    return nums;\n};"
}