{
    "status_code": 11,
    "lang": "elixir",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 83732000,
    "question_id": "3219",
    "elapsed_time": 6016,
    "compare_result
    "code_output": "[4,38,52,59,71,27,31,83,88,10]",
    "std_output": "",
    "last_testcase": "[4,52,38,59,71,27,31,83,88,10]\n14",
    "expected_output": "[4,27,31,38,52,59,71,83,88,10]",
    "task_finish_time": 1707556874389,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 421,
    "total_testcases": 523,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Elixir",
    "submission_id": "1171282089",
    "input_formatted": "[4,52,38,59,71,27,31,83,88,10], 14",
    "input": "[4,52,38,59,71,27,31,83,88,10]\n14",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "defmodule Solution do\n  @spec lexicographically_smallest_array(nums :: [integer], limit :: integer) :: [integer]\n  def lexicographically_smallest_array(nums, limit) do\n    list_length = length(nums)\n    0..list_length-1\n    |> Enum.reduce(nums, fn i, acc ->\n      min_pos = Enum.reduce(i..list_length-1, i, fn j, min_pos ->\n        if abs(Enum.at(acc, i) - Enum.at(acc, j)) <= limit and Enum.at(acc, j) < Enum.at(acc, min_pos), do: j, else: min_pos\n      end)\n      if min_pos != i, do: List.replace_at(acc, i, Enum.at(acc, min_pos)) |> List.replace_at(min_pos, Enum.at(acc, i)), else: acc\n    end)\n  end\nend"
}