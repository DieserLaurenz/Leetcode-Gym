{
    "status_code": 11,
    "lang": "java",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 57404000,
    "question_id": "3219",
    "elapsed_time": 4011,
    "compare_result
    "code_output": "[1,56,34,84,60,0,38,76,49,39]",
    "std_output": "",
    "last_testcase": "[1,60,34,84,62,56,39,76,49,38]\n4",
    "expected_output": "[1,56,34,84,60,62,38,76,49,39]",
    "task_finish_time": 1707545917940,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 409,
    "total_testcases": 523,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Java",
    "submission_id": "1171175401",
    "input_formatted": "[1,60,34,84,62,56,39,76,49,38], 4",
    "input": "[1,60,34,84,62,56,39,76,49,38]\n4",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    public int[] lexicographicallySmallestArray(int[] nums, int limit) {\n        int n = nums.length;\n        int[] ans = new int[n];\n        TreeMap<Integer, Integer> map = new TreeMap<>();\n        for (int num : nums) map.put(num, map.getOrDefault(num, 0) + 1);\n        for (int i = 0; i < n; i++) {\n            for (int key : map.keySet()) {\n                if (Math.abs(nums[i] - key) <= limit) {\n                    ans[i] = key;\n                    if (map.get(key) == 1) map.remove(key);\n                    else map.put(key, map.get(key) - 1);\n                    break;\n                }\n            }\n        }\n        return ans;\n    }\n}"
}