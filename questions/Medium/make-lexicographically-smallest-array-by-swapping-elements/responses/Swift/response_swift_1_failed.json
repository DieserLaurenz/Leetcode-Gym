{
    "status_code": 11,
    "lang": "swift",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 30040000,
    "question_id": "3219",
    "elapsed_time": 5310,
    "compare_result
    "code_output": "[1,7,6,18,2,1]",
    "std_output": "",
    "last_testcase": "[1,7,6,18,2,1]\n3",
    "expected_output": "[1,6,7,18,1,2]",
    "task_finish_time": 1707546579862,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 236,
    "total_testcases": 523,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Swift",
    "submission_id": "1171182439",
    "input_formatted": "[1,7,6,18,2,1], 3",
    "input": "[1,7,6,18,2,1]\n3",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    func lexicographicallySmallestArray(_ nums: [Int], _ limit: Int) -> [Int] {\n        var nums = nums\n        var sorted = nums.sorted()\n        var indexMap = [Int: [Int]]()\n        for i in 0..<nums.count {\n            indexMap[nums[i], default: []].append(i)\n        }\n\n        for i in 0..<nums.count {\n            if nums[i] != sorted[i] {\n                for j in i+1..<nums.count {\n                    if nums[j] == sorted[i], abs(nums[i] - nums[j]) <= limit {\n                        nums.swapAt(i, j)\n                        break\n                    }\n                }\n            }\n        }\n\n        return nums\n    }\n}"
}