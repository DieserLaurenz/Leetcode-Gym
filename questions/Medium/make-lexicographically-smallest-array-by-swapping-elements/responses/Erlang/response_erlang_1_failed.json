{
    "status_code": 11,
    "lang": "erlang",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 180068000,
    "question_id": "3219",
    "elapsed_time": 2089,
    "compare_result": "0001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000100001",
    "code_output": "[8,9,3,5,1]",
    "std_output": "",
    "last_testcase": "[1,5,3,9,8]\n2",
    "expected_output": "[1,3,5,8,9]",
    "task_finish_time": 1707556764309,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 4,
    "total_testcases": 523,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Erlang",
    "submission_id": "1171281109",
    "input_formatted": "[1,5,3,9,8], 2",
    "input": "[1,5,3,9,8]\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "-spec lexicographically_smallest_array(Nums :: [integer()], Limit :: integer()) -> [integer()].\nlexicographically_smallest_array(Nums, Limit) ->\n    lists:sort(fun(A, B) ->\n        case abs(A - B) =< Limit of\n            true -> A < B;\n            false -> false\n        end\n    end, Nums)."
}