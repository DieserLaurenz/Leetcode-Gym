{
    "status_code": 11,
    "lang": "python",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 13532000,
    "question_id": "3219",
    "elapsed_time": 11009,
    "compare_result": "1001000000000000000000000000000000000000000000000000000000000100000001000000000000101000000000001000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "code_output": "[1,1,2,6,7,18]",
    "std_output": "",
    "last_testcase": "[1,7,6,18,2,1]\n3",
    "expected_output": "[1,6,7,18,1,2]",
    "task_finish_time": 1708786890171,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 8,
    "total_testcases": 523,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python",
    "submission_id": "1184894194",
    "input_formatted": "[1,7,6,18,2,1], 3",
    "input": "[1,7,6,18,2,1]\n3",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution(object):\n    def lexicographicallySmallestArray(self, nums, limit):\n        \"\"\"\n        :type nums: List[int]\n        :type limit: int\n        :rtype: List[int]\n        \"\"\"\n        changed = True\n        while changed:\n            changed = False\n            for i in range(len(nums) - 1):\n                min_val = nums[i]\n                min_index = i\n                for j in range(i + 1, min(len(nums), i + limit + 2)):\n                    if nums[j] < min_val:\n                        min_val = nums[j]\n                        min_index = j\n                        changed = True\n                for k in range(min_index, i, -1):\n                    nums[k] = nums[k - 1]\n                nums[i] = min_val\n        return nums"
}