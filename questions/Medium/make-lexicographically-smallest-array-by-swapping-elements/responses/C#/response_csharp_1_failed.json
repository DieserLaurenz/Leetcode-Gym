{
    "status_code": 11,
    "lang": "csharp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 123876000,
    "question_id": "3219",
    "elapsed_time": 1457,
    "compare_result
    "code_output": "[1,7,6,18,1,2]",
    "std_output": "",
    "last_testcase": "[1,7,6,18,2,1]\n3",
    "expected_output": "[1,6,7,18,1,2]",
    "task_finish_time": 1707546133658,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 257,
    "total_testcases": 523,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C#",
    "submission_id": "1171177806",
    "input_formatted": "[1,7,6,18,2,1], 3",
    "input": "[1,7,6,18,2,1]\n3",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "public class Solution {\n    public int[] LexicographicallySmallestArray(int[] nums, int limit) {\n        for (int i = 0; i < nums.Length; i++) {\n            int minIndex = i;\n            for (int j = i + 1; j < nums.Length && j <= i + limit; j++) {\n                if (nums[j] < nums[minIndex]) {\n                    minIndex = j;\n                }\n            }\n            if (minIndex != i) {\n                for (int k = minIndex; k > i; k--) {\n                    if (Math.Abs(nums[k] - nums[k - 1]) <= limit) {\n                        int temp = nums[k];\n                        nums[k] = nums[k - 1];\n                        nums[k - 1] = temp;\n                    } else {\n                        break;\n                    }\n                }\n            }\n        }\n        return nums;\n    }\n}"
}