{
    "status_code": 15,
    "lang": "elixir",
    "run_success": false,
    "runtime_error": "Line 11: ** (UndefinedFunctionError) function Map.from_list/1 is undefined or private. Did you mean:",
    "full_runtime_error": "Line 11: ** (UndefinedFunctionError) function Map.from_list/1 is undefined or private. Did you mean:\n      * from_keys/2\n      * from_struct/1\n      * to_list/1\n    (elixir 1.15.7) Map.from_list([{1, 1}, {2, 1}, {1, 1}, {2, 1}])\n    solution.ex:11: Solution.maximum_set_size/2\n    solution.ex:31: Driver.consume_test_cases/2\n    solution.ex:17: Driver.start/0\n    nofile:1: (file)\n    (stdlib 5.1.1) erl_eval.erl:750: :erl_eval.do_apply/7",
    "status_runtime": "N/A",
    "memory": 75632000,
    "question_id": "3228",
    "elapsed_time": 419,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "[1,2,1,2]\n[1,1,1,1]",
    "expected_output": "2",
    "task_finish_time": 1707639181158,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 969,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Elixir",
    "submission_id": "1172130119",
    "status_msg": "Runtime Error",
    "state": "SUCCESS",
    "code": "defmodule Solution do\n  @spec maximum_set_size(nums1 :: [integer], nums2 :: [integer]) :: integer\n  def maximum_set_size(nums1, nums2) do\n    nums1\n    |> Enum.concat(nums2)\n    |> Enum.frequencies()\n    |> Map.values()\n    |> Enum.sort(:desc)\n    |> Enum.take(div(length(nums1), 2))\n    |> Enum.sum()\n    |> Kernel.+(Enum.count(Map.from_list(Enum.zip(nums1, nums2)) |> Map.keys()))\n  end\nend"
}