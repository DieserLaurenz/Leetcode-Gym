{
    "status_code": 11,
    "lang": "dart",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 180832000,
    "question_id": "3228",
    "elapsed_time": 610,
    "compare_result
    "code_output": "6",
    "std_output": "",
    "last_testcase": "[1,2,3,4,5,6]\n[2,3,2,3,2,3]",
    "expected_output": "5",
    "task_finish_time": 1707638348995,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 433,
    "total_testcases": 969,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Dart",
    "submission_id": "1172122045",
    "input_formatted": "[1,2,3,4,5,6], [2,3,2,3,2,3]",
    "input": "[1,2,3,4,5,6]\n[2,3,2,3,2,3]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n  int maximumSetSize(List<int> nums1, List<int> nums2) {\n    final int n = nums1.length;\n    Set<int> uniqueElements = {};\n    nums1.addAll(nums2);\n    uniqueElements.addAll(nums1);\n    return (uniqueElements.length <= n) ? uniqueElements.length : (n ~/ 2 + uniqueElements.length - n);\n  }\n}"
}