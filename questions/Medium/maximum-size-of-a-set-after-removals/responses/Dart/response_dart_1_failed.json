{
    "status_code": 11,
    "lang": "dart",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 184376000,
    "question_id": "3228",
    "elapsed_time": 657,
    "compare_result
    "code_output": "3",
    "std_output": "",
    "last_testcase": "[1,1,2,2,3,3]\n[4,4,5,5,6,6]",
    "expected_output": "6",
    "task_finish_time": 1707638328110,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 206,
    "total_testcases": 969,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Dart",
    "submission_id": "1172121834",
    "input_formatted": "[1,1,2,2,3,3], [4,4,5,5,6,6]",
    "input": "[1,1,2,2,3,3]\n[4,4,5,5,6,6]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n  int maximumSetSize(List<int> nums1, List<int> nums2) {\n    final totalLength = nums1.length + nums2.length;\n    final countMap = <int, int>{};\n    nums1.forEach((num) => countMap[num] = (countMap[num] ?? 0) + 1);\n    nums2.forEach((num) => countMap[num] = (countMap[num] ?? 0) + 1);\n    final counts = countMap.values.toList()..sort((a, b) => b.compareTo(a));\n    var removeCount = nums1.length ~/ 2;\n    var uniqueCount = 0;\n    for (var count in counts) {\n      if (removeCount > 0) {\n        var minCount = count ~/ 2;\n        if (minCount > 0) {\n          if (removeCount >= minCount) {\n            removeCount -= minCount;\n          } else {\n            minCount = removeCount;\n            removeCount = 0;\n          }\n          count -= minCount * 2;\n        }\n      }\n      if (count > 0) uniqueCount++;\n    }\n    return uniqueCount;\n  }\n}"
}