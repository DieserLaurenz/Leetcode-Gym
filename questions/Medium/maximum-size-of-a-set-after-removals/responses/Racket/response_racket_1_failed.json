{
    "status_code": 15,
    "lang": "racket",
    "run_success": false,
    "runtime_error": "hash-update: contract violation",
    "full_runtime_error": "hash-update: contract violation\n  expected: (and/c hash? immutable?)\n  given: '#hash()\n  context...:\n   /usr/share/racket/collects/racket/private/list.rkt:248:4: foldl\n   solution.rkt:1:0: maximum-set-size\n   /usr/share/racket/collects/racket/contract/private/arrow-higher-order.rkt:379:33\n   solution.rkt:18:2\n   body of (submod \"solution.rkt\" main)",
    "status_runtime": "N/A",
    "memory": 100164000,
    "question_id": "3228",
    "elapsed_time": 342,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "[1,2,1,2]\n[1,1,1,1]",
    "expected_output": "2",
    "task_finish_time": 1707638851949,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 969,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Racket",
    "submission_id": "1172126930",
    "status_msg": "Runtime Error",
    "state": "SUCCESS",
    "code": "(define/contract (maximum-set-size nums1 nums2)\n  (-> (listof exact-integer?) (listof exact-integer?) exact-integer?)\n  (let* ([n (/ (length nums1) 2)]\n         [combined (append nums1 nums2)]\n         [freq (foldl (lambda (x acc)\n                        (hash-update acc x add1 0))\n                      (make-hash)\n                      combined)]\n         [most-frequent (take (sort (hash->list freq) \n                                    (lambda (x y) (> (cdr x) (cdr y)))) \n                              n)])\n    (min (+ (length (list->set nums1)) (length (list->set nums2)))\n         (+ n (length (remove* (map car most-frequent) (list->set combined)))))))"
}