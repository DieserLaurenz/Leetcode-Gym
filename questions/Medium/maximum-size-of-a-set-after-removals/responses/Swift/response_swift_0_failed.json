{
    "status_code": 11,
    "lang": "swift",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 18692000,
    "question_id": "3228",
    "elapsed_time": 360,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "[1,2,1,2]\n[1,1,1,1]",
    "expected_output": "2",
    "task_finish_time": 1707638087192,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 145,
    "total_testcases": 969,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Swift",
    "submission_id": "1172119460",
    "input_formatted": "[1,2,1,2], [1,1,1,1]",
    "input": "[1,2,1,2]\n[1,1,1,1]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    func maximumSetSize(_ nums1: [Int], _ nums2: [Int]) -> Int {\n        let combined = nums1 + nums2\n        let frequency = combined.reduce(into: [:]) { count, num in count[num, default: 0] += 1 }\n        let sortedFrequencies = frequency.values.sorted(by: >)\n        var elementsToRemove = nums1.count / 2\n        var setSize = 0\n        for freq in sortedFrequencies {\n            if elementsToRemove >= freq {\n                elementsToRemove -= freq\n            } else {\n                setSize += 1\n            }\n        }\n        return setSize\n    }\n}"
}