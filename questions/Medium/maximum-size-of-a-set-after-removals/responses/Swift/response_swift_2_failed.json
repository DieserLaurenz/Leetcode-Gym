{
    "status_code": 11,
    "lang": "swift",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 18588000,
    "question_id": "3228",
    "elapsed_time": 380,
    "compare_result
    "code_output": "4",
    "std_output": "",
    "last_testcase": "[1,2,3,4,5,6]\n[2,3,2,3,2,3]",
    "expected_output": "5",
    "task_finish_time": 1707638146373,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 192,
    "total_testcases": 969,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Swift",
    "submission_id": "1172120047",
    "input_formatted": "[1,2,3,4,5,6], [2,3,2,3,2,3]",
    "input": "[1,2,3,4,5,6]\n[2,3,2,3,2,3]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    func maximumSetSize(_ nums1: [Int], _ nums2: [Int]) -> Int {\n        let n = nums1.count\n        var elements = [Int: Int]()\n        \n        // Count occurrences in both arrays\n        for i in 0..<n {\n            elements[nums1[i], default: 0] += 1\n            elements[nums2[i], default: 0] += 1\n        }\n        \n        // Sort elements by their frequency\n        let sortedElements = elements.sorted { $0.value > $1.value }\n        var setSize = 0\n        var removed = 0\n        \n        // Try to remove elements starting from the most frequent\n        for (_, count) in sortedElements {\n            if removed < n {\n                let toRemove = min(n / 2, count / 2)\n                removed += toRemove * 2\n                setSize += count - toRemove * 2 > 0 ? 1 : 0\n            } else {\n                setSize += 1\n            }\n        }\n        \n        return setSize\n    }\n}"
}