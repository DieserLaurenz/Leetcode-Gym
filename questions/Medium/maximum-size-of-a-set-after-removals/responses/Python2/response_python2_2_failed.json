{
    "status_code": 11,
    "lang": "python",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 19296000,
    "question_id": "3228",
    "elapsed_time": 664,
    "compare_result
    "code_output": "3",
    "std_output": "",
    "last_testcase": "[1,1,2,2,3,3]\n[4,4,5,5,6,6]",
    "expected_output": "6",
    "task_finish_time": 1708797576888,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 206,
    "total_testcases": 969,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python",
    "submission_id": "1185041405",
    "input_formatted": "[1,1,2,2,3,3], [4,4,5,5,6,6]",
    "input": "[1,1,2,2,3,3]\n[4,4,5,5,6,6]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution(object):\n    def maximumSetSize(self, nums1, nums2):\n        \"\"\"\n        :type nums1: List[int]\n        :type nums2: List[int]\n        :rtype: int\n        \"\"\"\n        nums_combined = nums1 + nums2\n        frequency = {}\n        for num in nums_combined:\n            if num in frequency:\n                frequency[num] += 1\n            else:\n                frequency[num] = 1\n        frequencies = sorted(frequency.values(), reverse=True)\n        n = len(nums1)\n        remove_count = n // 2\n        result = 0\n        for freq in frequencies:\n            if remove_count <= 0:\n                result += 1\n            else:\n                if freq > 1:\n                    to_remove = min(freq // 2, remove_count)\n                    freq -= to_remove * 2\n                    remove_count -= to_remove\n                    if freq > 0:\n                        result += 1\n                else:\n                    result += 1\n        return result"
}