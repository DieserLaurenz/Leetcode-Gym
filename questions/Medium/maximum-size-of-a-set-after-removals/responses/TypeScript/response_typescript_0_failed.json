{
    "status_code": 11,
    "lang": "typescript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 72868000,
    "question_id": "3228",
    "elapsed_time": 217,
    "compare_result": "100100000010000010000000000001000000000000001000000000011111111111111111111111111111111111111111111111111100000000000000000000000000000000000000000000000000000101100000000010010001000000100101000110100001010010000011000100100100000000010100000000010000001011011000000000110001011110100110010001001001111011110101100010010000000000000010000010010000100001100001000000000010101100000010111100001000001000000000100000000010011000000010000101100000000100101010000000001000010001000011010000110100000010000000001001101010100000001000000000000000100001001000000100010011010001000100000100100001000100000000110000000001000000100010000000000000000001010000100001000100000000000000000000000000010000000000000000000000000000000000000001000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000",
    "code_output": "6",
    "std_output": "",
    "last_testcase": "[1,2,3,4,5,6]\n[2,3,2,3,2,3]",
    "expected_output": "5",
    "task_finish_time": 1707629175924,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 186,
    "total_testcases": 969,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "TypeScript",
    "submission_id": "1172024379",
    "input_formatted": "[1,2,3,4,5,6], [2,3,2,3,2,3]",
    "input": "[1,2,3,4,5,6]\n[2,3,2,3,2,3]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "function maximumSetSize(nums1: number[], nums2: number[]): number {\n    let totalNums = [...nums1, ...nums2];\n    let frequencyMap = new Map<number, number>();\n\n    for (let num of totalNums) {\n        frequencyMap.set(num, (frequencyMap.get(num) || 0) + 1);\n    }\n\n    let frequencies = Array.from(frequencyMap.values()).sort((a, b) => b - a);\n    let n = nums1.length;\n    let toRemove = n / 2;\n    let setSize = 0;\n\n    for (let freq of frequencies) {\n        if (toRemove > 0) {\n            let remove = Math.min(freq, toRemove);\n            freq -= remove;\n            toRemove -= remove;\n        }\n        if (freq > 0) setSize++;\n    }\n\n    return setSize;\n};"
}