{
    "status_code": 11,
    "lang": "typescript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 73912000,
    "question_id": "3228",
    "elapsed_time": 195,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "[1,2,1,2]\n[1,1,1,1]",
    "expected_output": "2",
    "task_finish_time": 1707629196857,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 393,
    "total_testcases": 969,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "TypeScript",
    "submission_id": "1172024600",
    "input_formatted": "[1,2,1,2], [1,1,1,1]",
    "input": "[1,2,1,2]\n[1,1,1,1]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "function maximumSetSize(nums1: number[], nums2: number[]): number {\n    const map = new Map<number, number>();\n    for (const num of nums1) map.set(num, (map.get(num) || 0) + 1);\n    for (const num of nums2) map.set(num, (map.get(num) || 0) + 1);\n\n    const counts = Array.from(map.values()).sort((a, b) => b - a);\n    let removeCount = nums1.length / 2;\n    let setSize = 0;\n\n    for (const count of counts) {\n        if (removeCount > 0) {\n            const toRemove = Math.min(count, 2);\n            if (toRemove < count) setSize++;\n            removeCount -= toRemove / 2;\n        } else {\n            setSize++;\n        }\n    }\n\n    return setSize;\n}"
}