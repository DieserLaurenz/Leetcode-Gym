{
    "status_code": 11,
    "lang": "scala",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 76240000,
    "question_id": "3228",
    "elapsed_time": 1480,
    "compare_result": "001000011101100101111111111111111111110010111110111000100000000000000000000000000000000000000000000000000011111111111010101111111011111111111111010110110111001000000000000100000001000101000000101000000000000000000000000000100101000100000100001000001010010010000011000001000000000000001000001000100010000000101000010100000100000000100000000000000100000000000100011000000000100010000001000000010100000010100000000110001000100111110101001000000100011000110000001010010010100000010000000010001000100000000011010101010100000010110001110101011010001101011000000000010000011101000000000001001000101001011011100000100110011001000101011101000111000000100011010010000000010011100001100000000001001010000001000000000000001000000000000000000000000001000000000000001000000000000000000000100000000000000000010000000000000001000000000000000000010001000000011000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000001110001100100",
    "code_output": "1",
    "std_output": "",
    "last_testcase": "[1,2,1,2]\n[1,1,1,1]",
    "expected_output": "2",
    "task_finish_time": 1707638614938,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 232,
    "total_testcases": 969,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Scala",
    "submission_id": "1172124622",
    "input_formatted": "[1,2,1,2], [1,1,1,1]",
    "input": "[1,2,1,2]\n[1,1,1,1]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "object Solution {\n    def maximumSetSize(nums1: Array[Int], nums2: Array[Int]): Int = {\n        val n = nums1.length\n        val combined = (nums1 ++ nums2).groupBy(identity).mapValues(_.length).toArray\n        val sortedCounts = combined.sortBy(-_._2)\n        var removed = 0\n        var setSize = 0\n        for ((_, count) <- sortedCounts if removed < n) {\n            if (count > 1) {\n                if (removed + count - 1 <= n) {\n                    removed += count - 1\n                    setSize += 1\n                } else {\n                    setSize += 1\n                    removed = n\n                }\n            } else {\n                setSize += 1\n                removed += 1\n            }\n        }\n        setSize\n    }\n}"
}