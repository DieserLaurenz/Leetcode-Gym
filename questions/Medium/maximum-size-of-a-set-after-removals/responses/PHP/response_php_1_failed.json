{
    "status_code": 11,
    "lang": "php",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 27220000,
    "question_id": "3228",
    "elapsed_time": 358,
    "compare_result
    "code_output": "6",
    "std_output": "",
    "last_testcase": "[1,2,3,4,5,6]\n[2,3,2,3,2,3]",
    "expected_output": "5",
    "task_finish_time": 1707629294866,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 961,
    "total_testcases": 969,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "PHP",
    "submission_id": "1172025550",
    "input_formatted": "[1,2,3,4,5,6], [2,3,2,3,2,3]",
    "input": "[1,2,3,4,5,6]\n[2,3,2,3,2,3]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n\n    /**\n     * @param Integer[] $nums1\n     * @param Integer[] $nums2\n     * @return Integer\n     */\n    function maximumSetSize($nums1, $nums2) {\n        $count = array_count_values(array_merge($nums1, $nums2));\n        $n = count($nums1);\n        $freq = [];\n        foreach ($count as $num => $c) {\n            $freq[] = $c;\n        }\n        rsort($freq);\n        $setSize = 0;\n        $removeCount = $n / 2;\n        foreach ($freq as $f) {\n            if ($removeCount > 0) {\n                if ($f > 1) {\n                    $remove = min($f - 1, $removeCount);\n                    $removeCount -= $remove;\n                    $setSize++;\n                } else {\n                    $setSize++;\n                }\n            } else {\n                $setSize++;\n            }\n        }\n        return min($setSize, $n);\n    }\n}"
}