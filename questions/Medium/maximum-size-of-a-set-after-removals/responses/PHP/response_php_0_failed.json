{
    "status_code": 11,
    "lang": "php",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 26496000,
    "question_id": "3228",
    "elapsed_time": 399,
    "compare_result
    "code_output": "6",
    "std_output": "",
    "last_testcase": "[1,2,3,4,5,6]\n[2,3,2,3,2,3]",
    "expected_output": "5",
    "task_finish_time": 1707629273244,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 186,
    "total_testcases": 969,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "PHP",
    "submission_id": "1172025344",
    "input_formatted": "[1,2,3,4,5,6], [2,3,2,3,2,3]",
    "input": "[1,2,3,4,5,6]\n[2,3,2,3,2,3]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n\n    /**\n     * @param Integer[] $nums1\n     * @param Integer[] $nums2\n     * @return Integer\n     */\n    function maximumSetSize($nums1, $nums2) {\n        $combined = array_merge($nums1, $nums2);\n        $freq = array_count_values($combined);\n        arsort($freq);\n        $removed = 0;\n        $setSize = 0;\n        foreach ($freq as $count) {\n            if ($removed < count($nums1) / 2) {\n                $remove = min($count, count($nums1) / 2 - $removed);\n                $count -= $remove;\n                $removed += $remove;\n            }\n            if ($count > 0) {\n                $setSize++;\n            }\n        }\n        return $setSize;\n    }\n}"
}