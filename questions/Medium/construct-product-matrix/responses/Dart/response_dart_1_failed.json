{
    "status_code": 15,
    "lang": "dart",
    "run_success": false,
    "runtime_error": "Line 33: Char 70: Error: A value of type 'double' can't be assigned to a variable of type 'int'.",
    "full_runtime_error": "Line 33: Char 70: Error: A value of type 'double' can't be assigned to a variable of type 'int'.\n        if (i < n-1) prod = (prod * rowProduct[n-1] / rowProduct[i]) % 12345;\n                                                                     ^\nLine 35: Char 70: Error: A value of type 'double' can't be assigned to a variable of type 'int'.\n        if (j < m-1) prod = (prod * colProduct[m-1] / colProduct[j]) % 12345;\n                                                                     ^",
    "status_runtime": "N/A",
    "memory": 147928000,
    "question_id": "3031",
    "elapsed_time": 344,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "[[1,2],[3,4]]",
    "expected_output": "[[24,12],[8,6]]",
    "task_finish_time": 1706846071167,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 1566,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Dart",
    "submission_id": "1163550978",
    "status_msg": "Runtime Error",
    "state": "SUCCESS",
    "code": "class Solution {\n  List<List<int>> constructProductMatrix(List<List<int>> grid) {\n    int n = grid.length;\n    int m = grid[0].length;\n    List<List<int>> productMatrix = List.generate(n, (_) => List.filled(m, 1));\n    List<int> rowProduct = List.filled(n, 1);\n    List<int> colProduct = List.filled(m, 1);\n\n    // Calculate row-wise product\n    for (int i = 0; i < n; i++) {\n      int prod = 1;\n      for (int j = 0; j < m; j++) {\n        prod = (prod * grid[i][j]) % 12345;\n        rowProduct[i] = prod;\n      }\n    }\n\n    // Calculate column-wise product\n    for (int j = 0; j < m; j++) {\n      int prod = 1;\n      for (int i = 0; i < n; i++) {\n        prod = (prod * grid[i][j]) % 12345;\n        colProduct[j] = prod;\n      }\n    }\n\n    // Construct the product matrix\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < m; j++) {\n        int prod = 1;\n        // Exclude the current element by dividing the product of the row and column by the element, using modular arithmetic properties.\n        if (i > 0) prod = (prod * rowProduct[i-1]) % 12345;\n        if (i < n-1) prod = (prod * rowProduct[n-1] / rowProduct[i]) % 12345;\n        if (j > 0) prod = (prod * colProduct[j-1]) % 12345;\n        if (j < m-1) prod = (prod * colProduct[m-1] / colProduct[j]) % 12345;\n        productMatrix[i][j] = prod;\n      }\n    }\n\n    return productMatrix;\n  }\n}"
}