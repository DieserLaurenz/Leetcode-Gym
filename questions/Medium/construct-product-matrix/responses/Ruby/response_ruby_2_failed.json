{
    "status_code": 14,
    "lang": "ruby",
    "run_success": false,
    "status_runtime": "N/A",
    "memory": 212704000,
    "question_id": "3031",
    "elapsed_time": 3142,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "[[141],[415],[277],[132],[411],[323],[293],[465],[471],[478],[49],[406],[200],[385],[154],[277],[541],[57],[73],[129],[353],[391],[546],[232],[128],[393],[291],[92],[200],[462],[242],[261],[112],[546],[497],[39],[471],[367],[545],[319],[420],[356],[71],[191],[395],[403],[331],[341],[435],[306],[522],[337],[445],[259],[461],[327],[200],[268],[552],[461],[301],[507],[331],[472],[499],[208],[504],[532],[406],[465],[414],[425],[268],[417],[226],[489],[291],[461],[486],[525],[444],[24],[113],[105],[418],[198],[178],[82],[25],[129],[97],[354],[284],[380],[555],[353],[232],[309],[96],[236],[168],[144],[51],[382],[181],[27],[366],[225],[288],[402],[380],[445],[415],[68],[490],[9],[453],[112],[417],[532],[554],[270],[443],[207],[528],[50],[215],[434],[33],[432],[158],[275],[371],[107],[36],[262],[413],[292],[525],[234],[531],[300],[452],[114],[358],[127],[3],[314],[272],[375],[140],[217],[413],[74],[208],[492],[386],[528],[365],[303],[490],[142],[130],[13],[216],[361],[328],[390],[145],[512],[353],[167],[63],[122],[398],[322],[429],[153],[403],[557],[66],[496],[420],[376],[501],[417],[94],[130],[87],[234],[105],[482],[15],[275],[261],[185],[83],[352],[87],[535],[17],[426],[429],[495],[467],[105],[113],[27],[385],[122],[222],[41],[60],[496],[468],[249],[173],[146],[202],[134],[413],[454],[1],[387],[92],[305],[477],[179],[68],[390],[261],[75],[15],[106],[16],[264],[96],[58],[397],[328],[392],[282],[201],[284],[495],[244],[250],[554],[8],[453],[46],[172],[126],[102],[538],[184],[439],[26],[142],[235],[420],[322],[193],[10],[49],[144],[557],[55],[460],[490],[300],[37],[127],[456],[467],[487],[47],[400],[114],[536],[334],[323]]",
    "expected_output": "[[5385],[5310],[2340],[7155],[12210],[12135],[5625],[1155],[11205],[11325],[5670],[1110],[525],[1395],[9660],[2340],[3480],[2925],[3975],[3015],[9495],[900],[10005],[8115],[3135],[330],[6300],[3825],[525],[7335],[5025],[4470],[7110],[10005],[1950],[4275],[11205],[7350],[1665],[2535],[4365],[8340],[1305],[11085],[4485],[7980],[6210],[1575],[7620],[5265],[2235],[9030],[11610],[1740],[6735],[2775],[525],[10710],[6810],[6735],[10110],[9825],[6210],[7755],[1200],[30],[9810],[6045],[1110],[1155],[4965],[8235],[10710],[11235],[5490],[6930],[6300],[6735],[3315],[8430],[5130],[8490],[10980],[5115],[960],[4770],[4335],[12120],[4200],[3015],[6555],[6225],[9585],[3525],[1635],[9495],[8115],[180],[8295],[3165],[4740],[9645],[6900],[11715],[11220],[10290],[3390],[3210],[10995],[7140],[3525],[11610],[5310],[5175],[5505],[6180],[3720],[7110],[11235],[6045],[1170],[10905],[8820],[9930],[4875],[2100],[11685],[7410],[3930],[11445],[5040],[9360],[9600],[6750],[1545],[495],[45],[4080],[8430],[6885],[8265],[8580],[2745],[7635],[11190],[1410],[6195],[10635],[4380],[4395],[750],[2475],[45],[6090],[30],[6135],[10890],[4875],[795],[7395],[5505],[6825],[7455],[480],[10545],[5010],[3030],[6600],[10515],[3870],[9495],[10830],[4410],[10170],[4110],[4620],[6000],[10530],[7980],[255],[1965],[9570],[4365],[9735],[7725],[11235],[1905],[7455],[1065],[6885],[5115],[10770],[11115],[9360],[4470],[4905],[1860],[1140],[1065],[1350],[8355],[6390],[6000],[9315],[4005],[5115],[10980],[10290],[1395],[10170],[10260],[11895],[5865],[9570],[9615],[8850],[8385],[8160],[4920],[9075],[45],[8280],[6240],[1005],[3825],[11475],[1980],[10035],[5175],[6600],[4470],[9630],[11115],[8910],[390],[9750],[8295],[7770],[5955],[3030],[3795],[8865],[1935],[9585],[9315],[5085],[420],[1170],[780],[3720],[7650],[11520],[2205],[3450],[11760],[8085],[7185],[240],[6825],[5700],[4365],[4620],[9435],[10500],[5670],[9645],[255],[9765],[765],[5505],[8580],[12180],[1410],[4995],[4005],[9975],[3810],[6435],[7635],[5355],[5415],[12135]]",
    "task_finish_time": 1706846735068,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 1059,
    "total_testcases": 1566,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Ruby",
    "submission_id": "1163557646",
    "status_msg": "Time Limit Exceeded",
    "state": "SUCCESS",
    "code": "# @param {Integer[][]} grid\n# @return {Integer[][]}\ndef construct_product_matrix(grid)\n  n = grid.size\n  m = grid.first.size\n\n  # Initialize the product matrix with zeros\n  product_matrix = Array.new(n) { Array.new(m, 0) }\n\n  # Calculate the product for each cell\n  (0...n).each do |i|\n    (0...m).each do |j|\n      product = 1\n      # Calculate product of all elements except grid[i][j]\n      (0...n).each do |x|\n        (0...m).each do |y|\n          unless x == i && y == j\n            product = (product * grid[x][y]) % 12345\n          end\n        end\n      end\n      product_matrix[i][j] = product\n    end\n  end\n\n  product_matrix\nend"
}