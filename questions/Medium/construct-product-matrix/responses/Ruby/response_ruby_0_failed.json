{
    "status_code": 11,
    "lang": "ruby",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 248740000,
    "question_id": "3031",
    "elapsed_time": 1104,
    "compare_result
    "code_output": "[[24,1557],[4128,9966]]",
    "std_output": "",
    "last_testcase": "[[1,2],[3,4]]",
    "expected_output": "[[24,12],[8,6]]",
    "task_finish_time": 1706846644214,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 160,
    "total_testcases": 1566,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Ruby",
    "submission_id": "1163556765",
    "input_formatted": "[[1,2],[3,4]]",
    "input": "[[1,2],[3,4]]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "# @param {Integer[][]} grid\n# @return {Integer[][]}\ndef construct_product_matrix(grid)\n    n = grid.length\n    m = grid[0].length\n    product_matrix = Array.new(n) { Array.new(m, 1) }\n    total_product = 1\n    zero_count = 0\n\n    # Calculate total product and count zeros\n    grid.each do |row|\n        row.each do |element|\n            unless element.zero?\n                total_product = (total_product * element) % 12345\n            else\n                zero_count += 1\n            end\n        end\n    end\n\n    grid.each_with_index do |row, i|\n        row.each_with_index do |element, j|\n            if zero_count > 1\n                product_matrix[i][j] = 0\n            elsif zero_count == 1\n                product_matrix[i][j] = element.zero? ? total_product : 0\n            else\n                # Here, theoretically, we would divide total_product by element and take modulo 12345\n                # But direct division is not feasible without additional math operations.\n                # This part of the solution may need adjustment to comply with modular arithmetic rules.\n                product_matrix[i][j] = (total_product * pow(element, 12343, 12345)) % 12345 if element != 0\n            end\n        end\n    end\n\n    product_matrix\nend\n\n# Fast power algorithm to calculate base^exp % mod\ndef pow(base, exp, mod)\n    result = 1\n    base = base % mod\n    while exp > 0\n        result = (result * base) % mod if exp.odd?\n        exp = exp >> 1\n        base = (base * base) % mod\n    end\n    result\nend"
}