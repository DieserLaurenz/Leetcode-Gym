{
    "status_code": 14,
    "lang": "elixir",
    "run_success": false,
    "status_runtime": "N/A",
    "memory": 77068000,
    "question_id": "3031",
    "elapsed_time": 6015,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "[[1,1,1,1,1,2,1,2,1,2,2,2,2,2,2,2,1,1,1,1,2,2,2,1,1,1,2,1,1,1,1,2,2,2,1,1,1,2,2,2,2,1,2,1,1,1,2,1,1,2,1,1,2,1,1,1,1,1,1,1,2,2,1,1,2,1,1,2,2,1,2,1,2,1,2,1,2,1,1,1,1,2,2,2,1,1,2,1,2,2,1,2,1,2,1,1,1,2,2,1,1,1,2,2,2,1,2,1,1,2,1,2,2,2,2,2,2,1,2,1,1,1,1,2,2,2,2,2,1,2,2,1,1,2,1,2,2,2,1,1,2,2,1,2,2,2,2,1,2,2,2,2,1,2,2,1,2,1,2,2,1,1,2,1,2,2,1,2,1,1,1,2,2,2,2,2,1,1,2,1,1,1,2,1,1,2,2,1,2,2,2,2,1,1,2,2,2,1,2,1,1,2,2,1,1,2,2,1,1,2,1,1,1,1,2,1,1,1,2,1,1,2,1,1,2,2,1,1,1,2,2,1,1,2,1,1,1,1,2,1,1,2,1,1,1,2,1,1,1,1,1,2,1,2,1,2,1,2,1,1,1,2,1,1,2,1,2,2,1,1,2,1]]",
    "expected_output
    "task_finish_time": 1706856269818,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 1040,
    "total_testcases": 1566,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Elixir",
    "submission_id": "1163670798",
    "status_msg": "Time Limit Exceeded",
    "state": "SUCCESS",
    "code": "defmodule Solution do\n  @spec construct_product_matrix(grid :: [[integer]]) :: [[integer]]\n  def construct_product_matrix(grid) do\n    n = length(grid)\n    m = length(hd(grid))\n\n    Enum.map(0..n-1, fn i ->\n      Enum.map(0..m-1, fn j ->\n        Enum.reduce(0..n-1, 1, fn x, acc ->\n          Enum.reduce(0..m-1, acc, fn y, acc_inner ->\n            if x == i and y == j do\n              acc_inner\n            else\n              rem(acc_inner * Enum.at(Enum.at(grid, x), y, 1), 12345)\n            end\n          end)\n        end)\n      end)\n    end)\n  end\nend"
}