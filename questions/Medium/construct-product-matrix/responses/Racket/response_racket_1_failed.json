{
    "status_code": 15,
    "lang": "racket",
    "run_success": false,
    "runtime_error": "=: contract violation",
    "full_runtime_error": "=: contract violation\n  expected: number?\n  given: '(1 2)\n  context...:\n   .../private/map.rkt:40:19: loop\n   solution.rkt:6:16\n   .../private/map.rkt:54:19: loop\n   [repeats 1 more time]\n   /usr/share/racket/collects/racket/contract/private/arrow-higher-order.rkt:375:33\n   solution.rkt:17:2\n   body of (submod \"solution.rkt\" main)",
    "status_runtime": "N/A",
    "memory": 100132000,
    "question_id": "3031",
    "elapsed_time": 373,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "[[1,2],[3,4]]",
    "expected_output": "[[24,12],[8,6]]",
    "task_finish_time": 1706855944023,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 1566,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Racket",
    "submission_id": "1163666775",
    "status_msg": "Runtime Error",
    "state": "SUCCESS",
    "code": "(define/contract (construct-product-matrix grid)\n  (-> (listof (listof exact-integer?)) (listof (listof exact-integer?)))\n  (letrec ([mod-product (lambda (lst)\n                          (foldl (lambda (x acc) (modulo (* x acc) 12345)) 1 lst))])\n    (map (lambda (row i)\n           (map (lambda (elem j)\n                  (let* ([row-products (map (lambda (r) (if (= r row) 1 (mod-product r))) grid)]\n                         [col-products (map (lambda (e k) (if (= k j) 1 (list-ref e i))) grid)]\n                         [product (mod-product (append row-products col-products))])\n                    (modulo product 12345)))\n                row (range (length row))))\n         grid (range (length grid)))))"
}