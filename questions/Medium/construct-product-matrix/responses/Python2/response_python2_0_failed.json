{
    "status_code": 11,
    "lang": "python",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 54328000,
    "question_id": "3031",
    "elapsed_time": 1154,
    "compare_result
    "code_output": "[[8559,5331],[1206,3481]]",
    "std_output": "",
    "last_testcase": "[[1,2],[3,4]]",
    "expected_output": "[[24,12],[8,6]]",
    "task_finish_time": 1708745348810,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 160,
    "total_testcases": 1566,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python",
    "submission_id": "1184477582",
    "input_formatted": "[[1,2],[3,4]]",
    "input": "[[1,2],[3,4]]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution(object):\n    def constructProductMatrix(self, grid):\n        \"\"\"\n        :type grid: List[List[int]]\n        :rtype: List[List[int]]\n        \"\"\"\n        n, m = len(grid), len(grid[0])\n        row_product, col_product = [1] * n, [1] * m\n        total_product = 1\n        for i in range(n):\n            for j in range(m):\n                total_product = (total_product * grid[i][j]) % 12345\n                row_product[i] = (row_product[i] * grid[i][j]) % 12345\n                col_product[j] = (col_product[j] * grid[i][j]) % 12345\n        result = [[0 for _ in range(m)] for __ in range(n)]\n        for i in range(n):\n            for j in range(m):\n                if n * m == 2:  # Special case for 1x2 or 2x1 matrices\n                    result[i][j] = (total_product * pow(grid[i][j], 12343, 12345)) % 12345\n                else:\n                    result[i][j] = (total_product * pow(row_product[i] * col_product[j], 12343, 12345)) // (grid[i][j] ** 2) % 12345\n        return result"
}