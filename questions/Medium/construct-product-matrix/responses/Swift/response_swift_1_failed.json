{
    "status_code": 11,
    "lang": "swift",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 35952000,
    "question_id": "3031",
    "elapsed_time": 1940,
    "compare_result
    "code_output": "[[24,1557],[4128,9966]]",
    "std_output": "",
    "last_testcase": "[[1,2],[3,4]]",
    "expected_output": "[[24,12],[8,6]]",
    "task_finish_time": 1706844681015,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 160,
    "total_testcases": 1566,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Swift",
    "submission_id": "1163537504",
    "input_formatted": "[[1,2],[3,4]]",
    "input": "[[1,2],[3,4]]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    func constructProductMatrix(_ grid: [[Int]]) -> [[Int]] {\n        let n = grid.count\n        let m = grid[0].count\n        var p = Array(repeating: Array(repeating: 0, count: m), count: n)\n        \n        // Calculate the total product of all elements in the grid\n        var totalProduct = 1\n        for i in 0..<n {\n            for j in 0..<m {\n                totalProduct = (totalProduct * grid[i][j]) % 12345\n            }\n        }\n        \n        // Calculate the product matrix p\n        for i in 0..<n {\n            for j in 0..<m {\n                var productWithoutCurrent = totalProduct\n                \n                // Divide by the current element and take modulo\n                if grid[i][j] != 0 {\n                    productWithoutCurrent = (productWithoutCurrent * powMod(grid[i][j], 12345 - 2, 12345)) % 12345\n                }\n                \n                p[i][j] = productWithoutCurrent\n            }\n        }\n        \n        return p\n    }\n    \n    // Modular exponentiation (to find modular multiplicative inverse)\n    private func powMod(_ base: Int, _ exponent: Int, _ modulus: Int) -> Int {\n        var result = 1\n        var b = base % modulus\n        var e = exponent\n        \n        while e > 0 {\n            if e % 2 == 1 {\n                result = (result * b) % modulus\n            }\n            e /= 2\n            b = (b * b) % modulus\n        }\n        \n        return result\n    }\n}"
}