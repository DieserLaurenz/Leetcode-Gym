Solve the specified problem within the provided Racket function template, without declaring the main function and using only libraries from the standard library. Provide the code without explanation.

Template:

(define/contract (special-perm nums)
  (-> (listof exact-integer?) exact-integer?)

  )

Problem:

You are given a0-indexedinteger arraynumscontainingndistinct positive integers. A permutation ofnumsis called special if:

For all indexes0 <= i < n - 1, eithernums[i] % nums[i+1] == 0ornums[i+1] % nums[i] == 0.

Returnthe total number of special permutations.As the answer could be large, return itmodulo109+ 7.

Example 1:

Input: nums = [2,3,6]
Output: 2
Explanation: [3,6,2] and [2,6,3] are the two special permutations of nums.

Example 2:

Input: nums = [1,4,3]
Output: 2
Explanation: [3,1,4] and [4,1,3] are the two special permutations of nums.


Constraints:

2 <= nums.length <= 14
1 <= nums[i] <= 109



