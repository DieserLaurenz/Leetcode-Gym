{
    "status_code": 14,
    "lang": "racket",
    "run_success": false,
    "status_runtime": "N/A",
    "memory": 126348000,
    "question_id": "2848",
    "elapsed_time": 5013,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "[1,2,4,8,16,32,64,128,256,512,1024,2048,4096,8192]",
    "expected_output": "178290591",
    "task_finish_time": 1708187405032,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 529,
    "total_testcases": 590,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Racket",
    "submission_id": "1178037488",
    "status_msg": "Time Limit Exceeded",
    "state": "SUCCESS",
    "code": "(define/contract (special-perm nums)\n  (-> (listof exact-integer?) exact-integer?)\n  \n  (define MOD 1000000007)\n  \n  (define (dp mask prev)\n    (if (= mask (sub1 (expt 2 (length nums))))\n        1\n        (let loop ((i 0) (ans 0))\n          (if (< i (length nums))\n              (if (and (zero? (bitwise-and mask (expt 2 i)))\n                       (or (= prev -1)\n                           (zero? (modulo (list-ref nums prev) (list-ref nums i)))\n                           (zero? (modulo (list-ref nums i) (list-ref nums prev)))))\n                  (loop (+ i 1)\n                        (modulo (+ ans (dp (bitwise-ior mask (expt 2 i)) i)) MOD))\n                  (loop (+ i 1) ans))\n              ans))))\n  \n  (dp 0 -1))"
}