{
    "status_code": 10,
    "lang": "scala",
    "run_success": true,
    "status_runtime": "1743 ms",
    "memory": 71020000,
    "question_id": "2848",
    "elapsed_time": 1952,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1708187209111,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 590,
    "total_testcases": 590,
    "runtime_percentile": 100,
    "status_memory": "71 MB",
    "memory_percentile": 100,
    "pretty_lang": "Scala",
    "submission_id": "1178034583",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "object Solution {\n    def specialPerm(nums: Array[Int]): Int = {\n        val mod = (1e9 + 7).toInt\n        val n = nums.length\n        val dp = Array.ofDim[Int](1 << n, n)\n        \n        for (i <- 0 until n) dp(1 << i)(i) = 1\n        \n        for (mask <- 0 until (1 << n); i <- 0 until n if (mask & (1 << i)) > 0) {\n            for (j <- 0 until n if (mask & (1 << j)) == 0) {\n                if (nums(i) % nums(j) == 0 || nums(j) % nums(i) == 0) {\n                    dp(mask | (1 << j))(j) = (dp(mask | (1 << j))(j) + dp(mask)(i)) % mod\n                }\n            }\n        }\n        \n        dp((1 << n) - 1).foldLeft(0)((acc, x) => (acc + x) % mod)\n    }\n}"
}