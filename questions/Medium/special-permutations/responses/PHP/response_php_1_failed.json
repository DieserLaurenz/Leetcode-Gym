{
    "status_code": 11,
    "lang": "php",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 20448000,
    "question_id": "2848",
    "elapsed_time": 780,
    "compare_result
    "code_output": "0",
    "std_output": "",
    "last_testcase": "[2,3,6]",
    "expected_output": "2",
    "task_finish_time": 1708186726956,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 249,
    "total_testcases": 590,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "PHP",
    "submission_id": "1178027125",
    "input_formatted": "[2,3,6]",
    "input": "[2,3,6]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @return Integer\n     */\n    function specialPerm($nums) {\n        $mod = 1e9 + 7;\n        $n = count($nums);\n        $factorial = array_fill(0, $n + 1, 1);\n        for ($i = 1; $i <= $n; ++$i) {\n            $factorial[$i] = ($factorial[$i - 1] * $i) % $mod;\n        }\n\n        $g = array_fill(0, $n, array_fill(0, $n, false));\n        for ($i = 0; $i < $n; ++$i) {\n            for ($j = 0; $j < $n; ++$j) {\n                if ($i != $j && ($nums[$i] % $nums[$j] == 0 || $nums[$j] % $nums[$i] == 0)) {\n                    $g[$i][$j] = true;\n                }\n            }\n        }\n\n        $dp = array_fill(0, 1 << $n, 0);\n        $dp[0] = 1;\n        for ($mask = 1; $mask < (1 << $n); ++$mask) {\n            $count = 0;\n            for ($i = 0; $i < $n; ++$i) {\n                if (($mask & (1 << $i)) > 0) {\n                    $count++;\n                }\n            }\n            for ($i = 0; $i < $n; ++$i) {\n                if (($mask & (1 << $i)) > 0) {\n                    $prevMask = $mask ^ (1 << $i);\n                    if ($dp[$prevMask] == 0) continue;\n                    $valid = true;\n                    for ($j = 0; $j < $n; ++$j) {\n                        if ($prevMask & (1 << $j)) {\n                            $valid = $valid && $g[$i][$j];\n                        }\n                    }\n                    if ($valid) {\n                        $dp[$mask] = ($dp[$mask] + $dp[$prevMask]) % $mod;\n                    }\n                }\n            }\n        }\n\n        return $dp[(1 << $n) - 1];\n    }\n}"
}