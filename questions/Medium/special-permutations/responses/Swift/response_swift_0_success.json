{
    "status_code": 10,
    "lang": "swift",
    "run_success": true,
    "status_runtime": "271 ms",
    "memory": 17136000,
    "question_id": "2848",
    "elapsed_time": 303,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1708186826390,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 590,
    "total_testcases": 590,
    "runtime_percentile": 100,
    "status_memory": "17.1 MB",
    "memory_percentile": 100,
    "pretty_lang": "Swift",
    "submission_id": "1178028711",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\n    func specialPerm(_ nums: [Int]) -> Int {\n        let mod = 1_000_000_007\n        let n = nums.count\n        var dp = [[Int]](repeating: [Int](repeating: 0, count: 1 << n), count: n)\n        var graph = [[Bool]](repeating: [Bool](repeating: false, count: n), count: n)\n\n        for i in 0..<n {\n            for j in 0..<n {\n                if nums[i] % nums[j] == 0 || nums[j] % nums[i] == 0 {\n                    graph[i][j] = true\n                }\n            }\n        }\n\n        for i in 0..<n {\n            dp[i][1 << i] = 1\n        }\n\n        for mask in 0..<(1 << n) {\n            for u in 0..<n where (mask & (1 << u)) != 0 {\n                for v in 0..<n where (mask & (1 << v)) == 0 && graph[u][v] {\n                    dp[v][mask | (1 << v)] = (dp[v][mask | (1 << v)] + dp[u][mask]) % mod\n                }\n            }\n        }\n\n        var ans = 0\n        for i in 0..<n {\n            ans = (ans + dp[i][(1 << n) - 1]) % mod\n        }\n        \n        return ans\n    }\n}"
}