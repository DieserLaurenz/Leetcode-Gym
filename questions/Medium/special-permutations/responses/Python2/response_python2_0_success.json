{
    "status_code": 10,
    "lang": "python",
    "run_success": true,
    "status_runtime": "8063 ms",
    "memory": 15872000,
    "question_id": "2848",
    "elapsed_time": 8296,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1708849789541,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 590,
    "total_testcases": 590,
    "runtime_percentile": 40.0,
    "status_memory": "15.9 MB",
    "memory_percentile": 100,
    "pretty_lang": "Python",
    "submission_id": "1185603974",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution(object):\n    def specialPerm(self, nums):\n        MOD = 10**9 + 7\n        n = len(nums)\n        nums.sort()\n        dp = [[0] * (1 << n) for _ in range(n)]\n        for i in range(n):\n            dp[i][1 << i] = 1\n\n        for mask in range(1, 1 << n):\n            for i in range(n):\n                if not mask & (1 << i):\n                    continue\n                for j in range(n):\n                    if mask & (1 << j) or nums[i] % nums[j] != 0 and nums[j] % nums[i] != 0:\n                        continue\n                    dp[j][mask | (1 << j)] = (dp[j][mask | (1 << j)] + dp[i][mask]) % MOD\n\n        return sum(dp[i][-1] for i in range(n)) % MOD"
}