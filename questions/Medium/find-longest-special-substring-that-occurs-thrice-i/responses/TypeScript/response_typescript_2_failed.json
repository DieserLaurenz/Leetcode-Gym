{
    "status_code": 11,
    "lang": "typescript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 56240000,
    "question_id": "3267",
    "elapsed_time": 173,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "\"aaaa\"",
    "expected_output": "2",
    "task_finish_time": 1707274114691,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 179,
    "total_testcases": 811,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "TypeScript",
    "submission_id": "1168365750",
    "input_formatted": "\"aaaa\"",
    "input": "\"aaaa\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "function maximumLength(s: string): number {\n    let result = -1;\n    for (let i = 0; i < s.length; ++i) {\n        for (let j = i + 1; j <= s.length; ++j) {\n            const sub = s.substring(i, j);\n            if (new Set(sub).size === 1) {\n                const reg = new RegExp(sub, \"g\");\n                const matches = s.match(reg) || [];\n                if (matches.length >= 3) {\n                    result = Math.max(result, j - i);\n                    break; // Found the longest substring for this character, move to next character\n                }\n            }\n        }\n    }\n    return result === s.length ? -1 : result;\n}"
}