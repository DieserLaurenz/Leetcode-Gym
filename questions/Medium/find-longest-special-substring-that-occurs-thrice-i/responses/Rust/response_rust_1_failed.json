{
    "status_code": 11,
    "lang": "rust",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 2220000,
    "question_id": "3267",
    "elapsed_time": 12,
    "compare_result
    "code_output": "-1",
    "std_output": "",
    "last_testcase": "\"aaaa\"",
    "expected_output": "2",
    "task_finish_time": 1707275087314,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 77,
    "total_testcases": 811,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Rust",
    "submission_id": "1168375345",
    "input_formatted": "\"aaaa\"",
    "input": "\"aaaa\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "impl Solution {\n    pub fn maximum_length(s: String) -> i32 {\n        let mut max_len = -1;\n        for c in b'a'..=b'z' {\n            let mut lengths = vec![];\n            let mut curr_len = 0;\n            for &b in s.as_bytes() {\n                if b == c {\n                    curr_len += 1;\n                } else {\n                    if curr_len > 0 {\n                        lengths.push(curr_len);\n                    }\n                    curr_len = 0;\n                }\n            }\n            if curr_len > 0 {\n                lengths.push(curr_len);\n            }\n            lengths.sort_unstable();\n            let len = lengths.len();\n            if len >= 3 {\n                max_len = max_len.max(lengths[len - 3]);\n            }\n        }\n        max_len\n    }\n}"
}