{
    "status_code": 11,
    "lang": "c",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 5656000,
    "question_id": "3267",
    "elapsed_time": 16,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "\"aaaa\"",
    "expected_output": "2",
    "task_finish_time": 1707273707634,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 171,
    "total_testcases": 811,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C",
    "submission_id": "1168361868",
    "input_formatted": "\"aaaa\"",
    "input": "\"aaaa\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "int maximumLength(char* s) {\n    int maxLen = -1;\n    for (int i = 0; s[i]; ++i) {\n        for (int j = i + 1; s[j]; ++j) {\n            if (s[i] == s[j]) {\n                int len = j - i;\n                int count = 1;\n                for (int k = j; s[k] && s[k] == s[i]; k += len) {\n                    if (strncmp(s + i, s + k, len) == 0) {\n                        ++count;\n                    } else {\n                        break;\n                    }\n                    if (count == 3) {\n                        maxLen = len > maxLen ? len : maxLen;\n                        break;\n                    }\n                }\n            }\n        }\n    }\n    return maxLen;\n}"
}