{
    "status_code": 10,
    "lang": "java",
    "run_success": true,
    "status_runtime": "37 ms",
    "memory": 42308000,
    "display_runtime": "37",
    "question_id": "3267",
    "elapsed_time": 209,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1707264522782,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 811,
    "total_testcases": 811,
    "runtime_percentile": 44.29940000000003,
    "status_memory": "42.3 MB",
    "memory_percentile": 98.89480000000002,
    "pretty_lang": "Java",
    "submission_id": "1168283987",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\n    public int maximumLength(String s) {\n        int result = -1;\n        for (int i = 0; i < s.length(); i++) {\n            for (int j = i + 1; j < s.length(); j++) {\n                if (s.charAt(i) == s.charAt(j)) {\n                    int len = 2;\n                    while (j + len - 1 < s.length() && s.charAt(i) == s.charAt(j + len - 1)) {\n                        len++;\n                    }\n                    int count = 0;\n                    for (int k = 0; k <= s.length() - len + 1; k++) {\n                        boolean match = true;\n                        for (int l = 0; l < len - 1; l++) {\n                            if (s.charAt(k + l) != s.charAt(i)) {\n                                match = false;\n                                break;\n                            }\n                        }\n                        if (match) count++;\n                    }\n                    if (count >= 3) {\n                        result = Math.max(result, len - 1);\n                    }\n                }\n            }\n        }\n        return result;\n    }\n}"
}