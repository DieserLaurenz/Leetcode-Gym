{
    "status_code": 11,
    "lang": "kotlin",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 35104000,
    "question_id": "3267",
    "elapsed_time": 408,
    "compare_result
    "code_output": "-1",
    "std_output": "",
    "last_testcase": "\"aaaa\"",
    "expected_output": "2",
    "task_finish_time": 1707274595321,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 48,
    "total_testcases": 811,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Kotlin",
    "submission_id": "1168370594",
    "input_formatted": "\"aaaa\"",
    "input": "\"aaaa\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    fun maximumLength(s: String): Int {\n        var maxLen = -1\n        for (ch in 'a'..'z') {\n            var count = 0\n            var consecutive = 0\n            for (i in s.indices) {\n                if (s[i] == ch) {\n                    consecutive++\n                    if (i == s.length - 1 || s[i + 1] != ch) {\n                        if (consecutive >= 3) count++\n                        consecutive = 0\n                    }\n                }\n            }\n            if (count >= 3) {\n                for (len in 3..s.length) {\n                    var found = 0\n                    for (i in 0..s.length - len) {\n                        if (s.substring(i, i + len).all { it == ch }) {\n                            found++\n                            if (found == 3) {\n                                maxLen = maxOf(maxLen, len)\n                                break\n                            }\n                        }\n                    }\n                    if (found < 3) break\n                }\n            }\n        }\n        return maxLen\n    }\n}"
}