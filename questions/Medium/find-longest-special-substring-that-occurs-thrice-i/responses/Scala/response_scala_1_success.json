{
    "status_code": 10,
    "lang": "scala",
    "run_success": true,
    "status_runtime": "2585 ms",
    "memory": 68048000,
    "question_id": "3267",
    "elapsed_time": 3111,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1707275000663,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 811,
    "total_testcases": 811,
    "runtime_percentile": 20.0,
    "status_memory": "68 MB",
    "memory_percentile": 20.0,
    "pretty_lang": "Scala",
    "submission_id": "1168374473",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "object Solution {\n    def maximumLength(s: String): Int = {\n        var maxLen = -1\n        for (i <- s.indices) {\n            for (j <- i + 1 to s.length) {\n                val substr = s.substring(i, j)\n                if (substr.distinct.length == 1) {\n                    val count = s.sliding(substr.length).count(_ == substr)\n                    if (count >= 3) maxLen = Math.max(maxLen, substr.length)\n                }\n            }\n        }\n        maxLen\n    }\n}"
}