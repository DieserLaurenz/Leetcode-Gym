{
    "status_code": 11,
    "lang": "python3",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 16588000,
    "question_id": "3267",
    "elapsed_time": 164,
    "compare_result
    "code_output": "-1",
    "std_output": "",
    "last_testcase": "\"aaaa\"",
    "expected_output": "2",
    "task_finish_time": 1708766227791,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 43,
    "total_testcases": 811,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python3",
    "submission_id": "1184682957",
    "input_formatted": "\"aaaa\"",
    "input": "\"aaaa\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution:\n    def maximumLength(self, s: str) -> int:\n        res = -1\n        for i in range(len(s)):\n            for j in range(i+3, len(s)+1):\n                if s[i:j].count(s[i]) == j-i and len(set(s[i:j])) == 1:\n                    count = s.count(s[i:j])\n                    if count >= 3:\n                        res = max(res, j-i)\n        return res"
}