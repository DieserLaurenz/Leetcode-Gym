{
    "status_code": 11,
    "lang": "python3",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 16524000,
    "question_id": "3267",
    "elapsed_time": 62,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "\"aaaa\"",
    "expected_output": "2",
    "task_finish_time": 1708766172771,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 165,
    "total_testcases": 811,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python3",
    "submission_id": "1184682441",
    "input_formatted": "\"aaaa\"",
    "input": "\"aaaa\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution:\n    def maximumLength(self, s: str) -> int:\n        max_len = -1\n        for char in set(s):\n            indexes = [i for i, c in enumerate(s) if c == char]\n            if len(indexes) >= 3:\n                for i in range(len(indexes) - 2):\n                    current_len = indexes[i + 2] - indexes[i] - 1\n                    max_len = max(max_len, current_len)\n        return max_len"
}