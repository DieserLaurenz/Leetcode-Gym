{
    "status_code": 11,
    "lang": "golang",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 2212000,
    "question_id": "3267",
    "elapsed_time": 12,
    "compare_result
    "code_output": "4",
    "std_output": "",
    "last_testcase": "\"aaaa\"",
    "expected_output": "2",
    "task_finish_time": 1707274791058,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 40,
    "total_testcases": 811,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Go",
    "submission_id": "1168372533",
    "input_formatted": "\"aaaa\"",
    "input": "\"aaaa\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "func maximumLength(s string) int {\n    maxLength := -1\n    for i := 0; i < len(s); i++ {\n        count := 0\n        for j := i; j < len(s); j++ {\n            if s[j] == s[i] {\n                count++\n                if count >= 3 {\n                    maxLength = max(maxLength, j-i+1)\n                }\n            } else {\n                break\n            }\n        }\n    }\n    return maxLength\n}\n\nfunc max(a, b int) int {\n    if a > b {\n        return a\n    }\n    return b\n}"
}