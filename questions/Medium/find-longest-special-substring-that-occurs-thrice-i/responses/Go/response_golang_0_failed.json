{
    "status_code": 11,
    "lang": "golang",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 2184000,
    "question_id": "3267",
    "elapsed_time": 14,
    "compare_result
    "code_output": "-1",
    "std_output": "",
    "last_testcase": "\"abcaba\"",
    "expected_output": "1",
    "task_finish_time": 1707274770300,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 174,
    "total_testcases": 811,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Go",
    "submission_id": "1168372320",
    "input_formatted": "\"abcaba\"",
    "input": "\"abcaba\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "func maximumLength(s string) int {\n    maxLen := -1\n    for i := 0; i < len(s); i++ {\n        for j := i + 1; j < len(s); j++ {\n            if s[i] == s[j] {\n                count := 2\n                k := j + (j - i)\n                for k < len(s) && s[k] == s[i] {\n                    count++\n                    if count == 3 {\n                        maxLen = max(maxLen, j-i+1)\n                        break\n                    }\n                    k += (j - i)\n                }\n            }\n        }\n    }\n    return maxLen\n}\n\nfunc max(a, b int) int {\n    if a > b {\n        return a\n    }\n    return b\n}"
}