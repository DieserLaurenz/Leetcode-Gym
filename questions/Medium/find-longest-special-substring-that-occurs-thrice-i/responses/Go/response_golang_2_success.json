{
    "status_code": 10,
    "lang": "golang",
    "run_success": true,
    "status_runtime": "20 ms",
    "memory": 2184000,
    "question_id": "3267",
    "elapsed_time": 29,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1707274819671,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 811,
    "total_testcases": 811,
    "runtime_percentile": 23.529400000000006,
    "status_memory": "2.2 MB",
    "memory_percentile": 99.1597,
    "pretty_lang": "Go",
    "submission_id": "1168372799",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "func maximumLength(s string) int {\n    maxLen := -1\n    for i := 0; i < len(s); i++ {\n        for j := i + 1; j <= len(s); j++ {\n            substr := s[i:j]\n            if len(substr) > 0 && allCharsSame(substr) {\n                count := 0\n                for k := 0; k <= len(s)-len(substr); k++ {\n                    if allCharsSame(s[k:k+len(substr)]) && s[i] == s[k] {\n                        count++\n                    }\n                }\n                if count >= 3 {\n                    maxLen = max(maxLen, len(substr))\n                }\n            }\n        }\n    }\n    return maxLen\n}\n\nfunc allCharsSame(s string) bool {\n    for i := 1; i < len(s); i++ {\n        if s[i] != s[0] {\n            return false\n        }\n    }\n    return true\n}\n\nfunc max(a, b int) int {\n    if a > b {\n        return a\n    }\n    return b\n}"
}