{
    "status_code": 11,
    "lang": "swift",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 17880000,
    "question_id": "3267",
    "elapsed_time": 66,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "\"aaaa\"",
    "expected_output": "2",
    "task_finish_time": 1707274447383,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 203,
    "total_testcases": 811,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Swift",
    "submission_id": "1168369114",
    "input_formatted": "\"aaaa\"",
    "input": "\"aaaa\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    func maximumLength(_ s: String) -> Int {\n        var maxLength = -1\n        let characters = Array(s)\n        for char in Set(characters) {\n            let filtered = characters.filter { $0 == char }\n            if filtered.count >= 3 {\n                maxLength = max(maxLength, 1)\n                for length in 2...filtered.count where filtered.count >= 3 {\n                    let substring = String(repeating: char, count: length)\n                    let regex = try! NSRegularExpression(pattern: substring)\n                    let nsRange = NSRange(s.startIndex..<s.endIndex, in: s)\n                    let matchCount = regex.matches(in: s, options: [], range: nsRange).count\n                    if matchCount >= 3 {\n                        maxLength = max(maxLength, length)\n                    } else {\n                        break\n                    }\n                }\n            }\n        }\n        return maxLength\n    }\n}"
}