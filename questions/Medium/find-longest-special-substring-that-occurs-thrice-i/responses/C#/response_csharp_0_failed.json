{
    "status_code": 11,
    "lang": "csharp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 39916000,
    "question_id": "3267",
    "elapsed_time": 107,
    "compare_result
    "code_output": "-1",
    "std_output": "",
    "last_testcase": "\"aaaa\"",
    "expected_output": "2",
    "task_finish_time": 1707273810199,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 62,
    "total_testcases": 811,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C#",
    "submission_id": "1168362847",
    "input_formatted": "\"aaaa\"",
    "input": "\"aaaa\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "public class Solution {\n    public int MaximumLength(string s) {\n        int maxLength = -1;\n        for (char c = 'a'; c <= 'z'; c++) {\n            int count = 0;\n            int maxLenForChar = 0;\n            for (int i = 0; i < s.Length; i++) {\n                if (s[i] == c) {\n                    count++;\n                    int len = 0;\n                    while (i < s.Length && s[i] == c) {\n                        i++;\n                        len++;\n                    }\n                    maxLenForChar = Math.Max(maxLenForChar, len);\n                    i--; // because the for-loop will increment i again\n                }\n            }\n            if (count >= 3) {\n                maxLength = Math.Max(maxLength, maxLenForChar);\n            }\n        }\n        return maxLength;\n    }\n}"
}