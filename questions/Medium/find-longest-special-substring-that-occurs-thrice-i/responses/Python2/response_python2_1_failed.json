{
    "status_code": 11,
    "lang": "python",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 11724000,
    "question_id": "3267",
    "elapsed_time": 65,
    "compare_result
    "code_output": "-1",
    "std_output": "",
    "last_testcase": "\"aaaa\"",
    "expected_output": "2",
    "task_finish_time": 1708766085049,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 48,
    "total_testcases": 811,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python",
    "submission_id": "1184681642",
    "input_formatted": "\"aaaa\"",
    "input": "\"aaaa\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution(object):\n    def maximumLength(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: int\n        \"\"\"\n        result = -1\n        for c in set(s):\n            i, max_len, count = 0, 0, 0\n            while i < len(s):\n                start = i\n                while i < len(s) and s[i] == c:\n                    i += 1\n                if i - start > max_len:\n                    max_len = i - start\n                if i - start > 0:\n                    count += 1\n                i += 1\n            if count >= 3:\n                result = max(result, max_len)\n        return result if result >= 3 else -1"
}