{
    "status_code": 20,
    "lang": "racket",
    "run_success": false,
    "compile_error": "Line 13: Char 55: read-syntax: missing `)` to close `(` on line 17, found instead `]`",
    "full_compile_error": "Line 13: Char 55: read-syntax: missing `)` to close `(` on line 17, found instead `]`\n  compilation context...:\n   solution.rkt",
    "status_runtime": "N/A",
    "memory": 0,
    "question_id": "3267",
    "task_finish_time": 1707275187867,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": null,
    "total_testcases": null,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Racket",
    "submission_id": "1168376397",
    "status_msg": "Compile Error",
    "state": "SUCCESS",
    "code": "(define/contract (maximum-length s)\n  (-> string? exact-integer?)\n  (let ([n (string-length s)])\n    (let loop ([len (quotient n 3)])\n      (if (= len 0) -1\n          (let ([found (let check ([start 0])\n                         (if (> (+ start (* 3 len)) n) #f\n                             (if (and (string=? (substring s start (+ start len))\n                                                (substring s (+ start len) (+ start (* 2 len))))\n                                      (string=? (substring s start (+ start len))\n                                                (substring s (+ start (* 2 len)) (+ start (* 3 len)))))\n                                 #t\n                                 (check (+ start 1))))])\n            (if found len (loop (- len 1))))))))"
}