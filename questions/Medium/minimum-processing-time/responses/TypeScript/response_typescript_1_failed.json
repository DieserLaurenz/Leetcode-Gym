{
    "status_code": 11,
    "lang": "typescript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 76776000,
    "question_id": "3151",
    "elapsed_time": 3994,
    "compare_result
    "code_output": "25",
    "std_output": "",
    "last_testcase": "[8,10]\n[2,2,3,1,8,7,4,5]",
    "expected_output": "16",
    "task_finish_time": 1707950091570,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 716,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "TypeScript",
    "submission_id": "1175517600",
    "input_formatted": "[8,10], [2,2,3,1,8,7,4,5]",
    "input": "[8,10]\n[2,2,3,1,8,7,4,5]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "function minProcessingTime(processorTime: number[], tasks: number[]): number {\n    tasks.sort((a, b) => b - a);\n    let maxTime = 0;\n    const pq: [number, number][] = processorTime.map((time, index) => [time, index]);\n    pq.sort((a, b) => a[0] - b[0]);\n\n    for (let i = 0; i < tasks.length; i++) {\n        const [time, index] = pq.shift()!;\n        const finishTime = time + tasks[i];\n        maxTime = Math.max(maxTime, finishTime);\n        pq.push([finishTime, index]);\n        pq.sort((a, b) => a[0] - b[0]);\n    }\n\n    return maxTime;\n}"
}