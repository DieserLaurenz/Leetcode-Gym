{
    "status_code": 11,
    "lang": "rust",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 4264000,
    "question_id": "3151",
    "elapsed_time": 33,
    "compare_result
    "code_output": "28",
    "std_output": "",
    "last_testcase": "[8,10]\n[2,2,3,1,8,7,4,5]",
    "expected_output": "16",
    "task_finish_time": 1707950842903,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 716,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Rust",
    "submission_id": "1175522748",
    "input_formatted": "[8,10], [2,2,3,1,8,7,4,5]",
    "input": "[8,10]\n[2,2,3,1,8,7,4,5]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "impl Solution {\n    pub fn min_processing_time(processor_time: Vec<i32>, tasks: Vec<i32>) -> i32 {\n        let mut processor_time = processor_time;\n        let mut tasks = tasks;\n        tasks.sort_unstable();\n        processor_time.sort_unstable();\n        let n = processor_time.len();\n        let mut end_time = vec![0; n];\n\n        for (i, &task) in tasks.iter().enumerate() {\n            let p = i % n;\n            end_time[p] = end_time[p].max(processor_time[p]) + task;\n            processor_time[p] = end_time[p];\n        }\n\n        *end_time.iter().max().unwrap()\n    }\n}"
}