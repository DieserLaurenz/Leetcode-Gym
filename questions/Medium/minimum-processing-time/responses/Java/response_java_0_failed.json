{
    "status_code": 15,
    "lang": "java",
    "run_success": false,
    "runtime_error": "Line 20: java.lang.IndexOutOfBoundsException: Index -1 out of bounds for length 2",
    "full_runtime_error": "java.lang.IndexOutOfBoundsException: Index -1 out of bounds for length 2\n  at line 100, java.base/jdk.internal.util.Preconditions.outOfBounds\n  at line 106, java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex\n  at line 302, java.base/jdk.internal.util.Preconditions.checkIndex\n  at line 385, java.base/java.util.Objects.checkIndex\n  at line 470, java.base/java.util.ArrayList.set\n  at line 20, Solution.minProcessingTime\n  at line 54, __DriverSolution__.__helper__\n  at line 87, __Driver__.main",
    "status_runtime": "N/A",
    "memory": 40876000,
    "question_id": "3151",
    "elapsed_time": 121,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "[8,10]\n[2,2,3,1,8,7,4,5]",
    "expected_output": "16",
    "task_finish_time": 1707941895594,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 716,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Java",
    "submission_id": "1175451409",
    "status_msg": "Runtime Error",
    "state": "SUCCESS",
    "code": "import java.util.Collections;\nimport java.util.List;\nimport java.util.PriorityQueue;\n\nclass Solution {\n    public int minProcessingTime(List<Integer> processorTime, List<Integer> tasks) {\n        Collections.sort(processorTime);\n        Collections.sort(tasks, Collections.reverseOrder());\n        PriorityQueue<int[]> availableProcessors = new PriorityQueue<>((a, b) -> a[0] - b[0]);\n        for (int i = 0; i < processorTime.size(); i++) {\n            availableProcessors.add(new int[]{processorTime.get(i), 0});\n        }\n        for (int task : tasks) {\n            int[] current = availableProcessors.poll();\n            current[0] += task;\n            current[1]++;\n            if (current[1] < 4) {\n                availableProcessors.add(current);\n            } else {\n                processorTime.set(processorTime.indexOf(current[0] - task), current[0]);\n            }\n        }\n        return Collections.max(processorTime);\n    }\n}"
}