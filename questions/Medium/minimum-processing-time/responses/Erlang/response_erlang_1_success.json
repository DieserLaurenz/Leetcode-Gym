{
    "status_code": 10,
    "lang": "erlang",
    "run_success": true,
    "status_runtime": "958 ms",
    "memory": 218496000,
    "question_id": "3151",
    "elapsed_time": 2146,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1707951180926,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 716,
    "total_testcases": 716,
    "runtime_percentile": 100,
    "status_memory": "218.5 MB",
    "memory_percentile": 100,
    "pretty_lang": "Erlang",
    "submission_id": "1175524962",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "-spec min_processing_time([integer()], [integer()]) -> integer().\nmin_processing_time(ProcessorTime, Tasks) ->\n    SortedTasks = lists:reverse(lists:sort(Tasks)),\n    PaddedProcessorTime = [T || PT <- ProcessorTime, T <- lists:duplicate(4, PT)],\n    SortedProcessorTime = lists:sort(PaddedProcessorTime),\n    Merged = lists:zipwith(fun(PT, T) -> PT + T end, SortedProcessorTime, SortedTasks),\n    lists:max(Merged)."
}