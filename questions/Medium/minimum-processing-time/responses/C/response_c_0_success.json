{
    "status_code": 10,
    "lang": "c",
    "run_success": true,
    "status_runtime": "196 ms",
    "memory": 16472000,
    "question_id": "3151",
    "elapsed_time": 217,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1707942023018,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 716,
    "total_testcases": 716,
    "runtime_percentile": 83.33330000000001,
    "status_memory": "16.5 MB",
    "memory_percentile": 33.33330000000001,
    "pretty_lang": "C",
    "submission_id": "1175452522",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "#include <stdlib.h>\n\nint compare(const void *a, const void *b) {\n    return *(int *)a - *(int *)b;\n}\n\nint minProcessingTime(int* processorTime, int processorTimeSize, int* tasks, int tasksSize) {\n    qsort(processorTime, processorTimeSize, sizeof(int), compare);\n    qsort(tasks, tasksSize, sizeof(int), compare);\n\n    int maxTime = 0;\n    for (int i = 0; i < processorTimeSize; i++) {\n        int time = processorTime[i] + tasks[tasksSize - 1 - i * 4];\n        for (int j = 1; j < 4; j++) {\n            if (processorTime[i] + tasks[tasksSize - 1 - i * 4 - j] > time) {\n                time = processorTime[i] + tasks[tasksSize - 1 - i * 4 - j];\n            }\n        }\n        if (time > maxTime) {\n            maxTime = time;\n        }\n    }\n    return maxTime;\n}"
}