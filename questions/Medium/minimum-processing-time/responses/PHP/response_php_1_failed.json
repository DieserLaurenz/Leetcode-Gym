{
    "status_code": 11,
    "lang": "php",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 37176000,
    "question_id": "3151",
    "elapsed_time": 333,
    "compare_result
    "code_output": "34",
    "std_output": "",
    "last_testcase": "[8,10]\n[2,2,3,1,8,7,4,5]",
    "expected_output": "16",
    "task_finish_time": 1707950225521,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 716,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "PHP",
    "submission_id": "1175518543",
    "input_formatted": "[8,10], [2,2,3,1,8,7,4,5]",
    "input": "[8,10]\n[2,2,3,1,8,7,4,5]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n\n    /**\n     * @param Integer[] $processorTime\n     * @param Integer[] $tasks\n     * @return Integer\n     */\n    function minProcessingTime($processorTime, $tasks) {\n        sort($tasks); // Sort tasks in ascending order for fair distribution\n        sort($processorTime); // Sort processor times in ascending order for optimal scheduling\n        $taskChunks = array_chunk($tasks, count($tasks) / count($processorTime)); // Divide tasks equally among processors\n        \n        $completionTimes = [];\n        for ($i = 0; $i < count($processorTime); $i++) {\n            $completionTime = $processorTime[$i] + array_sum($taskChunks[$i]); // Calculate completion time for each processor\n            $completionTimes[] = $completionTime;\n        }\n        \n        return max($completionTimes); // The minimum time when all tasks are done is the max of completion times\n    }\n}"
}