{
    "status_code": 11,
    "lang": "dart",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 177408000,
    "question_id": "3151",
    "elapsed_time": 620,
    "compare_result
    "code_output": "28",
    "std_output": "",
    "last_testcase": "[8,10]\n[2,2,3,1,8,7,4,5]",
    "expected_output": "16",
    "task_finish_time": 1707950503030,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 716,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Dart",
    "submission_id": "1175520423",
    "input_formatted": "[8,10], [2,2,3,1,8,7,4,5]",
    "input": "[8,10]\n[2,2,3,1,8,7,4,5]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n  int minProcessingTime(List<int> processorTime, List<int> tasks) {\n    tasks.sort();\n    processorTime.sort();\n    List<List<int>> cores = List.generate(processorTime.length, (_) => []);\n    for (int i = 0; i < tasks.length; i++) {\n      cores[i % processorTime.length].add(tasks[i]);\n    }\n    int maxTime = 0;\n    for (int i = 0; i < cores.length; i++) {\n      int time = processorTime[i];\n      for (int task in cores[i]) {\n        time += task;\n      }\n      maxTime = max(maxTime, time);\n    }\n    return maxTime;\n  }\n}"
}