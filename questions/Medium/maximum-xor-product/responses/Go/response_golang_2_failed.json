{
    "status_code": 11,
    "lang": "golang",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 2420000,
    "question_id": "3192",
    "elapsed_time": 13,
    "compare_result": "00000001000000000100001000000000000100000000000000000100011010111000000000000000000000000100000100000000001000000001001010000001000000000010100000001000101000000100000000100000000010000000000100000000000000100000000000100010001000000010000000000000101000100100000100110000000001000000100001001000000000000000000100000000000000010000000000000000000000000000000000000010000000100000000000000000000000000000110000000000000000000100000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "code_output": "60",
    "std_output": "",
    "last_testcase": "12\n5\n4",
    "expected_output": "98",
    "task_finish_time": 1707700036896,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 51,
    "total_testcases": 863,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Go",
    "submission_id": "1172732559",
    "input_formatted": "12, 5, 4",
    "input": "12\n5\n4",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "func maximumXorProduct(a int64, b int64, n int) int {\n    mod := int64(1e9 + 7)\n    if n == 0 {\n        return 0\n    }\n    maxVal := int64((1 << n) - 1)\n    maxX := maxVal\n    if n >= 60 { // When n is large, x that maximizes the product is the one that maximizes a XOR x and b XOR x\n        maxX = maxVal\n    } else {\n        maxX = a ^ b\n    }\n    result := ((a ^ maxX) * (b ^ maxX)) % mod\n    return int(result)\n}"
}