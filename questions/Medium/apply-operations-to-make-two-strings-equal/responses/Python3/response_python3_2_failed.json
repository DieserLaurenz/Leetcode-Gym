{
    "status_code": 11,
    "lang": "python3",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 16648000,
    "question_id": "3033",
    "elapsed_time": 54,
    "compare_result": "110110011110011100101010010111001011111111111110100001101111111111011111100111011101110011110110101111011010001001100100101101010111111000110011111000111111011111011110110011111011001101001101011010001011011110101111010000100101111101110111000101100010011101011110101100011010101100111101111111011101010011100001101011011111101111111011100110010100101111010111000001010100011011111111110000101000101011001000111111001110001011111011101111011110001000001001111101101111110101110000110101110111101011011111010000100010010111001111001011011000001011111010100100001011010011110001011100001010010011110010010111110010111100010100111001001111100101100001101111110111001111111101100100111101111111100011110001110110110110110001010110100",
    "code_output": "12",
    "std_output": "",
    "last_testcase": "\"101101\"\n\"000000\"\n6",
    "expected_output": "4",
    "task_finish_time": 1708734900636,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 438,
    "total_testcases": 729,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python3",
    "submission_id": "1184412292",
    "input_formatted": "\"101101\", \"000000\", 6",
    "input": "\"101101\"\n\"000000\"\n6",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution:\n    def minOperations(self, s1: str, s2: str, x: int) -> int:\n        n = len(s1)\n        diff = 0\n        same_pair = 0\n\n        for i in range(n):\n            if s1[i] != s2[i]:\n                diff += 1\n            else:\n                if i < n - 1 and s1[i] == s1[i + 1] != s2[i + 1]:\n                    same_pair += 1\n\n        if diff % 2 != 0:\n            return -1\n\n        diff_pairs = diff // 2\n\n        if x >= 2:\n            return min(diff_pairs, same_pair) * 2 + max(diff_pairs - same_pair, 0) * x\n        else:\n            return diff_pairs"
}