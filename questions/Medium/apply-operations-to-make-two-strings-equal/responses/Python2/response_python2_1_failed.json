{
    "status_code": 11,
    "lang": "python",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 18272000,
    "question_id": "3033",
    "elapsed_time": 2472,
    "compare_result": "001000000000000100000010000000000000000000000000000000100100000000000000000000000000000000000000000000001000000000000000000000000000000000000000010000000000000000000000100000000000010000001000001000000000010010000000000000000001000000100001000000000000000000000000000000000000000000000001000000000000000000000000000010010000000000100010000001000000000000010000000001000000010000000001000000000000000001000000000000000000100000000000000000000000000000000001000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "code_output": "6",
    "std_output": "",
    "last_testcase": "\"1100011000\"\n\"0101001010\"\n2",
    "expected_output": "4",
    "task_finish_time": 1708734597160,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 30,
    "total_testcases": 729,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python",
    "submission_id": "1184410549",
    "input_formatted": "\"1100011000\", \"0101001010\", 2",
    "input": "\"1100011000\"\n\"0101001010\"\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution(object):\n    def minOperations(self, s1, s2, x):\n        \"\"\"\n        :type s1: str\n        :type s2: str\n        :type x: int\n        :rtype: int\n        \"\"\"\n        n = len(s1)\n        dp = [[float('inf')] * (n + 1) for _ in range(n + 1)]\n        dp[0][0] = 0\n        for i in range(n + 1):\n            for j in range(n + 1):\n                if i > 0:\n                    dp[i][j] = min(dp[i][j], dp[i - 1][j] + 1)\n                if j > 0:\n                    dp[i][j] = min(dp[i][j], dp[i][j - 1] + 1)\n                if i > 0 and j > 0:\n                    dp[i][j] = min(dp[i][j], dp[i - 1][j - 1] + (s1[i - 1] != s2[j - 1]))\n        if dp[n][n] == float('inf'):\n            return -1\n        ans = 0\n        i, j = n, n\n        while i > 0 and j > 0:\n            if dp[i][j] == dp[i - 1][j] + 1:\n                i -= 1\n                ans += x\n            elif dp[i][j] == dp[i][j - 1] + 1:\n                j -= 1\n                ans += x\n            else:\n                if s1[i - 1] != s2[j - 1]:\n                    ans += 1\n                i -= 1\n                j -= 1\n        ans += (i + j) * x\n        return ans"
}