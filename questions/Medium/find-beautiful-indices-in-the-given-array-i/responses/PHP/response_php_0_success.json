{
    "status_code": 10,
    "lang": "php",
    "run_success": true,
    "status_runtime": "1049 ms",
    "memory": 23468000,
    "question_id": "3245",
    "elapsed_time": 1196,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1707231813438,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 535,
    "total_testcases": 535,
    "runtime_percentile": 16.667000000000016,
    "status_memory": "23.5 MB",
    "memory_percentile": 8.333300000000017,
    "pretty_lang": "PHP",
    "submission_id": "1167884893",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\n\n    /**\n     * @param String $s\n     * @param String $a\n     * @param String $b\n     * @param Integer $k\n     * @return Integer[]\n     */\n    function beautifulIndices($s, $a, $b, $k) {\n        $beautifulIndices = [];\n        $aLen = strlen($a);\n        $bLen = strlen($b);\n        $sLen = strlen($s);\n\n        // Find all start indices of a and b in s\n        $aStarts = [];\n        $bStarts = [];\n        for ($i = 0; $i <= $sLen - $aLen; $i++) {\n            if (substr($s, $i, $aLen) == $a) {\n                $aStarts[] = $i;\n            }\n        }\n        for ($i = 0; $i <= $sLen - $bLen; $i++) {\n            if (substr($s, $i, $bLen) == $b) {\n                $bStarts[] = $i;\n            }\n        }\n\n        foreach ($aStarts as $aStart) {\n            foreach ($bStarts as $bStart) {\n                if (abs($aStart - $bStart) <= $k) {\n                    $beautifulIndices[] = $aStart;\n                    break; // Once a matching b is found for this a, no need to continue checking\n                }\n            }\n        }\n\n        return $beautifulIndices;\n    }\n}"
}