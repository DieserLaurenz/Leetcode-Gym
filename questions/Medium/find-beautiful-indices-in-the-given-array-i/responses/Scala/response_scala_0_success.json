{
    "status_code": 10,
    "lang": "scala",
    "run_success": true,
    "status_runtime": "1035 ms",
    "memory": 63432000,
    "question_id": "3245",
    "elapsed_time": 1751,
    "compare_result": "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1707232343735,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 535,
    "total_testcases": 535,
    "runtime_percentile": 14.285799999999993,
    "status_memory": "63.4 MB",
    "memory_percentile": 14.2858,
    "pretty_lang": "Scala",
    "submission_id": "1167891948",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "object Solution {\n    def beautifulIndices(s: String, a: String, b: String, k: Int): List[Int] = {\n        val indicesA = (0 to s.length - a.length).filter(i => s.substring(i, i + a.length) == a)\n        val indicesB = (0 to s.length - b.length).filter(j => s.substring(j, j + b.length) == b)\n        \n        indicesA.filter(i => indicesB.exists(j => (j - i).abs <= k)).toList\n    }\n}"
}