{
    "status_code": 10,
    "lang": "kotlin",
    "run_success": true,
    "status_runtime": "684 ms",
    "memory": 50400000,
    "question_id": "3245",
    "elapsed_time": 731,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1707231971527,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 535,
    "total_testcases": 535,
    "runtime_percentile": 25.92409999999998,
    "status_memory": "50.4 MB",
    "memory_percentile": 12.9616,
    "pretty_lang": "Kotlin",
    "submission_id": "1167886988",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\n    fun beautifulIndices(s: String, a: String, b: String, k: Int): List<Int> {\n        val beautifulIndices = mutableListOf<Int>()\n        val aIndices = s.windowed(a.length) { it == a }.mapIndexedNotNull { index, match -> if (match) index else null }\n        val bIndices = s.windowed(b.length) { it == b }.mapIndexedNotNull { index, match -> if (match) index else null }\n\n        for (i in aIndices) {\n            if (bIndices.any { j -> kotlin.math.abs(i - j) <= k }) {\n                beautifulIndices.add(i)\n            }\n        }\n\n        return beautifulIndices.sorted()\n    }\n}"
}