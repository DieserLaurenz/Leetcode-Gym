{
    "status_code": 10,
    "lang": "golang",
    "run_success": true,
    "status_runtime": "58 ms",
    "memory": 8312000,
    "question_id": "3245",
    "elapsed_time": 77,
    "compare_result": "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1707232199703,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 535,
    "total_testcases": 535,
    "runtime_percentile": 25.78220000000003,
    "status_memory": "8.3 MB",
    "memory_percentile": 5.469200000000006,
    "pretty_lang": "Go",
    "submission_id": "1167890005",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "func beautifulIndices(s string, a string, b string, k int) []int {\n    alen, blen := len(a), len(b)\n    aIndices, bIndices := []int{}, []int{}\n    for i := 0; i <= len(s)-alen; i++ {\n        if s[i:i+alen] == a {\n            aIndices = append(aIndices, i)\n        }\n    }\n    for i := 0; i <= len(s)-blen; i++ {\n        if s[i:i+blen] == b {\n            bIndices = append(bIndices, i)\n        }\n    }\n\n    result := []int{}\n    for _, ai := range aIndices {\n        for _, bi := range bIndices {\n            if abs(ai-bi) <= k {\n                result = append(result, ai)\n                break\n            }\n        }\n    }\n    return result\n}\n\nfunc abs(x int) int {\n    if x < 0 {\n        return -x\n    }\n    return x\n}"
}