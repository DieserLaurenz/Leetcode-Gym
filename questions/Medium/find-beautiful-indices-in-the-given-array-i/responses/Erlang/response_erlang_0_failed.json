{
    "status_code": 15,
    "lang": "erlang",
    "run_success": false,
    "runtime_error": "Line 6: exception error: function_clause",
    "full_runtime_error": "Line 6: exception error: function_clause\n[{lists,seq,[0,-3],[{file,\"lists.erl\"},{line,280}]},\n {solution,beautiful_indices,4,[{file,\"solution.erl\"},{line,6}]},\n {solution,consume_test_cases,2,[{file,\"solution.erl\"},{line,31}]},\n {solution,driver,0,[{file,\"solution.erl\"},{line,13}]},\n {solution,start,0,[{file,\"solution.erl\"},{line,48}]},\n {init,start_em,1,[]},\n {init,do_boot,3,[]}]",
    "status_runtime": "N/A",
    "memory": 61096000,
    "question_id": "3245",
    "elapsed_time": 1351,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "\"wl\"\n\"xjigt\"\n\"wl\"\n2",
    "expected_output": "[]",
    "task_finish_time": 1707242185472,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 4,
    "total_testcases": 535,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Erlang",
    "submission_id": "1168047432",
    "status_msg": "Runtime Error",
    "state": "SUCCESS",
    "code": "-spec beautiful_indices(S :: unicode:unicode_binary(), A :: unicode:unicode_binary(), B :: unicode:unicode_binary(), K :: integer()) -> [integer()].\nbeautiful_indices(S, A, B, K) ->\n    SList = binary:bin_to_list(S),\n    AList = binary:bin_to_list(A),\n    BList = binary:bin_to_list(B),\n    IndicesA = [I || I <- lists:seq(0, length(SList) - length(AList)), AList == lists:sublist(SList, I+1, length(AList))],\n    IndicesB = [J || J <- lists:seq(0, length(SList) - length(BList)), BList == lists:sublist(SList, J+1, length(BList))],\n    BeautifulIndices = [IdxA || IdxA <- IndicesA, IdxB <- IndicesB, abs(IdxA - IdxB) =< K],\n    lists:usort(BeautifulIndices)."
}