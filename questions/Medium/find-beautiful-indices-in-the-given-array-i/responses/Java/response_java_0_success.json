{
    "status_code": 10,
    "lang": "java",
    "run_success": true,
    "status_runtime": "430 ms",
    "memory": 50140000,
    "display_runtime": "430",
    "question_id": "3245",
    "elapsed_time": 676,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1707221536532,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 535,
    "total_testcases": 535,
    "runtime_percentile": 19.16060000000002,
    "status_memory": "50.1 MB",
    "memory_percentile": 5.174699999999989,
    "pretty_lang": "Java",
    "submission_id": "1167756694",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "import java.util.ArrayList;\nimport java.util.List;\n\nclass Solution {\n    public List<Integer> beautifulIndices(String s, String a, String b, int k) {\n        List<Integer> result = new ArrayList<>();\n        List<Integer> aIndices = new ArrayList<>();\n        List<Integer> bIndices = new ArrayList<>();\n        int aLen = a.length(), bLen = b.length();\n        \n        for (int i = 0; i <= s.length() - aLen; i++) {\n            if (s.substring(i, i + aLen).equals(a)) aIndices.add(i);\n        }\n        \n        for (int i = 0; i <= s.length() - bLen; i++) {\n            if (s.substring(i, i + bLen).equals(b)) bIndices.add(i);\n        }\n        \n        for (int i : aIndices) {\n            for (int j : bIndices) {\n                if (Math.abs(j - i) <= k) {\n                    result.add(i);\n                    break;\n                }\n            }\n        }\n        \n        return result;\n    }\n}"
}