{
    "status_code": 10,
    "lang": "python",
    "run_success": true,
    "status_runtime": "2955 ms",
    "memory": 18524000,
    "question_id": "3245",
    "elapsed_time": 3090,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1708765484525,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 535,
    "total_testcases": 535,
    "runtime_percentile": 16.510400000000207,
    "status_memory": "18.5 MB",
    "memory_percentile": 52.75140000000005,
    "pretty_lang": "Python",
    "submission_id": "1184675801",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution(object):\n    def beautifulIndices(self, s, a, b, k):\n        def findAllOccurrences(s, sub):\n            return [i for i in range(len(s)) if s.startswith(sub, i)]\n        \n        a_indices = findAllOccurrences(s, a)\n        b_indices = findAllOccurrences(s, b)\n        beautiful_indices = []\n        \n        for i in a_indices:\n            for j in b_indices:\n                if abs(j - i) <= k:\n                    beautiful_indices.append(i)\n                    break\n                    \n        return sorted(set(beautiful_indices))"
}