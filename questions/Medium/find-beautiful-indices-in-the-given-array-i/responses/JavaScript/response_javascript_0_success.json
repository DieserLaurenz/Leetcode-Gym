{
    "status_code": 10,
    "lang": "javascript",
    "run_success": true,
    "status_runtime": "215 ms",
    "memory": 60272000,
    "question_id": "3245",
    "elapsed_time": 260,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1707231667093,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 535,
    "total_testcases": 535,
    "runtime_percentile": 22.612900000000028,
    "status_memory": "60.3 MB",
    "memory_percentile": 6.71280000000001,
    "pretty_lang": "JavaScript",
    "submission_id": "1167882920",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "/**\n * @param {string} s\n * @param {string} a\n * @param {string} b\n * @param {number} k\n * @return {number[]}\n */\nvar beautifulIndices = function(s, a, b, k) {\n    const indicesA = [];\n    const indicesB = [];\n    const result = [];\n\n    // Find all occurrences of a\n    for (let i = 0; i <= s.length - a.length; i++) {\n        if (s.substring(i, i + a.length) === a) {\n            indicesA.push(i);\n        }\n    }\n\n    // Find all occurrences of b\n    for (let i = 0; i <= s.length - b.length; i++) {\n        if (s.substring(i, i + b.length) === b) {\n            indicesB.push(i);\n        }\n    }\n\n    // Check for beautiful indices\n    indicesA.forEach(i => {\n        for (let j = 0; j < indicesB.length; j++) {\n            if (Math.abs(i - indicesB[j]) <= k) {\n                result.push(i);\n                break; // Found a matching b, no need to check further\n            }\n        }\n    });\n\n    return result.sort((a, b) => a - b);\n};"
}