{
    "status_code": 15,
    "lang": "rust",
    "run_success": false,
    "runtime_error": "",
    "full_runtime_error": "",
    "status_runtime": "N/A",
    "memory": 2188000,
    "question_id": "3245",
    "elapsed_time": 11,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "\"wl\"\n\"xjigt\"\n\"wl\"\n2",
    "expected_output": "[]",
    "task_finish_time": 1707232406442,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 4,
    "total_testcases": 535,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Rust",
    "submission_id": "1167892807",
    "status_msg": "Runtime Error",
    "state": "SUCCESS",
    "code": "impl Solution {\n    pub fn beautiful_indices(s: String, a: String, b: String, k: i32) -> Vec<i32> {\n        let mut beautiful_indices = Vec::new();\n        let s_bytes = s.as_bytes();\n        let a_bytes = a.as_bytes();\n        let b_bytes = b.as_bytes();\n        let a_len = a_bytes.len();\n        let b_len = b_bytes.len();\n        \n        for i in 0..=s_bytes.len().saturating_sub(a_len) {\n            if s_bytes[i..i+a_len] == a_bytes[..] {\n                for j in 0..=s_bytes.len().saturating_sub(b_len) {\n                    if s_bytes[j..j+b_len] == b_bytes[..] && (i as i32 - j as i32).abs() <= k {\n                        beautiful_indices.push(i as i32);\n                        break;\n                    }\n                }\n            }\n        }\n\n        beautiful_indices\n    }\n}"
}