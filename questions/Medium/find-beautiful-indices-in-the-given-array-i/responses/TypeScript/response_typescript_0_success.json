{
    "status_code": 10,
    "lang": "typescript",
    "run_success": true,
    "status_runtime": "202 ms",
    "memory": 61624000,
    "question_id": "3245",
    "elapsed_time": 235,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1707231733574,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 535,
    "total_testcases": 535,
    "runtime_percentile": 18.36799999999999,
    "status_memory": "61.6 MB",
    "memory_percentile": 6.122999999999998,
    "pretty_lang": "TypeScript",
    "submission_id": "1167883786",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "function beautifulIndices(s: string, a: string, b: string, k: number): number[] {\n    const beautifulIndices: number[] = [];\n    const aIndices: number[] = [];\n    const bIndices: number[] = [];\n\n    for (let i = 0; i <= s.length - a.length; i++) {\n        if (s.substring(i, i + a.length) === a) aIndices.push(i);\n    }\n    for (let i = 0; i <= s.length - b.length; i++) {\n        if (s.substring(i, i + b.length) === b) bIndices.push(i);\n    }\n\n    for (const i of aIndices) {\n        for (const j of bIndices) {\n            if (Math.abs(j - i) <= k) {\n                beautifulIndices.push(i);\n                break;\n            }\n        }\n    }\n\n    return beautifulIndices.sort((a, b) => a - b);\n};"
}