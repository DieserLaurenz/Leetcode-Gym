{
    "status_code": 10,
    "lang": "swift",
    "run_success": true,
    "status_runtime": "547 ms",
    "memory": 19472000,
    "question_id": "3245",
    "elapsed_time": 560,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1707231912894,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 535,
    "total_testcases": 535,
    "runtime_percentile": 20.0,
    "status_memory": "19.5 MB",
    "memory_percentile": 12.0,
    "pretty_lang": "Swift",
    "submission_id": "1167886231",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\n    func beautifulIndices(_ s: String, _ a: String, _ b: String, _ k: Int) -> [Int] {\n        let sArray = Array(s)\n        let sLength = s.count\n        var result = [Int]()\n\n        // Function to check if a substring starting from index 'start' matches the given pattern 'pattern'\n        func matchesAt(_ start: Int, _ pattern: String) -> Bool {\n            let patternArray = Array(pattern)\n            for i in 0..<patternArray.count {\n                if start + i >= sLength || sArray[start + i] != patternArray[i] {\n                    return false\n                }\n            }\n            return true\n        }\n\n        // Find all occurrences of 'a' and 'b' in 's'\n        var aIndices = [Int]()\n        var bIndices = [Int]()\n        for i in 0..<(sLength) {\n            if i + a.count <= sLength && matchesAt(i, a) {\n                aIndices.append(i)\n            }\n            if i + b.count <= sLength && matchesAt(i, b) {\n                bIndices.append(i)\n            }\n        }\n\n        // For each occurrence of 'a', find if there's an occurrence of 'b' within 'k' distance\n        for aIndex in aIndices {\n            var found = false\n            for bIndex in bIndices {\n                if abs(aIndex - bIndex) <= k {\n                    found = true\n                    break\n                }\n            }\n            if found {\n                result.append(aIndex)\n            }\n        }\n\n        return result.sorted()\n    }\n}"
}