{
    "status_code": 10,
    "lang": "cpp",
    "run_success": true,
    "status_runtime": "155 ms",
    "memory": 18216000,
    "question_id": "3245",
    "elapsed_time": 167,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1707221479302,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 535,
    "total_testcases": 535,
    "runtime_percentile": 36.424400000000084,
    "status_memory": "18.2 MB",
    "memory_percentile": 14.20519999999998,
    "pretty_lang": "C++",
    "submission_id": "1167756117",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\npublic:\n    vector<int> beautifulIndices(string s, string a, string b, int k) {\n        vector<int> result;\n        vector<int> aIndices, bIndices;\n\n        // Find all occurrences of a and b in s\n        for (int i = 0; i <= (int)s.length() - (int)a.length(); ++i) {\n            if (s.substr(i, a.length()) == a) aIndices.push_back(i);\n        }\n        for (int i = 0; i <= (int)s.length() - (int)b.length(); ++i) {\n            if (s.substr(i, b.length()) == b) bIndices.push_back(i);\n        }\n\n        // Check each index of a for the condition with b\n        for (int i : aIndices) {\n            bool beautiful = false;\n            for (int j : bIndices) {\n                if (abs(i - j) <= k) {\n                    beautiful = true;\n                    break;\n                }\n            }\n            if (beautiful) result.push_back(i);\n        }\n\n        return result;\n    }\n};"
}