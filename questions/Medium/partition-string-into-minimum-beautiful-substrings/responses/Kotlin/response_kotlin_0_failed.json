{
    "status_code": 11,
    "lang": "kotlin",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 34464000,
    "question_id": "2883",
    "elapsed_time": 218,
    "compare_result
    "code_output": "-2147483647",
    "std_output": "",
    "last_testcase": "\"1011\"",
    "expected_output": "2",
    "task_finish_time": 1708093082004,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 36,
    "total_testcases": 561,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Kotlin",
    "submission_id": "1176999373",
    "input_formatted": "\"1011\"",
    "input": "\"1011\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    fun minimumBeautifulSubstrings(s: String): Int {\n        fun isPowerOfFive(n: Int): Boolean {\n            var num = n\n            while (num > 1 && num % 5 == 0) num /= 5\n            return num == 1\n        }\n\n        val dp = IntArray(s.length + 1) { Int.MAX_VALUE }\n        dp[0] = 0\n        for (i in 1..s.length) {\n            if (s[i - 1] == '0') continue\n            var num = 0\n            for (j in i downTo 1) {\n                num = num or (1 shl (i - j))\n                if (isPowerOfFive(num)) {\n                    dp[i] = minOf(dp[i], dp[j - 1] + 1)\n                }\n            }\n        }\n\n        return if (dp[s.length] == Int.MAX_VALUE) -1 else dp[s.length]\n    }\n}"
}