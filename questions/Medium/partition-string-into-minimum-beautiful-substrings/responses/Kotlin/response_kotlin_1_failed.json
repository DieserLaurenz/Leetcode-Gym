{
    "status_code": 11,
    "lang": "kotlin",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 34504000,
    "question_id": "2883",
    "elapsed_time": 196,
    "compare_result
    "code_output": "-1",
    "std_output": "",
    "last_testcase": "\"1011\"",
    "expected_output": "2",
    "task_finish_time": 1708093123595,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 116,
    "total_testcases": 561,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Kotlin",
    "submission_id": "1176999881",
    "input_formatted": "\"1011\"",
    "input": "\"1011\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    fun minimumBeautifulSubstrings(s: String): Int {\n        val n = s.length\n        val dp = IntArray(n + 1) { Int.MAX_VALUE / 2 }\n        dp[0] = 0\n\n        for (i in 1..n) {\n            var value = 0L\n            for (j in i downTo 1) {\n                value = value shr 1 or ((s[j - 1] - '0') shl (i - j)).toLong()\n                if (s[j - 1] == '1' && isPowerOfFive(value)) {\n                    dp[i] = minOf(dp[i], dp[j - 1] + 1)\n                }\n            }\n        }\n\n        return if (dp[n] == Int.MAX_VALUE / 2) -1 else dp[n]\n    }\n\n    private fun isPowerOfFive(value: Long): Boolean {\n        var num = value\n        while (num > 0 && num % 5L == 0L) num /= 5\n        return num == 1L\n    }\n}"
}