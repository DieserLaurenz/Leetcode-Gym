{
    "status_code": 10,
    "lang": "php",
    "run_success": true,
    "status_runtime": "11 ms",
    "memory": 19288000,
    "question_id": "2883",
    "elapsed_time": 69,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1708092867859,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 561,
    "total_testcases": 561,
    "runtime_percentile": 100,
    "status_memory": "19.3 MB",
    "memory_percentile": 100,
    "pretty_lang": "PHP",
    "submission_id": "1176996778",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\n\n    /**\n     * @param String $s\n     * @return Integer\n     */\n    function minimumBeautifulSubstrings($s) {\n        $cache = [];\n        $dp = array_fill(0, strlen($s) + 1, PHP_INT_MAX);\n        $dp[0] = 0;\n        for ($i = 1; $i <= strlen($s); $i++) {\n            if ($s[$i - 1] == '0') continue;\n            $num = 0;\n            for ($j = $i; $j <= strlen($s); $j++) {\n                $num = $num * 2 + $s[$j - 1] - '0';\n                if ($num > pow(5, floor(log(pow(2, 15), 5)))) break;\n                if (isset($cache[$num]) || $num == pow(5, floor(log($num, 5)))) {\n                    $cache[$num] = true;\n                    $dp[$j] = min($dp[$j], $dp[$i - 1] + 1);\n                }\n            }\n        }\n        return $dp[strlen($s)] == PHP_INT_MAX ? -1 : $dp[strlen($s)];\n    }\n}"
}