{
    "status_code": 10,
    "lang": "golang",
    "run_success": true,
    "status_runtime": "0 ms",
    "memory": 2372000,
    "question_id": "2883",
    "elapsed_time": 13,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1708093387252,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 561,
    "total_testcases": 561,
    "runtime_percentile": 100,
    "status_memory": "2.4 MB",
    "memory_percentile": 36.3637,
    "pretty_lang": "Go",
    "submission_id": "1177003107",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "func minimumBeautifulSubstrings(s string) int {\n    maxLen := 0\n    pow5 := make(map[int]bool)\n    for i := 1; i <= 1<<20; i *= 5 {\n        pow5[i] = true\n        maxLen = max(maxLen, len(fmt.Sprintf(\"%b\", i)))\n    }\n\n    n := len(s)\n    dp := make([]int, n+1)\n    for i := range dp {\n        dp[i] = 1<<31 - 1\n    }\n    dp[0] = 0\n\n    for i := 0; i < n; i++ {\n        if s[i] == '0' {\n            continue\n        }\n        val := 0\n        for j := i; j < n && j-i < maxLen; j++ {\n            val = val*2 + int(s[j]-'0')\n            if pow5[val] {\n                dp[j+1] = min(dp[j+1], dp[i]+1)\n            }\n        }\n    }\n\n    if dp[n] == 1<<31-1 {\n        return -1\n    }\n    return dp[n]\n}\n\nfunc min(a, b int) int {\n    if a < b {\n        return a\n    }\n    return b\n}\n\nfunc max(a, b int) int {\n    if a > b {\n        return a\n    }\n    return b\n}"
}