{
    "status_code": 11,
    "lang": "golang",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 2176000,
    "question_id": "2883",
    "elapsed_time": 13,
    "compare_result
    "code_output": "-1",
    "std_output": "",
    "last_testcase": "\"1011\"",
    "expected_output": "2",
    "task_finish_time": 1708093339616,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 52,
    "total_testcases": 561,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Go",
    "submission_id": "1177002522",
    "input_formatted": "\"1011\"",
    "input": "\"1011\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "func minimumBeautifulSubstrings(s string) int {\n    isBeautiful := func(num int) bool {\n        for num > 0 {\n            if num % 5 != 0 {\n                return false\n            }\n            num /= 5\n        }\n        return true\n    }\n\n    dp := make([]int, len(s)+1)\n    for i := range dp {\n        dp[i] = 1<<31 - 1\n    }\n    dp[0] = 0\n\n    for i := 0; i < len(s); i++ {\n        if s[i] == '0' {\n            continue\n        }\n        num := 0\n        for j := i; j < len(s); j++ {\n            num = num*2 + int(s[j]-'0')\n            if isBeautiful(num) {\n                dp[j+1] = min(dp[j+1], dp[i]+1)\n            }\n        }\n    }\n\n    if dp[len(s)] == 1<<31-1 {\n        return -1\n    }\n    return dp[len(s)]\n}\n\nfunc min(a, b int) int {\n    if a < b {\n        return a\n    }\n    return b\n}"
}