{
    "status_code": 10,
    "lang": "python",
    "run_success": true,
    "status_runtime": "32 ms",
    "memory": 11644000,
    "question_id": "2883",
    "elapsed_time": 52,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1708839556534,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 561,
    "total_testcases": 561,
    "runtime_percentile": 29.411299999999994,
    "status_memory": "11.6 MB",
    "memory_percentile": 82.35289999999999,
    "pretty_lang": "Python",
    "submission_id": "1185484319",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution(object):\n    def minimumBeautifulSubstrings(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: int\n        \"\"\"\n        def is_power_of_5(n):\n            while n > 1:\n                if n % 5 != 0:\n                    return False\n                n /= 5\n            return n == 1\n\n        def dfs(index):\n            if index == len(s):\n                return 0\n            if s[index] == '0':\n                return float('inf')\n            min_count = float('inf')\n            num = 0\n            for i in range(index, len(s)):\n                num = num * 2 + int(s[i])\n                if is_power_of_5(num):\n                    min_count = min(min_count, 1 + dfs(i + 1))\n            return min_count\n\n        result = dfs(0)\n        return result if result != float('inf') else -1"
}