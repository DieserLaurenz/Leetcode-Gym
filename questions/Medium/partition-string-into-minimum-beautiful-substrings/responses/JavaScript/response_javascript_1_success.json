{
    "status_code": 10,
    "lang": "javascript",
    "run_success": true,
    "status_runtime": "64 ms",
    "memory": 51508000,
    "question_id": "2883",
    "elapsed_time": 90,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1708092707494,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 561,
    "total_testcases": 561,
    "runtime_percentile": 49.99980000000001,
    "status_memory": "51.5 MB",
    "memory_percentile": 28.571000000000023,
    "pretty_lang": "JavaScript",
    "submission_id": "1176994839",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "/**\n * @param {string} s\n * @return {number}\n */\nvar minimumBeautifulSubstrings = function(s) {\n    let powersOfFive = new Set();\n    let currentPower = 1;\n    while (currentPower.toString(2).length <= s.length + 1) {\n        powersOfFive.add(currentPower.toString(2));\n        currentPower *= 5;\n    }\n\n    const dp = new Array(s.length + 1).fill(Infinity);\n    dp[0] = 0;\n\n    for (let i = 1; i <= s.length; i++) {\n        for (let j = i; j >= 1; j--) {\n            if (s[j - 1] === '0') continue;\n            let sub = s.substring(j - 1, i);\n            if (powersOfFive.has(sub)) {\n                dp[i] = Math.min(dp[i], dp[j - 1] + 1);\n            }\n        }\n    }\n\n    return dp[s.length] === Infinity ? -1 : dp[s.length];\n};"
}