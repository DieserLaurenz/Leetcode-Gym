{
    "status_code": 11,
    "lang": "javascript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 51244000,
    "question_id": "2883",
    "elapsed_time": 246,
    "compare_result
    "code_output": "3",
    "std_output": "",
    "last_testcase": "\"101101111101\"",
    "expected_output": "6",
    "task_finish_time": 1708092675331,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 503,
    "total_testcases": 561,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "JavaScript",
    "submission_id": "1176994425",
    "input_formatted": "\"101101111101\"",
    "input": "\"101101111101\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "/**\n * @param {string} s\n * @return {number}\n */\nvar minimumBeautifulSubstrings = function(s) {\n    const isBeautiful = (binary) => {\n        let num = parseInt(binary, 2);\n        while (num > 0 && num % 5 === 0) num /= 5;\n        return num === 1;\n    };\n\n    const dp = new Array(s.length + 1).fill(Infinity);\n    dp[0] = 0;\n\n    for (let i = 1; i <= s.length; i++) {\n        if (s[i-1] === '0') continue;\n        for (let j = 0; j < i; j++) {\n            if (isBeautiful(s.substring(j, i))) {\n                dp[i] = Math.min(dp[i], dp[j] + 1);\n            }\n        }\n    }\n\n    return dp[s.length] === Infinity ? -1 : dp[s.length];\n};"
}