{
    "status_code": 10,
    "lang": "python3",
    "run_success": true,
    "status_runtime": "34 ms",
    "memory": 16512000,
    "question_id": "2883",
    "elapsed_time": 59,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1708839614092,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 561,
    "total_testcases": 561,
    "runtime_percentile": 97.52640000000002,
    "status_memory": "16.5 MB",
    "memory_percentile": 86.92580000000001,
    "pretty_lang": "Python3",
    "submission_id": "1185485071",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution:\n    def minimumBeautifulSubstrings(self, s: str) -> int:\n        dp = [float('inf')] * (len(s) + 1)\n        dp[0] = 0\n        powers_of_five = set()\n        current = 1\n        while current <= int(\"1\" * len(s), 2):\n            powers_of_five.add(bin(current)[2:])\n            current *= 5\n\n        for i in range(1, len(s) + 1):\n            for j in range(i):\n                if s[j:i] in powers_of_five and (j == 0 or s[j] != '0'):\n                    dp[i] = min(dp[i], dp[j] + 1)\n\n        return dp[-1] if dp[-1] != float('inf') else -1"
}