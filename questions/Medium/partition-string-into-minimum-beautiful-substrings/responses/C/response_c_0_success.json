{
    "status_code": 10,
    "lang": "c",
    "run_success": true,
    "status_runtime": "5 ms",
    "memory": 5592000,
    "question_id": "2883",
    "elapsed_time": 25,
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1708092377477,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 561,
    "total_testcases": 561,
    "runtime_percentile": 50.0,
    "status_memory": "5.6 MB",
    "memory_percentile": 25.0,
    "pretty_lang": "C",
    "submission_id": "1176990658",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "#include <string.h>\n#include <math.h>\n\nint isPowerOfFive(long long n) {\n    while (n > 1) {\n        if (n % 5 != 0) return 0;\n        n /= 5;\n    }\n    return n == 1;\n}\n\nlong long binaryToDecimal(char *s, int start, int end) {\n    long long num = 0;\n    for (int i = start; i <= end; i++) {\n        num = num * 2 + (s[i] - '0');\n    }\n    return num;\n}\n\nint minimumBeautifulSubstrings(char * s) {\n    int n = strlen(s);\n    if (s[0] == '0') return -1; // Impossible if starts with '0'\n    \n    int dp[n + 1];\n    memset(dp, 63, sizeof(dp)); // Fill dp with large numbers\n    dp[0] = 0; // Base case\n    \n    for (int i = 1; i <= n; i++) {\n        if (s[i - 1] == '0') continue; // Skip leading zeros\n        for (int j = 0; j < i; j++) {\n            if (s[j] == '0') continue; // Skip substring starting with '0'\n            long long num = binaryToDecimal(s, j, i - 1);\n            if (isPowerOfFive(num)) {\n                dp[i] = fmin(dp[i], dp[j] + 1);\n            }\n        }\n    }\n    \n    return dp[n] >= 1e9 ? -1 : dp[n];\n}"
}