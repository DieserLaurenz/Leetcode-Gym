{
    "status_code": 11,
    "lang": "golang",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 8728000,
    "question_id": "3231",
    "elapsed_time": 144,
    "compare_result
    "code_output": "17",
    "std_output": "",
    "last_testcase": "[1]\n100000",
    "expected_output": "16",
    "task_finish_time": 1707845848043,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 625,
    "total_testcases": 628,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Go",
    "submission_id": "1174380609",
    "input_formatted": "[1], 100000",
    "input": "[1]\n100000",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "func minimumAddedCoins(coins []int, target int) int {\n    sort.Ints(coins)\n    addedCoins := 0\n    currentTarget := 1\n\n    for _, coin := range coins {\n        for coin > currentTarget {\n            addedCoins++\n            currentTarget += currentTarget\n            if currentTarget > target {\n                return addedCoins\n            }\n        }\n        currentTarget += coin\n        if currentTarget > target {\n            return addedCoins\n        }\n    }\n\n    for currentTarget <= target {\n        addedCoins++\n        currentTarget += currentTarget - 1\n    }\n\n    return addedCoins\n}"
}