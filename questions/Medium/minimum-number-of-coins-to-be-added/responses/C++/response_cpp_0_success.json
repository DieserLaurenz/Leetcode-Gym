{
    "status_code": 10,
    "lang": "cpp",
    "run_success": true,
    "status_runtime": "92 ms",
    "memory": 80376000,
    "question_id": "3231",
    "elapsed_time": 138,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1707845128081,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 628,
    "total_testcases": 628,
    "runtime_percentile": 96.29909999999997,
    "status_memory": "80.4 MB",
    "memory_percentile": 15.710199999999977,
    "pretty_lang": "C++",
    "submission_id": "1174368352",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\npublic:\n    int minimumAddedCoins(vector<int>& coins, int target) {\n        sort(coins.begin(), coins.end());\n        long long reach = 0;\n        int addedCoins = 0;\n        int i = 0;\n        while (reach < target) {\n            if (i < coins.size() && coins[i] <= reach + 1) {\n                reach += coins[i++];\n            } else {\n                reach += reach + 1;\n                addedCoins++;\n            }\n        }\n        return addedCoins;\n    }\n};"
}