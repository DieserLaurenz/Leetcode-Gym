{
    "status_code": 10,
    "lang": "swift",
    "run_success": true,
    "status_runtime": "295 ms",
    "memory": 19688000,
    "question_id": "3231",
    "elapsed_time": 416,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1707845687863,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 628,
    "total_testcases": 628,
    "runtime_percentile": 100,
    "status_memory": "19.7 MB",
    "memory_percentile": 50.0,
    "pretty_lang": "Swift",
    "submission_id": "1174377880",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\n    func minimumAddedCoins(_ coins: [Int], _ target: Int) -> Int {\n        var sortedCoins = coins.sorted()\n        var currentSum = 0\n        var addedCoins = 0\n        \n        for coin in sortedCoins where currentSum < target {\n            while coin > currentSum + 1 && currentSum < target {\n                currentSum += currentSum + 1\n                addedCoins += 1\n            }\n            currentSum += coin\n        }\n        \n        while currentSum < target {\n            currentSum += currentSum + 1\n            addedCoins += 1\n        }\n        \n        return addedCoins\n    }\n}"
}