{
    "status_code": 10,
    "lang": "python",
    "run_success": true,
    "status_runtime": "558 ms",
    "memory": 23672000,
    "question_id": "3231",
    "elapsed_time": 579,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1708819392615,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 628,
    "total_testcases": 628,
    "runtime_percentile": 53.42439999999999,
    "status_memory": "23.7 MB",
    "memory_percentile": 84.9314,
    "pretty_lang": "Python",
    "submission_id": "1185250919",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution(object):\n    def minimumAddedCoins(self, coins, target):\n        \"\"\"\n        :type coins: List[int]\n        :type target: int\n        :rtype: int\n        \"\"\"\n        coins.sort()\n        added_coins = 0\n        current_sum = 0\n        idx = 0\n        \n        while current_sum < target:\n            if idx < len(coins) and coins[idx] <= current_sum + 1:\n                current_sum += coins[idx]\n                idx += 1\n            else:\n                added_coins += 1\n                current_sum = 2 * current_sum + 1\n        \n        return added_coins"
}