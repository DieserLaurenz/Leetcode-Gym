{
    "status_code": 10,
    "lang": "rust",
    "run_success": true,
    "status_runtime": "17 ms",
    "memory": 3256000,
    "question_id": "3231",
    "elapsed_time": 67,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1707846042520,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 628,
    "total_testcases": 628,
    "runtime_percentile": 81.81819999999999,
    "status_memory": "3.3 MB",
    "memory_percentile": 72.7273,
    "pretty_lang": "Rust",
    "submission_id": "1174383867",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "impl Solution {\n    pub fn minimum_added_coins(mut coins: Vec<i32>, target: i32) -> i32 {\n        coins.sort_unstable();\n        let mut sum = 0;\n        let mut count = 0;\n        let mut i = 0;\n        while sum < target {\n            if i < coins.len() && coins[i] <= sum + 1 {\n                sum += coins[i];\n                i += 1;\n            } else {\n                sum += sum + 1;\n                count += 1;\n            }\n        }\n        count\n    }\n}"
}