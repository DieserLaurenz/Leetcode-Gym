{
    "status_code": 10,
    "lang": "c",
    "run_success": true,
    "status_runtime": "185 ms",
    "memory": 15088000,
    "question_id": "3231",
    "elapsed_time": 212,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1707845274102,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 628,
    "total_testcases": 628,
    "runtime_percentile": 37.5,
    "status_memory": "15.1 MB",
    "memory_percentile": 37.5,
    "pretty_lang": "C",
    "submission_id": "1174370852",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "#include <stdlib.h> // Required for qsort\n\nint compare(const void *a, const void *b) {\n    return (*(int*)a - *(int*)b);\n}\n\nint minimumAddedCoins(int* coins, int coinsSize, int target) {\n    long long maxReachable = 0;\n    int addedCoins = 0;\n    int i = 0;\n    \n    qsort(coins, coinsSize, sizeof(int), compare);\n    \n    while (maxReachable < target) {\n        if (i < coinsSize && coins[i] <= maxReachable + 1) {\n            maxReachable += coins[i];\n            i++;\n        } else {\n            maxReachable = 2 * maxReachable + 1;\n            addedCoins++;\n        }\n    }\n    \n    return addedCoins;\n}"
}