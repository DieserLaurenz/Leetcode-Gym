{
    "status_code": 10,
    "lang": "csharp",
    "run_success": true,
    "status_runtime": "296 ms",
    "memory": 66404000,
    "question_id": "3231",
    "elapsed_time": 364,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1707845330589,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 628,
    "total_testcases": 628,
    "runtime_percentile": 66.66670000000002,
    "status_memory": "66.4 MB",
    "memory_percentile": 38.09530000000002,
    "pretty_lang": "C#",
    "submission_id": "1174371815",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "public class Solution {\n    public int MinimumAddedCoins(int[] coins, int target) {\n        Array.Sort(coins);\n        int addedCoins = 0, currentIndex = 0;\n        long maxReachable = 0;\n        while (maxReachable < target) {\n            if (currentIndex < coins.Length && coins[currentIndex] <= maxReachable + 1) {\n                maxReachable += coins[currentIndex];\n                currentIndex++;\n            } else {\n                maxReachable = maxReachable * 2 + 1;\n                addedCoins++;\n            }\n        }\n        return addedCoins;\n    }\n}"
}