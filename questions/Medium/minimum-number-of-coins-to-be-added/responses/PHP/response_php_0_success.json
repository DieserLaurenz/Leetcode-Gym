{
    "status_code": 10,
    "lang": "php",
    "run_success": true,
    "status_runtime": "272 ms",
    "memory": 30028000,
    "question_id": "3231",
    "elapsed_time": 424,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1707845627914,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 628,
    "total_testcases": 628,
    "runtime_percentile": 100,
    "status_memory": "30 MB",
    "memory_percentile": 100,
    "pretty_lang": "PHP",
    "submission_id": "1174376864",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\n\n    /**\n     * @param Integer[] $coins\n     * @param Integer $target\n     * @return Integer\n     */\n    function minimumAddedCoins($coins, $target) {\n        sort($coins);\n        $addedCoins = 0;\n        $currentMax = 0;\n        $i = 0;\n        while ($currentMax < $target) {\n            if ($i < count($coins) && $coins[$i] <= $currentMax + 1) {\n                $currentMax += $coins[$i];\n                $i++;\n            } else {\n                $currentMax = 2 * $currentMax + 1;\n                $addedCoins++;\n            }\n        }\n        return $addedCoins;\n    }\n}"
}