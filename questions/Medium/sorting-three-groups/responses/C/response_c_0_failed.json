{
    "status_code": 11,
    "lang": "c",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 6652000,
    "question_id": "2904",
    "elapsed_time": 56,
    "compare_result
    "code_output": "2",
    "std_output": "",
    "last_testcase": "[2,1,3,2,1]",
    "expected_output": "3",
    "task_finish_time": 1708174797032,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 736,
    "total_testcases": 7414,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C",
    "submission_id": "1177794130",
    "input_formatted": "[2,1,3,2,1]",
    "input": "[2,1,3,2,1]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "int minimumOperations(int* nums, int numsSize) {\n    int count[3] = {0}; // Counts for each group\n    for (int i = 0; i < numsSize; ++i) {\n        count[nums[i] - 1]++;\n    }\n    \n    int moves = 0, cumulative = 0;\n    for (int i = 0; i < 3; ++i) {\n        // Calculate how many numbers are out of place for each group\n        // considering the numbers that should have been before it\n        moves += abs(cumulative - count[i] * i);\n        cumulative += count[i];\n    }\n    return moves;\n}"
}