{
    "status_code": 11,
    "lang": "javascript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 58140000,
    "question_id": "2904",
    "elapsed_time": 203,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "[1,3,2,1,3,3]",
    "expected_output": "2",
    "task_finish_time": 1708175076662,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 945,
    "total_testcases": 7414,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "JavaScript",
    "submission_id": "1177797068",
    "input_formatted": "[1,3,2,1,3,3]",
    "input": "[1,3,2,1,3,3]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "/**\n * @param {number[]} nums\n * @return {number}\n */\nvar minimumOperations = function(nums) {\n    if (new Set(nums).size === 1) return 0; // All elements are in the same group, no need to move.\n\n    let groupCounts = Array.from({length: 3}, () => 0);\n    nums.forEach(num => groupCounts[num - 1]++);\n\n    let minOps = nums.length - Math.max(...groupCounts); // The max group size dictates the least operations.\n\n    // Special case: When two groups have the same max size and the third is different.\n    let sortedGroupCounts = [...groupCounts].sort((a, b) => a - b);\n    if (sortedGroupCounts[1] !== sortedGroupCounts[2]) {\n        minOps = Math.min(minOps, nums.length - sortedGroupCounts[1] - sortedGroupCounts[2]);\n    }\n\n    return minOps;\n};"
}