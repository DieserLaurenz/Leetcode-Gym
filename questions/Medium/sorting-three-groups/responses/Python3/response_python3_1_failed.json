{
    "status_code": 11,
    "lang": "python3",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 16816000,
    "question_id": "2904",
    "elapsed_time": 172,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "[1,3,2,1,3,3]",
    "expected_output": "2",
    "task_finish_time": 1708849711717,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 965,
    "total_testcases": 7414,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python3",
    "submission_id": "1185603290",
    "input_formatted": "[1,3,2,1,3,3]",
    "input": "[1,3,2,1,3,3]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "from typing import List\n\nclass Solution:\n    def minimumOperations(self, nums: List[int]) -> int:\n        groups = [[], [], []]\n        for i, num in enumerate(nums):\n            groups[num - 1].append(i)\n        \n        # Sort groups by their indices to simulate the sorting process\n        for i in range(3):\n            groups[i].sort()\n        \n        res = []\n        for group in groups:\n            res.extend(group)\n        \n        # Count the number of operations required to make the array beautiful\n        operations = 0\n        for i in range(len(res)):\n            if res[i] != i:\n                operations += 1\n                # Swap positions to correct the order, simulate operation\n                idx = res.index(i)\n                res[i], res[idx] = res[idx], res[i]\n        \n        return operations"
}