{
    "status_code": 11,
    "lang": "erlang",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 59412000,
    "question_id": "2904",
    "elapsed_time": 2195,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "[2,1,3,2,1]",
    "expected_output": "3",
    "task_finish_time": 1708185969157,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 682,
    "total_testcases": 7414,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Erlang",
    "submission_id": "1178015128",
    "input_formatted": "[2,1,3,2,1]",
    "input": "[2,1,3,2,1]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "-spec minimum_operations(Nums :: [integer()]) -> integer().\nminimum_operations(Nums) ->\n    Counts = [length([X || X <- Nums, X == I]) || I <- [1,2,3]],\n    Sorted = lists:sort(Counts),\n    Sum = lists:sum(Sorted),\n    Max = lists:last(Sorted),\n    MinOps = case Sum - Max > Max of\n        true -> Sum - 2 * Max;\n        false -> Sum rem 2\n    end,\n    MinOps."
}