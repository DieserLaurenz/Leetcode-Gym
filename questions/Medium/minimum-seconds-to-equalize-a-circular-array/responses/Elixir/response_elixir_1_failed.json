{
    "status_code": 11,
    "lang": "elixir",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 204500000,
    "question_id": "2920",
    "elapsed_time": 1240,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "[2,1,3,3,2]",
    "expected_output": "2",
    "task_finish_time": 1707971063041,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 137,
    "total_testcases": 579,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Elixir",
    "submission_id": "1175680475",
    "input_formatted": "[2,1,3,3,2]",
    "input": "[2,1,3,3,2]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "defmodule Solution do\n  @spec minimum_seconds(nums :: [integer]) :: integer\n  def minimum_seconds(nums) do\n    nums\n    |> Enum.chunk_every(2, 1, :discard)\n    |> Enum.map(fn [a, b] -> if a == b, do: 0, else: 1 end)\n    |> Enum.sum()\n    |> max(1)\n    |> Kernel.div(2)\n  end\nend"
}