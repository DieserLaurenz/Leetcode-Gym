{
    "status_code": 11,
    "lang": "swift",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 22292000,
    "question_id": "2920",
    "elapsed_time": 447,
    "compare_result": "010111111111111110111111111111111111111110000000000000000100101010010010111110101101111110001111100101011111110011111111010001110110011110101011001011101100100000111000000000001111101100101011111000111100000100101010111011011001001001100011100010000111000101000000100100100000000110000000000000010010100110100000000000000110000000000001000000100000000100000000000000000000000001100000001000000000010000010010000000000000000000000000000010000000000000000000000000000000000000000010000000000001010000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "code_output": "2",
    "std_output": "",
    "last_testcase": "[1,2,1,2]",
    "expected_output": "1",
    "task_finish_time": 1707960877390,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 172,
    "total_testcases": 579,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Swift",
    "submission_id": "1175591437",
    "input_formatted": "[1,2,1,2]",
    "input": "[1,2,1,2]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    func minimumSeconds(_ nums: [Int]) -> Int {\n        let n = nums.count\n        if n <= 2 { return 1 }\n        var diff = Set<Int>()\n        for i in 0..<n {\n            diff.insert((nums[i] - nums[(i + 1) % n] + n) % n)\n            diff.insert((nums[(i + 1) % n] - nums[i] + n) % n)\n        }\n        return diff.count == 1 ? 1 : 2\n    }\n}"
}