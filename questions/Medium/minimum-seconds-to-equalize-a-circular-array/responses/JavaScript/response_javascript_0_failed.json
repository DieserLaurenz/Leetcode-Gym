{
    "status_code": 11,
    "lang": "javascript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 79640000,
    "question_id": "2920",
    "elapsed_time": 153,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "[2,1,3,3,2]",
    "expected_output": "2",
    "task_finish_time": 1707960432327,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 193,
    "total_testcases": 579,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "JavaScript",
    "submission_id": "1175588180",
    "input_formatted": "[2,1,3,3,2]",
    "input": "[2,1,3,3,2]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "/**\n * @param {number[]} nums\n * @return {number}\n */\nvar minimumSeconds = function(nums) {\n    let maxFreq = 0, freq = new Map();\n    for (const num of nums) {\n        freq.set(num, (freq.get(num) || 0) + 1);\n        maxFreq = Math.max(maxFreq, freq.get(num));\n    }\n    return Math.ceil(Math.log(nums.length / maxFreq) / Math.log(3));\n};"
}