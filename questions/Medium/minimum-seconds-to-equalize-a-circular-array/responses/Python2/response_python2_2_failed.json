{
    "status_code": 11,
    "lang": "python",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 40024000,
    "question_id": "2920",
    "elapsed_time": 662,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "[2,1,3,3,2]",
    "expected_output": "2",
    "task_finish_time": 1708838328628,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 99,
    "total_testcases": 579,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python",
    "submission_id": "1185470724",
    "input_formatted": "[2,1,3,3,2]",
    "input": "[2,1,3,3,2]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution(object):\n    def minimumSeconds(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: int\n        \"\"\"\n        def gcd(a, b):\n            while b:\n                a, b = b, a % b\n            return a\n        \n        n = len(nums)\n        if n == 1:\n            return 0\n        \n        diff_set = set()\n        for i in range(1, n):\n            if nums[i] != nums[i-1]:\n                diff_set.add((i-1, i))\n        \n        if nums[0] != nums[-1]:\n            diff_set.add((n-1, 0))\n        \n        if not diff_set:\n            return 0\n        \n        gcd_val = 0\n        for x, y in diff_set:\n            gcd_val = gcd(gcd_val, abs(x-y))\n        \n        if gcd_val <= 1:\n            return 1\n        \n        for i in range(2, gcd_val+1):\n            if gcd_val % i == 0:\n                return i - 1\n        \n        return gcd_val - 1"
}