{
    "status_code": 11,
    "lang": "dart",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 192856000,
    "question_id": "2920",
    "elapsed_time": 574,
    "compare_result
    "code_output": "2",
    "std_output": "",
    "last_testcase": "[1,2,1,2]",
    "expected_output": "1",
    "task_finish_time": 1707961447938,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 223,
    "total_testcases": 579,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Dart",
    "submission_id": "1175595600",
    "input_formatted": "[1,2,1,2]",
    "input": "[1,2,1,2]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n  int minimumSeconds(List<int> nums) {\n    if (nums.toSet().length == 1) return 0; // All elements are already equal\n    int maxCount = 1;\n    for (int i = 0; i < nums.length; i++) {\n      int count = 1;\n      for (int j = 1; j < nums.length; j++) {\n        int index = (i + j) % nums.length;\n        if (nums[index] == nums[(index - 1 + nums.length) % nums.length]) {\n          count++;\n        } else {\n          break;\n        }\n      }\n      maxCount = max(maxCount, count);\n    }\n    return (nums.length - maxCount + 1) ~/ 2;\n  }\n\n  int max(int a, int b) => a > b ? a : b;\n}"
}