{
    "status_code": 11,
    "lang": "scala",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 59276000,
    "question_id": "2920",
    "elapsed_time": 10098,
    "compare_result
    "code_output": "2",
    "std_output": "",
    "last_testcase": "[1,2,1,2]",
    "expected_output": "1",
    "task_finish_time": 1707961868688,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 208,
    "total_testcases": 579,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Scala",
    "submission_id": "1175598626",
    "input_formatted": "[1,2,1,2]",
    "input": "[1,2,1,2]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "object Solution {\n    def minimumSeconds(nums: List[Int]): Int = {\n        if (nums.distinct.length == 1) return 0\n\n        val n = nums.length\n        var ans = Int.MaxValue\n        val countMap = scala.collection.mutable.Map[Int, Int]()\n\n        nums.foreach { num =>\n            countMap(num) = countMap.getOrElse(num, 0) + 1\n        }\n\n        countMap.foreach { case (num, count) =>\n            var tempAns = 0\n            var i = 0\n            while (i < n) {\n                if (nums(i) != num) {\n                    i += 2\n                    tempAns += 1\n                } else {\n                    i += 1\n                }\n            }\n            ans = ans.min(tempAns)\n        }\n\n        ans\n    }\n}"
}