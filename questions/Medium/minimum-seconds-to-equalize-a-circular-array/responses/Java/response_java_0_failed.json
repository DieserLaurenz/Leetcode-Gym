{
    "status_code": 11,
    "lang": "java",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 62212000,
    "display_runtime": "47",
    "question_id": "2920",
    "elapsed_time": 439,
    "compare_result
    "code_output": "2",
    "std_output": "",
    "last_testcase": "[8,8,9,10,9]",
    "expected_output": "1",
    "task_finish_time": 1707951429534,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 250,
    "total_testcases": 579,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Java",
    "submission_id": "1175526534",
    "input_formatted": "[8,8,9,10,9]",
    "input": "[8,8,9,10,9]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "import java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\nclass Solution {\n    public int minimumSeconds(List<Integer> nums) {\n        Map<Integer, Integer> countMap = new HashMap<>();\n        for (int num : nums) {\n            countMap.put(num, countMap.getOrDefault(num, 0) + 1);\n        }\n        \n        int maxFrequency = countMap.values().stream().max(Integer::compare).orElse(0);\n        return (nums.size() - maxFrequency + 1) / 2;\n    }\n}"
}