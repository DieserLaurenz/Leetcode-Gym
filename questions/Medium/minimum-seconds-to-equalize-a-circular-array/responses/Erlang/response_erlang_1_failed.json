{
    "status_code": 11,
    "lang": "erlang",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 222464000,
    "question_id": "2920",
    "elapsed_time": 2005,
    "compare_result
    "code_output": "2",
    "std_output": "",
    "last_testcase": "[11,4,10]",
    "expected_output": "1",
    "task_finish_time": 1707962199621,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 51,
    "total_testcases": 579,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Erlang",
    "submission_id": "1175601334",
    "input_formatted": "[11,4,10]",
    "input": "[11,4,10]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "-spec minimum_seconds(Nums :: [integer()]) -> integer().\nminimum_seconds(Nums) ->\n  Sorted = lists:usort(Nums),\n  minimum_seconds_helper(Sorted, 0).\n\nminimum_seconds_helper([_], Count) ->\n  Count;\nminimum_seconds_helper([First, Second | Rest], Count) ->\n  if\n    First =:= Second -> minimum_seconds_helper([Second | Rest], Count);\n    true -> minimum_seconds_helper([Second | Rest], Count + 1)\n  end."
}