{
    "status_code": 11,
    "lang": "ruby",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 228288000,
    "question_id": "2920",
    "elapsed_time": 238,
    "compare_result
    "code_output": "3",
    "std_output": "",
    "last_testcase": "[1,2,1,2]",
    "expected_output": "1",
    "task_finish_time": 1707961641172,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 100,
    "total_testcases": 579,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Ruby",
    "submission_id": "1175596991",
    "input_formatted": "[1,2,1,2]",
    "input": "[1,2,1,2]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "# @param {Integer[]} nums\n# @return {Integer}\ndef minimum_seconds(nums)\n  return 0 if nums.uniq.length <= 1\n\n  max_streak = current_streak = 1\n  n = nums.length\n  nums.each_with_index do |num, i|\n    next_num = nums[(i + 1) % n]\n    if num == next_num\n      current_streak += 1\n      max_streak = [max_streak, current_streak].max\n    else\n      current_streak = 1\n    end\n  end\n\n  # Check for circular streak\n  if nums[0] == nums[-1]\n    i = 0\n    while nums[i] == nums[-1]\n      current_streak += 1\n      i += 1\n    end\n    max_streak = [max_streak, current_streak].max\n  end\n\n  (Math.log(n.to_f / max_streak, 2) + 1).ceil\nend"
}