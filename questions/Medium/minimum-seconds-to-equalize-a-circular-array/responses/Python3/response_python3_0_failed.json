{
    "status_code": 11,
    "lang": "python3",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 35864000,
    "question_id": "2920",
    "elapsed_time": 672,
    "compare_result
    "code_output": "3",
    "std_output": "",
    "last_testcase": "[1,2,1,2]",
    "expected_output": "1",
    "task_finish_time": 1708838393071,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 41,
    "total_testcases": 579,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python3",
    "submission_id": "1185471423",
    "input_formatted": "[1,2,1,2]",
    "input": "[1,2,1,2]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution:\n    def minimumSeconds(self, nums: List[int]) -> int:\n        if len(set(nums)) == 1: return 0\n\n        def gcd(a, b):\n            while b:\n                a, b = b, a % b\n            return a\n\n        n = len(nums)\n        nums = nums + nums\n        l, r = 0, 0\n        ans = float('inf')\n        \n        while r < 2 * n:\n            while r < 2 * n and nums[r] != nums[l]:\n                r += 1\n            if r < 2 * n:\n                ans = min(ans, gcd(n, r - l + 1))\n            l = r = r + 1\n        \n        return (n // ans) - 1"
}