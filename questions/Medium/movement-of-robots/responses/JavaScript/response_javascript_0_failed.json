{
    "status_code": 11,
    "lang": "javascript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 70852000,
    "question_id": "2787",
    "elapsed_time": 4013,
    "compare_result
    "code_output": "5",
    "std_output": "",
    "last_testcase": "[-2,0,2]\n\"RLL\"\n3",
    "expected_output": "8",
    "task_finish_time": 1707992834139,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 259,
    "total_testcases": 2567,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "JavaScript",
    "submission_id": "1175927490",
    "input_formatted": "[-2,0,2], \"RLL\", 3",
    "input": "[-2,0,2]\n\"RLL\"\n3",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "/**\n * @param {number[]} nums\n * @param {string} s\n * @param {number} d\n * @return {number}\n */\nvar sumDistance = function(nums, s, d) {\n    nums = nums.map((num, i) => ({pos: num, dir: s[i] === 'R' ? 1 : -1}));\n    nums.sort((a, b) => a.pos - b.pos);\n    let sum = 0;\n    const mod = 1e9 + 7;\n    for (let i = 0; i < nums.length; ++i) {\n        for (let j = i + 1; j < nums.length; ++j) {\n            let dist = nums[j].pos - nums[i].pos;\n            let diffDir = nums[i].dir !== nums[j].dir;\n            if (diffDir) {\n                let collisionTime = Math.floor(dist / 2);\n                if (collisionTime < d) {\n                    dist = d - collisionTime;\n                } else {\n                    dist = d + collisionTime;\n                }\n            } else {\n                dist += d * (nums[j].dir - nums[i].dir);\n            }\n            sum = (sum + Math.abs(dist)) % mod;\n        }\n    }\n    return sum;\n};"
}