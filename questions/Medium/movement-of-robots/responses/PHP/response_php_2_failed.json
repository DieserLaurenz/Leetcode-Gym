{
    "status_code": 11,
    "lang": "php",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 82664000,
    "question_id": "2787",
    "elapsed_time": 1435,
    "compare_result
    "code_output": "11",
    "std_output": "",
    "last_testcase": "[-2,0,2]\n\"RLL\"\n3",
    "expected_output": "8",
    "task_finish_time": 1707993230024,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 31,
    "total_testcases": 2567,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "PHP",
    "submission_id": "1175931491",
    "input_formatted": "[-2,0,2], \"RLL\", 3",
    "input": "[-2,0,2]\n\"RLL\"\n3",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @param String $s\n     * @param Integer $d\n     * @return Integer\n     */\n    function sumDistance($nums, $s, $d) {\n        $mod = 1000000007;\n        $n = count($nums);\n        $events = [];\n\n        for ($i = 0; $i < $n; ++$i) {\n            if ($s[$i] == 'L') {\n                $events[] = [$nums[$i] - $d, 1]; // Starting point, adding robot\n                $events[] = [$nums[$i], -2]; // Collision point, removing robot\n            } else { // 'R'\n                $events[] = [$nums[$i], 2]; // Collision point, adding robot\n                $events[] = [$nums[$i] + $d, -1]; // Ending point, removing robot\n            }\n        }\n\n        usort($events, function ($a, $b) {\n            return $a[0] <=> $b[0];\n        });\n\n        $sum = $count = 0;\n        $last = null;\n        foreach ($events as $event) {\n            if ($last !== null) {\n                $sum = ($sum + ($event[0] - $last) * $count) % $mod;\n            }\n            $count += $event[1];\n            $last = $event[0];\n        }\n\n        return $sum;\n    }\n}"
}