{
    "status_code": 11,
    "lang": "csharp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 69132000,
    "question_id": "2787",
    "elapsed_time": 4015,
    "compare_result
    "code_output": "14",
    "std_output": "",
    "last_testcase": "[-2,0,2]\n\"RLL\"\n3",
    "expected_output": "8",
    "task_finish_time": 1707992686877,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 261,
    "total_testcases": 2567,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C#",
    "submission_id": "1175925903",
    "input_formatted": "[-2,0,2], \"RLL\", 3",
    "input": "[-2,0,2]\n\"RLL\"\n3",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "public class Solution {\n    public int SumDistance(int[] nums, string s, int d) {\n        long mod = 1000000007;\n        long sum = 0;\n        for (int i = 0; i < nums.Length; i++) {\n            for (int j = i + 1; j < nums.Length; j++) {\n                long dist = Math.Abs((long)nums[i] - nums[j]);\n                if (s[i] != s[j]) {\n                    // Robots moving towards each other\n                    long timeToCollide = dist / 2;\n                    if (d >= timeToCollide) {\n                        sum += (2 * d - dist) % mod;\n                    } else {\n                        sum += dist % mod;\n                    }\n                } else {\n                    // Robots moving in the same direction\n                    sum += (dist + 2L * d) % mod;\n                }\n                sum %= mod;\n            }\n        }\n        return (int)sum;\n    }\n}"
}