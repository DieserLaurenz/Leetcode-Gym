{
    "status_code": 11,
    "lang": "rust",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 3468000,
    "question_id": "2787",
    "elapsed_time": 2064,
    "compare_result
    "code_output": "0",
    "std_output": "",
    "last_testcase": "[-2,0,2]\n\"RLL\"\n3",
    "expected_output": "8",
    "task_finish_time": 1708002675079,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 2,
    "total_testcases": 2567,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Rust",
    "submission_id": "1176024775",
    "input_formatted": "[-2,0,2], \"RLL\", 3",
    "input": "[-2,0,2]\n\"RLL\"\n3",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "impl Solution {\n    pub fn sum_distance(nums: Vec<i32>, s: String, d: i32) -> i32 {\n        let mut lefts = vec![];\n        let mut rights = vec![];\n        let mod_val = 1_000_000_007;\n\n        for (i, &num) in nums.iter().enumerate() {\n            if s.as_bytes()[i] as char == 'L' {\n                lefts.push(num);\n            } else {\n                rights.push(num);\n            }\n        }\n\n        lefts.sort_unstable();\n        rights.sort_unstable();\n\n        let mut total_distance = 0;\n\n        // Calculate distance for left-moving robots\n        for &left in &lefts {\n            for &right in &rights {\n                if right < left {\n                    total_distance = (total_distance + left - right - 2 * d) % mod_val;\n                } else {\n                    break;\n                }\n            }\n        }\n\n        // Calculate distance for right-moving robots\n        for &right in &rights {\n            for &left in &lefts {\n                if right > left {\n                    total_distance = (total_distance + right - left) % mod_val;\n                } else {\n                    total_distance = (total_distance + right - left + 2 * d) % mod_val;\n                }\n            }\n        }\n\n        // Since each pair is counted twice, halve the total distance\n        total_distance = if total_distance < 0 { (total_distance + mod_val) % mod_val } else { total_distance };\n        ((total_distance as i64 * (nums.len() as i64 - 1) / 2) % mod_val as i64) as i32\n    }\n}"
}