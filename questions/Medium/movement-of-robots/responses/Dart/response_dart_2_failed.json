{
    "status_code": 11,
    "lang": "dart",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 155848000,
    "question_id": "2787",
    "elapsed_time": 5033,
    "compare_result
    "code_output": "15",
    "std_output": "",
    "last_testcase": "[-2,0,2]\n\"RLL\"\n3",
    "expected_output": "8",
    "task_finish_time": 1707993682314,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 27,
    "total_testcases": 2567,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Dart",
    "submission_id": "1175936073",
    "input_formatted": "[-2,0,2], \"RLL\", 3",
    "input": "[-2,0,2]\n\"RLL\"\n3",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n  int sumDistance(List<int> nums, String s, int d) {\n    final mod = 1000000007;\n    List<int> distances = List.filled(nums.length, 0);\n    for (int i = 0; i < nums.length; i++) {\n      if (s[i] == 'R') {\n        for (int j = i + 1; j < nums.length; j++) {\n          if (s[j] == 'L') {\n            int dist = (nums[j] - nums[i]);\n            if (dist <= 2 * d) {\n              distances[i] += (d - dist ~/ 2);\n              distances[j] += (d - dist ~/ 2);\n            } else {\n              distances[i] += d;\n              distances[j] += d;\n            }\n          } else {\n            distances[i] += d;\n          }\n        }\n      } else {\n        for (int j = 0; j < i; j++) {\n          if (s[j] == 'R') {\n            int dist = (nums[i] - nums[j]);\n            if (dist <= 2 * d) {\n              distances[i] += (d - dist ~/ 2);\n              distances[j] += (d - dist ~/ 2);\n            } else {\n              distances[i] += d;\n              distances[j] += d;\n            }\n          } else {\n            distances[i] += d;\n          }\n        }\n      }\n    }\n    int sum = distances.reduce((a, b) => (a + b) % mod);\n    return sum;\n  }\n}"
}