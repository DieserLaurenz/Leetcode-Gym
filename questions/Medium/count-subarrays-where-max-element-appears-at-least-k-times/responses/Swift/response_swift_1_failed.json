{
    "status_code": 11,
    "lang": "swift",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 19360000,
    "question_id": "3213",
    "elapsed_time": 494,
    "compare_result": "010000000000000000000010000000000001000000000000000000000000000100000000000000000000000000001000010010010000000010000000000000000010000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000001000000000000000000000000000010000000000000000100000000000000010001010100000000000000001001000000010000000001000000000000001000000000000000000000000000000000100000000000000010000000000000000001001000010000000000000000000010000000000000000010000000011111000110000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000",
    "code_output": "3",
    "std_output": "",
    "last_testcase": "[1,3,2,3,3]\n2",
    "expected_output": "6",
    "task_finish_time": 1707106762894,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 38,
    "total_testcases": 633,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Swift",
    "submission_id": "1166431210",
    "input_formatted": "[1,3,2,3,3], 2",
    "input": "[1,3,2,3,3]\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    func countSubarrays(_ nums: [Int], _ k: Int) -> Int {\n        let maxNum = nums.max() ?? 0\n        var total = 0, left = 0, right = 0, count = 0\n        \n        while right < nums.count {\n            if nums[right] == maxNum {\n                count += 1\n            }\n            while count == k && left <= right {\n                if nums[left] == maxNum {\n                    total += nums.count - right\n                    count -= 1\n                }\n                left += 1\n            }\n            right += 1\n        }\n        return total\n    }\n}"
}