{
    "status_code": 10,
    "lang": "swift",
    "run_success": true,
    "status_runtime": "540 ms",
    "memory": 21980000,
    "question_id": "3213",
    "elapsed_time": 574,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1707106791646,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 633,
    "total_testcases": 633,
    "runtime_percentile": 100,
    "status_memory": "22 MB",
    "memory_percentile": 10.714200000000005,
    "pretty_lang": "Swift",
    "submission_id": "1166431537",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\n    func countSubarrays(_ nums: [Int], _ k: Int) -> Int {\n        var result = 0\n        var left = 0\n        var freq = [Int: Int]()\n        let maxElement = nums.max() ?? 0\n\n        for right in 0..<nums.count {\n            freq[nums[right], default: 0] += 1\n            \n            while freq[maxElement, default: 0] >= k {\n                result += nums.count - right\n                freq[nums[left], default: 0] -= 1\n                left += 1\n            }\n        }\n        return result\n    }\n}"
}