{
    "status_code": 10,
    "lang": "kotlin",
    "run_success": true,
    "status_runtime": "697 ms",
    "memory": 72840000,
    "question_id": "3213",
    "elapsed_time": 887,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1707106917519,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 633,
    "total_testcases": 633,
    "runtime_percentile": 40.42459999999996,
    "status_memory": "72.8 MB",
    "memory_percentile": 12.764699999999944,
    "pretty_lang": "Kotlin",
    "submission_id": "1166432894",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\n    fun countSubarrays(nums: IntArray, k: Int): Long {\n        val maxVal = nums.maxOrNull() ?: return 0\n        var totalSubarrays = 0L\n        var start = 0\n        var end = 0\n        var count = 0\n\n        while (end < nums.size) {\n            if (nums[end] == maxVal) count++\n            while (count >= k) {\n                totalSubarrays += nums.size - end\n                if (nums[start] == maxVal) count--\n                start++\n            }\n            end++\n        }\n\n        return totalSubarrays\n    }\n}"
}