{
    "status_code": 11,
    "lang": "rust",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 3300000,
    "question_id": "3213",
    "elapsed_time": 32,
    "compare_result
    "code_output": "12",
    "std_output": "",
    "last_testcase": "[1,3,2,3,3]\n2",
    "expected_output": "6",
    "task_finish_time": 1707117797839,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 19,
    "total_testcases": 633,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Rust",
    "submission_id": "1166565053",
    "input_formatted": "[1,3,2,3,3], 2",
    "input": "[1,3,2,3,3]\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "impl Solution {\n    pub fn count_subarrays(nums: Vec<i32>, k: i32) -> i64 {\n        let mut result = 0i64;\n        let mut left = 0;\n        let mut count = 0;\n        let max_num = *nums.iter().max().unwrap();\n        \n        for right in 0..nums.len() {\n            if nums[right] == max_num {\n                count += 1;\n            }\n            while count >= k {\n                result += (right - left + 1) as i64;\n                if nums[left] == max_num {\n                    count -= 1;\n                }\n                left += 1;\n            }\n        }\n        \n        result\n    }\n}"
}