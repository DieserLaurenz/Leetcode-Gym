{
    "status_code": 11,
    "lang": "c",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 8976000,
    "question_id": "3213",
    "elapsed_time": 3026,
    "compare_result
    "code_output": "21",
    "std_output": "",
    "last_testcase": "[1,3,2,3,3]\n2",
    "expected_output": "6",
    "task_finish_time": 1707106038407,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 9,
    "total_testcases": 633,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C",
    "submission_id": "1166423101",
    "input_formatted": "[1,3,2,3,3], 2",
    "input": "[1,3,2,3,3]\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "long long countSubarrays(int* nums, int numsSize, int k) {\n    long long ans = 0;\n    for (int i = 0; i < numsSize; ++i) {\n        int maxVal = nums[i];\n        int freq = 0;\n        for (int j = i; j < numsSize; ++j) {\n            if (nums[j] > maxVal) {\n                maxVal = nums[j];\n                freq = 1;\n            } else if (nums[j] == maxVal) {\n                ++freq;\n            }\n            if (freq >= k) ans += (j - i + 1);\n        }\n    }\n    return ans;\n}"
}