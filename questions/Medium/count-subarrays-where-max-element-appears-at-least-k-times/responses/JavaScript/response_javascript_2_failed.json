{
    "status_code": 11,
    "lang": "javascript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 61820000,
    "question_id": "3213",
    "elapsed_time": 4026,
    "compare_result
    "code_output": "3",
    "std_output": "",
    "last_testcase": "[1,3,2,3,3]\n2",
    "expected_output": "6",
    "task_finish_time": 1707106439666,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 38,
    "total_testcases": 633,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "JavaScript",
    "submission_id": "1166427506",
    "input_formatted": "[1,3,2,3,3], 2",
    "input": "[1,3,2,3,3]\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "/**\n * @param {number[]} nums\n * @param {number} k\n * @return {number}\n */\nvar countSubarrays = function(nums, k) {\n    const max = Math.max(...nums);\n    let count = 0;\n\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] === max) {\n            let maxCount = 0;\n            for (let j = i; j < nums.length; j++) {\n                if (nums[j] === max) {\n                    maxCount++;\n                }\n                if (maxCount === k) {\n                    count += nums.length - j;\n                    break;\n                }\n            }\n        }\n    }\n\n    return count;\n};"
}