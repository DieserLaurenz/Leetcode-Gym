{
    "status_code": 11,
    "lang": "javascript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 62524000,
    "question_id": "3213",
    "elapsed_time": 120,
    "compare_result
    "code_output": "12",
    "std_output": "",
    "last_testcase": "[1,3,2,3,3]\n2",
    "expected_output": "6",
    "task_finish_time": 1707106377845,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 19,
    "total_testcases": 633,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "JavaScript",
    "submission_id": "1166426877",
    "input_formatted": "[1,3,2,3,3], 2",
    "input": "[1,3,2,3,3]\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "/**\n * @param {number[]} nums\n * @param {number} k\n * @return {number}\n */\nvar countSubarrays = function(nums, k) {\n    let maxVal = Math.max(...nums);\n    let count = 0, freq = 0, left = 0;\n    for (let right = 0; right < nums.length; right++) {\n        if (nums[right] === maxVal) {\n            freq++;\n        }\n        while (freq >= k) {\n            count += right - left + 1;\n            if (nums[left] === maxVal) {\n                freq--;\n            }\n            left++;\n        }\n    }\n    return count;\n};"
}