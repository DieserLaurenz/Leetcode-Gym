{
    "status_code": 11,
    "lang": "python",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 23344000,
    "question_id": "3213",
    "elapsed_time": 11010,
    "compare_result
    "code_output": "3",
    "std_output": "",
    "last_testcase": "[1,3,2,3,3]\n2",
    "expected_output": "6",
    "task_finish_time": 1708754707028,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 25,
    "total_testcases": 633,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python",
    "submission_id": "1184563703",
    "input_formatted": "[1,3,2,3,3], 2",
    "input": "[1,3,2,3,3]\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution(object):\n    def countSubarrays(self, nums, k):\n        \"\"\"\n        :type nums: List[int]\n        :type k: int\n        :rtype: int\n        \"\"\"\n        max_num = max(nums)\n        count, total, n = 0, 0, len(nums)\n        for i in range(n):\n            if nums[i] == max_num:\n                count += 1\n            if count >= k:\n                left, right = i - 1, i + 1\n                while left >= 0 and nums[left] != max_num:\n                    left -= 1\n                while right < n and nums[right] != max_num:\n                    right += 1\n                total += (i - left) * (right - i)\n        return total"
}