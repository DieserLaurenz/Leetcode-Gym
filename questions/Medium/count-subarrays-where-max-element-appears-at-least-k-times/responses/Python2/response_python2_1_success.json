{
    "status_code": 10,
    "lang": "python",
    "run_success": true,
    "status_runtime": "913 ms",
    "memory": 23248000,
    "question_id": "3213",
    "elapsed_time": 945,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1708754732054,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 633,
    "total_testcases": 633,
    "runtime_percentile": 82.5,
    "status_memory": "23.2 MB",
    "memory_percentile": 92.5,
    "pretty_lang": "Python",
    "submission_id": "1184564092",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution(object):\n    def countSubarrays(self, nums, k):\n        \"\"\"\n        :type nums: List[int]\n        :type k: int\n        :rtype: int\n        \"\"\"\n        def atLeastKTimes(max_num):\n            count, ans, j = 0, 0, 0\n            for i in range(len(nums)):\n                if nums[i] == max_num:\n                    count += 1\n                while count >= k:\n                    if nums[j] == max_num:\n                        count -= 1\n                    j += 1\n                ans += j\n            return ans\n\n        max_num = max(nums)\n        return atLeastKTimes(max_num)"
}