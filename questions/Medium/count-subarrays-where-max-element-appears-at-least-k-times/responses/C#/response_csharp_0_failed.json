{
    "status_code": 11,
    "lang": "csharp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 53232000,
    "question_id": "3213",
    "elapsed_time": 4017,
    "compare_result": "010000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000001000010000000000000000000010000001000000000000000000000000000000000000000010000000000000100000000100000000000000000000000000000000000000000000000000000010000000100000000000000000000000000000001000000000000000000000000000000000000000000000000100000000000000000000100000000000001001000000000000000000000000000000000000000000010000000011110000110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "code_output": "8",
    "std_output": "",
    "last_testcase": "[1,3,2,3,3]\n2",
    "expected_output": "6",
    "task_finish_time": 1707106262028,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 24,
    "total_testcases": 633,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C#",
    "submission_id": "1166425575",
    "input_formatted": "[1,3,2,3,3], 2",
    "input": "[1,3,2,3,3]\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "public class Solution {\n    public long CountSubarrays(int[] nums, int k) {\n        long count = 0;\n        int n = nums.Length;\n        for (int i = 0; i < n; i++) {\n            int maxFreq = 0;\n            int maxElement = nums[i];\n            for (int j = i; j < n; j++) {\n                if (nums[j] > maxElement) {\n                    maxElement = nums[j];\n                    maxFreq = 1;\n                } else if (nums[j] == maxElement) {\n                    maxFreq++;\n                }\n                if (maxFreq >= k) count += (n - j);\n            }\n        }\n        return count;\n    }\n}"
}