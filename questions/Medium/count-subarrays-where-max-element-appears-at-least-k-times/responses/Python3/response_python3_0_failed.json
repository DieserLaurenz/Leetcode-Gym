{
    "status_code": 11,
    "lang": "python3",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 17584000,
    "question_id": "3213",
    "elapsed_time": 11011,
    "compare_result
    "code_output": "0",
    "std_output": "",
    "last_testcase": "[1,3,2,3,3]\n2",
    "expected_output": "6",
    "task_finish_time": 1708754799771,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 18,
    "total_testcases": 633,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python3",
    "submission_id": "1184564761",
    "input_formatted": "[1,3,2,3,3], 2",
    "input": "[1,3,2,3,3]\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution:\n    def countSubarrays(self, nums: List[int], k: int) -> int:\n        max_num = max(nums)\n        max_indices = [i for i, num in enumerate(nums) if num == max_num]\n        if len(max_indices) < k:\n            return 0\n        \n        count = 0\n        for i in range(len(nums)):\n            for j in range(i, len(nums)):\n                if nums[j] < max_num:\n                    continue\n                if max_indices.count(j) >= k:\n                    count += 1\n        return count"
}