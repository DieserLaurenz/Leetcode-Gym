{
    "status_code": 11,
    "lang": "cpp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 30092000,
    "question_id": "2854",
    "elapsed_time": 28,
    "compare_result
    "code_output": "3",
    "std_output": "",
    "last_testcase": "[\"a\",\"ca\"]",
    "expected_output": "2",
    "task_finish_time": 1707137372782,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 183,
    "total_testcases": 1332,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C++",
    "submission_id": "1166771853",
    "input_formatted": "[\"a\",\"ca\"]",
    "input": "[\"a\",\"ca\"]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\npublic:\n    int minimizeConcatenatedLength(vector<string>& words) {\n        sort(words.begin(), words.end(), [](const string& a, const string& b) {\n            return a.back() < b.front();\n        });\n        string result = words[0];\n        for (int i = 1; i < words.size(); ++i) {\n            if (result.back() == words[i].front()) {\n                result += words[i].substr(1);\n            } else {\n                result += words[i];\n            }\n        }\n        return result.length();\n    }\n};"
}