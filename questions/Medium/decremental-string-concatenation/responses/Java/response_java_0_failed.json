{
    "status_code": 11,
    "lang": "java",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 50672000,
    "display_runtime": "3711",
    "question_id": "2854",
    "elapsed_time": 3957,
    "compare_result
    "code_output": "3",
    "std_output": "",
    "last_testcase": "[\"a\",\"ca\"]",
    "expected_output": "2",
    "task_finish_time": 1707137532699,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 497,
    "total_testcases": 1332,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Java",
    "submission_id": "1166773668",
    "input_formatted": "[\"a\",\"ca\"]",
    "input": "[\"a\",\"ca\"]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    public int minimizeConcatenatedLength(String[] words) {\n        int n = words.length;\n        int[][] dp = new int[n][n];\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < n; j++) {\n                if (i == j) {\n                    dp[i][j] = words[i].length();\n                } else {\n                    int len = words[i].length() + words[j].length();\n                    if (words[i].charAt(words[i].length() - 1) == words[j].charAt(0)) len--;\n                    dp[i][j] = len;\n                }\n            }\n        }\n\n        for (int len = 2; len <= n; len++) {\n            for (int i = 0; i <= n - len; i++) {\n                int j = i + len - 1;\n                dp[i][j] = Integer.MAX_VALUE;\n                for (int k = i; k < j; k++) {\n                    int cost = dp[i][k] + dp[k + 1][j] - (words[k].charAt(words[k].length() - 1) == words[j].charAt(0) ? 1 : 0);\n                    dp[i][j] = Math.min(dp[i][j], cost);\n                }\n            }\n        }\n\n        return dp[0][n - 1];\n    }\n}"
}