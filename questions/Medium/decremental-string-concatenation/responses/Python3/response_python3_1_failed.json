{
    "status_code": 11,
    "lang": "python3",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 46456000,
    "question_id": "2854",
    "elapsed_time": 11011,
    "compare_result
    "code_output": "7",
    "std_output": "",
    "last_testcase": "[\"aaa\",\"c\",\"aba\"]",
    "expected_output": "6",
    "task_finish_time": 1708755360985,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 226,
    "total_testcases": 1332,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python3",
    "submission_id": "1184570941",
    "input_formatted": "[\"aaa\",\"c\",\"aba\"]",
    "input": "[\"aaa\",\"c\",\"aba\"]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "from typing import List\nfrom functools import lru_cache\n\nclass Solution:\n    def minimizeConcatenatedLength(self, words: List[str]) -> int:\n        @lru_cache(None)\n        def dp(i, j):\n            if i == j:\n                return len(words[i])\n            ans = float('inf')\n            for k in range(i, j):\n                left, right = dp(i, k), dp(k + 1, j)\n                if words[k][-1] == words[k + 1][0]:\n                    ans = min(ans, left + right - 1)\n                else:\n                    ans = min(ans, left + right)\n            return ans\n\n        return dp(0, len(words) - 1)"
}