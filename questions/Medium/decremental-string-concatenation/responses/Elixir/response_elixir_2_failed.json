{
    "status_code": 15,
    "lang": "elixir",
    "run_success": false,
    "runtime_error": "Line 5: ** (BadFunctionError) expected a function, got: []",
    "full_runtime_error": "Line 5: ** (BadFunctionError) expected a function, got: []\n    (elixir 1.15.7) lib/enum.ex:2510: Enum.\"-reduce/3-lists^foldl/2-0-\"/3\n    (elixir 1.15.7) lib/enum.ex:2510: Enum.\"-reduce/3-lists^foldl/2-0-\"/3\n    solution.ex:5: Solution.minimize_concatenated_length/1\n    solution.ex:35: Driver.consume_test_cases/2\n    solution.ex:23: Driver.start/0\n    nofile:1: (file)\n    (stdlib 5.1.1) erl_eval.erl:750: :erl_eval.do_apply/7",
    "status_runtime": "N/A",
    "memory": 72808000,
    "question_id": "2854",
    "elapsed_time": 434,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "[\"aa\",\"ab\",\"bc\"]",
    "expected_output": "4",
    "task_finish_time": 1707159955801,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 1332,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Elixir",
    "submission_id": "1167112206",
    "status_msg": "Runtime Error",
    "state": "SUCCESS",
    "code": "defmodule Solution do\n  @spec minimize_concatenated_length(words :: [String.t]) :: integer\n  def minimize_concatenated_length(words) do\n    words\n    |> Enum.reduce(fn word, acc -> \n      case acc do\n        [] -> [word]\n        [h | _] = acc ->\n          if String.ends_with?(h, String.first(word)) do\n            [String.trim_trailing(h, String.last(h)) <> word | tl(acc)]\n          else\n            [word | acc]\n          end\n      end\n    end, [])\n    |> Enum.reduce(\"\", &(&1 <> &2))\n    |> String.length()\n  end\nend"
}