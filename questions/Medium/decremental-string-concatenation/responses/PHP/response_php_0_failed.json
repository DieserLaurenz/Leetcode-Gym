{
    "status_code": 11,
    "lang": "php",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 38040000,
    "question_id": "2854",
    "elapsed_time": 5319,
    "compare_result
    "code_output": "4",
    "std_output": "",
    "last_testcase": "[\"abc\",\"cb\",\"c\"]",
    "expected_output": "5",
    "task_finish_time": 1707148212925,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 467,
    "total_testcases": 1332,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "PHP",
    "submission_id": "1166918405",
    "input_formatted": "[\"abc\",\"cb\",\"c\"]",
    "input": "[\"abc\",\"cb\",\"c\"]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n\n    /**\n     * @param String[] $words\n     * @return Integer\n     */\n    function minimizeConcatenatedLength($words) {\n        $n = count($words);\n        $dp = array_fill(0, 1 << $n, PHP_INT_MAX);\n        $dp[0] = 0;\n        $lastChar = array_fill(0, 1 << $n, \"\");\n        for ($mask = 0; $mask < (1 << $n); $mask++) {\n            for ($i = 0; $i < $n; $i++) {\n                if (($mask & (1 << $i)) == 0) {\n                    $nextMask = $mask | (1 << $i);\n                    $newLastChar = $words[$i][strlen($words[$i]) - 1];\n                    $lenToAdd = strlen($words[$i]);\n                    if ($lastChar[$mask] == $words[$i][0]) {\n                        $lenToAdd--;\n                    }\n                    if ($dp[$nextMask] > $dp[$mask] + $lenToAdd) {\n                        $dp[$nextMask] = $dp[$mask] + $lenToAdd;\n                        $lastChar[$nextMask] = $newLastChar;\n                    }\n                }\n            }\n        }\n        return $dp[(1 << $n) - 1];\n    }\n}"
}