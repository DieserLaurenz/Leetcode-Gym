{
    "status_code": 11,
    "lang": "c",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 7316000,
    "question_id": "2854",
    "elapsed_time": 23,
    "compare_result": "110111110011110111111111111101110111111001111111001110011011111111011111111111111011111111111110111111001110001100000100011101111000110111110110111101100000100011111110010111110001001010000111111111001010010001111001100001100100001010000110011100000011010100011001110001010010001010000100011001000100000000010100000100010011100010010000000100000000000010000000110000010001000010000001100001000000000000010001000000001000000001000100000000000000000000100000000110010000000000000000000100000000000000011000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000100000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111111010110100111011111111111111111111111111000000000000000000000000000000010000000010000000000000000100000000000000000001000001",
    "code_output": "7",
    "std_output": "",
    "last_testcase": "[\"aaa\",\"c\",\"aba\"]",
    "expected_output": "6",
    "task_finish_time": 1707137671082,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 258,
    "total_testcases": 1332,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C",
    "submission_id": "1166775276",
    "input_formatted": "[\"aaa\",\"c\",\"aba\"]",
    "input": "[\"aaa\",\"c\",\"aba\"]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "int minimizeConcatenatedLength(char ** words, int wordsSize){\n    int totalLength = 0, savings = 0;\n    for(int i = 0; i < wordsSize; i++) {\n        totalLength += strlen(words[i]); // Sum up the total length of all words\n    }\n    for(int i = 1; i < wordsSize; i++) {\n        if(words[i-1][strlen(words[i-1]) - 1] == words[i][0]) savings++; // Count potential savings\n    }\n    return totalLength - savings; // Subtract savings from total length to minimize\n}"
}