{
    "status_code": 11,
    "lang": "racket",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 126548000,
    "question_id": "2854",
    "elapsed_time": 369,
    "compare_result
    "code_output": "7",
    "std_output": "",
    "last_testcase": "[\"aaa\",\"c\",\"aba\"]",
    "expected_output": "6",
    "task_finish_time": 1707159616509,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 258,
    "total_testcases": 1332,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Racket",
    "submission_id": "1167107567",
    "input_formatted": "[\"aaa\",\"c\",\"aba\"]",
    "input": "[\"aaa\",\"c\",\"aba\"]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "(define/contract (minimize-concatenated-length words)\n  (-> (listof string?) exact-integer?)\n  \n  (define (join x y)\n    (if (and (not (string=? x \"\")) (not (string=? y \"\"))\n             (char=? (string-ref x (sub1 (string-length x))) (string-ref y 0)))\n        (string-append (substring x 0 (sub1 (string-length x))) y)\n        (string-append x y)))\n  \n  (define (solve words)\n    (let loop ((words words) (acc \"\"))\n      (if (null? words)\n          (string-length acc)\n          (let ((word (car words)))\n            (loop (cdr words)\n                  (join (join acc word) \"\"))))))\n  \n  (solve words))"
}