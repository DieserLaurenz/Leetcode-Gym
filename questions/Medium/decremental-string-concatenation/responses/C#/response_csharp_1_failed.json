{
    "status_code": 11,
    "lang": "csharp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 58400000,
    "question_id": "2854",
    "elapsed_time": 3579,
    "compare_result
    "code_output": "2",
    "std_output": "",
    "last_testcase": "[\"aa\",\"ab\",\"bc\"]",
    "expected_output": "4",
    "task_finish_time": 1707147774008,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 27,
    "total_testcases": 1332,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C#",
    "submission_id": "1166911988",
    "input_formatted": "[\"aa\",\"ab\",\"bc\"]",
    "input": "[\"aa\",\"ab\",\"bc\"]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "public class Solution {\n    public int MinimizeConcatenatedLength(string[] words) {\n        int n = words.Length;\n        var dp = new int[n, n];\n\n        // Initialize dp array\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < n; j++) {\n                dp[i, j] = int.MaxValue;\n            }\n        }\n\n        for (int i = 0; i < n; i++) {\n            dp[i, i] = words[i].Length;\n        }\n\n        for (int len = 2; len <= n; len++) {\n            for (int i = 0; i <= n - len; i++) {\n                int j = i + len - 1;\n                for (int k = i; k < j; k++) {\n                    int cost = dp[i, k] + dp[k + 1, j];\n                    if (words[k].EndsWith(words[j][0])) cost--;\n                    if (words[i][words[i].Length - 1] == words[k + 1][0]) cost--;\n                    dp[i, j] = Math.Min(dp[i, j], cost);\n                }\n            }\n        }\n\n        int result = int.MaxValue;\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < n; j++) {\n                result = Math.Min(result, dp[i, j]);\n            }\n        }\n        return result;\n    }\n}"
}