{
    "status_code": 15,
    "lang": "kotlin",
    "run_success": false,
    "runtime_error": "Line 14: Exception in thread \"main\" java.lang.ArrayIndexOutOfBoundsException: 3",
    "full_runtime_error": "Line 14: Exception in thread \"main\" java.lang.ArrayIndexOutOfBoundsException: 3",
    "status_runtime": "N/A",
    "memory": 28936000,
    "question_id": "2854",
    "elapsed_time": 281,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "[\"aa\",\"ab\",\"bc\"]",
    "expected_output": "4",
    "task_finish_time": 1707148547873,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 1332,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Kotlin",
    "submission_id": "1166923442",
    "status_msg": "Runtime Error",
    "state": "SUCCESS",
    "code": "class Solution {\n    fun minimizeConcatenatedLength(words: Array<String>): Int {\n        val n = words.size\n        val dp = Array(n) { IntArray(n) }\n        for (i in words.indices) {\n            for (j in words.indices) {\n                dp[i][j] = if (words[i].last() == words[j].first()) words[i].length + words[j].length - 1\n                           else words[i].length + words[j].length\n            }\n        }\n        val memo = Array(n) { IntArray(1 shl n) { -1 } }\n        fun dfs(pos: Int, mask: Int): Int {\n            if (mask == (1 shl n) - 1) return 0\n            if (memo[pos][mask] != -1) return memo[pos][mask]\n            var ans = Int.MAX_VALUE\n            for (next in 0 until n) {\n                if (mask and (1 shl next) == 0) {\n                    val nextMask = mask or (1 shl next)\n                    val cost = if (pos == n) 0 else dp[pos][next]\n                    ans = minOf(ans, cost + dfs(next, nextMask))\n                }\n            }\n            memo[pos][mask] = ans\n            return ans\n        }\n        return dfs(n, 0)\n    }\n}"
}