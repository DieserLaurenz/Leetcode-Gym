{
    "status_code": 11,
    "lang": "javascript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 58940000,
    "question_id": "2854",
    "elapsed_time": 200,
    "compare_result
    "code_output": "2",
    "std_output": "",
    "last_testcase": "[\"aa\",\"ab\",\"bc\"]",
    "expected_output": "4",
    "task_finish_time": 1707147873832,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 48,
    "total_testcases": 1332,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "JavaScript",
    "submission_id": "1166913469",
    "input_formatted": "[\"aa\",\"ab\",\"bc\"]",
    "input": "[\"aa\",\"ab\",\"bc\"]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "/**\n * @param {string[]} words\n * @return {number}\n */\nvar minimizeConcatenatedLength = function(words) {\n    function join(x, y) {\n        if (x[x.length - 1] === y[0]) {\n            return x + y.substring(1);\n        } else {\n            return x + y;\n        }\n    }\n\n    let dp = new Array(words.length).fill(Infinity);\n    dp[0] = words[0].length;\n\n    for (let i = 1; i < words.length; i++) {\n        for (let j = 0; j < i; j++) {\n            dp[i] = Math.min(dp[i], dp[j] + join(words[j], words[i]).length - words[j].length, dp[j] + join(words[i], words[j]).length - words[j].length);\n        }\n    }\n\n    return Math.min(...dp);\n};"
}