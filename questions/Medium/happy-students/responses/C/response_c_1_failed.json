{
    "status_code": 11,
    "lang": "c",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 5556000,
    "question_id": "3104",
    "elapsed_time": 23,
    "compare_result
    "code_output": "2",
    "std_output": "",
    "last_testcase": "[6,0,3,3,6,7,2,7]",
    "expected_output": "3",
    "task_finish_time": 1707375995392,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 289,
    "total_testcases": 727,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C",
    "submission_id": "1169500137",
    "input_formatted": "[6,0,3,3,6,7,2,7]",
    "input": "[6,0,3,3,6,7,2,7]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "int countWays(int* nums, int numsSize) {\n    long long ways = 1;\n    int min = numsSize;\n    for (int i = 0; i < numsSize; ++i) {\n        if (nums[i] < min) min = nums[i];\n    }\n    int count = 0;\n    for (int i = 0; i < numsSize; ++i) {\n        if (nums[i] == min) ++count;\n    }\n    for (int i = 1; i <= count; ++i) {\n        ways = (ways * (count - i + 1)) / i;\n    }\n    return (ways + 1) % 1000000007;\n}"
}