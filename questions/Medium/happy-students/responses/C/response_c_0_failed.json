{
    "status_code": 11,
    "lang": "c",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 12136000,
    "question_id": "3104",
    "elapsed_time": 96,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "[1,1]",
    "expected_output": "2",
    "task_finish_time": 1707375973737,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 199,
    "total_testcases": 727,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C",
    "submission_id": "1169499874",
    "input_formatted": "[1,1]",
    "input": "[1,1]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "int countWays(int* nums, int numsSize){\n    int max = 0, min = numsSize, count = 0;\n    for (int i = 0; i < numsSize; i++) {\n        if (nums[i] > max) max = nums[i];\n        if (nums[i] < min) min = nums[i];\n    }\n    for (int i = 0; i < numsSize; i++) {\n        if (nums[i] == min || nums[i] == max) count++;\n    }\n    if (min == max) return 1;\n    return (count == numsSize) ? 2 : 3;\n}"
}