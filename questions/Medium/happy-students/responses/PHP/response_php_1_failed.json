{
    "status_code": 11,
    "lang": "php",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 27564000,
    "question_id": "3104",
    "elapsed_time": 226,
    "compare_result
    "code_output": "0",
    "std_output": "",
    "last_testcase": "[1,1]",
    "expected_output": "2",
    "task_finish_time": 1707376433733,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 67,
    "total_testcases": 727,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "PHP",
    "submission_id": "1169505370",
    "input_formatted": "[1,1]",
    "input": "[1,1]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @return Integer\n     */\n    function countWays($nums) {\n        $n = count($nums);\n        $count = array_fill(0, $n + 1, 0);\n\n        foreach ($nums as $num) {\n            $count[min($num, $n)]++;\n        }\n\n        $total = 0;\n        $sum = 0;\n        for ($i = 0; $i <= $n; $i++) {\n            if ($sum < $i) {\n                break;\n            }\n            $total += $count[$i];\n            $sum += $count[$i];\n        }\n\n        return $total;\n    }\n}"
}