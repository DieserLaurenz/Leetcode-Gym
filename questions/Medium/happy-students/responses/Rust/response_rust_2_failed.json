{
    "status_code": 11,
    "lang": "rust",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 3264000,
    "question_id": "3104",
    "elapsed_time": 20,
    "compare_result": "1011001011101101101001111110101011111111111001111110111111111110101011011011111111111000111010110011111110111111111110111111011111101011111110101111111111001010111110111110111111101011101111111011111011101110111111111110101111111111111111111111011110111111111111110011101111111111111111101011011111101111111011111111110111101011111111100110001110111110101111111111111100111111111110101111111111111111111110111111111101111111111111111111011111111111111011011111111111111111101111101111111111101111111111100010001010110111101110101010100010101010101100110010001100110010100011001110101001011010100000101010101010110010101000101010101000100000000000101010100011100010101010001000001010101000101010101110101000001010001010101000111",
    "code_output": "5",
    "std_output": "",
    "last_testcase": "[6,0,3,3,6,7,2,7]",
    "expected_output": "3",
    "task_finish_time": 1707386247599,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 516,
    "total_testcases": 727,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Rust",
    "submission_id": "1169604973",
    "input_formatted": "[6,0,3,3,6,7,2,7]",
    "input": "[6,0,3,3,6,7,2,7]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "impl Solution {\n    pub fn count_ways(nums: Vec<i32>) -> i32 {\n        let n = nums.len() as i32;\n        let mut count = vec![0; (n + 1) as usize];\n        for &num in &nums {\n            count[num as usize] += 1;\n        }\n        let mut sum = 0;\n        let mut result = 0;\n        for i in 0..=n as usize {\n            sum += count[i];\n            if sum >= i as i32 && (n - sum) >= ((n as usize - i) as i32) {\n                result += 1;\n            }\n        }\n        result\n    }\n}"
}