{
    "status_code": 11,
    "lang": "typescript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 70820000,
    "question_id": "3104",
    "elapsed_time": 184,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "[1,1]",
    "expected_output": "2",
    "task_finish_time": 1707376350432,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 127,
    "total_testcases": 727,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "TypeScript",
    "submission_id": "1169504375",
    "input_formatted": "[1,1]",
    "input": "[1,1]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "function countWays(nums: number[]): number {\n    nums.sort((a, b) => a - b);\n    const freq = new Map<number, number>();\n    for (const num of nums) {\n        freq.set(num, (freq.get(num) || 0) + 1);\n    }\n\n    let total = 0, ways = 0;\n    for (let i = 0; i <= nums.length; i++) {\n        if (i === nums.length || (i > 0 && nums[i] !== nums[i - 1])) {\n            if (total >= nums[i - 1]) {\n                ways++;\n            }\n        }\n        if (i < nums.length) {\n            total += freq.get(nums[i])!;\n        }\n    }\n\n    return ways;\n}"
}