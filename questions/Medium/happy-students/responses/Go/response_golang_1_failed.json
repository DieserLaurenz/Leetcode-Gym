{
    "status_code": 11,
    "lang": "golang",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 7792000,
    "question_id": "3104",
    "elapsed_time": 125,
    "compare_result
    "code_output": "3",
    "std_output": "",
    "last_testcase": "[1,1,0,1]",
    "expected_output": "1",
    "task_finish_time": 1707385877492,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 205,
    "total_testcases": 727,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Go",
    "submission_id": "1169601147",
    "input_formatted": "[1,1,0,1]",
    "input": "[1,1,0,1]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "func countWays(nums []int) int {\n    sort.Ints(nums)\n    n := len(nums)\n    left, right := 0, 0\n    ways := 0\n\n    for right < n {\n        for right < n && nums[right] == nums[left] {\n            right++\n        }\n        if nums[left] < right {\n            ways++\n        }\n        if n-right < nums[left] {\n            break\n        }\n        left = right\n    }\n    if ways > 0 {\n        ways++\n    }\n    return ways\n}"
}