{
    "status_code": 11,
    "lang": "golang",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 17204000,
    "question_id": "3104",
    "elapsed_time": 126,
    "compare_result
    "code_output": "4",
    "std_output": "",
    "last_testcase": "[6,0,3,3,6,7,2,7]",
    "expected_output": "3",
    "task_finish_time": 1707385847513,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 82,
    "total_testcases": 727,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Go",
    "submission_id": "1169600827",
    "input_formatted": "[6,0,3,3,6,7,2,7]",
    "input": "[6,0,3,3,6,7,2,7]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "func countWays(nums []int) int {\n    count := make(map[int]int)\n    for _, num := range nums {\n        count[num]++\n    }\n    total := 0\n    ways := 0\n    for i := 0; i <= len(nums); i++ {\n        if i > 0 {\n            total += count[i-1]\n        }\n        if total >= i && total <= len(nums)-count[i] {\n            ways++\n        }\n    }\n    return ways\n}"
}