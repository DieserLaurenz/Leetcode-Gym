{
    "status_code": 11,
    "lang": "cpp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 45464000,
    "question_id": "3104",
    "elapsed_time": 4013,
    "compare_result
    "code_output": "3",
    "std_output": "",
    "last_testcase": "[1,1]",
    "expected_output": "2",
    "task_finish_time": 1707375792861,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 43,
    "total_testcases": 727,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C++",
    "submission_id": "1169497596",
    "input_formatted": "[1,1]",
    "input": "[1,1]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\npublic:\n    int countWays(vector<int>& nums) {\n        long long mod = 1e9 + 7;\n        sort(nums.begin(), nums.end());\n        long long total = 0;\n        long long ways = 1;\n        for (int i = 0; i < nums.size(); ++i) {\n            if (i < nums[i]) continue; // Ensure we can select up to i students without violating happiness condition\n            // Calculate number of ways to choose any number of students from the first (i+1) options\n            ways = 1; // Reset ways for current i\n            for (int j = 0; j <= i; ++j) {\n                ways = (ways * 2) % mod; // Each student can either be selected or not, doubling the possibilities\n            }\n            total = (total + ways - 1) % mod; // Subtract 1 to exclude the case where no student is selected, as it's counted in all segments\n        }\n        return total;\n    }\n};"
}