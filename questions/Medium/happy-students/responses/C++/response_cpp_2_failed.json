{
    "status_code": 11,
    "lang": "cpp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 75536000,
    "question_id": "3104",
    "elapsed_time": 116,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "[1,1]",
    "expected_output": "2",
    "task_finish_time": 1707375812158,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 124,
    "total_testcases": 727,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C++",
    "submission_id": "1169497890",
    "input_formatted": "[1,1]",
    "input": "[1,1]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\npublic:\n    int countWays(vector<int>& nums) {\n        int n = nums.size();\n        sort(nums.begin(), nums.end());\n        long long ways = 0;\n        int left = 0, right = n;\n        while (left < n && nums[left] < right) {\n            if (left == 0 || nums[left] != nums[left - 1]) {\n                ways += 1; // For each unique value of nums[i] that satisfies the condition, add one way\n            }\n            left++;\n        }\n        if (left < n && nums[left - 1] < n) ways += 1; // If there's a group size that makes everyone happy, add that way\n        return ways;\n    }\n};"
}