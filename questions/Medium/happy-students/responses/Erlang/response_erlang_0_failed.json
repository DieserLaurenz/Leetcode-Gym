{
    "status_code": 11,
    "lang": "erlang",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 150596000,
    "question_id": "3104",
    "elapsed_time": 1750,
    "compare_result": "1111001111011101011001111110100011010101010001110110011101111100100011010011111111101100111010110000010100111110010110010101001001101000111110000111110100001001110000110110110111101011100011111111010011101000011111010000101110010110110111011111001111010101111111110010011111111101011111000011010111100110011011111111010011100011010111100100001000011110100111011111101100011111110100100111001101011001110110011011010100011111010101101110010101011101100011011101110111001010001101001111110101101101010111000000000000010101100100000000000000000000000100010010000100000000000000000100000000010000000000000100000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011",
    "code_output": "4",
    "std_output": "",
    "last_testcase": "[0,4,4,4,4,4,2]",
    "expected_output": "2",
    "task_finish_time": 1707386434422,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 317,
    "total_testcases": 727,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Erlang",
    "submission_id": "1169606850",
    "input_formatted": "[0,4,4,4,4,4,2]",
    "input": "[0,4,4,4,4,4,2]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "-spec count_ways(Nums :: [integer()]) -> integer().\ncount_ways(Nums) ->\n  Sorted = lists:sort(Nums),\n  Total = length(Nums),\n  count_ways_helper(Sorted, Total, 0, 0).\n\ncount_ways_helper([], _Total, _Count, Acc) ->\n  Acc + 1;\ncount_ways_helper([H|T], Total, Count, Acc) when Count < H, Count < Total - Count ->\n  count_ways_helper(T, Total, Count + 1, Acc + 1);\ncount_ways_helper([_H|T], Total, Count, Acc) ->\n  count_ways_helper(T, Total, Count + 1, Acc)."
}