{
    "status_code": 11,
    "lang": "swift",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 19388000,
    "question_id": "3104",
    "elapsed_time": 282,
    "compare_result
    "code_output": "0",
    "std_output": "",
    "last_testcase": "[1,1]",
    "expected_output": "2",
    "task_finish_time": 1707385397940,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 64,
    "total_testcases": 727,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Swift",
    "submission_id": "1169596164",
    "input_formatted": "[1,1]",
    "input": "[1,1]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    func countWays(_ nums: [Int]) -> Int {\n        let maxSelect = nums.count\n        var lessThan = Array(repeating: 0, count: maxSelect + 1)\n        for num in nums {\n            lessThan[min(num, maxSelect)] += 1\n        }\n        var total = 0\n        for i in stride(from: maxSelect, through: 0, by: -1) {\n            if i < maxSelect {\n                lessThan[i] += lessThan[i + 1]\n            }\n            if lessThan[i] == i {\n                total += 1\n            }\n        }\n        return total\n    }\n}"
}