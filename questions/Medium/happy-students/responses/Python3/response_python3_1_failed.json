{
    "status_code": 11,
    "lang": "python3",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 34232000,
    "question_id": "3104",
    "elapsed_time": 532,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "[1,1]",
    "expected_output": "2",
    "task_finish_time": 1708776753496,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 80,
    "total_testcases": 727,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python3",
    "submission_id": "1184783674",
    "input_formatted": "[1,1]",
    "input": "[1,1]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "from typing import List\nfrom collections import Counter\n\nclass Solution:\n    def countWays(self, nums: List[int]) -> int:\n        counter = Counter(nums)\n        n = len(nums)\n        prefix_sum = [0] * (n + 1)\n        for i in range(1, n + 1):\n            prefix_sum[i] = prefix_sum[i - 1] + counter[i - 1]\n        \n        total_ways = 0\n        for num, freq in counter.items():\n            if prefix_sum[num] < num and prefix_sum[num] + freq >= num:\n                total_ways += 1\n        \n        return total_ways"
}