{
    "status_code": 11,
    "lang": "python",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 20796000,
    "question_id": "3104",
    "elapsed_time": 460,
    "compare_result": "0000100000000000000000000000000100000000100000000000000000000000000000000000010000000000000000001010010111000000001001000000100100000101000000000000000000000100000001000001000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000100000000000100000000000000000010000000000001010000000000000001000000000000010000000000000000000000010000000001010000000100000000001000000000000010001000000100010010100000000000000000010000000010000000000000000100000000000010000000000000000000010000010000000000000000100000000000000000000000000000000000000001000000000000000000000000000000000000000000000001000000000000000000010000000000000000001000000000000000000000000000000000000000000000000000000000000000",
    "code_output": "1",
    "std_output": "",
    "last_testcase": "[1,1]",
    "expected_output": "2",
    "task_finish_time": 1708776622727,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 49,
    "total_testcases": 727,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python",
    "submission_id": "1184782467",
    "input_formatted": "[1,1]",
    "input": "[1,1]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution(object):\n    def countWays(self, nums):\n        nums.sort()\n        total = len(nums)\n        left, right = 0, total - 1\n        ways = 0\n        while left <= right:\n            mid = (left + right) // 2\n            if nums[mid] <= mid:\n                ways = mid + 1\n                left = mid + 1\n            else:\n                right = mid - 1\n        return ways + 1"
}