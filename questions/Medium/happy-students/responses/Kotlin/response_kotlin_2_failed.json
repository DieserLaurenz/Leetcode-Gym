{
    "status_code": 11,
    "lang": "kotlin",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 60456000,
    "question_id": "3104",
    "elapsed_time": 548,
    "compare_result
    "code_output": "3",
    "std_output": "",
    "last_testcase": "[1,1,0,1]",
    "expected_output": "1",
    "task_finish_time": 1707385523615,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 211,
    "total_testcases": 727,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Kotlin",
    "submission_id": "1169597422",
    "input_formatted": "[1,1,0,1]",
    "input": "[1,1,0,1]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    fun countWays(nums: List<Int>): Int {\n        val freq = nums.groupingBy { it }.eachCount()\n        var selected = 0\n        var ways = 0\n\n        for (i in 0..nums.size) {\n            if (i in freq) {\n                if (selected > i) {\n                    ways++\n                }\n                selected += freq[i]!!\n            } else {\n                if (selected >= i) ways++\n            }\n        }\n\n        return ways\n    }\n}"
}