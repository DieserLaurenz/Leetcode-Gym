{
    "status_code": 11,
    "lang": "racket",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 126348000,
    "question_id": "3104",
    "elapsed_time": 5020,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "[1,1]",
    "expected_output": "2",
    "task_finish_time": 1707386336308,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 112,
    "total_testcases": 727,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Racket",
    "submission_id": "1169605815",
    "input_formatted": "[1,1]",
    "input": "[1,1]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "(define/contract (count-ways nums)\n  (-> (listof exact-integer?) exact-integer?)\n  \n  (define (valid-selection count)\n    (for/and ([n nums])\n      (or (> count n) (< count (sub1 n)))))\n  \n  (define (count-ways-helper index selected count)\n    (if (= index (length nums))\n        (if (valid-selection count) 1 0)\n        (+ (count-ways-helper (+ index 1) selected count)\n           (count-ways-helper (+ index 1) (cons (list-ref nums index) selected) (+ count 1)))))\n  \n  (count-ways-helper 0 '() 0))"
}