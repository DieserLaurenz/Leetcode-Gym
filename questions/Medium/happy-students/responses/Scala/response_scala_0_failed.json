{
    "status_code": 11,
    "lang": "scala",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 68136000,
    "question_id": "3104",
    "elapsed_time": 10097,
    "compare_result
    "code_output": "6",
    "std_output": "",
    "last_testcase": "[6,0,3,3,6,7,2,7]",
    "expected_output": "3",
    "task_finish_time": 1707386076103,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 95,
    "total_testcases": 727,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Scala",
    "submission_id": "1169603096",
    "input_formatted": "[6,0,3,3,6,7,2,7]",
    "input": "[6,0,3,3,6,7,2,7]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "object Solution {\n    def countWays(nums: List[Int]): Int = {\n        val sortedNums = nums.sorted\n        val n = nums.length\n        var count = 0\n        var ways = 0\n\n        for(i <- 0 until n) {\n            if(i == 0 || sortedNums(i) != sortedNums(i - 1)) {\n                if(sortedNums(i) < n && sortedNums(i) >= i) ways += 1\n            }\n        }\n\n        if(nums.max < n) ways += 1\n        ways\n    }\n}"
}