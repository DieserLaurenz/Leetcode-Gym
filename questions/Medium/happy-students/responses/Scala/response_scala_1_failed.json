{
    "status_code": 11,
    "lang": "scala",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 67484000,
    "question_id": "3104",
    "elapsed_time": 873,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "[1,1]",
    "expected_output": "2",
    "task_finish_time": 1707386104743,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 195,
    "total_testcases": 727,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Scala",
    "submission_id": "1169603502",
    "input_formatted": "[1,1]",
    "input": "[1,1]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "object Solution {\n    def countWays(nums: List[Int]): Int = {\n        val max = nums.max\n        val freq = new Array[Int](nums.length + 1)\n        nums.foreach(n => freq(n) += 1)\n        var total = 0\n        var sum = 0\n        for (i <- nums.indices) {\n            sum += freq(i)\n            if (sum >= i + 1 && sum - freq(i) <= i) total += 1\n        }\n        total\n    }\n}"
}