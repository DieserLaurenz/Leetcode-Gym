{
    "status_code": 11,
    "lang": "scala",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 67836000,
    "question_id": "3104",
    "elapsed_time": 1324,
    "compare_result": "1000111011100110111010101001011111111110111110111111111110101101111111111100110110110111011111101111111111100101101111101111111001111111111010111000011011111110001111101011011001110111111111011110110110100011111011111110111011111111001010110111111101101010101100001111101001100110100010111111111011111111000111001010101111111100101000101111110111100000101100101000101111100011111011011010111010101010011111001111011011101010101010111101101010100111011110111110110010110001111000101000011110101010101000100100101001100010101000101010001011010100110000100000001100000101101011001100000000000000001001101010001010111000100010101010001000100000100010100000000010001011101010000000001000100010101000001100001000101000000010000000001",
    "code_output": "2",
    "std_output": "",
    "last_testcase": "[6,0,3,3,6,7,2,7]",
    "expected_output": "3",
    "task_finish_time": 1707386134137,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 405,
    "total_testcases": 727,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Scala",
    "submission_id": "1169603772",
    "input_formatted": "[6,0,3,3,6,7,2,7]",
    "input": "[6,0,3,3,6,7,2,7]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "object Solution {\n    def countWays(nums: List[Int]): Int = {\n        val sorted = nums.sorted\n        val n = nums.length\n        var res = 0\n        var left = 0\n        var right = n\n        while (left < right) {\n            val mid = left + (right - left) / 2\n            if (sorted(mid) >= n - mid) right = mid\n            else left = mid + 1\n        }\n        if (n - left > 0) res += 1\n        if (left > 0) res += 1\n        res\n    }\n}"
}