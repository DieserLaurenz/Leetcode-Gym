{
    "status_code": 11,
    "lang": "dart",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 184844000,
    "question_id": "3104",
    "elapsed_time": 5018,
    "compare_result
    "code_output": "0",
    "std_output": "",
    "last_testcase": "[1,1]",
    "expected_output": "2",
    "task_finish_time": 1707385641387,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 727,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Dart",
    "submission_id": "1169598637",
    "input_formatted": "[1,1]",
    "input": "[1,1]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n  int countWays(List<int> nums) {\n    int n = nums.length;\n    nums.sort();\n    List<int> prefix = List.filled(n + 1, 0);\n    for (int i = 0; i < n; i++) {\n      prefix[i + 1] = prefix[i] + nums[i];\n    }\n    Map<int, int> count = {};\n    for (int num in nums) {\n      count[num] = (count[num] ?? 0) + 1;\n    }\n    int result = 0;\n    for (var entry in count.entries) {\n      int val = entry.key, cnt = entry.value;\n      int pos = nums.indexOf(val);\n      if (prefix[pos] <= val * pos && prefix[pos + cnt] > val * (pos + cnt)) {\n        result++;\n      }\n    }\n    return result;\n  }\n}"
}