{
    "status_code": 10,
    "lang": "c",
    "run_success": true,
    "status_runtime": "20 ms",
    "memory": 8636000,
    "question_id": "2887",
    "elapsed_time": 35,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1708164977201,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 2216,
    "total_testcases": 2216,
    "runtime_percentile": 35.6164,
    "status_memory": "8.6 MB",
    "memory_percentile": 87.6711,
    "pretty_lang": "C",
    "submission_id": "1177697938",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "#include <string.h>\n#include <stdlib.h>\n\nchar * sortVowels(char * s){\n    int n = strlen(s);\n    char *vowels = (char *)malloc((n + 1) * sizeof(char));\n    int vowelCounts[52] = {0}; // 26 lowercase + 26 uppercase\n    \n    // Count each vowel.\n    for (int i = 0; i < n; i++) {\n        char c = s[i];\n        if (c >= 'a' && c <= 'z') {\n            int index = c - 'a';\n            if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n                vowelCounts[index]++;\n            }\n        } else if (c >= 'A' && c <= 'Z') {\n            int index = 26 + c - 'A';\n            if (c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n                vowelCounts[index]++;\n            }\n        }\n    }\n    \n    // Fill the vowels array based on counts.\n    int vIndex = 0;\n    for (char c = 'A'; c <= 'Z'; c++) {\n        int index = 26 + c - 'A';\n        while (vowelCounts[index]-- > 0) vowels[vIndex++] = c;\n    }\n    for (char c = 'a'; c <= 'z'; c++) {\n        int index = c - 'a';\n        while (vowelCounts[index]-- > 0) vowels[vIndex++] = c;\n    }\n    vowels[vIndex] = '\\0'; // Null-terminate the vowels string.\n    \n    // Place sorted vowels back into the original string, keeping consonants in place.\n    vIndex = 0;\n    for (int i = 0; i < n; i++) {\n        if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u' ||\n            s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U') {\n            s[i] = vowels[vIndex++];\n        }\n    }\n    \n    free(vowels);\n    return s;\n}"
}