{
    "status_code": 11,
    "lang": "elixir",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 71204000,
    "question_id": "2850",
    "elapsed_time": 784,
    "compare_result
    "code_output": "10",
    "std_output": "",
    "last_testcase": "3\n2\n2",
    "expected_output": "14",
    "task_finish_time": 1706885946676,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 6,
    "total_testcases": 2003,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Elixir",
    "submission_id": "1163982143",
    "input_formatted": "3, 2, 2",
    "input": "3\n2\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "defmodule Solution do\n  @spec longest_string(x :: integer, y :: integer, z :: integer) :: integer\n  def longest_string(x, y, z) do\n    # Calculate base length from \"AB\" strings\n    base_length = z * 2\n\n    # Calculate additional length from \"AA\" and \"BB\"\n    # Can use one more \"AA\" or \"BB\" than \"AB\" strings to avoid \"AAA\" or \"BBB\"\n    aa_bb_use = Enum.min([x, y, z + 1])\n\n    # Subtract used \"AB\" to adjust for the initial count\n    remaining_z = z - Enum.min([x, y])\n\n    # Additional length from \"AA\" and \"BB\", considering \"AB\" as separators\n    additional_length = aa_bb_use * 4\n\n    # Calculate remaining \"AA\" or \"BB\" strings that can be used without \"AB\"\n    remaining_aa_bb = Enum.max([x, y]) - aa_bb_use\n\n    # Use remaining \"AA\" or \"BB\" strings with \"AB\" as possible separators\n    # Ensuring not to exceed the remaining \"AB\" strings for separators\n    if remaining_z > 0 do\n      additional_length + Enum.min([remaining_aa_bb * 2, (remaining_z + 1) * 2])\n    else\n      additional_length + Enum.min([remaining_aa_bb, 2]) * 2\n    end\n  end\nend"
}