{
    "status_code": 11,
    "lang": "scala",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 51464000,
    "question_id": "2850",
    "elapsed_time": 601,
    "compare_result
    "code_output": "11",
    "std_output": "",
    "last_testcase": "2\n5\n1",
    "expected_output": "12",
    "task_finish_time": 1706876148440,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 28,
    "total_testcases": 2003,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Scala",
    "submission_id": "1163872442",
    "input_formatted": "2, 5, 1",
    "input": "2\n5\n1",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "object Solution {\n    def longestString(x: Int, y: Int, z: Int): Int = {\n        // The strategy is to use \"AA\" and \"BB\" as much as possible without breaking rules,\n        // and intelligently use \"AB\" to either extend the string or prevent illegal sequences.\n\n        // Calculate the base pairs for \"AA\" and \"BB\", ensuring we don't exceed the maximum possible without \"AAA\" or \"BBB\"\n        val maxPairsWithoutAB = 2 * (x min y) + (x max y)\n        // Calculate the total length if we can insert \"AB\" to extend or prevent illegal sequences\n        val totalLengthWithAB = if (z > 0) {\n            // If we have \"AB\", we can use it to separate excess \"AA\" or \"BB\"\n            val withAB = 2 * (x + y) + z - 1\n            // Choose the smaller of the two calculations to ensure we don't count more than what's possible\n            (maxPairsWithoutAB + z * 2) min withAB\n        } else {\n            maxPairsWithoutAB\n        }\n\n        // The maximum length will be the total length considering \"AB\" usage, capped by the actual counts of \"AA\", \"BB\", and \"AB\"\n        totalLengthWithAB\n    }\n}"
}