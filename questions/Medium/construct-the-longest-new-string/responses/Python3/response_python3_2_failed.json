{
    "status_code": 11,
    "lang": "python3",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 16408000,
    "question_id": "2850",
    "elapsed_time": 57,
    "compare_result
    "code_output": "11",
    "std_output": "",
    "last_testcase": "3\n2\n2",
    "expected_output": "14",
    "task_finish_time": 1708745796235,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 13,
    "total_testcases": 2003,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python3",
    "submission_id": "1184480833",
    "input_formatted": "3, 2, 2",
    "input": "3\n2\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution:\n    def longestString(self, x: int, y: int, z: int) -> int:\n        # Sort x, y so that a is the count of the lesser or equal of AA and BB\n        # and b is the count of the greater\n        a, b = sorted([x, y])\n\n        # If we have more ABs than the difference between a and b,\n        # we can use them to balance out a and b, and possibly have some ABs left\n        if z > b - a:\n            # Use some ABs to balance a and b, then split the rest between the beginning and the end\n            return (a + b) * 2 + min(z - (b - a), 2)\n        else:\n            # Use all ABs to balance out the difference between a and b as much as possible\n            return (a + z) * 2 + (b - a) * 2"
}