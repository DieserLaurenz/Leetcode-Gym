{
    "status_code": 11,
    "lang": "erlang",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 59840000,
    "question_id": "2850",
    "elapsed_time": 1624,
    "compare_result
    "code_output": "10",
    "std_output": "",
    "last_testcase": "1\n34\n1",
    "expected_output": "8",
    "task_finish_time": 1706885826123,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 102,
    "total_testcases": 2003,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Erlang",
    "submission_id": "1163980606",
    "input_formatted": "1, 34, 1",
    "input": "1\n34\n1",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "-spec longest_string(X :: integer(), Y :: integer(), Z :: integer()) -> integer().\nlongest_string(X, Y, Z) ->\n    % Use \"AB\" strings as separators to maximize length\n    % Calculate the total length considering alternating \"AA\" and \"BB\" with \"AB\" in between\n    TotalABLength = Z * 2,\n    TotalAALength = X * 2,\n    TotalBBLength = Y * 2,\n    % Calculate how many \"AA\" and \"BB\" we can place without breaking the no \"AAA\" or \"BBB\" rule\n    MaxAorBWithAB = Z + 1,\n    % Calculate actual usage of \"AA\" and \"BB\"\n    ActualAAUsage = min(X, MaxAorBWithAB),\n    ActualBBUsage = min(Y, MaxAorBWithAB),\n    % Calculate remaining \"AA\" and \"BB\" after placing around \"AB\"\n    RemainingAA = X - ActualAAUsage,\n    RemainingBB = Y - ActualBBUsage,\n    % Add extra \"AA\" or \"BB\" if possible without creating \"AAA\" or \"BBB\"\n    Extra = case {RemainingAA, RemainingBB} of\n                {0, 0} -> 0; % No extra \"AA\" or \"BB\" can be added\n                _ -> 2 % Add one extra \"AA\" or \"BB\" if possible\n            end,\n    % Sum the lengths of used \"AA\", \"BB\", and \"AB\" strings\n    Length = TotalABLength + (ActualAAUsage * 2) + (ActualBBUsage * 2) + Extra,\n    % Return the maximum possible length\n    Length."
}