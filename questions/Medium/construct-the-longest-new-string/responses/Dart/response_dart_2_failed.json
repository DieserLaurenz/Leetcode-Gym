{
    "status_code": 15,
    "lang": "dart",
    "run_success": false,
    "runtime_error": "Line 23: Char 13: Error: The method 'abs' isn't defined for the class 'Solution'.",
    "full_runtime_error": "Line 23: Char 13: Error: The method 'abs' isn't defined for the class 'Solution'.\nTry correcting the name to the name of an existing method, or defining a method named 'abs'.\n    if (z > abs(x - y)) {\n            ^^^\nLine 25: Char 31: Error: The method 'abs' isn't defined for the class 'Solution'.\nTry correcting the name to the name of an existing method, or defining a method named 'abs'.\n      totalLength += 2 * (z - abs(x - y));\n                              ^^^\nLine 25: Char 19: Error: A value of type 'num' can't be assigned to a variable of type 'int'.\n      totalLength += 2 * (z - abs(x - y));\n                  ^",
    "status_runtime": "N/A",
    "memory": 150148000,
    "question_id": "2850",
    "elapsed_time": 350,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "2\n5\n1",
    "expected_output": "12",
    "task_finish_time": 1706867377170,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 2003,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Dart",
    "submission_id": "1163786685",
    "status_msg": "Runtime Error",
    "state": "SUCCESS",
    "code": "class Solution {\n  int longestString(int x, int y, int z) {\n    // Balancing \"AA\" and \"BB\" strings with \"AB\" as a separator\n    // The idea is to use \"AB\" optimally to avoid \"AAA\" or \"BBB\"\n    \n    // If there's an imbalance between \"AA\" and \"BB\", and not enough \"AB\" to perfectly balance,\n    // the strategy is to use as many \"AA\" and \"BB\" as possible without violating the constraints.\n    // This involves using \"AB\" to separate excess \"AA\" or \"BB\".\n    \n    // When \"AB\" is less than the difference between \"AA\" and \"BB\", adjust the counts.\n    int totalLength = 0;\n    if (x > y) {\n      totalLength += 2 * min(x, y + z); // Use \"BB\" and \"AB\" to limit \"AAA\"\n    } else {\n      totalLength += 2 * min(y, x + z); // Use \"AA\" and \"AB\" to limit \"BBB\"\n    }\n    \n    // Account for \"AB\" in the total length\n    // If \"AB\" is more than the difference, it can be placed between all \"AA\" and \"BB\"\n    totalLength += 2 * min(z, x + y + z); // Add \"AB\" strings that can be used\n    \n    // Adjusting for the case where \"AB\" can fully balance \"AA\" and \"BB\", leading to possibly more \"AB\" usage\n    if (z > abs(x - y)) {\n      // Add the leftover \"AB\" once, as it can only be optimally used to this extent\n      totalLength += 2 * (z - abs(x - y));\n    }\n\n    return totalLength;\n  }\n}"
}