{
    "status_code": 11,
    "lang": "ruby",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 211512000,
    "question_id": "2850",
    "elapsed_time": 137,
    "compare_result
    "code_output": "6",
    "std_output": "",
    "last_testcase": "2\n5\n1",
    "expected_output": "12",
    "task_finish_time": 1706875964462,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 2003,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Ruby",
    "submission_id": "1163870710",
    "input_formatted": "2, 5, 1",
    "input": "2\n5\n1",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "# @param {Integer} x\n# @param {Integer} y\n# @param {Integer} z\n# @return {Integer}\ndef longest_string(x, y, z)\n  # The solution needs to balance the \"AA\" and \"BB\" strings, using \"AB\" as a connector without violating the constraints.\n  # The approach is to first place \"AB\" between \"AA\" and \"BB\" as much as possible, then use the remaining \"AA\" and \"BB\".\n\n  # If either x or y is 0, no need to worry about \"AAA\" or \"BBB\".\n  return 2 * (x + y + z) if x == 0 || y == 0\n\n  # Calculate the base length with alternating \"AA\" and \"BB\" up to their limits.\n  base_length = [2 * [x, 2].min + 2 * [y, 2].min, 2 * z].min\n\n  # Adjust x and y after considering the base placement\n  x -= [x, 2].min\n  y -= [y, 2].min\n  z -= base_length / 2\n\n  # Now, we'll distribute the remaining \"AB\" (if any) between \"AA\" and \"BB\".\n  while z > 0 && (x > 0 || y > 0)\n    base_length += 2\n    z -= 1\n    x -= 1 if x > 0\n    y -= 1 if y > 0\n  end\n\n  # Add remaining \"AA\" and \"BB\" strings, ensuring not to exceed the limit of 2.\n  base_length += [x, 2].min * 2 + [y, 2].min * 2\n\n  # If there's still \"z\" left, use them as \"AB\" pairs to add to the length.\n  base_length += 2 * z if z > 0\n\n  base_length\nend"
}