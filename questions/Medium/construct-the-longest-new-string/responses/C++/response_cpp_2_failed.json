{
    "status_code": 11,
    "lang": "cpp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 8332000,
    "question_id": "2850",
    "elapsed_time": 19,
    "compare_result
    "code_output": "8",
    "std_output": "",
    "last_testcase": "2\n5\n1",
    "expected_output": "12",
    "task_finish_time": 1706856499750,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 34,
    "total_testcases": 2003,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C++",
    "submission_id": "1163673770",
    "input_formatted": "2, 5, 1",
    "input": "2\n5\n1",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\npublic:\n    int longestString(int x, int y, int z) {\n        // The strategy is to alternate between \"AA\" and \"BB\" as much as possible, using \"AB\" to bridge excess.\n        int totalLength = 0;\n        \n        // Sort \"AA\" and \"BB\" counts to simplify logic, ensuring a >= b.\n        int a = std::max(x, y), b = std::min(x, y);\n        \n        // If we have more \"AB\" than the difference between \"AA\" and \"BB\", we can use all \"AA\" and \"BB\".\n        if (z >= a - b) {\n            totalLength += 2 * (a + b); // Use all \"AA\" and \"BB\".\n            int remainingAB = z - (a - b); // Remaining \"AB\" after balancing \"AA\" and \"BB\".\n            // Use as many \"AB\" as possible by placing them between \"AA\" and \"BB\" pairs or at the ends.\n            totalLength += 2 * std::min(remainingAB, a + 1);\n        } else {\n            // If \"AB\" is not enough to balance \"AA\" and \"BB\", use all \"AB\" plus extra \"AA\"/\"BB\" pairs.\n            totalLength += 2 * z; // All \"AB\" are used to separate \"AA\" and \"BB\".\n            totalLength += 2 * (b + z); // Use \"BB\" fully and as many \"AA\" as possible without exceeding \"BB\" + \"AB\".\n        }\n        \n        return totalLength;\n    }\n};"
}