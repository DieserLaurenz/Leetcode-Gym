{
    "status_code": 11,
    "lang": "swift",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 15240000,
    "question_id": "2850",
    "elapsed_time": 20,
    "compare_result
    "code_output": "20",
    "std_output": "",
    "last_testcase": "2\n5\n1",
    "expected_output": "12",
    "task_finish_time": 1706867035469,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 109,
    "total_testcases": 2003,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Swift",
    "submission_id": "1163783212",
    "input_formatted": "2, 5, 1",
    "input": "2\n5\n1",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    func longestString(_ x: Int, _ y: Int, _ z: Int) -> Int {\n        // Determine the maximum number of \"AA\" or \"BB\" that can be used\n        // without forming \"AAA\" or \"BBB\", then use \"AB\" to separate them or extend length.\n        \n        let maxAAandBB = min(x, 2 + z) + min(y, 2 + z) // Use up to x \"AA\" and y \"BB\", but avoid \"AAA\" and \"BBB\"\n        \n        // If one of x or y is significantly larger than the other, the maximum length\n        // can be reached by interleaving \"AB\" with the larger count until \"AB\" or the smaller count runs out.\n        // After which, only two of the larger count can be added without violating the rules.\n        // The \"AB\" strings can effectively be inserted in between \"AA\" and \"BB\" to avoid \"AAA\" or \"BBB\"\n        // and also directly contribute to the total length if not needed for separation.\n        \n        if z >= abs(x - y) {\n            // If \"AB\" is enough to bridge the gap between \"AA\" and \"BB\" counts\n            return 2 * (x + y + z)\n        } else {\n            // When \"AB\" isn't enough to completely bridge the gap, we use them to their full extent\n            // and then add the remaining \"AA\" or \"BB\", whichever is greater, but can only add up to 2 more\n            // to avoid \"AAA\" or \"BBB\".\n            let totalUsedAB = z\n            let remainingAAorBB = abs(x - y) - totalUsedAB\n            return 2 * (x + y + totalUsedAB) + min(2, remainingAAorBB) * 2\n        }\n    }\n}"
}