{
    "status_code": 11,
    "lang": "golang",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 2964000,
    "question_id": "2850",
    "elapsed_time": 17,
    "compare_result
    "code_output": "16",
    "std_output": "",
    "last_testcase": "2\n5\n1",
    "expected_output": "12",
    "task_finish_time": 1706867482914,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 25,
    "total_testcases": 2003,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Go",
    "submission_id": "1163787785",
    "input_formatted": "2, 5, 1",
    "input": "2\n5\n1",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "func longestString(x int, y int, z int) int {\n    // Ensure that x is always the larger or equal count to simplify logic\n    if y > x {\n        x, y = y, x\n    }\n\n    // The basic idea is to use \"AB\" strings to separate \"AA\" and \"BB\" strings as much as possible\n    // And then use \"AA\" and \"BB\" in a way that avoids \"AAA\" or \"BBB\"\n\n    // First, calculate how many \"AB\" can be directly placed between \"AA\" and \"BB\" strings\n    // without creating \"AAA\" or \"BBB\". This also helps in balancing out the number of \"AA\" and \"BB\"\n    if z >= x-y {\n        // Use some \"AB\" to make the counts of \"AA\" and \"BB\" equal\n        // The remaining \"AB\" can be evenly distributed around \"AA\" and \"BB\"\n        z -= x - y // Make \"AA\" and \"BB\" counts equal\n        // Each \"AB\" contributes 2 chars, each \"AA\" or \"BB\" contributes 2 chars\n        // After balancing, x and y are equal, so we use 'x' for both\n        // Half of the remaining \"AB\" strings are used before and after each \"AA\"/\"BB\"\n        return 2*x + 2*(z/2) + 2*x + z%2 // Use all \"AA\" and \"BB\", and distribute \"AB\"\n    } else {\n        // If there are not enough \"AB\" to balance \"AA\" and \"BB\"\n        // Use all \"AB\" to separate \"AA\" and \"BB\" as much as possible\n        return 2*(x + y + z)\n    }\n}"
}