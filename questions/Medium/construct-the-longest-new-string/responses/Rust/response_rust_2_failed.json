{
    "status_code": 11,
    "lang": "rust",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 1996000,
    "question_id": "2850",
    "elapsed_time": 14,
    "compare_result
    "code_output": "12",
    "std_output": "",
    "last_testcase": "3\n2\n2",
    "expected_output": "14",
    "task_finish_time": 1706876612478,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 89,
    "total_testcases": 2003,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Rust",
    "submission_id": "1163876870",
    "input_formatted": "3, 2, 2",
    "input": "3\n2\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "impl Solution {\n    pub fn longest_string(x: i32, y: i32, z: i32) -> i32 {\n        // Sort the counts of \"AA\", \"BB\" to ensure we always start with the lesser or equal count\n        let (mut a, mut b) = if x < y { (x, y) } else { (y, x) };\n\n        // Initial maximum length calculation based on \"AB\" strings\n        let mut result = z * 2;\n\n        // If \"AB\" strings are available, they can help in using extra \"AA\" or \"BB\" strings\n        if z > 0 {\n            result += 2; // For the first \"AB\" we can add an \"AA\" and a \"BB\" without concerns\n            let min_ab_use = z.min(a + 1); // Ensure we don't exceed the count of lesser strings (\"AA\" or \"BB\")\n            a -= min_ab_use; // Deduct the used \"AA\" or \"BB\" counts\n            b -= min_ab_use; // Deduct accordingly\n            \n            result += min_ab_use * 2; // Add the used \"AA\" and \"BB\" strings to the result\n        }\n\n        // For the remaining \"AA\" and \"BB\", we can only add two consecutively without an \"AB\" to separate\n        let remaining_pairs = a.min(2) + b.min(2);\n        result += remaining_pairs * 2;\n\n        result\n    }\n}"
}