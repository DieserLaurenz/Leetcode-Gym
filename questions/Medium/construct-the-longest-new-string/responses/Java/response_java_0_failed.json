{
    "status_code": 11,
    "lang": "java",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 41228000,
    "display_runtime": "1",
    "question_id": "2850",
    "elapsed_time": 198,
    "compare_result
    "code_output": "12",
    "std_output": "",
    "last_testcase": "3\n2\n2",
    "expected_output": "14",
    "task_finish_time": 1706856866560,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 656,
    "total_testcases": 2003,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Java",
    "submission_id": "1163678197",
    "input_formatted": "3, 2, 2",
    "input": "3\n2\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    public int longestString(int x, int y, int z) {\n        // Step 1: Calculate base length by alternating \"AA\" and \"BB\"\n        int baseLength = 2 * (Math.min(x, y) * 2);\n\n        // Step 2: Calculate how many \"AB\" can be used to bridge the gap or extend\n        int remainingZ = Math.max(0, z - Math.abs(x - y));\n        int lengthWithAB = baseLength + Math.min(z, Math.abs(x - y)) * 2;\n\n        // Step 3: If there's an excess of \"AA\" or \"BB\", add 2 more to the length\n        if (Math.abs(x - y) > z) {\n            lengthWithAB += 2;\n        }\n\n        // Step 4: Add remaining \"AB\" strings at the start or end\n        if (remainingZ > 0) {\n            lengthWithAB += Math.min(2, remainingZ) * 2;\n        }\n\n        return lengthWithAB;\n    }\n}"
}