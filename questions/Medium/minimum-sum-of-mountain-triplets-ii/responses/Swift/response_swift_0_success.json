{
    "status_code": 10,
    "lang": "swift",
    "run_success": true,
    "status_runtime": "422 ms",
    "memory": 20048000,
    "question_id": "3186",
    "elapsed_time": 442,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1707983201610,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 788,
    "total_testcases": 788,
    "runtime_percentile": 100,
    "status_memory": "20 MB",
    "memory_percentile": 100,
    "pretty_lang": "Swift",
    "submission_id": "1175826881",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\n    func minimumSum(_ nums: [Int]) -> Int {\n        let n = nums.count\n        var leftMin = Array(repeating: Int.max, count: n)\n        var rightMin = Array(repeating: Int.max, count: n)\n        var minSum = Int.max\n\n        for i in 1..<n {\n            leftMin[i] = min(leftMin[i-1], nums[i-1])\n        }\n\n        for i in stride(from: n - 2, through: 0, by: -1) {\n            rightMin[i] = min(rightMin[i+1], nums[i+1])\n        }\n\n        for i in 1..<n-1 {\n            if nums[i] > leftMin[i] && nums[i] > rightMin[i] {\n                minSum = min(minSum, leftMin[i] + nums[i] + rightMin[i])\n            }\n        }\n\n        return minSum == Int.max ? -1 : minSum\n    }\n}"
}