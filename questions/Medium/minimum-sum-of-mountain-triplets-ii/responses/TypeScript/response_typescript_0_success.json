{
    "status_code": 10,
    "lang": "typescript",
    "run_success": true,
    "status_runtime": "95 ms",
    "memory": 69624000,
    "question_id": "3186",
    "elapsed_time": 137,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1707983072618,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 788,
    "total_testcases": 788,
    "runtime_percentile": 50.0,
    "status_memory": "69.6 MB",
    "memory_percentile": 50.0,
    "pretty_lang": "TypeScript",
    "submission_id": "1175825611",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "function minimumSum(nums: number[]): number {\n    let leftMin = Array(nums.length).fill(Number.MAX_SAFE_INTEGER);\n    let rightMin = Array(nums.length).fill(Number.MAX_SAFE_INTEGER);\n    let minSum = Number.MAX_SAFE_INTEGER;\n\n    for (let i = 1; i < nums.length; i++) {\n        leftMin[i] = Math.min(leftMin[i - 1], nums[i - 1]);\n    }\n\n    for (let i = nums.length - 2; i >= 0; i--) {\n        rightMin[i] = Math.min(rightMin[i + 1], nums[i + 1]);\n    }\n\n    for (let j = 1; j < nums.length - 1; j++) {\n        if (nums[j] > leftMin[j] && nums[j] > rightMin[j]) {\n            minSum = Math.min(minSum, leftMin[j] + nums[j] + rightMin[j]);\n        }\n    }\n\n    return minSum === Number.MAX_SAFE_INTEGER ? -1 : minSum;\n};"
}