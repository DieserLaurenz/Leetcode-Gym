{
    "status_code": 11,
    "lang": "scala",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 82932000,
    "question_id": "3186",
    "elapsed_time": 1126,
    "compare_result
    "code_output": "7",
    "std_output": "",
    "last_testcase": "[1,2,3,2]",
    "expected_output": "6",
    "task_finish_time": 1707983948527,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 513,
    "total_testcases": 788,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Scala",
    "submission_id": "1175834598",
    "input_formatted": "[1,2,3,2]",
    "input": "[1,2,3,2]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "object Solution {\n    def minimumSum(nums: Array[Int]): Int = {\n        val n = nums.length\n        val leftMin = Array.fill(n)(0)\n        val rightMin = Array.fill(n)(0)\n        var minSum = Int.MaxValue\n\n        leftMin(0) = -1\n        for (i <- 1 until n) {\n            leftMin(i) = if (nums(i) > nums(i - 1)) i - 1 else leftMin(i - 1)\n        }\n\n        rightMin(n - 1) = -1\n        for (i <- n - 2 to 0 by -1) {\n            rightMin(i) = if (nums(i) > nums(i + 1)) i + 1 else rightMin(i + 1)\n        }\n\n        for (j <- 1 until n - 1) {\n            if (leftMin(j) != -1 && rightMin(j) != -1 && nums(j) > nums(leftMin(j)) && nums(j) > nums(rightMin(j))) {\n                minSum = Math.min(minSum, nums(j) + nums(leftMin(j)) + nums(rightMin(j)))\n            }\n        }\n\n        if (minSum == Int.MaxValue) -1 else minSum\n    }\n}"
}