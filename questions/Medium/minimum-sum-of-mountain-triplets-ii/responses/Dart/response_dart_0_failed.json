{
    "status_code": 11,
    "lang": "dart",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 190064000,
    "question_id": "3186",
    "elapsed_time": 589,
    "compare_result
    "code_output": "19",
    "std_output": "",
    "last_testcase": "[5,4,8,7,10,2]",
    "expected_output": "13",
    "task_finish_time": 1707983582668,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 378,
    "total_testcases": 788,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Dart",
    "submission_id": "1175830841",
    "input_formatted": "[5,4,8,7,10,2]",
    "input": "[5,4,8,7,10,2]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n  int minimumSum(List<int> nums) {\n    int n = nums.length;\n    List<int> leftMin = List.filled(n, 0);\n    List<int> rightMin = List.filled(n, 0);\n    Set<int> leftSet = {};\n    Set<int> rightSet = {};\n\n    leftMin[0] = -1;\n    for (int i = 1; i < n; i++) {\n      leftMin[i] = (nums[i] > nums[i - 1]) ? i - 1 : leftMin[i - 1];\n      if (nums[i] > nums[i - 1]) leftSet.add(i);\n    }\n\n    rightMin[n - 1] = -1;\n    for (int i = n - 2; i >= 0; i--) {\n      rightMin[i] = (nums[i] > nums[i + 1]) ? i + 1 : rightMin[i + 1];\n      if (nums[i] > nums[i + 1]) rightSet.add(i);\n    }\n\n    int minSum = -1;\n    for (int j = 1; j < n - 1; j++) {\n      if (leftMin[j] != -1 && rightMin[j] != -1 && leftSet.contains(j) && rightSet.contains(j)) {\n        int sum = nums[j] + nums[leftMin[j]] + nums[rightMin[j]];\n        if (minSum == -1 || sum < minSum) {\n          minSum = sum;\n        }\n      }\n    }\n    return minSum;\n  }\n}"
}