{
    "status_code": 10,
    "lang": "c",
    "run_success": true,
    "status_runtime": "91 ms",
    "memory": 13040000,
    "question_id": "3186",
    "elapsed_time": 111,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1707982771105,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 788,
    "total_testcases": 788,
    "runtime_percentile": 33.33339999999999,
    "status_memory": "13 MB",
    "memory_percentile": 100,
    "pretty_lang": "C",
    "submission_id": "1175822300",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "#include <limits.h>\n\nint minimumSum(int* nums, int numsSize) {\n    int leftMin[numsSize];\n    int rightMin[numsSize];\n    int minSum = INT_MAX;\n    \n    leftMin[0] = INT_MAX;\n    for (int i = 1; i < numsSize; ++i) {\n        leftMin[i] = (nums[i-1] < leftMin[i-1]) ? nums[i-1] : leftMin[i-1];\n    }\n    \n    rightMin[numsSize - 1] = INT_MAX;\n    for (int i = numsSize - 2; i >= 0; --i) {\n        rightMin[i] = (nums[i+1] < rightMin[i+1]) ? nums[i+1] : rightMin[i+1];\n    }\n    \n    for (int i = 1; i < numsSize - 1; ++i) {\n        if (nums[i] > leftMin[i] && nums[i] > rightMin[i]) {\n            int sum = nums[i] + leftMin[i] + rightMin[i];\n            minSum = (sum < minSum) ? sum : minSum;\n        }\n    }\n    \n    return (minSum == INT_MAX) ? -1 : minSum;\n}"
}