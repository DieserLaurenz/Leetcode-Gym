{
    "status_code": 11,
    "lang": "c",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 6460000,
    "question_id": "2856",
    "elapsed_time": 91,
    "compare_result
    "code_output": "9",
    "std_output": "",
    "last_testcase": "[1,3,1,2,2]",
    "expected_output": "4",
    "task_finish_time": 1707074516717,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 82,
    "total_testcases": 1074,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C",
    "submission_id": "1166136256",
    "input_formatted": "[1,3,1,2,2]",
    "input": "[1,3,1,2,2]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "int countCompleteSubarrays(int* nums, int numsSize) {\n    int count = 0;\n    for (int i = 0; i < numsSize; ++i) {\n        int freq[2001] = {0};\n        int distinct = 0;\n        for (int j = i; j < numsSize; ++j) {\n            if (freq[nums[j]] == 0) distinct++;\n            freq[nums[j]]++;\n            if (distinct == (j - i + 1)) count++;\n        }\n    }\n    return count;\n}"
}