{
    "status_code": 10,
    "lang": "python",
    "run_success": true,
    "status_runtime": "87 ms",
    "memory": 11756000,
    "question_id": "2856",
    "elapsed_time": 110,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1708746245749,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 1074,
    "total_testcases": 1074,
    "runtime_percentile": 67.56760000000003,
    "status_memory": "11.8 MB",
    "memory_percentile": 94.5946,
    "pretty_lang": "Python",
    "submission_id": "1184484291",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution(object):\n    def countCompleteSubarrays(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: int\n        \"\"\"\n        from collections import defaultdict\n\n        def atMostKDistinct(nums, k):\n            count = defaultdict(int)\n            res = i = 0\n            for j in range(len(nums)):\n                if count[nums[j]] == 0:\n                    k -= 1\n                count[nums[j]] += 1\n                while k < 0:\n                    count[nums[i]] -= 1\n                    if count[nums[i]] == 0:\n                        k += 1\n                    i += 1\n                res += j - i + 1\n            return res\n\n        totalDistinct = len(set(nums))\n        return atMostKDistinct(nums, totalDistinct) - atMostKDistinct(nums, totalDistinct - 1)"
}