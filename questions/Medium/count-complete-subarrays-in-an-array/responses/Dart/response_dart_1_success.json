{
    "status_code": 10,
    "lang": "dart",
    "run_success": true,
    "status_runtime": "866 ms",
    "memory": 151104000,
    "question_id": "2856",
    "elapsed_time": 1269,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1707075008066,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 1074,
    "total_testcases": 1074,
    "runtime_percentile": 100,
    "status_memory": "151.1 MB",
    "memory_percentile": 100,
    "pretty_lang": "Dart",
    "submission_id": "1166142211",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\n  int countCompleteSubarrays(List<int> nums) {\n    int count = 0;\n    int n = nums.length;\n    Map<int, int> freq = {};\n    Set<int> distinct = nums.toSet();\n    int distinctCount = distinct.length;\n\n    for (int start = 0; start < n; start++) {\n      freq.clear();\n      int unique = 0;\n      for (int end = start; end < n; end++) {\n        freq[nums[end]] = (freq[nums[end]] ?? 0) + 1;\n        if (freq[nums[end]] == 1) {\n          unique++;\n        }\n        if (unique == distinctCount) {\n          count += n - end;\n          break;\n        }\n      }\n    }\n    return count;\n  }\n}"
}