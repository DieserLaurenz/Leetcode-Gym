{
    "status_code": 11,
    "lang": "dart",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 153832000,
    "question_id": "2856",
    "elapsed_time": 5021,
    "compare_result
    "code_output": "15",
    "std_output": "",
    "last_testcase": "[1,3,1,2,2]",
    "expected_output": "4",
    "task_finish_time": 1707074978131,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 108,
    "total_testcases": 1074,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Dart",
    "submission_id": "1166141796",
    "input_formatted": "[1,3,1,2,2]",
    "input": "[1,3,1,2,2]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n  int countCompleteSubarrays(List<int> nums) {\n    int totalSubarrays = 0;\n    int n = nums.length;\n    Map<int, int> frequency = {};\n    \n    for (int i = 0; i < n; i++) {\n      frequency.clear();\n      for (int j = i; j < n; j++) {\n        frequency.update(nums[j], (val) => val + 1, ifAbsent: () => 1);\n        if (frequency.length == frequency.keys.toSet().length) {\n          totalSubarrays++;\n        }\n      }\n    }\n    return totalSubarrays;\n  }\n}"
}