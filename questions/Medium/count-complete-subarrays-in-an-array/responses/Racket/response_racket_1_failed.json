{
    "status_code": 14,
    "lang": "racket",
    "run_success": false,
    "status_runtime": "N/A",
    "memory": 126188000,
    "question_id": "2856",
    "elapsed_time": 5014,
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110000000000000000000000000000000000000000",
    "code_output": "",
    "std_output": "",
    "last_testcase": "[1531,715,604,1332,1870,1427,911,247,911,1332,931,1956,1917,624,1521,911,33,247,1580,1956,485,885,1615,689,722,21,662,250,354,715,1630,568,442,692,1376,855,1336,511,722,1950,437,894,911,715,247,127,715,240,228,624,604,304,1195,1653,228,1241,1876,911,1073,1241,247,1129,676,1430,116,715,958,722,1404,889,248,651,1352,604,604,676,210,825,1605,1601,116,1214,95,1078,1980,248,1851,1068,611,1277,1404,1306,715,1303,932,1830,688,1894,1046,396,247,225,402,969,1990,1514,737,1561,1101,1498,466,1488,1800,689,1725,1277,1223,1854,855,1445,737,1376,250,1850,1087,689,604,437,1779,1013,1359,1660,1522,692,220,604,1950,722,1182,263,1650,726,932,1332,670,1792,665,1083,492,63,800,768,1914,1338,1795,146,610,1332,437,33,161,1983,561,98,1973,248,662,290,1080,890,228,1781,1514,1851,841,660,823,1990,1914,796,1174,1998,1681,1788,1470,466,466,86,689,363,1430,1743,1747,1630,1059,608,192,30,1359,1917,737,1130,385,247,531,1393,1328,1633,817,995,715,562,1922,228,1935,1814,698,1214,1830,166,1834,101,940,841,293,325,1245,1037,247,284,1127,1196,259,454,685,27,282,394,1655,1111,229,1521,976,1441,1335,1566,68,166,1177,894,166,1947,1997,492,259,1127,1129,356,1980,715,248,219,1789,945,68,317,1428,1514,1130,1747,1377,1335,284,1298,1599,846,1630,1402,1573,625,1404,356,1779,229,1844,1800,264,1531,1194,909,1956,250,610,1123,254,970,1966,458,1836,1046,1418,1605,366,918,1016,1062,1189,826,432,757,1447,1804,1577,101,328,1231,1434,834,1514,1423,48,1906,1587]",
    "expected_output": "5",
    "task_finish_time": 1707075366761,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 1034,
    "total_testcases": 1074,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Racket",
    "submission_id": "1166146354",
    "status_msg": "Time Limit Exceeded",
    "state": "SUCCESS",
    "code": "(define/contract (count-complete-subarrays nums)\n  (-> (listof exact-integer?) exact-integer?)\n  (letrec ([distinct-count (length (remove-duplicates nums))]\n           [count-subarrays (lambda (start)\n                              (let loop ([end start]\n                                         [seen '()]\n                                         [distinct 0]\n                                         [count 0])\n                                (if (>= end (length nums))\n                                    count\n                                    (let* ([num (list-ref nums end)]\n                                           [new-seen (if (member num seen) seen (cons num seen))]\n                                           [new-distinct (if (member num seen) distinct (+ distinct 1))])\n                                      (loop (+ end 1) new-seen new-distinct (if (= new-distinct distinct-count) (+ count 1) count))))))])\n    (let loop ([i 0]\n               [total 0])\n      (if (< i (length nums))\n          (loop (+ i 1) (+ total (count-subarrays i)))\n          total))))"
}