{
    "status_code": 10,
    "lang": "kotlin",
    "run_success": true,
    "status_runtime": "628 ms",
    "memory": 59508000,
    "question_id": "2856",
    "elapsed_time": 637,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1707074918472,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 1074,
    "total_testcases": 1074,
    "runtime_percentile": 18.1819,
    "status_memory": "59.5 MB",
    "memory_percentile": 18.1819,
    "pretty_lang": "Kotlin",
    "submission_id": "1166141078",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\n    fun countCompleteSubarrays(nums: IntArray): Int {\n        val totalDistinct = nums.toSet().size\n        var count = 0\n\n        for (i in nums.indices) {\n            val seen = mutableSetOf<Int>()\n            for (j in i until nums.size) {\n                seen.add(nums[j])\n                if (seen.size == totalDistinct) {\n                    count += nums.size - j\n                    break\n                }\n            }\n        }\n\n        return count\n    }\n}"
}