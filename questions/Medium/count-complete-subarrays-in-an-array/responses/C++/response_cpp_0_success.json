{
    "status_code": 10,
    "lang": "cpp",
    "run_success": true,
    "status_runtime": "1595 ms",
    "memory": 483076000,
    "question_id": "2856",
    "elapsed_time": 1874,
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1707074347251,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 1074,
    "total_testcases": 1074,
    "runtime_percentile": 21.40039999999955,
    "status_memory": "483.1 MB",
    "memory_percentile": 5.1511999999997515,
    "pretty_lang": "C++",
    "submission_id": "1166134061",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\npublic:\n    int countCompleteSubarrays(vector<int>& nums) {\n        int totalCount = 0;\n        unordered_map<int, int> countMap;\n        for (int num : nums) {\n            countMap[num]++;\n        }\n        int distinctCount = countMap.size();\n\n        for (int i = 0; i < nums.size(); i++) {\n            unordered_map<int, int> subarrayMap;\n            int currentDistinct = 0;\n            for (int j = i; j < nums.size(); j++) {\n                if (subarrayMap[nums[j]] == 0) currentDistinct++;\n                subarrayMap[nums[j]]++;\n                if (currentDistinct == distinctCount) totalCount++;\n            }\n        }\n\n        return totalCount;\n    }\n};"
}