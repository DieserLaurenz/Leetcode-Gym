{
    "status_code": 10,
    "lang": "scala",
    "run_success": true,
    "status_runtime": "1039 ms",
    "memory": 57552000,
    "question_id": "2856",
    "elapsed_time": 1118,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1707075201179,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 1074,
    "total_testcases": 1074,
    "runtime_percentile": 100,
    "status_memory": "57.6 MB",
    "memory_percentile": 100,
    "pretty_lang": "Scala",
    "submission_id": "1166144513",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "object Solution {\n    def countCompleteSubarrays(nums: Array[Int]): Int = {\n        val distinctElementsCount = nums.distinct.length\n        var count = 0\n\n        for (i <- nums.indices) {\n            var distinctCount = 0\n            val freq = scala.collection.mutable.Map[Int, Int]()\n\n            for (j <- i until nums.length) {\n                freq(nums(j)) = freq.getOrElse(nums(j), 0) + 1\n                if (freq(nums(j)) == 1) distinctCount += 1\n\n                if (distinctCount == distinctElementsCount) count += 1\n            }\n        }\n        count\n    }\n}"
}