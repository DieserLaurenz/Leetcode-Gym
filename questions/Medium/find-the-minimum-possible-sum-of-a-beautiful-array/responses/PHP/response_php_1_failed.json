{
    "status_code": 11,
    "lang": "php",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 20052000,
    "question_id": "3026",
    "elapsed_time": 32,
    "compare_result
    "code_output": "5",
    "std_output": "",
    "last_testcase": "2\n3",
    "expected_output": "4",
    "task_finish_time": 1707345890720,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 129,
    "total_testcases": 575,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "PHP",
    "submission_id": "1169213624",
    "input_formatted": "2, 3",
    "input": "2\n3",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n\n    /**\n     * @param Integer $n\n     * @param Integer $target\n     * @return Integer\n     */\n    function minimumPossibleSum($n, $target) {\n        $mod = 1000000007;\n        $halfTarget = intdiv($target, 2);\n        $removeCount = $n > $halfTarget ? 1 : 0;\n        $totalNums = $n + $removeCount;\n        $sum = intdiv($totalNums * ($totalNums + 1), 2) - $removeCount * $halfTarget;\n        return $sum % $mod;\n    }\n}"
}