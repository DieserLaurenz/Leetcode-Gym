{
    "status_code": 11,
    "lang": "cpp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 7244000,
    "question_id": "3026",
    "elapsed_time": 3815,
    "compare_result
    "code_output": "2",
    "std_output": "",
    "last_testcase": "1\n1",
    "expected_output": "1",
    "task_finish_time": 1707345269540,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 130,
    "total_testcases": 575,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C++",
    "submission_id": "1169208741",
    "input_formatted": "1, 1",
    "input": "1\n1",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\npublic:\n    int minimumPossibleSum(int n, int target) {\n        const int mod = 1e9 + 7;\n        long long sum = 0, x = 1;\n        while (n--) {\n            if (x == (target + 1) / 2) x++; // Skip the number if it potentially forms target with another\n            sum = (sum + x) % mod;\n            x++;\n        }\n        return sum;\n    }\n};"
}