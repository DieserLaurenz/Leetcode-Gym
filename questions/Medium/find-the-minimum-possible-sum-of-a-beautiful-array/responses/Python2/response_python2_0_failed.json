{
    "status_code": 11,
    "lang": "python",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 11568000,
    "question_id": "3026",
    "elapsed_time": 32,
    "compare_result
    "code_output": "3",
    "std_output": "",
    "last_testcase": "2\n3",
    "expected_output": "4",
    "task_finish_time": 1708776050273,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 144,
    "total_testcases": 575,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python",
    "submission_id": "1184777119",
    "input_formatted": "2, 3",
    "input": "2\n3",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution(object):\n    def minimumPossibleSum(self, n, target):\n        \"\"\"\n        :type n: int\n        :type target: int\n        :rtype: int\n        \"\"\"\n        mod = 10**9 + 7\n        if target % 2 == 0 and n > target // 2:\n            return ((target // 2) * (target // 2 - 1) + (n - (target // 2)) * target) % mod\n        else:\n            return (n * (n + 1) // 2) % mod"
}