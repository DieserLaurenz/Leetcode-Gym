{
    "status_code": 11,
    "lang": "typescript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 51260000,
    "question_id": "3026",
    "elapsed_time": 4010,
    "compare_result
    "code_output": "7",
    "std_output": "",
    "last_testcase": "3\n3",
    "expected_output": "8",
    "task_finish_time": 1707345820926,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 146,
    "total_testcases": 575,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "TypeScript",
    "submission_id": "1169213068",
    "input_formatted": "3, 3",
    "input": "3\n3",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "function minimumPossibleSum(n: number, target: number): number {\n    const mod = 1e9 + 7;\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = (sum + i) % mod;\n        if (i === (target - 1) / 2) {\n            sum = (sum + 1) % mod;\n        }\n    }\n    return sum;\n};"
}