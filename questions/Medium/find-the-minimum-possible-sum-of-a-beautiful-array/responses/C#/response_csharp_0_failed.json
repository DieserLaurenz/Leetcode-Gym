{
    "status_code": 11,
    "lang": "csharp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 26940000,
    "question_id": "3026",
    "elapsed_time": 50,
    "compare_result
    "code_output": "3",
    "std_output": "",
    "last_testcase": "2\n3",
    "expected_output": "4",
    "task_finish_time": 1707345545188,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 132,
    "total_testcases": 575,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C#",
    "submission_id": "1169210956",
    "input_formatted": "2, 3",
    "input": "2\n3",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "public class Solution {\n    public int MinimumPossibleSum(int n, int target) {\n        long sum = 0;\n        int mod = 1000000007;\n        if (target % 2 == 0) {\n            int half = target / 2;\n            if (n > half) {\n                sum = (long)(half - 1) * half / 2;\n                int remaining = n - half;\n                sum += (long)half * remaining;\n                long start = half + 1;\n                sum += (long)(start + start + remaining - 1) * remaining / 2;\n            } else {\n                sum = (long)(1 + n) * n / 2;\n            }\n        } else {\n            if (n >= target) {\n                sum = (long)target * (n - target);\n                sum += (long)(1 + target - 1) * (target - 1) / 2;\n            } else {\n                sum = (long)(1 + n) * n / 2;\n            }\n        }\n        return (int)(sum % mod);\n    }\n}"
}