{
    "status_code": 11,
    "lang": "javascript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 48708000,
    "question_id": "3026",
    "elapsed_time": 70,
    "compare_result
    "code_output": "3",
    "std_output": "",
    "last_testcase": "2\n3",
    "expected_output": "4",
    "task_finish_time": 1707345691067,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 146,
    "total_testcases": 575,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "JavaScript",
    "submission_id": "1169212108",
    "input_formatted": "2, 3",
    "input": "2\n3",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "/**\n * @param {number} n\n * @param {number} target\n * @return {number}\n */\nvar minimumPossibleSum = function(n, target) {\n    const mod = 1e9 + 7;\n    let sum = 0;\n    // Calculate the minimum possible sum for the beautiful array\n    if (target % 2 === 0 && n >= target / 2) {\n        sum = (1 + n) * n / 2;\n        if (n >= target / 2) {\n            sum -= target / 2;\n            sum += n;\n        }\n    } else {\n        sum = (1 + n) * n / 2;\n    }\n    return sum % mod;\n};"
}