{
    "status_code": 11,
    "lang": "swift",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 15152000,
    "question_id": "3026",
    "elapsed_time": 3706,
    "compare_result
    "code_output": "2",
    "std_output": "",
    "last_testcase": "1\n1",
    "expected_output": "1",
    "task_finish_time": 1707354459102,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 130,
    "total_testcases": 575,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Swift",
    "submission_id": "1169277491",
    "input_formatted": "1, 1",
    "input": "1\n1",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    func minimumPossibleSum(_ n: Int, _ target: Int) -> Int {\n        let mod = 1000000007\n        var sum = 0\n        var i = 1\n        \n        while i <= n {\n            if i < target - i {\n                sum = (sum + i) % mod\n            } else {\n                sum = (sum + i + 1) % mod\n            }\n            i += 1\n        }\n        \n        return sum\n    }\n}"
}