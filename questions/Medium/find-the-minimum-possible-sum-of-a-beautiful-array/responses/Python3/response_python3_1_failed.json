{
    "status_code": 11,
    "lang": "python3",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 16584000,
    "question_id": "3026",
    "elapsed_time": 50,
    "compare_result
    "code_output": "3",
    "std_output": "",
    "last_testcase": "2\n3",
    "expected_output": "4",
    "task_finish_time": 1708776191362,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 142,
    "total_testcases": 575,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python3",
    "submission_id": "1184778357",
    "input_formatted": "2, 3",
    "input": "2\n3",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution:\n    def minimumPossibleSum(self, n: int, target: int) -> int:\n        MOD = 10**9 + 7\n        sum_ = n * (n + 1) // 2  # Sum of first n natural numbers\n        if target <= n:\n            if target % 2 == 0:\n                sum_ += 1\n            return sum_ % MOD\n        return sum_ % MOD"
}