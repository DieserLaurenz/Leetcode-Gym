{
    "status_code": 11,
    "lang": "rust",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 2048000,
    "question_id": "3026",
    "elapsed_time": 9,
    "compare_result
    "code_output": "3",
    "std_output": "",
    "last_testcase": "2\n3",
    "expected_output": "4",
    "task_finish_time": 1707355151391,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 134,
    "total_testcases": 575,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Rust",
    "submission_id": "1169282770",
    "input_formatted": "2, 3",
    "input": "2\n3",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "impl Solution {\n    pub fn minimum_possible_sum(n: i32, target: i32) -> i32 {\n        const MOD: i64 = 1_000_000_007;\n        let mut sum: i64 = 0;\n        let n = n as i64;\n        let target = target as i64;\n\n        if target % 2 == 0 {\n            let half = target / 2;\n            if n <= half - 1 {\n                sum = n * (n + 1) / 2;\n            } else {\n                sum = (half - 1) * half / 2 + (n - (half - 1)) * (half + 1);\n            }\n        } else {\n            sum = n * (n + 1) / 2;\n        }\n\n        (sum % MOD) as i32\n    }\n}"
}