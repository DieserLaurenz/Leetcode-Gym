{
    "status_code": 11,
    "lang": "kotlin",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 33168000,
    "question_id": "3026",
    "elapsed_time": 4976,
    "compare_result
    "code_output": "3",
    "std_output": "",
    "last_testcase": "2\n3",
    "expected_output": "4",
    "task_finish_time": 1707354585504,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 144,
    "total_testcases": 575,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Kotlin",
    "submission_id": "1169278436",
    "input_formatted": "2, 3",
    "input": "2\n3",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    fun minimumPossibleSum(n: Int, target: Int): Int {\n        val mod = 1000000007\n        var sum: Long = 0\n        var added = 1\n        for (i in 1..n) {\n            if (added == target - added && i < n) {\n                added++\n            }\n            sum = (sum + added) % mod\n            added++\n        }\n        return sum.toInt()\n    }\n}"
}