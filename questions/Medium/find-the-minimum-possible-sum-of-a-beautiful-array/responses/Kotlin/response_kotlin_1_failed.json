{
    "status_code": 11,
    "lang": "kotlin",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 33524000,
    "question_id": "3026",
    "elapsed_time": 164,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "2\n3",
    "expected_output": "4",
    "task_finish_time": 1707354606404,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 124,
    "total_testcases": 575,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Kotlin",
    "submission_id": "1169278636",
    "input_formatted": "2, 3",
    "input": "2\n3",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    fun minimumPossibleSum(n: Int, target: Int): Int {\n        val mod = 1000000007\n        val half = (target + 1) / 2\n        return if (n >= half) {\n            val extra = n - half\n            (((half.toLong() * (half - 1) / 2) % mod + (target.toLong() * extra + extra.toLong() * (extra + 1) / 2) % mod) % mod).toInt()\n        } else {\n            ((n.toLong() * (n + 1) / 2) % mod).toInt()\n        }\n    }\n}"
}