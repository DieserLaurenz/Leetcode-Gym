{
    "status_code": 11,
    "lang": "ruby",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 223336000,
    "question_id": "3141",
    "elapsed_time": 386,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "[2,4,6,8]\n3",
    "expected_output": "-1",
    "task_finish_time": 1707972624915,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 237,
    "total_testcases": 535,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Ruby",
    "submission_id": "1175698910",
    "input_formatted": "[2,4,6,8], 3",
    "input": "[2,4,6,8]\n3",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "# @param {Integer[]} nums\n# @param {Integer} target\n# @return {Integer}\ndef min_size_subarray(nums, target)\n    total_sum = nums.sum\n    return -1 if total_sum < target\n\n    # Extending the array to handle wrapping cases\n    extended_nums = nums + nums\n    min_length = Float::INFINITY\n    left = 0\n    current_sum = 0\n\n    extended_nums.each_with_index do |num, right|\n        current_sum += num\n        while current_sum - extended_nums[left] >= target do\n            current_sum -= extended_nums[left]\n            left += 1\n        end\n        min_length = [min_length, right - left + 1].min if current_sum >= target\n    end\n\n    min_length == Float::INFINITY ? -1 : min_length\nend"
}