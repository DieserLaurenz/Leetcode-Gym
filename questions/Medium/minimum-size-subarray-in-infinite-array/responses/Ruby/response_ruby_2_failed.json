{
    "status_code": 11,
    "lang": "ruby",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 217356000,
    "question_id": "3141",
    "elapsed_time": 331,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "[2,4,6,8]\n3",
    "expected_output": "-1",
    "task_finish_time": 1707972659413,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 237,
    "total_testcases": 535,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Ruby",
    "submission_id": "1175699327",
    "input_formatted": "[2,4,6,8], 3",
    "input": "[2,4,6,8]\n3",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "# @param {Integer[]} nums\n# @param {Integer} target\n# @return {Integer}\ndef min_size_subarray(nums, target)\n    total = nums.sum\n    return -1 if total < target\n\n    min_len = Float::INFINITY\n    sum = 0\n    left = 0\n    (0...nums.size*2).each do |right|\n        sum += nums[right % nums.size]\n        while sum >= target\n            min_len = [min_len, right - left + 1].min\n            sum -= nums[left % nums.size]\n            left += 1\n        end\n    end\n\n    min_len == Float::INFINITY ? -1 : min_len\nend"
}