{
    "status_code": 11,
    "lang": "dart",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 196632000,
    "question_id": "3141",
    "elapsed_time": 801,
    "compare_result
    "code_output": "-1",
    "std_output": "",
    "last_testcase": "[2,1,5,7,7,1,6,3]\n39",
    "expected_output": "9",
    "task_finish_time": 1707972335831,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 364,
    "total_testcases": 535,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Dart",
    "submission_id": "1175695426",
    "input_formatted": "[2,1,5,7,7,1,6,3], 39",
    "input": "[2,1,5,7,7,1,6,3]\n39",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n  int minSizeSubarray(List<int> nums, int target) {\n    int totalSum = nums.fold(0, (sum, item) => sum + item);\n    if (totalSum < target) return -1;\n    Map<int, int> prefixSumIndex = {0: -1};\n    int prefixSum = 0, minLen = nums.length + 1;\n    for (int i = 0; i < nums.length * 2; i++) {\n      prefixSum += nums[i % nums.length];\n      if (prefixSumIndex.containsKey(prefixSum - target)) {\n        minLen = min(minLen, i - prefixSumIndex[prefixSum - target]!);\n      }\n      prefixSumIndex[prefixSum] = i;\n      if (prefixSum >= target + totalSum) break;\n    }\n    return minLen == nums.length + 1 ? -1 : minLen;\n  }\n\n  int min(int a, int b) => a < b ? a : b;\n}"
}