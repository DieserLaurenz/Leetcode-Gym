{
    "status_code": 15,
    "lang": "php",
    "run_success": false,
    "runtime_error": "Line 16: PHP Fatal error:  Uncaught Error: Class \"SplDQueue\" not found in solution.php",
    "full_runtime_error": "Line 16: PHP Fatal error:  Uncaught Error: Class \"SplDQueue\" not found in solution.php\nStack trace:\n#0 solution.php: Solution->minSizeSubarray()\n#1 {main}",
    "status_runtime": "N/A",
    "memory": 20024000,
    "question_id": "3141",
    "elapsed_time": 132,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "[1,2,3]\n5",
    "expected_output": "2",
    "task_finish_time": 1707971924455,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 535,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "PHP",
    "submission_id": "1175690424",
    "status_msg": "Runtime Error",
    "state": "SUCCESS",
    "code": "class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @param Integer $target\n     * @return Integer\n     */\n    function minSizeSubarray($nums, $target) {\n        $n = count($nums);\n        $prefixSum = array_fill(0, 2 * $n + 1, 0);\n        for ($i = 1; $i <= 2 * $n; $i++) {\n            $prefixSum[$i] = $prefixSum[$i - 1] + $nums[($i - 1) % $n];\n        }\n        \n        $result = PHP_INT_MAX;\n        $deque = new SplDQueue();\n        \n        for ($i = 0; $i <= 2 * $n; $i++) {\n            while (!$deque->isEmpty() && $prefixSum[$i] - $prefixSum[$deque->bottom()] >= $target) {\n                $result = min($result, $i - $deque->bottom());\n                $deque->shift();\n            }\n            $deque->push($i);\n        }\n        \n        return $result == PHP_INT_MAX ? -1 : $result;\n    }\n}"
}