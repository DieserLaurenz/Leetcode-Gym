{
    "status_code": 11,
    "lang": "golang",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 8312000,
    "question_id": "3141",
    "elapsed_time": 74,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "[2,4,6,8]\n3",
    "expected_output": "-1",
    "task_finish_time": 1707972495607,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 237,
    "total_testcases": 535,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Go",
    "submission_id": "1175697361",
    "input_formatted": "[2,4,6,8], 3",
    "input": "[2,4,6,8]\n3",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "func minSizeSubarray(nums []int, target int) int {\n    n := len(nums)\n    sum := 0\n    minLength := n + 1\n    left := 0\n\n    for right := 0; right < n; right++ {\n        sum += nums[right]\n        for sum >= target {\n            if right-left+1 < minLength {\n                minLength = right - left + 1\n            }\n            sum -= nums[left]\n            left++\n        }\n    }\n\n    for right := 0; right < n-1; right++ {\n        sum += nums[right]\n        for sum >= target {\n            if right+n-left < minLength {\n                minLength = right + n - left + 1\n            }\n            sum -= nums[left%n]\n            left++\n        }\n    }\n\n    if minLength == n+1 {\n        return -1\n    }\n    return minLength\n}"
}