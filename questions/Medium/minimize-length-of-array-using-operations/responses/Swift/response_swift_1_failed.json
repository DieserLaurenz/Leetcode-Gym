{
    "status_code": 11,
    "lang": "swift",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 25760000,
    "question_id": "3244",
    "elapsed_time": 495,
    "compare_result": "010100000000000000000000101000000000000000000000000000000000000000000000000100100000101000000100000000001000010000100000000110000000110000010000000000001001010110000000010100100010000001011000110110000000010011010000000001101100100101010000110111010011001000001110010001001000110011101001010000111010011100110001001100010110000100000110000000100000000000000010000000000000000000001000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010100000000000000000110",
    "code_output": "2",
    "std_output": "",
    "last_testcase": "[1,4,3,1]",
    "expected_output": "1",
    "task_finish_time": 1707710415311,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 95,
    "total_testcases": 522,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Swift",
    "submission_id": "1172812642",
    "input_formatted": "[1,4,3,1]",
    "input": "[1,4,3,1]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    func minimumArrayLength(_ nums: [Int]) -> Int {\n        var gcdMap = [Int: Int]()\n        for num in nums {\n            let gcdVal = gcd(num, 0)\n            gcdMap[gcdVal, default: 0] += 1\n        }\n        return gcdMap.keys.count == 1 && gcdMap.keys.first! == 1 ? 1 : 2\n    }\n    \n    private func gcd(_ a: Int, _ b: Int) -> Int {\n        return b == 0 ? a : gcd(b, a % b)\n    }\n}"
}