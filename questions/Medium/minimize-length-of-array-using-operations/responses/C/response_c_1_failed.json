{
    "status_code": 11,
    "lang": "c",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 13908000,
    "question_id": "3244",
    "elapsed_time": 114,
    "compare_result": "111111111011000111111111111111111111111111111101111111111111111111111111111011011111010111111011111111110111101111011111111001111111001101101111111111110110100001111110101011001101111100100111001001111001101100101111111010000010000010101101001000000100010001000001000000010000001000000010100110000000000011000010000000000000001000100000000000010000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011010110111010010011111110",
    "code_output": "2",
    "std_output": "",
    "last_testcase": "[2,4]",
    "expected_output": "1",
    "task_finish_time": 1707701043380,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 216,
    "total_testcases": 522,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C",
    "submission_id": "1172739409",
    "input_formatted": "[2,4]",
    "input": "[2,4]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "int minimumArrayLength(int* nums, int numsSize) {\n    int gcd(int a, int b) {\n        while (b != 0) {\n            int t = b;\n            b = a % b;\n            a = t;\n        }\n        return a;\n    }\n\n    if (numsSize == 1) return 1;\n\n    int g = nums[0];\n    for (int i = 1; i < numsSize; ++i) {\n        g = gcd(g, nums[i]);\n        if (g == 1) return 1;\n    }\n\n    return g == 1 ? 1 : 2;\n}"
}