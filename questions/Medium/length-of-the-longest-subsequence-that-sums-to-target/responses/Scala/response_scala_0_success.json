{
    "status_code": 10,
    "lang": "scala",
    "run_success": true,
    "status_runtime": "628 ms",
    "memory": 59040000,
    "question_id": "3106",
    "elapsed_time": 696,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1707504183514,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 941,
    "total_testcases": 941,
    "runtime_percentile": 100,
    "status_memory": "59 MB",
    "memory_percentile": 100,
    "pretty_lang": "Scala",
    "submission_id": "1170862857",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "object Solution {\n    def lengthOfLongestSubsequence(nums: List[Int], target: Int): Int = {\n        val dp = Array.fill(target + 1)(-1)\n        dp(0) = 0\n        for (num <- nums) {\n            for (j <- target to num by -1) {\n                if (dp(j - num) != -1) dp(j) = math.max(dp(j), dp(j - num) + 1)\n            }\n        }\n        dp(target)\n    }\n}"
}