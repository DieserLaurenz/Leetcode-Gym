{
    "status_code": 10,
    "lang": "python",
    "run_success": true,
    "status_runtime": "2149 ms",
    "memory": 11768000,
    "question_id": "3106",
    "elapsed_time": 2298,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1708777282373,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 941,
    "total_testcases": 941,
    "runtime_percentile": 81.81819999999999,
    "status_memory": "11.8 MB",
    "memory_percentile": 100,
    "pretty_lang": "Python",
    "submission_id": "1184788737",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution(object):\n    def lengthOfLongestSubsequence(self, nums, target):\n        \"\"\"\n        :type nums: List[int]\n        :type target: int\n        :rtype: int\n        \"\"\"\n        dp = [-1] * (target + 1)\n        dp[0] = 0\n        for num in nums:\n            for curr_target in range(target, num - 1, -1):\n                if dp[curr_target - num] != -1:\n                    dp[curr_target] = max(dp[curr_target], dp[curr_target - num] + 1)\n        return dp[target]"
}