{
    "status_code": 10,
    "lang": "kotlin",
    "run_success": true,
    "status_runtime": "287 ms",
    "memory": 39308000,
    "question_id": "3106",
    "elapsed_time": 323,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1707495381088,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 941,
    "total_testcases": 941,
    "runtime_percentile": 100,
    "status_memory": "39.3 MB",
    "memory_percentile": 100,
    "pretty_lang": "Kotlin",
    "submission_id": "1170738820",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\n    fun lengthOfLongestSubsequence(nums: List<Int>, target: Int): Int {\n        val dp = IntArray(target + 1) { -1 }\n        dp[0] = 0\n        for (num in nums) {\n            for (sum in target downTo num) {\n                if (dp[sum - num] != -1) {\n                    dp[sum] = maxOf(dp[sum], dp[sum - num] + 1)\n                }\n            }\n        }\n        return dp[target]\n    }\n}"
}