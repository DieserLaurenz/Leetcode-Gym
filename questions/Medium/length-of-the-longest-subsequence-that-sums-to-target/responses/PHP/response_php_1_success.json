{
    "status_code": 10,
    "lang": "php",
    "run_success": true,
    "status_runtime": "650 ms",
    "memory": 19892000,
    "question_id": "3106",
    "elapsed_time": 721,
    "compare_result": "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1707495265978,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 941,
    "total_testcases": 941,
    "runtime_percentile": 100,
    "status_memory": "19.9 MB",
    "memory_percentile": 100,
    "pretty_lang": "PHP",
    "submission_id": "1170737463",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @param Integer $target\n     * @return Integer\n     */\n    function lengthOfLongestSubsequence($nums, $target) {\n        $dp = array_fill(0, $target + 1, -PHP_INT_MAX);\n        $dp[0] = 0;\n        foreach ($nums as $num) {\n            for ($i = $target; $i >= $num; $i--) {\n                if ($dp[$i - $num] != -PHP_INT_MAX) {\n                    $dp[$i] = max($dp[$i], $dp[$i - $num] + 1);\n                }\n            }\n        }\n        return $dp[$target] > 0 ? $dp[$target] : -1;\n    }\n}"
}