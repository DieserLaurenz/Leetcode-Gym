{
    "status_code": 11,
    "lang": "php",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 20140000,
    "question_id": "3106",
    "elapsed_time": 676,
    "compare_result
    "code_output": "2",
    "std_output": "",
    "last_testcase": "[1,1,5,4,5]\n3",
    "expected_output": "-1",
    "task_finish_time": 1707495228075,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 922,
    "total_testcases": 941,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "PHP",
    "submission_id": "1170736994",
    "input_formatted": "[1,1,5,4,5], 3",
    "input": "[1,1,5,4,5]\n3",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @param Integer $target\n     * @return Integer\n     */\n    function lengthOfLongestSubsequence($nums, $target) {\n        $dp = array_fill(0, $target + 1, -1);\n        $dp[0] = 0;\n        foreach ($nums as $num) {\n            for ($i = $target; $i >= $num; $i--) {\n                if ($dp[$i - $num] != -1) {\n                    $dp[$i] = max($dp[$i], $dp[$i - $num] + 1);\n                }\n            }\n        }\n        $result = -1;\n        for ($i = $target; $i >= 0; $i--) {\n            if ($dp[$i] != -1) {\n                $result = max($result, $dp[$i]);\n                break;\n            }\n        }\n        return $result;\n    }\n}"
}