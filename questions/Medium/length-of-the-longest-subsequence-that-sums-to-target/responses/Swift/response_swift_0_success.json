{
    "status_code": 10,
    "lang": "swift",
    "run_success": true,
    "status_runtime": "40 ms",
    "memory": 15660000,
    "question_id": "3106",
    "elapsed_time": 50,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1707495322586,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 941,
    "total_testcases": 941,
    "runtime_percentile": 100,
    "status_memory": "15.7 MB",
    "memory_percentile": 50.0,
    "pretty_lang": "Swift",
    "submission_id": "1170738102",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\n    func lengthOfLongestSubsequence(_ nums: [Int], _ target: Int) -> Int {\n        var dp = Array(repeating: -1, count: target + 1)\n        dp[0] = 0\n        for num in nums {\n            for currentTarget in stride(from: target, through: num, by: -1) {\n                if dp[currentTarget - num] != -1 {\n                    dp[currentTarget] = max(dp[currentTarget], dp[currentTarget - num] + 1)\n                }\n            }\n        }\n        return dp[target]\n    }\n}"
}