{
    "status_code": 14,
    "lang": "racket",
    "run_success": false,
    "status_runtime": "N/A",
    "memory": 100984000,
    "question_id": "3106",
    "elapsed_time": 5020,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "[3,7,6,7,2,2,2,10,7,10,8,7,7,10,7,3,1,2,8,3,5,1,5,8,4,8,8,7,6,2,4,8,10,9,5,9,2,3,1,7,4,10,7,5,2,8,6,5,1,3,5,9,9,10,6,10]\n162",
    "expected_output": "38",
    "task_finish_time": 1707504365145,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 616,
    "total_testcases": 941,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Racket",
    "submission_id": "1170865134",
    "status_msg": "Time Limit Exceeded",
    "state": "SUCCESS",
    "code": "(define/contract (length-of-longest-subsequence nums target)\n  (-> (listof exact-integer?) exact-integer? exact-integer?)\n  \n  (define (dp i t)\n    (if (= t 0) 0\n        (if (or (< i 0) (< t 0)) -1\n            (let ((exclude (dp (- i 1) t))\n                  (include (dp (- i 1) (- t (list-ref nums i)))))\n              (if (= include -1) exclude (max exclude (+ 1 include)))))))\n\n  (define max-len (dp (- (length nums) 1) target))\n  (if (= max-len 0) -1 max-len))"
}