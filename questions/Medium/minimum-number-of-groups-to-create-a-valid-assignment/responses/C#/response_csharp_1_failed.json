{
    "status_code": 11,
    "lang": "csharp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 45088000,
    "question_id": "3166",
    "elapsed_time": 267,
    "compare_result
    "code_output": "2",
    "std_output": "",
    "last_testcase": "[10,10,10,3,1,1]",
    "expected_output": "4",
    "task_finish_time": 1707855615036,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 52,
    "total_testcases": 630,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C#",
    "submission_id": "1174513887",
    "input_formatted": "[10,10,10,3,1,1]",
    "input": "[10,10,10,3,1,1]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "public class Solution {\n    public int MinGroupsForValidAssignment(int[] nums) {\n        var count = new int[100001];\n        foreach (var num in nums) {\n            count[num]++;\n        }\n\n        int groups = 0, prev = 0;\n        for (int i = 0; i < count.Length; i++) {\n            if (count[i] > 0) {\n                groups = Math.Max(groups, (count[i] + prev + 1) / 2);\n                prev = (count[i] + prev) % 2;\n            }\n        }\n\n        return groups;\n    }\n}"
}