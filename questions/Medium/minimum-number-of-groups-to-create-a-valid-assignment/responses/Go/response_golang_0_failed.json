{
    "status_code": 14,
    "lang": "golang",
    "run_success": false,
    "status_runtime": "N/A",
    "memory": 2016000,
    "question_id": "3166",
    "elapsed_time": 3013,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "[3,2,3,2,3]",
    "expected_output": "2",
    "task_finish_time": 1707856366438,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 630,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Go",
    "submission_id": "1174521357",
    "status_msg": "Time Limit Exceeded",
    "state": "SUCCESS",
    "code": "func minGroupsForValidAssignment(nums []int) int {\n    count := make(map[int]int)\n    for _, num := range nums {\n        count[num]++\n    }\n\n    maxCount := 0\n    for _, c := range count {\n        if c > maxCount {\n            maxCount = c\n        }\n    }\n\n    groups := 0\n    for maxCount > 0 {\n        groups++\n        for k := range count {\n            if count[k] > 0 {\n                count[k]--\n                maxCount = max(maxCount, count[k])\n            }\n        }\n    }\n\n    return groups\n}\n\nfunc max(a, b int) int {\n    if a > b {\n        return a\n    }\n    return b\n}"
}