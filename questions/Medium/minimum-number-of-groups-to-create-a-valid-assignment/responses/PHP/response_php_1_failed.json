{
    "status_code": 11,
    "lang": "php",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 29308000,
    "question_id": "3166",
    "elapsed_time": 374,
    "compare_result
    "code_output": "2",
    "std_output": "",
    "last_testcase": "[10,10,10,3,1,1]",
    "expected_output": "4",
    "task_finish_time": 1707855955300,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 44,
    "total_testcases": 630,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "PHP",
    "submission_id": "1174517307",
    "input_formatted": "[10,10,10,3,1,1]",
    "input": "[10,10,10,3,1,1]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @return Integer\n     */\n    function minGroupsForValidAssignment($nums) {\n        $countValues = array_count_values($nums);\n        $maxGroups = 0;\n        foreach ($countValues as $value) {\n            $maxGroups = max($maxGroups, (int)ceil($value / 2));\n        }\n\n        $oddCounts = 0;\n        foreach ($countValues as $value) {\n            if ($value % 2 !== 0) {\n                $oddCounts++;\n            }\n        }\n\n        return max($maxGroups, (int)ceil($oddCounts / 2));\n    }\n}"
}