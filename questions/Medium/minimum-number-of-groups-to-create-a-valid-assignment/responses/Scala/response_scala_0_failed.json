{
    "status_code": 11,
    "lang": "scala",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 105008000,
    "question_id": "3166",
    "elapsed_time": 1481,
    "compare_result
    "code_output": "3",
    "std_output": "",
    "last_testcase": "[3,2,3,2,3]",
    "expected_output": "2",
    "task_finish_time": 1707865431060,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 69,
    "total_testcases": 630,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Scala",
    "submission_id": "1174599951",
    "input_formatted": "[3,2,3,2,3]",
    "input": "[3,2,3,2,3]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "object Solution {\n    def minGroupsForValidAssignment(nums: Array[Int]): Int = {\n        val countMap = nums.groupBy(identity).view.mapValues(_.length).values.toArray\n        val maxCount = countMap.max\n        val sumCount = countMap.sum\n        \n        Math.max(maxCount, (sumCount + 1) / 2)\n    }\n}"
}