{
    "status_code": 11,
    "lang": "scala",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 105664000,
    "question_id": "3166",
    "elapsed_time": 1557,
    "compare_result
    "code_output": "3",
    "std_output": "",
    "last_testcase": "[3,2,3,2,3]",
    "expected_output": "2",
    "task_finish_time": 1707865481414,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 107,
    "total_testcases": 630,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Scala",
    "submission_id": "1174600307",
    "input_formatted": "[3,2,3,2,3]",
    "input": "[3,2,3,2,3]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "object Solution {\n    def minGroupsForValidAssignment(nums: Array[Int]): Int = {\n        val counts = nums.groupBy(identity).map(_._2.length)\n        val even = counts.count(_ % 2 == 0)\n        val odd = counts.size - even\n        (counts.sum + 1) / 2 max odd\n    }\n}"
}