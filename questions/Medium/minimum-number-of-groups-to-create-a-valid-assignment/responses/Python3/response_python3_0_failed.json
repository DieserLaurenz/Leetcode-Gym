{
    "status_code": 11,
    "lang": "python3",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 35460000,
    "question_id": "3166",
    "elapsed_time": 1836,
    "compare_result
    "code_output": "5",
    "std_output": "",
    "last_testcase": "[3,2,3,2,3]",
    "expected_output": "2",
    "task_finish_time": 1708819597049,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 46,
    "total_testcases": 630,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python3",
    "submission_id": "1185252286",
    "input_formatted": "[3,2,3,2,3]",
    "input": "[3,2,3,2,3]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "from typing import List\nfrom collections import Counter\n\nclass Solution:\n    def minGroupsForValidAssignment(self, nums: List[int]) -> int:\n        count = Counter(nums)\n        freq = sorted(count.values(), reverse=True)\n        \n        groups = 0\n        while freq:\n            groups += 1\n            i = 0\n            while i < len(freq):\n                freq[i] -= 1\n                if freq[i] == 0:\n                    freq.pop(i)\n                else:\n                    i += 1\n                i += 1\n        return groups"
}