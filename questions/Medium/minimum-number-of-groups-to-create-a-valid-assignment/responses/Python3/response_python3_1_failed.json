{
    "status_code": 11,
    "lang": "python3",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 36040000,
    "question_id": "3166",
    "elapsed_time": 772,
    "compare_result
    "code_output": "4",
    "std_output": "",
    "last_testcase": "[3,2,3,2,3]",
    "expected_output": "2",
    "task_finish_time": 1708819622037,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 66,
    "total_testcases": 630,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python3",
    "submission_id": "1185252491",
    "input_formatted": "[3,2,3,2,3]",
    "input": "[3,2,3,2,3]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "from typing import List\nfrom collections import Counter\n\nclass Solution:\n    def minGroupsForValidAssignment(self, nums: List[int]) -> int:\n        counter = Counter(nums)\n        max_count = max(counter.values())\n        even_counts = sum(1 for count in counter.values() if count % 2 == 0)\n        return max(max_count, (len(nums) + 1) // 2 + (even_counts % 2))"
}