{
    "status_code": 11,
    "lang": "elixir",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 214488000,
    "question_id": "3166",
    "elapsed_time": 1235,
    "compare_result
    "code_output": "3",
    "std_output": "",
    "last_testcase": "[3,2,3,2,3]",
    "expected_output": "2",
    "task_finish_time": 1707865930514,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 153,
    "total_testcases": 630,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Elixir",
    "submission_id": "1174603608",
    "input_formatted": "[3,2,3,2,3]",
    "input": "[3,2,3,2,3]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "defmodule Solution do\n  @spec min_groups_for_valid_assignment(nums :: [integer]) :: integer\n  def min_groups_for_valid_assignment(nums) do\n    nums\n    |> Enum.frequencies()\n    |> Map.values()\n    |> Enum.sort()\n    |> Enum.reduce(0, fn\n      x, acc when x > acc -> x\n      x, acc -> acc + 1\n    end)\n  end\nend"
}