{
    "status_code": 15,
    "lang": "rust",
    "run_success": false,
    "runtime_error": "",
    "full_runtime_error": "",
    "status_runtime": "N/A",
    "memory": 2084000,
    "question_id": "3166",
    "elapsed_time": 14,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "[10,10,10,3,1,1]",
    "expected_output": "4",
    "task_finish_time": 1707865595866,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 1,
    "total_testcases": 630,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Rust",
    "submission_id": "1174601169",
    "status_msg": "Runtime Error",
    "state": "SUCCESS",
    "code": "impl Solution {\n    pub fn min_groups_for_valid_assignment(nums: Vec<i32>) -> i32 {\n        let mut counts = vec![0; nums.len() + 1];\n        for num in nums {\n            counts[num as usize] += 1;\n        }\n        \n        let mut max_group = 0;\n        let mut current_group = 0;\n        \n        for count in counts {\n            if count > 0 {\n                current_group += count;\n                max_group = max_group.max((current_group + count - 1) / count);\n            }\n        }\n        \n        max_group\n    }\n}"
}