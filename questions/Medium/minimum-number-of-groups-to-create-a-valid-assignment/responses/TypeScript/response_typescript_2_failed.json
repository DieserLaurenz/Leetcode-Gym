{
    "status_code": 11,
    "lang": "typescript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 79492000,
    "question_id": "3166",
    "elapsed_time": 219,
    "compare_result
    "code_output": "2",
    "std_output": "",
    "last_testcase": "[10,10,10,3,1,1]",
    "expected_output": "4",
    "task_finish_time": 1707855860948,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 124,
    "total_testcases": 630,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "TypeScript",
    "submission_id": "1174516366",
    "input_formatted": "[10,10,10,3,1,1]",
    "input": "[10,10,10,3,1,1]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "function minGroupsForValidAssignment(nums: number[]): number {\n    const freq = new Map<number, number>();\n    nums.forEach(n => freq.set(n, (freq.get(n) || 0) + 1));\n    let maxGroupSize = 0;\n    for (const [_, count] of freq) {\n        maxGroupSize = Math.max(maxGroupSize, count);\n    }\n    return Math.ceil(nums.length / maxGroupSize);\n}"
}