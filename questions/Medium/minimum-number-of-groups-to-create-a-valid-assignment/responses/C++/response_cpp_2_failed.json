{
    "status_code": 11,
    "lang": "cpp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 130128000,
    "question_id": "3166",
    "elapsed_time": 302,
    "compare_result": "001100000001110001110010001101111111011111111000001100010001110000011001000010010100010111000101010000000010000111001001000000001010000000111000000000000000010010100000000011000000100000000000000000000000100000000000000000000000000000000000000000100000011000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001100110001100000101000000000",
    "code_output": "3",
    "std_output": "",
    "last_testcase": "[3,2,3,2,3]",
    "expected_output": "2",
    "task_finish_time": 1707855291253,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 76,
    "total_testcases": 630,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C++",
    "submission_id": "1174510450",
    "input_formatted": "[3,2,3,2,3]",
    "input": "[3,2,3,2,3]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\npublic:\n    int minGroupsForValidAssignment(vector<int>& nums) {\n        map<int, int> countMap;\n        for (int num : nums) {\n            countMap[num]++;\n        }\n\n        int groups = 0;\n        int previousCount = 0;\n        for (auto& [num, count] : countMap) {\n            if (previousCount > 0) {\n                count = max(0, count - previousCount);\n            }\n            groups += (count + 1) / 2;\n            previousCount = count % 2;\n        }\n\n        return groups;\n    }\n};"
}