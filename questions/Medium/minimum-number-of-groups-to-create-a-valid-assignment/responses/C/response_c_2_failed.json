{
    "status_code": 11,
    "lang": "c",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 494004000,
    "question_id": "3166",
    "elapsed_time": 3012,
    "compare_result
    "code_output": "3",
    "std_output": "",
    "last_testcase": "[3,2,3,2,3]",
    "expected_output": "2",
    "task_finish_time": 1707855530191,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 97,
    "total_testcases": 630,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C",
    "submission_id": "1174513005",
    "input_formatted": "[3,2,3,2,3]",
    "input": "[3,2,3,2,3]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "int minGroupsForValidAssignment(int* nums, int numsSize) {\n    int maxVal = 0;\n    for (int i = 0; i < numsSize; i++) {\n        if (nums[i] > maxVal) maxVal = nums[i];\n    }\n\n    int* count = (int*)calloc(maxVal + 1, sizeof(int));\n    for (int i = 0; i < numsSize; i++) {\n        count[nums[i]]++;\n    }\n\n    int maxCount = 0;\n    for (int i = 0; i <= maxVal; i++) {\n        if (count[i] > maxCount) {\n            maxCount = count[i];\n        }\n    }\n\n    free(count);\n    return maxCount;\n}"
}