{
    "status_code": 10,
    "lang": "golang",
    "run_success": true,
    "status_runtime": "1067 ms",
    "memory": 8172000,
    "question_id": "2868",
    "elapsed_time": 1110,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1707044367904,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 2135,
    "total_testcases": 2135,
    "runtime_percentile": 11.111200000000018,
    "status_memory": "8.2 MB",
    "memory_percentile": 88.8889,
    "pretty_lang": "Go",
    "submission_id": "1165762640",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "func continuousSubarrays(nums []int) int64 {\n    var count int64 = 0\n    left := 0\n    minVal, maxVal := nums[0], nums[0]\n\n    for right, val := range nums {\n        minVal = min(minVal, val)\n        maxVal = max(maxVal, val)\n        for maxVal-minVal > 2 {\n            // Move left pointer to the right and update minVal and maxVal\n            if nums[left] == minVal || nums[left] == maxVal {\n                // Recalculate minVal and maxVal for the new window\n                minVal, maxVal = nums[left+1], nums[left+1]\n                for k := left + 1; k <= right; k++ {\n                    minVal = min(minVal, nums[k])\n                    maxVal = max(maxVal, nums[k])\n                }\n            }\n            left++\n        }\n        count += int64(right - left + 1)\n    }\n\n    return count\n}\n\n// Helper functions to find min and max\nfunc min(a, b int) int {\n    if a < b {\n        return a\n    }\n    return b\n}\n\nfunc max(a, b int) int {\n    if a > b {\n        return a\n    }\n    return b\n}"
}