{
    "status_code": 10,
    "lang": "typescript",
    "run_success": true,
    "status_runtime": "1981 ms",
    "memory": 61828000,
    "question_id": "2868",
    "elapsed_time": 2242,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706950401414,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 2135,
    "total_testcases": 2135,
    "runtime_percentile": 100,
    "status_memory": "61.8 MB",
    "memory_percentile": 100,
    "pretty_lang": "TypeScript",
    "submission_id": "1164602260",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "function continuousSubarrays(nums: number[]): number {\n    let total = 0;\n    let start = 0, end = 0;\n    let min = nums[0], max = nums[0];\n\n    while (end < nums.length) {\n        // Update min and max for the current window\n        min = Math.min(min, nums[end]);\n        max = Math.max(max, nums[end]);\n\n        // While the current window is valid, move `end` forward and update `total`\n        if (max - min <= 2) {\n            // The number of subarrays ending at `end` and starting from any index between `start` and `end` inclusive\n            total += (end - start + 1);\n            end++;\n        } else {\n            // If the window is invalid, move `start` forward and adjust min and max accordingly\n            start++;\n            // Reset min and max for the new window\n            min = nums[start];\n            max = nums[start];\n            // Adjust for the case where `start` surpasses `end`\n            if (start > end) {\n                end = start;\n                min = nums[start];\n                max = nums[start];\n            } else {\n                // Recalculate min and max for the current window since it has changed\n                for (let i = start; i <= end; i++) {\n                    min = Math.min(min, nums[i]);\n                    max = Math.max(max, nums[i]);\n                }\n            }\n        }\n    }\n\n    return total;\n}"
}