{
    "status_code": 11,
    "lang": "typescript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 64544000,
    "question_id": "2868",
    "elapsed_time": 4013,
    "compare_result
    "code_output": "13",
    "std_output": "",
    "last_testcase": "[5,4,2,4]",
    "expected_output": "8",
    "task_finish_time": 1706950360451,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 189,
    "total_testcases": 2135,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "TypeScript",
    "submission_id": "1164601875",
    "input_formatted": "[5,4,2,4]",
    "input": "[5,4,2,4]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "function continuousSubarrays(nums: number[]): number {\n    let total = 0;\n    let start = 0;\n\n    // Iterate through the array to find all possible continuous subarrays\n    while (start < nums.length) {\n        let min = nums[start];\n        let max = nums[start];\n        let end = start;\n\n        // Expand the current subarray towards the right\n        while (end < nums.length) {\n            min = Math.min(min, nums[end]);\n            max = Math.max(max, nums[end]);\n\n            // Check if the subarray [start, end] is continuous\n            if (max - min > 2) {\n                break;\n            }\n\n            // Increment total by the number of subarrays ending at 'end'\n            total += (end - start + 1);\n            end++;\n        }\n\n        // Move the start forward for the next iteration\n        start++;\n    }\n\n    return total;\n}"
}