{
    "status_code": 10,
    "lang": "cpp",
    "run_success": true,
    "status_runtime": "226 ms",
    "memory": 154848000,
    "question_id": "2868",
    "elapsed_time": 286,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706886612012,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 2135,
    "total_testcases": 2135,
    "runtime_percentile": 48.24199999999981,
    "status_memory": "154.8 MB",
    "memory_percentile": 9.132899999999903,
    "pretty_lang": "C++",
    "submission_id": "1163990458",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\npublic:\n    long long continuousSubarrays(vector<int>& nums) {\n        long long count = 0;\n        int left = 0;\n        \n        // Use a multiset to keep track of the minimum and maximum elements in the current window\n        multiset<int> windowElements;\n\n        for (int right = 0; right < nums.size(); ++right) {\n            windowElements.insert(nums[right]);\n\n            // Check the condition for the current window\n            // If it is not satisfied, move the left pointer to the right\n            while (*windowElements.rbegin() - *windowElements.begin() > 2) {\n                // Remove the element at the left pointer from the multiset\n                windowElements.erase(windowElements.find(nums[left]));\n                left++;\n            }\n\n            // For each position of right, the number of continuous subarrays ending at right\n            // is equal to the length of the window\n            count += right - left + 1;\n        }\n\n        return count;\n    }\n};"
}