{
    "status_code": 10,
    "lang": "scala",
    "run_success": true,
    "status_runtime": "2078 ms",
    "memory": 73820000,
    "question_id": "2868",
    "elapsed_time": 2239,
    "compare_result": "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1707053901533,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 2135,
    "total_testcases": 2135,
    "runtime_percentile": 100,
    "status_memory": "73.8 MB",
    "memory_percentile": 100,
    "pretty_lang": "Scala",
    "submission_id": "1165865759",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "object Solution {\n    def continuousSubarrays(nums: Array[Int]): Long = {\n        var total: Long = 0\n        var left = 0\n        var right = 0\n        var minVal = nums(0)\n        var maxVal = nums(0)\n        \n        while (right < nums.length) {\n            minVal = minVal min nums(right)\n            maxVal = maxVal max nums(right)\n            \n            // If the current window does not satisfy the condition,\n            // move the left pointer to find a valid subarray.\n            while (maxVal - minVal > 2) {\n                left += 1\n                // Recalculate min and max for the new window\n                minVal = nums(left)\n                maxVal = nums(left)\n                for (k <- left to right) {\n                    minVal = minVal min nums(k)\n                    maxVal = maxVal max nums(k)\n                }\n            }\n            \n            // All subarrays ending at 'right' and starting from 'left' to 'right' are valid.\n            total += (right - left + 1)\n            right += 1\n        }\n        \n        total\n    }\n}"
}