{
    "status_code": 11,
    "lang": "scala",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 81788000,
    "question_id": "2877",
    "elapsed_time": 8207,
    "compare_result": "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111011111111111111111110111111111111111111111011111111111111101111111111111111111111111111111011111111111101111101111111111111111111111111111111111111111111111111011111111111111111111111111111011111111111111111111111111010111111111111111111111111111111101111111111111111111111111111111111111111111111111111111100111111111111111111111111111111111111111111111111111111110111110111111111111111111111101011111111111111111111111111111111111111110111011111111011111111101111111111111111111111111111111110101111111111111111111011111111111111111111110111111110111111111111111111111111011111011011111101111111111101110111111111111111011111011110111111111111111011111110111110110111101101111111111010101111111101111111111011111111111111111111111111111111110111011110111111111011111111111110111010111001111111110111101111111101111111111111111110111101011011111111010111001111111111110110110011111011111111110111110111110101111101111111101101111111111111111111101111111101111111111111110110111111111011111111111111111110111100111111011001111101111111111101010011011111100111111110001111111110110111100111111111011111111101011110111110110111011101111111111111111111111101111100101111111101111111101110111011101111111111111011111111111111111111101111111111111110111111111111111111111111111111011111001111111111111111111110110111001111111111111111001111111111111111111111111111111101111110110101111111011111111111011111111101101111011111111111111111110110110111111111111011111111111111111111011111111111111111111111111111111111111111111010011111111111111111111011111111101111111111111011111111111111111010111111111011011111111111111111101111111111111111111111110111111111111011111111111111111111111111111111111111111111001011110111111111111110111101111111111111111111111111111111111111111111111111011011101111110111111011110100111111111111111111111111111111110111101001001110111101101001111111111111011101111111100111101011111001111110111101001111111101111111111111101111101111111111111111111101111111111011111111111111111001011111101101111111111111111111100111111111111110111111111111111111111011011110101110111111111011111111110101111111101110111111100100111111111101100111011111111101010111101011111101111011111111111111111111111111101111111111111111111111111111111110111111111111111111011111011111111101110011111111111110111110111111110111111011001111010111111111111111111111000111111000111101011111101111100111111111111111101111111111111111111101111111111111111111111110111101111111111111111111111111111111111111101101100101111001011111111111110111111110101111001110111111110111110100101111010111111111111111110111111111111011111111111111111111111111111111111111110010111111111111101110111011111110111111110100111010111111111111111111111111111111111011111111011111101111111110111111111011111111110111111111111111111111111111111110111111110111111111111111001111111101101111111101101111111111111111011111111111110111111010010101111110110110000111111111111111111110111111101111111111111111101011011111010111110110001101111111111101101111001011111001011111110111011010101111011101111111111111111111111001111010111111111111110101100111011101111011111111111111001111101110010110111111110101111101111011111111111111111111111111110111110111111111111111111111111111111111111101111111111111111111111011111010111111101111111111111001111111101101111111111111111111111111101111110011111111111111110111111101111101100110111111101111111111011111111011111110111111111001111101011111111011111101101011110111111111111111111110100110001111111111110111111111111111111111101111111111101101111111110111111111111111111101111111111111111111111111110111111101101111111111111111111111111111111111111110111110111111111010101111110011111111101111111111111111011111111111111111111101111111111111011110111111111111111111111111111111111111011111111111111111111011101101011111111111111111111010111111111111111111111111111111111011111111001111011100100111111101010111111110111111111110111011111110111010011111111111111111110011111111111111111111111111011111111111111111111111111110011111111111111101111111111111111111111111111111111111111111101111111111111111111111111111111111111111111111110101111111111111001111110111101111111111111110111110111111001110111111111001011111100010111011111111101011011111011110110111111111011110110111111111111111111111011110111111101111111110111111111111111011111011111111111111111111111111111110111111111111111110111011111011111111111110111111101011111101111111111101101111101111111110111111011111111111111111011111011101011111110011110111111110111111101111111111111111110101111111111111111010111111111111101111110111110011011111111111111110111011111111011101111111111110110110111111111101111110110111101101111101111111111011101010101111111111111111111111111111111111111101111111101111111111111011111111111111111110110111111111111111111111111110001111111111111111111110110111111011111111111111111111110101111101111111111101110111111111111110110110111111101111110111101101011111111110111110111110101111111111111111111111111111111110111111111011111111111111011110111010100111111111111111111111110111111111110001111110111101111111111101111111011011110111111",
    "code_output": "\"acac\"",
    "std_output": "",
    "last_testcase": "\"a\"\n\"a\"\n\"cac\"",
    "expected_output": "\"cac\"",
    "task_finish_time": 1708154846783,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 4726,
    "total_testcases": 5324,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Scala",
    "submission_id": "1177596344",
    "input_formatted": "\"a\", \"a\", \"cac\"",
    "input": "\"a\"\n\"a\"\n\"cac\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "object Solution {\n    def minimumString(a: String, b: String, c: String): String = {\n        def merge(s1: String, s2: String): String = {\n            (for {\n                i <- 0 to s1.length\n                j <- 0 to s2.length\n                if s1.endsWith(s2.substring(0, j)) || s2.endsWith(s1.substring(0, i))\n            } yield {\n                if (s1.endsWith(s2.substring(0, j))) s1 + s2.substring(j)\n                else s2 + s1.substring(i)\n            }).minBy(_.length)\n        }\n        \n        Seq(a, b, c).permutations.map {\n            case Seq(x, y, z) => merge(merge(x, y), z)\n        }.minBy(s => (s.length, s))\n    }\n}"
}