{
    "status_code": 11,
    "lang": "csharp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 94464000,
    "question_id": "2877",
    "elapsed_time": 497,
    "compare_result
    "code_output": "\"aaaabcbca\"",
    "std_output": "",
    "last_testcase": "\"abc\"\n\"bca\"\n\"aaa\"",
    "expected_output": "\"aaabca\"",
    "task_finish_time": 1708153820962,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 1247,
    "total_testcases": 5324,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C#",
    "submission_id": "1177585165",
    "input_formatted": "\"abc\", \"bca\", \"aaa\"",
    "input": "\"abc\"\n\"bca\"\n\"aaa\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "public class Solution {\n    public string MinimumString(string a, string b, string c) {\n        string[] perms = {a + b + c, a + c + b, b + a + c, b + c + a, c + a + b, c + b + a};\n        string result = null;\n        foreach (string perm in perms) {\n            string minimized = Minimize(perm);\n            if (result == null || minimized.Length < result.Length || (minimized.Length == result.Length && string.CompareOrdinal(minimized, result) < 0)) {\n                result = minimized;\n            }\n        }\n        return result;\n    }\n\n    private string Minimize(string s) {\n        for (int len = s.Length; len > 0; len--) {\n            for (int start = 0; start + len <= s.Length; start++) {\n                string sub = s.Substring(start, len);\n                if (s.IndexOf(sub) == s.LastIndexOf(sub)) {\n                    return s.Substring(0, start) + sub + s.Substring(start + len);\n                }\n            }\n        }\n        return s;\n    }\n}"
}