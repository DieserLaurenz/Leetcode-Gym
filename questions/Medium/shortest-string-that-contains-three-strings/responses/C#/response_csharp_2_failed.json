{
    "status_code": 11,
    "lang": "csharp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 96996000,
    "question_id": "2877",
    "elapsed_time": 217,
    "compare_result
    "code_output": "\"xyyyzxzyzzzz\"",
    "std_output": "",
    "last_testcase": "\"xyyyz\"\n\"xzyz\"\n\"zzz\"",
    "expected_output": "\"xyyyzxzyzzz\"",
    "task_finish_time": 1708153885172,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 2628,
    "total_testcases": 5324,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C#",
    "submission_id": "1177585885",
    "input_formatted": "\"xyyyz\", \"xzyz\", \"zzz\"",
    "input": "\"xyyyz\"\n\"xzyz\"\n\"zzz\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "public class Solution {\n    public string MinimumString(string a, string b, string c) {\n        // Helper function to check if one string contains another\n        bool Contains(string s1, string s2) => s1.Contains(s2);\n\n        // Helper function to merge two strings into the shortest string containing both\n        string Merge(string s1, string s2) {\n            if (Contains(s1, s2)) return s1;\n            if (Contains(s2, s1)) return s2;\n            for (int i = s1.Length; i > 0; i--) {\n                if (s2.StartsWith(s1.Substring(i))) {\n                    return s1 + s2.Substring(s1.Length - i);\n                }\n            }\n            return s1 + s2;\n        }\n\n        // Attempt to merge all strings in all possible orders, keeping track of the shortest result\n        string[] allStrings = {a, b, c};\n        string result = new string('z', 301); // Upper bound based on constraints\n        for (int i = 0; i < 3; i++) {\n            for (int j = 0; j < 3; j++) {\n                if (j == i) continue;\n                for (int k = 0; k < 3; k++) {\n                    if (k == i || k == j) continue;\n                    string temp = Merge(Merge(allStrings[i], allStrings[j]), allStrings[k]);\n                    if (temp.Length < result.Length || (temp.Length == result.Length && string.CompareOrdinal(temp, result) < 0)) {\n                        result = temp;\n                    }\n                }\n            }\n        }\n        return result;\n    }\n}"
}