{
    "status_code": 11,
    "lang": "scala",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 63076000,
    "question_id": "3266",
    "elapsed_time": 775,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "\"aaaa\"",
    "expected_output": "2",
    "task_finish_time": 1707294237648,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 159,
    "total_testcases": 906,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Scala",
    "submission_id": "1168602416",
    "input_formatted": "\"aaaa\"",
    "input": "\"aaaa\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "object Solution {\n    def maximumLength(s: String): Int = {\n        val counts = new Array[Int](26)\n        s.foreach(c => counts(c - 'a') += 1)\n        var maxLen = -1\n        for (i <- counts.indices) {\n            if (counts(i) >= 3) maxLen = Math.max(maxLen, counts(i))\n        }\n        if (maxLen < 3) -1 else 1\n    }\n}"
}