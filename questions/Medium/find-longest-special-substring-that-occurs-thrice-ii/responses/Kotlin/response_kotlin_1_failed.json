{
    "status_code": 11,
    "lang": "kotlin",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 48480000,
    "question_id": "3266",
    "elapsed_time": 447,
    "compare_result
    "code_output": "4",
    "std_output": "",
    "last_testcase": "\"aaaa\"",
    "expected_output": "2",
    "task_finish_time": 1707284904004,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 27,
    "total_testcases": 906,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Kotlin",
    "submission_id": "1168490505",
    "input_formatted": "\"aaaa\"",
    "input": "\"aaaa\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    fun maximumLength(s: String): Int {\n        var maxLen = -1\n        for (ch in 'a'..'z') {\n            var count = 0\n            var maxCurrent = 0\n            for (i in s.indices) {\n                if (s[i] == ch) {\n                    count++\n                    if (count >= 3) maxCurrent = count\n                } else {\n                    if (count >= 3) maxLen = maxOf(maxLen, maxCurrent)\n                    count = 0\n                }\n            }\n            if (count >= 3) maxLen = maxOf(maxLen, maxCurrent)\n        }\n        return if (maxLen >= 3) maxLen else -1\n    }\n}"
}