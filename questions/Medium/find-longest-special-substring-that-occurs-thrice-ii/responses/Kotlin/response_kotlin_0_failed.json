{
    "status_code": 11,
    "lang": "kotlin",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 37812000,
    "question_id": "3266",
    "elapsed_time": 5105,
    "compare_result
    "code_output": "4",
    "std_output": "",
    "last_testcase": "\"aaaa\"",
    "expected_output": "2",
    "task_finish_time": 1707284873813,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 24,
    "total_testcases": 906,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Kotlin",
    "submission_id": "1168490041",
    "input_formatted": "\"aaaa\"",
    "input": "\"aaaa\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    fun maximumLength(s: String): Int {\n        val freq = IntArray(26) { 0 }\n        var maxLen = -1\n        s.forEach { c -> freq[c - 'a']++ }\n        for (i in freq.indices) {\n            if (freq[i] >= 3) {\n                val char = 'a' + i\n                var tempLen = 0\n                var count = 0\n                for (j in s.indices) {\n                    if (s[j] == char) {\n                        tempLen++\n                        count = 1\n                        while (j + count < s.length && s[j + count] == char) {\n                            tempLen++\n                            count++\n                        }\n                        maxLen = maxOf(maxLen, tempLen)\n                        tempLen = 0\n                    }\n                }\n            }\n        }\n        return if (maxLen >= 3) maxLen else -1\n    }\n}"
}