{
    "status_code": 11,
    "lang": "csharp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 51652000,
    "question_id": "3266",
    "elapsed_time": 4013,
    "compare_result
    "code_output": "-1",
    "std_output": "",
    "last_testcase": "\"abcaba\"",
    "expected_output": "1",
    "task_finish_time": 1707284345536,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 895,
    "total_testcases": 906,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C#",
    "submission_id": "1168483110",
    "input_formatted": "\"abcaba\"",
    "input": "\"abcaba\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "public class Solution {\n    public int MaximumLength(string s) {\n        int maxLen = -1;\n        for (char c = 'a'; c <= 'z'; c++) {\n            int freq = 0, first = -1, second = -1;\n            for (int i = 0; i < s.Length; i++) {\n                if (s[i] == c) {\n                    freq++;\n                    if (first == -1) first = i;\n                    second = i;\n                } else {\n                    if (freq >= 3) {\n                        maxLen = Math.Max(maxLen, second - first + 1);\n                    }\n                    freq = 0;\n                    first = -1;\n                }\n            }\n            if (freq >= 3) {\n                maxLen = Math.Max(maxLen, second - first + 1);\n            }\n        }\n        for (int len = maxLen; len > 0; len--) {\n            for (char c = 'a'; c <= 'z'; c++) {\n                int count = 0;\n                for (int i = 0; i <= s.Length - len; i++) {\n                    bool valid = true;\n                    for (int j = i; j < i + len; j++) {\n                        if (s[j] != c) {\n                            valid = false;\n                            break;\n                        }\n                    }\n                    if (valid) count++;\n                    if (count == 3) return len;\n                }\n            }\n        }\n        return -1;\n    }\n}"
}