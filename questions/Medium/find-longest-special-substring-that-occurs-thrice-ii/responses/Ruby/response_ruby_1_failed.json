{
    "status_code": 11,
    "lang": "ruby",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 217612000,
    "question_id": "3266",
    "elapsed_time": 3321,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "\"aaaa\"",
    "expected_output": "2",
    "task_finish_time": 1707285284633,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 155,
    "total_testcases": 906,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Ruby",
    "submission_id": "1168495442",
    "input_formatted": "\"aaaa\"",
    "input": "\"aaaa\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "# @param {String} s\n# @return {Integer}\ndef maximum_length(s)\n  max_len = -1\n  (0..s.length-1).each do |i|\n    ('a'..'z').each do |char|\n      len = 1\n      while i + 3 * len - 1 < s.length && s[i, len] == char * len\n        if s[i+len, len] == char * len && s[i+2*len, len] == char * len\n          max_len = [max_len, len].max\n        end\n        len += 1\n      end\n    end\n  end\n  max_len\nend"
}