{
    "status_code": 11,
    "lang": "python",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 16156000,
    "question_id": "3266",
    "elapsed_time": 11009,
    "compare_result
    "code_output": "4",
    "std_output": "",
    "last_testcase": "\"aaaa\"",
    "expected_output": "2",
    "task_finish_time": 1708766341961,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 61,
    "total_testcases": 906,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python",
    "submission_id": "1184683917",
    "input_formatted": "\"aaaa\"",
    "input": "\"aaaa\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution(object):\n    def maximumLength(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: int\n        \"\"\"\n        max_len = -1\n        for c in set(s):\n            parts = [len(part) for part in s.split(c) if part]\n            counts = s.count(c)\n            if counts >= 3:\n                max_len = max(max_len, 1)\n                for length in range(2, counts + 1):\n                    if c*length in s:\n                        max_len = length\n        return max_len"
}