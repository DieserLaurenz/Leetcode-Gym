{
    "status_code": 11,
    "lang": "python3",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 22108000,
    "question_id": "3266",
    "elapsed_time": 5663,
    "compare_result
    "code_output": "4",
    "std_output": "",
    "last_testcase": "\"aaaa\"",
    "expected_output": "2",
    "task_finish_time": 1708766422884,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 27,
    "total_testcases": 906,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python3",
    "submission_id": "1184684766",
    "input_formatted": "\"aaaa\"",
    "input": "\"aaaa\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution:\n    def maximumLength(self, s: str) -> int:\n        res = -1\n        for c in set(s):\n            start, count, max_len = None, 0, 0\n            for i, char in enumerate(s):\n                if char == c:\n                    if start is None:\n                        start = i\n                    count += 1\n                    if count >= 3:\n                        max_len = max(max_len, i - start + 1)\n                else:\n                    if count >= 3:\n                        max_len = max(max_len, i - start)\n                    start, count = None, 0\n            res = max(res, max_len)\n        return res if res > 0 else -1"
}