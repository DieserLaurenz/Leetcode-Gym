{
    "status_code": 11,
    "lang": "python3",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 29864000,
    "question_id": "3266",
    "elapsed_time": 3652,
    "compare_result
    "code_output": "5",
    "std_output": "",
    "last_testcase": "\"abcaba\"",
    "expected_output": "1",
    "task_finish_time": 1708766394095,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 90,
    "total_testcases": 906,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python3",
    "submission_id": "1184684477",
    "input_formatted": "\"abcaba\"",
    "input": "\"abcaba\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution:\n    def maximumLength(self, s: str) -> int:\n        max_length = -1\n        for char in set(s):\n            indexes = [i for i, c in enumerate(s) if c == char]\n            if len(indexes) >= 3:\n                max_length = max(max_length, indexes[2] - indexes[0])\n        return max_length if max_length > 0 else -1"
}