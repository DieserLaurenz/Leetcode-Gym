{
    "status_code": 11,
    "lang": "dart",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 156472000,
    "question_id": "3266",
    "elapsed_time": 5015,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "\"aaaa\"",
    "expected_output": "2",
    "task_finish_time": 1707285043754,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 221,
    "total_testcases": 906,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Dart",
    "submission_id": "1168492293",
    "input_formatted": "\"aaaa\"",
    "input": "\"aaaa\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n  int maximumLength(String s) {\n    int result = -1;\n    for (int i = 0; i < s.length; ) {\n      int start = i;\n      while (i < s.length && s[start] == s[i]) i++;\n      int length = i - start;\n      if (length >= 3) result = max(result, length);\n    }\n    if (result == -1) return -1;\n    for (int len = result; len >= 1; len--) {\n      int count = 0;\n      for (int i = 0; i <= s.length - len; ) {\n        int end = i + len - 1;\n        if (s[i] == s[end] && (end - i + 1) == len && s.substring(i, end + 1) == s[i] * len) {\n          count++;\n          if (count == 3) return len;\n          i = end + 1;\n        } else {\n          i++;\n        }\n      }\n    }\n    return -1;\n  }\n}"
}