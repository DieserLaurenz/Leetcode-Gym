{
    "status_code": 11,
    "lang": "golang",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 8012000,
    "question_id": "3266",
    "elapsed_time": 46,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "\"aaaa\"",
    "expected_output": "2",
    "task_finish_time": 1707285112881,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 155,
    "total_testcases": 906,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Go",
    "submission_id": "1168493246",
    "input_formatted": "\"aaaa\"",
    "input": "\"aaaa\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "func maximumLength(s string) int {\n    maxLen := -1\n\n    for i := 0; i < len(s); {\n        j := i + 1\n        for j < len(s) && s[j] == s[i] {\n            j++\n        }\n        length := j - i\n        if length >= 3 {\n            maxLen = max(maxLen, 1)\n        }\n        i = j\n    }\n\n    return maxLen\n}\n\nfunc max(a, b int) int {\n    if a > b {\n        return a\n    }\n    return b\n}"
}