{
    "status_code": 11,
    "lang": "c",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 12236000,
    "question_id": "3266",
    "elapsed_time": 55,
    "compare_result": "010011100110000000000000000000000000000000000001000001100000000000000000000000000000000000000000000000000100000000000000100001000000000010000010000000000000000000000000000000000000000010001010000000000010000000000001010000000000001000001000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111",
    "code_output": "4",
    "std_output": "",
    "last_testcase": "\"aaaa\"",
    "expected_output": "2",
    "task_finish_time": 1707284220159,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 27,
    "total_testcases": 906,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C",
    "submission_id": "1168481514",
    "input_formatted": "\"aaaa\"",
    "input": "\"aaaa\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "int maximumLength(char* s) {\n    int maxLen = -1;\n    for (int i = 0; s[i] != '\\0'; i++) {\n        if (s[i] == s[i + 1] && s[i] == s[i + 2]) {\n            int len = 3;\n            while (s[i] == s[i + len]) len++;\n            if (len > maxLen) maxLen = len;\n            i += len - 1; // Move to the end of the current sequence\n        }\n    }\n    return maxLen == -1 ? -1 : maxLen;\n}"
}