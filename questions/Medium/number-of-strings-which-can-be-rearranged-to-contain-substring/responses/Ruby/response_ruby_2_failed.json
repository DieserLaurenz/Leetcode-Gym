{
    "status_code": 11,
    "lang": "ruby",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 211164000,
    "question_id": "3200",
    "elapsed_time": 122,
    "compare_result": "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "code_output": "66363",
    "std_output": "",
    "last_testcase": "4",
    "expected_output": "12",
    "task_finish_time": 1708083275584,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 264,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Ruby",
    "submission_id": "1176900052",
    "input_formatted": "4",
    "input": "4",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "# @param {Integer} n\n# @return {Integer}\ndef string_count(n)\n    mod = 10**9 + 7\n    factorial = [1]\n    (1..n).each { |i| factorial[i] = factorial[i-1] * i % mod }\n  \n    # Calculate combinations for the letters in \"leet\"\n    leet_combinations = factorial[4] * factorial[n-4] % mod\n    leet_combinations = leet_combinations * pow(2, mod-2, mod) % mod # Adjust for the two 'e's\n  \n    # Calculate total permutations of all characters minus \"leet\" permutations\n    total_permutations = pow(26, n, mod) - pow(25, n, mod) + mod\n    total_permutations = (total_permutations + leet_combinations) % mod\n  \n    total_permutations\nend\n  \ndef pow(base, exponent, mod)\n    result = 1\n    while exponent > 0\n        result = result * base % mod if exponent.odd?\n        base = base * base % mod\n        exponent >>= 1\n    end\n    result\nend"
}