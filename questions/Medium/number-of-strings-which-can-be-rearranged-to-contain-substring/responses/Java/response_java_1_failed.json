{
    "status_code": 11,
    "lang": "java",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 41704000,
    "display_runtime": "19",
    "question_id": "3200",
    "elapsed_time": 169,
    "compare_result": "001110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "code_output": "576",
    "std_output": "",
    "last_testcase": "4",
    "expected_output": "12",
    "task_finish_time": 1708072674853,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 3,
    "total_testcases": 264,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Java",
    "submission_id": "1176790935",
    "input_formatted": "4",
    "input": "4",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    public int stringCount(int n) {\n        long mod = 1000000007;\n        if (n < 4) return 0; // No good strings if n is less than 4\n        \n        long[] factorial = new long[n + 1];\n        factorial[0] = 1;\n        for (int i = 1; i <= n; i++) {\n            factorial[i] = (factorial[i - 1] * i) % mod;\n        }\n        \n        long result = 0;\n        for (int i = 4; i <= n; i++) {\n            long combinations = factorial[i] * modInverse((factorial[1] * factorial[i - 4]) % mod, mod) % mod;\n            long arrangements = (factorial[n - i] * 24) % mod; // 24 is the number of permutations of \"leet\"\n            result = (result + combinations * arrangements % mod) % mod;\n        }\n        \n        return (int) result;\n    }\n    \n    private long modInverse(long a, long m) {\n        long m0 = m;\n        long y = 0, x = 1;\n        \n        if (m == 1) return 0;\n        \n        while (a > 1) {\n            long q = a / m;\n            long t = m;\n            \n            m = a % m;\n            a = t;\n            t = y;\n            \n            y = x - q * y;\n            x = t;\n        }\n        \n        if (x < 0) x += m0;\n        \n        return x;\n    }\n}"
}