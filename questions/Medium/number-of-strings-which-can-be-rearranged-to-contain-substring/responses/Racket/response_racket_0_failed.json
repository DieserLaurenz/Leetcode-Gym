{
    "status_code": 11,
    "lang": "racket",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 100044000,
    "question_id": "3200",
    "elapsed_time": 230,
    "compare_result": "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "code_output": "0",
    "std_output": "",
    "last_testcase": "4",
    "expected_output": "12",
    "task_finish_time": 1708083616080,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 264,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Racket",
    "submission_id": "1176903247",
    "input_formatted": "4",
    "input": "4",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "(define/contract (string-count n)\n  (-> exact-integer? exact-integer?)\n  (let ([mod 1000000007])\n    (if (< n 4)\n        0\n        (let loop ([i 5] [count 0])\n          (if (> i n)\n              count\n              (let* ([total (expt 26 i mod)]\n                     [without-leet (- total (* 4 (expt 25 i mod)) mod)]\n                     [add-count (if (= i 4) without-leet (* without-leet (- i 3) mod))])\n                (loop (+ i 1) (+ count add-count mod))))))))"
}