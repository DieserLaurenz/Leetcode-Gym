{
    "status_code": 11,
    "lang": "php",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 21448000,
    "question_id": "3200",
    "elapsed_time": 92,
    "compare_result": "001110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "code_output": "999999892",
    "std_output": "",
    "last_testcase": "4",
    "expected_output": "12",
    "task_finish_time": 1708082343476,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 3,
    "total_testcases": 264,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "PHP",
    "submission_id": "1176891183",
    "input_formatted": "4",
    "input": "4",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n\n    /**\n     * @param Integer $n\n     * @return Integer\n     */\n    function stringCount($n) {\n        $mod = 1000000007;\n        if ($n < 4) return 0;\n        $factorial = array_fill(0, $n + 1, 1);\n        for ($i = 2; $i <= $n; $i++) {\n            $factorial[$i] = ($factorial[$i - 1] * $i) % $mod;\n        }\n        $total = $factorial[$n];\n        for ($i = 0; $i < 4; $i++) {\n            $total = ($total - $factorial[$n - $i - 1] * 24) % $mod;\n        }\n        for ($i = 0; $i < 6; $i++) {\n            $total = ($total + $factorial[$n - $i - 1] * 12) % $mod;\n        }\n        for ($i = 0; $i < 4; $i++) {\n            $total = ($total - $factorial[$n - $i - 1] * 2) % $mod;\n        }\n        $total = ($total + $factorial[$n - 4]) % $mod;\n        return ($total + $mod) % $mod;\n    }\n}"
}