{
    "status_code": 11,
    "lang": "python",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 12248000,
    "question_id": "3200",
    "elapsed_time": 11010,
    "compare_result": "001110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "code_output": "1",
    "std_output": "",
    "last_testcase": "4",
    "expected_output": "12",
    "task_finish_time": 1708839295285,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 3,
    "total_testcases": 264,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python",
    "submission_id": "1185481337",
    "input_formatted": "4",
    "input": "4",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution(object):\n    def stringCount(self, n):\n        \"\"\"\n        :type n: int\n        :rtype: int\n        \"\"\"\n        mod = 10**9 + 7\n\n        def factorial(x):\n            if x == 0 or x == 1:\n                return 1\n            result = 1\n            for i in range(2, x + 1):\n                result = (result * i) % mod\n            return result\n\n        def power(x, y, p):\n            res = 1\n            x = x % p\n            while y > 0:\n                if y & 1:\n                    res = (res * x) % p\n                y = y >> 1\n                x = (x * x) % p\n            return res\n\n        def nCr(n, r, p):\n            if n < r:\n                return 0\n            if r == 0 or r == n:\n                return 1\n            return (factorial(n) * power(factorial(r), p - 2, p) % p * power(factorial(n - r), p - 2, p) % p) % p\n\n        if n < 4:\n            return 0\n        total = 0\n        for i in range(4, n + 1):\n            total += nCr(i, 4, mod) * factorial(i - 4)\n            total %= mod\n        return total"
}