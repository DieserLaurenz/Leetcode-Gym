{
    "status_code": 11,
    "lang": "javascript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 53468000,
    "question_id": "3200",
    "elapsed_time": 92,
    "compare_result": "001110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "code_output": "1",
    "std_output": "",
    "last_testcase": "4",
    "expected_output": "12",
    "task_finish_time": 1708082166963,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 3,
    "total_testcases": 264,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "JavaScript",
    "submission_id": "1176889530",
    "input_formatted": "4",
    "input": "4",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "/**\n * @param {number} n\n * @return {number}\n */\nvar stringCount = function(n) {\n    const mod = 1000000007;\n    const dp = new Array(n + 1).fill(0);\n    dp[0] = 1;\n    for (let i = 1; i <= n; i++) {\n        dp[i] = (dp[i - 1] * 26) % mod;\n    }\n    if (n < 4) return 0;\n    let total = 0;\n    for (let i = 4; i <= n; i++) {\n        let combos = dp[i - 4];\n        let arrangements = ((i * (i - 1)) % mod * ((i - 2) * (i - 3)) % mod) % mod;\n        arrangements = (arrangements * 41666667) % mod; // 41666667 is the modular multiplicative inverse of 24 under mod 1e9+7\n        total = (total + (combos * arrangements) % mod) % mod;\n    }\n    return total;\n};"
}