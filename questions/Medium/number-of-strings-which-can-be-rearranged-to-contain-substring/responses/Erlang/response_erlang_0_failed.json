{
    "status_code": 11,
    "lang": "erlang",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 59708000,
    "question_id": "3200",
    "elapsed_time": 1292,
    "compare_result": "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "code_output": "24",
    "std_output": "",
    "last_testcase": "4",
    "expected_output": "12",
    "task_finish_time": 1708083736442,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 264,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Erlang",
    "submission_id": "1176904346",
    "input_formatted": "4",
    "input": "4",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "-spec string_count(N :: integer()) -> integer().\nstring_count(N) ->\n    Mod = 1000000007,\n    factorial(N, Mod) div (factorial(N - 4, Mod) * 24 rem Mod),\n    factorial(N, Mod) rem Mod.\n\nfactorial(0, _) -> 1;\nfactorial(N, Mod) when N > 0 ->\n    (N * factorial(N - 1, Mod)) rem Mod."
}