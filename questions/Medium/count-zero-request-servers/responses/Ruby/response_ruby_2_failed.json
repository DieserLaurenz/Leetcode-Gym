{
    "status_code": 11,
    "lang": "ruby",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 276752000,
    "question_id": "2833",
    "elapsed_time": 3119,
    "compare_result
    "code_output": "[2,3]",
    "std_output": "",
    "last_testcase": "3\n[[1,3],[2,6],[1,5]]\n5\n[10,11]",
    "expected_output": "[1,2]",
    "task_finish_time": 1707128119762,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 1067,
    "total_testcases": 3129,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Ruby",
    "submission_id": "1166676660",
    "input_formatted": "3, [[1,3],[2,6],[1,5]], 5, [10,11]",
    "input": "3\n[[1,3],[2,6],[1,5]]\n5\n[10,11]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "# @param {Integer} n\n# @param {Integer[][]} logs\n# @param {Integer} x\n# @param {Integer[]} queries\n# @return {Integer[]}\ndef count_servers(n, logs, x, queries)\n  active_during_query = lambda do |query|\n    active = Array.new(n + 1, false)\n    logs.each do |log|\n      server_id, time = log\n      if time <= query && time > query - x\n        active[server_id] = true\n      end\n    end\n    active\n  end\n  \n  queries.map do |query|\n    active = active_during_query.call(query)\n    n - active.count(true)\n  end\nend"
}