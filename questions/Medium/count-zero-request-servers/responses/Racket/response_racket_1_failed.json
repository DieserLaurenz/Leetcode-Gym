{
    "status_code": 15,
    "lang": "racket",
    "run_success": false,
    "runtime_error": "foldl: contract violation",
    "full_runtime_error": "foldl: contract violation\n  expected: list?\n  given: '#((5 3) (6) ())\n  argument position: 3rd\n  other arguments...:\n   #<procedure:...735solution.rkt:10:20>\n   0\n  context...:\n   /usr/share/racket/collects/racket/private/list.rkt:223:2: check-fold\n   /usr/share/racket/collects/racket/private/list.rkt:248:4: foldl\n   .../private/map.rkt:40:19: loop\n   /usr/share/racket/collects/racket/contract/private/arrow-higher-order.rkt:375:33\n   solution.rkt:22:2\n   body of (submod \"solution.rkt\" main)",
    "status_runtime": "N/A",
    "memory": 99992000,
    "question_id": "2833",
    "elapsed_time": 250,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "3\n[[1,3],[2,6],[1,5]]\n5\n[10,11]",
    "expected_output": "[1,2]",
    "task_finish_time": 1707137008103,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 3129,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Racket",
    "submission_id": "1166767735",
    "status_msg": "Runtime Error",
    "state": "SUCCESS",
    "code": "(define/contract (count-servers n logs x queries)\n  (-> exact-integer? (listof (listof exact-integer?)) exact-integer? (listof exact-integer?) (listof exact-integer?))\n  (let ((request-times (make-vector n '())))\n    (for ([log logs])\n      (let ((id (car log))\n            (time (cadr log)))\n        (vector-set! request-times (sub1 id) (cons time (vector-ref request-times (sub1 id))))))\n    (map (lambda (query)\n           (let ((start-time (- query x)))\n             (foldl (lambda (server-times count)\n                      (if (ormap (lambda (time) (and (<= start-time time) (<= time query)))\n                                 server-times)\n                          count\n                          (add1 count)))\n                    0\n                    request-times)))\n         queries)))"
}