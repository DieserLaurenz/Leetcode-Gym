{
    "status_code": 11,
    "lang": "swift",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 46392000,
    "question_id": "2833",
    "elapsed_time": 5186,
    "compare_result
    "code_output": "[1,1]",
    "std_output": "",
    "last_testcase": "3\n[[2,4],[2,1],[1,2],[3,1]]\n2\n[3,4]",
    "expected_output": "[0,1]",
    "task_finish_time": 1707127599412,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 1298,
    "total_testcases": 3129,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Swift",
    "submission_id": "1166670744",
    "input_formatted": "3, [[2,4],[2,1],[1,2],[3,1]], 2, [3,4]",
    "input": "3\n[[2,4],[2,1],[1,2],[3,1]]\n2\n[3,4]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    func countServers(_ n: Int, _ logs: [[Int]], _ x: Int, _ queries: [Int]) -> [Int] {\n        var timeRequests = [Int: [Bool]]() // Maps time to an array indicating whether a server has a request\n        for log in logs {\n            timeRequests[log[1], default: [Bool](repeating: false, count: n + 1)][log[0]] = true\n        }\n        \n        var results = [Int]()\n        for query in queries {\n            var count = n // Start with all servers, then subtract those with requests\n            for time in (query - x)...query {\n                if let requests = timeRequests[time] {\n                    for server in 1...n where requests[server] {\n                        count -= 1\n                        break // Ensure we only count each server once per query\n                    }\n                }\n            }\n            results.append(count)\n        }\n        \n        return results\n    }\n}"
}