{
    "status_code": 11,
    "lang": "php",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 71584000,
    "question_id": "2833",
    "elapsed_time": 5210,
    "compare_result
    "code_output": "[1,2,1,1]",
    "std_output": "",
    "last_testcase": "4\n[[2,30],[2,5],[3,9],[4,21]]\n9\n[11,28,16,18]",
    "expected_output": "[2,3,3,3]",
    "task_finish_time": 1707127411119,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 261,
    "total_testcases": 3129,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "PHP",
    "submission_id": "1166668542",
    "input_formatted": "4, [[2,30],[2,5],[3,9],[4,21]], 9, [11,28,16,18]",
    "input": "4\n[[2,30],[2,5],[3,9],[4,21]]\n9\n[11,28,16,18]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n\n    /**\n     * @param Integer $n\n     * @param Integer[][] $logs\n     * @param Integer $x\n     * @param Integer[] $queries\n     * @return Integer[]\n     */\n    function countServers($n, $logs, $x, $queries) {\n        $lastRequestTime = array_fill(1, $n, -1);\n        foreach ($logs as $log) {\n            $serverId = $log[0];\n            $time = $log[1];\n            $lastRequestTime[$serverId] = max($lastRequestTime[$serverId], $time);\n        }\n\n        $result = [];\n        foreach ($queries as $query) {\n            $count = 0;\n            for ($serverId = 1; $serverId <= $n; ++$serverId) {\n                if ($lastRequestTime[$serverId] == -1 || $lastRequestTime[$serverId] < $query - $x) {\n                    $count++;\n                }\n            }\n            $result[] = $count;\n        }\n\n        return $result;\n    }\n}"
}