{
    "status_code": 11,
    "lang": "python3",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 16532000,
    "question_id": "2916",
    "elapsed_time": 11018,
    "compare_result
    "code_output": "false",
    "std_output": "",
    "last_testcase": "[2, 2, 1]\n4",
    "expected_output": "true",
    "task_finish_time": 1708744861425,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 136,
    "total_testcases": 531,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python3",
    "submission_id": "1184473931",
    "input_formatted": "[2, 2, 1], 4",
    "input": "[2, 2, 1]\n4",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "from typing import List\n\nclass Solution:\n    def canSplitArray(self, nums: List[int], m: int) -> bool:\n        def dfs(index, subarrays):\n            if index == len(nums):\n                return subarrays == len(nums)\n            current_sum = 0\n            for i in range(index, len(nums)):\n                current_sum += nums[i]\n                if current_sum >= m or i == len(nums) - 1:\n                    if dfs(i + 1, subarrays + 1):\n                        return True\n                if current_sum < m:\n                    break\n            return False\n\n        total_sum = sum(nums)\n        if total_sum < m:\n            return False\n        return dfs(0, 0)"
}