{
    "status_code": 10,
    "lang": "scala",
    "run_success": true,
    "status_runtime": "479 ms",
    "memory": 54532000,
    "question_id": "3150",
    "elapsed_time": 787,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1708144910501,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 674,
    "total_testcases": 674,
    "runtime_percentile": 100,
    "status_memory": "54.5 MB",
    "memory_percentile": 100,
    "pretty_lang": "Scala",
    "submission_id": "1177485029",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "object Solution {\n    def shortestBeautifulSubstring(s: String, k: Int): String = {\n        val n = s.length\n        var minLen = Int.MaxValue\n        var result = \"\"\n        var onesCount = 0\n        var start = 0\n        for (end <- 0 until n) {\n            if (s(end) == '1') onesCount += 1\n            while (onesCount == k) {\n                if (end - start + 1 <= minLen) {\n                    val candidate = s.substring(start, end + 1)\n                    if (end - start + 1 < minLen || candidate < result) {\n                        minLen = end - start + 1\n                        result = candidate\n                    }\n                }\n                if (s(start) == '1') onesCount -= 1\n                start += 1\n            }\n        }\n        result\n    }\n}"
}