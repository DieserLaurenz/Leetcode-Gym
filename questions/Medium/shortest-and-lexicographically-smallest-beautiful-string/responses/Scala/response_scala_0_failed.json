{
    "status_code": 11,
    "lang": "scala",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 55168000,
    "question_id": "3150",
    "elapsed_time": 1148,
    "compare_result": "00111111001110111011110111110111110101111011100111111111111101110111000011011110111101111110011111111101111011111011111010111101101110111111111101101101110011011011111110111001110111111111101101101011101111110111011011111111111111111111101111100101110111111111111011111100011101111101111111111100100111011111110111111011111100111111111111111111111101111111110111000111101011110011111111111111111111111111111111111111111111111111110011111111101111011101111110011100111111011100111111111111111111011101111110110111011111110111110111010011111011110111110111110111010101110110110011111111100111101101101011100011011111111110101111111011111111001101111111111110101111111111111111",
    "code_output": "\"100011\"",
    "std_output": "",
    "last_testcase": "\"100011001\"\n3",
    "expected_output": "\"11001\"",
    "task_finish_time": 1708144886533,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 543,
    "total_testcases": 674,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Scala",
    "submission_id": "1177484796",
    "input_formatted": "\"100011001\", 3",
    "input": "\"100011001\"\n3",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "object Solution {\n    def shortestBeautifulSubstring(s: String, k: Int): String = {\n        var minLen = Int.MaxValue\n        var result = \"\"\n        var count = 0\n        var left = 0\n\n        for (right <- s.indices) {\n            if (s(right) == '1') count += 1\n\n            while (count > k) {\n                if (s(left) == '1') count -= 1\n                left += 1\n            }\n\n            if (count == k) {\n                val len = right - left + 1\n                if (len < minLen || (len == minLen && s.substring(left, right + 1) < result)) {\n                    minLen = len\n                    result = s.substring(left, right + 1)\n                }\n            }\n        }\n\n        result\n    }\n}"
}