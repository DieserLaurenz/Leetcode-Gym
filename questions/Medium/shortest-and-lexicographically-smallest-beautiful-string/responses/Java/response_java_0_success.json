{
    "status_code": 10,
    "lang": "java",
    "run_success": true,
    "status_runtime": "2 ms",
    "memory": 42592000,
    "display_runtime": "2",
    "question_id": "3150",
    "elapsed_time": 152,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1708143830160,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 674,
    "total_testcases": 674,
    "runtime_percentile": 72.5738,
    "status_memory": "42.6 MB",
    "memory_percentile": 65.40090000000002,
    "pretty_lang": "Java",
    "submission_id": "1177475076",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\n    public String shortestBeautifulSubstring(String s, int k) {\n        int n = s.length();\n        String result = \"\";\n        int[] count = new int[n + 1]; // Prefix sums of 1's\n        for (int i = 0; i < n; ++i) {\n            count[i + 1] = count[i] + (s.charAt(i) == '1' ? 1 : 0);\n        }\n        int minLength = Integer.MAX_VALUE;\n        for (int i = 0; i <= n; ++i) {\n            for (int j = i + 1; j <= n; ++j) {\n                if (count[j] - count[i] == k) {\n                    int len = j - i;\n                    if (len < minLength) {\n                        minLength = len;\n                        result = s.substring(i, j);\n                    } else if (len == minLength) {\n                        String current = s.substring(i, j);\n                        if (current.compareTo(result) < 0) {\n                            result = current;\n                        }\n                    }\n                }\n            }\n        }\n        return result;\n    }\n}"
}