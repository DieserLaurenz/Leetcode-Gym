{
    "status_code": 10,
    "lang": "csharp",
    "run_success": true,
    "status_runtime": "58 ms",
    "memory": 41804000,
    "question_id": "3150",
    "elapsed_time": 124,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1708144005600,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 674,
    "total_testcases": 674,
    "runtime_percentile": 62.5,
    "status_memory": "41.8 MB",
    "memory_percentile": 37.5,
    "pretty_lang": "C#",
    "submission_id": "1177476675",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "public class Solution {\n    public string ShortestBeautifulSubstring(string s, int k) {\n        int start = 0, onesCount = 0, minLength = int.MaxValue;\n        string result = \"\";\n\n        for (int end = 0; end < s.Length; end++) {\n            if (s[end] == '1') {\n                onesCount++;\n            }\n\n            while (onesCount == k) {\n                if (end - start + 1 <= minLength) {\n                    string currentSub = s.Substring(start, end - start + 1);\n                    if (end - start + 1 < minLength || currentSub.CompareTo(result) < 0) {\n                        result = currentSub;\n                        minLength = end - start + 1;\n                    }\n                }\n\n                if (s[start] == '1') {\n                    onesCount--;\n                }\n                start++;\n            }\n        }\n\n        return result;\n    }\n}"
}