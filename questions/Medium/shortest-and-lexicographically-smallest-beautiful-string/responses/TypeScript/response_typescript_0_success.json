{
    "status_code": 10,
    "lang": "typescript",
    "run_success": true,
    "status_runtime": "65 ms",
    "memory": 52344000,
    "question_id": "3150",
    "elapsed_time": 89,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1708144169360,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 674,
    "total_testcases": 674,
    "runtime_percentile": 100,
    "status_memory": "52.3 MB",
    "memory_percentile": 100,
    "pretty_lang": "TypeScript",
    "submission_id": "1177478094",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "function shortestBeautifulSubstring(s: string, k: number): string {\n    let minLen = Infinity;\n    let result = \"\";\n    for (let i = 0; i < s.length; i++) {\n        let onesCount = 0;\n        for (let j = i; j < s.length; j++) {\n            if (s[j] === '1') onesCount++;\n            if (onesCount === k) {\n                const currentSubstr = s.substring(i, j + 1);\n                if (j - i + 1 < minLen || (j - i + 1 === minLen && currentSubstr < result)) {\n                    minLen = j - i + 1;\n                    result = currentSubstr;\n                }\n                break;\n            }\n        }\n    }\n    return result;\n}"
}