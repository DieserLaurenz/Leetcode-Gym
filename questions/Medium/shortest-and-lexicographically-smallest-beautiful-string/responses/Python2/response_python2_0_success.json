{
    "status_code": 10,
    "lang": "python",
    "run_success": true,
    "status_runtime": "40 ms",
    "memory": 11680000,
    "question_id": "3150",
    "elapsed_time": 58,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1708849114761,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 674,
    "total_testcases": 674,
    "runtime_percentile": 13.636099999999992,
    "status_memory": "11.7 MB",
    "memory_percentile": 81.8181,
    "pretty_lang": "Python",
    "submission_id": "1185597278",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution(object):\n    def shortestBeautifulSubstring(self, s, k):\n        \"\"\"\n        :type s: str\n        :type k: int\n        :rtype: str\n        \"\"\"\n        min_len = float('inf')\n        min_sub = \"\"\n        for i in range(len(s)):\n            ones_count = 0\n            for j in range(i, len(s)):\n                if s[j] == '1':\n                    ones_count += 1\n                if ones_count == k:\n                    if j - i + 1 < min_len:\n                        min_len = j - i + 1\n                        min_sub = s[i:j+1]\n                    elif j - i + 1 == min_len:\n                        min_sub = min(min_sub, s[i:j+1])\n                    break\n        return min_sub"
}