{
    "status_code": 10,
    "lang": "dart",
    "run_success": true,
    "status_runtime": "368 ms",
    "memory": 151380000,
    "question_id": "3150",
    "elapsed_time": 513,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1708144615122,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 674,
    "total_testcases": 674,
    "runtime_percentile": 100,
    "status_memory": "151.4 MB",
    "memory_percentile": 100,
    "pretty_lang": "Dart",
    "submission_id": "1177482154",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\n  String shortestBeautifulSubstring(String s, int k) {\n    int n = s.length;\n    List<int> prefixSum = List.filled(n + 1, 0);\n    for (int i = 0; i < n; i++) {\n      prefixSum[i + 1] = prefixSum[i] + (s[i] == '1' ? 1 : 0);\n    }\n    int minLength = n + 1;\n    String result = \"\";\n    for (int i = 0; i < n; i++) {\n      for (int j = i + 1; j <= n; j++) {\n        if (prefixSum[j] - prefixSum[i] == k) {\n          int length = j - i;\n          if (length < minLength) {\n            minLength = length;\n            result = s.substring(i, j);\n          } else if (length == minLength) {\n            String currentSubstring = s.substring(i, j);\n            if (currentSubstring.compareTo(result) < 0) {\n              result = currentSubstring;\n            }\n          }\n        }\n      }\n    }\n    return result;\n  }\n}"
}