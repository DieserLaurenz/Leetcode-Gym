{
    "status_code": 11,
    "lang": "python3",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 16648000,
    "question_id": "3114",
    "elapsed_time": 88,
    "compare_result
    "code_output": "5",
    "std_output": "",
    "last_testcase": "[5,3,4,1,1]",
    "expected_output": "13",
    "task_finish_time": 1708735157078,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 9,
    "total_testcases": 786,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python3",
    "submission_id": "1184413813",
    "input_formatted": "[5,3,4,1,1]",
    "input": "[5,3,4,1,1]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "from typing import List\n\nclass Solution:\n    def maximumSumOfHeights(self, maxHeights: List[int]) -> int:\n        n = len(maxHeights)\n        prefix_max = [0] * n\n        suffix_max = [0] * n\n        \n        prefix_max[0] = maxHeights[0]\n        for i in range(1, n):\n            prefix_max[i] = min(prefix_max[i-1], maxHeights[i])\n        \n        suffix_max[n-1] = maxHeights[n-1]\n        for i in range(n-2, -1, -1):\n            suffix_max[i] = min(suffix_max[i+1], maxHeights[i])\n        \n        max_sum = 0\n        for i in range(n):\n            max_sum += min(prefix_max[i], suffix_max[i])\n        \n        return max_sum"
}