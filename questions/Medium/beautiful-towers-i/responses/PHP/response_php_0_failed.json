{
    "status_code": 11,
    "lang": "php",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 20412000,
    "question_id": "3114",
    "elapsed_time": 158,
    "compare_result
    "code_output": "23",
    "std_output": "",
    "last_testcase": "[3,6,3,5,5,1,2,5,5,6]",
    "expected_output": "24",
    "task_finish_time": 1706741745910,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 561,
    "total_testcases": 786,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "PHP",
    "submission_id": "1162435853",
    "input_formatted": "[3,6,3,5,5,1,2,5,5,6]",
    "input": "[3,6,3,5,5,1,2,5,5,6]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n\n    /**\n     * @param Integer[] $maxHeights\n     * @return Integer\n     */\n    function maximumSumOfHeights($maxHeights) {\n        $n = count($maxHeights);\n        $peakIndex = array_search(max($maxHeights), $maxHeights); // Find the peak index\n        $heights = array_fill(0, $n, 0); // Initialize the heights array\n        $heights[$peakIndex] = $maxHeights[$peakIndex]; // Set the peak height\n\n        // Build the left side of the mountain\n        for ($i = $peakIndex - 1; $i >= 0; $i--) {\n            $heights[$i] = min($maxHeights[$i], $heights[$i + 1]);\n        }\n\n        // Build the right side of the mountain\n        for ($i = $peakIndex + 1; $i < $n; $i++) {\n            $heights[$i] = min($maxHeights[$i], $heights[$i - 1]);\n        }\n\n        // Calculate the sum of heights\n        $sum = array_sum($heights);\n        return $sum;\n    }\n}"
}