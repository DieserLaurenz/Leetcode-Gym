{
    "status_code": 11,
    "lang": "ruby",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 211520000,
    "question_id": "3239",
    "elapsed_time": 271,
    "compare_result
    "code_output": "6",
    "std_output": "",
    "last_testcase": "54\n2",
    "expected_output": "4",
    "task_finish_time": 1707897509415,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 670,
    "total_testcases": 948,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Ruby",
    "submission_id": "1174931797",
    "input_formatted": "54, 2",
    "input": "54\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "# @param {Integer} x\n# @param {Integer} y\n# @return {Integer}\ndef minimum_operations_to_make_equal(x, y)\n    operations = 0\n    while x != y\n        if x > y\n            if x % 11 == 0\n                x /= 11\n            elsif x % 5 == 0\n                x /= 5\n            else\n                x -= 1\n            end\n        else\n            x += 1\n        end\n        operations += 1\n    end\n    operations\nend"
}