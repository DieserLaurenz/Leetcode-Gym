{
    "status_code": 11,
    "lang": "scala",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 53956000,
    "question_id": "3239",
    "elapsed_time": 709,
    "compare_result
    "code_output": "6",
    "std_output": "",
    "last_testcase": "54\n2",
    "expected_output": "4",
    "task_finish_time": 1707897676601,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 756,
    "total_testcases": 948,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Scala",
    "submission_id": "1174933417",
    "input_formatted": "54, 2",
    "input": "54\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "object Solution {\n  def minimumOperationsToMakeEqual(x: Int, y: Int): Int = {\n    var (a, b, res) = (x, y, 0)\n    while (a != b) {\n      if (a < b) {\n        res += b - a\n        a = b\n      } else {\n        val by11 = if (a % 11 == 0) a / 11 else a\n        val by5 = if (a % 5 == 0) a / 5 else a\n        val minus1 = a - 1\n        val options = Seq(by11, by5, minus1).filter(_ >= b)\n        a = options.min\n        res += 1\n      }\n    }\n    res\n  }\n}"
}