{
    "status_code": 15,
    "lang": "racket",
    "run_success": false,
    "runtime_error": "Line 1: Char 19: minimum-operations-to-make-equal: broke its own contract",
    "full_runtime_error": "Line 1: Char 19: minimum-operations-to-make-equal: broke its own contract\n  promised: exact-integer?\n  produced: 3.0\n  in: the range of\n      (->\n       exact-integer?\n       exact-integer?\n       exact-integer?)\n  contract from:\n      (function minimum-operations-to-make-equal)\n  blaming: (function minimum-operations-to-make-equal)\n   (assuming the contract is correct)\n  context...:\n   /usr/share/racket/collects/racket/contract/private/blame.rkt:346:0: raise-blame-error\n   /usr/share/racket/collects/racket/contract/private/arrow-higher-order.rkt:375:33\n   solution.rkt:15:2\n   body of (submod \"solution.rkt\" main)",
    "status_runtime": "N/A",
    "memory": 101048000,
    "question_id": "3239",
    "elapsed_time": 254,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "26\n1",
    "expected_output": "3",
    "task_finish_time": 1707897878136,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 948,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Racket",
    "submission_id": "1174935436",
    "status_msg": "Runtime Error",
    "state": "SUCCESS",
    "code": "(define/contract (minimum-operations-to-make-equal x y)\n  (-> exact-integer? exact-integer? exact-integer?)\n  (let loop ([x x] [steps 0])\n    (cond\n      [(= x y) steps]\n      [(< x y) (loop (+ x 1) (+ steps 1))]\n      [else (min\n              (loop (- x 1) (+ steps 1))\n              (if (zero? (modulo x 11)) (loop (/ x 11) (+ steps 1)) +inf.0)\n              (if (zero? (modulo x 5)) (loop (/ x 5) (+ steps 1)) +inf.0))])))"
}