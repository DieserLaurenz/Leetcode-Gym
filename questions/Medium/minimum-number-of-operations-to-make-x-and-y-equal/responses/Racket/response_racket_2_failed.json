{
    "status_code": 11,
    "lang": "racket",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 101224000,
    "question_id": "3239",
    "elapsed_time": 5017,
    "compare_result
    "code_output": "4",
    "std_output": "",
    "last_testcase": "26\n1",
    "expected_output": "3",
    "task_finish_time": 1707897935839,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 948,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Racket",
    "submission_id": "1174935952",
    "input_formatted": "26, 1",
    "input": "26\n1",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "(define/contract (minimum-operations-to-make-equal x y)\n  (-> exact-integer? exact-integer? exact-integer?)\n  (letrec ([dfs (lambda (x steps)\n                  (cond\n                    [(= x y) steps]\n                    [(< x y) (+ steps (- y x))]\n                    [else (min\n                            (+ steps 1 (if (= (modulo x 11) 0) (dfs (/ x 11) 0) (dfs (- x 1) 1)))\n                            (+ steps 1 (if (= (modulo x 5) 0) (dfs (/ x 5) 0) (dfs (- x 1) 1))))]))])\n    (dfs x 0)))"
}