{
    "status_code": 11,
    "lang": "csharp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 43876000,
    "question_id": "3171",
    "elapsed_time": 205,
    "compare_result
    "code_output": "23",
    "std_output": "",
    "last_testcase": "[3,2,0,1,0]\n[6,5,0]",
    "expected_output": "12",
    "task_finish_time": 1707784410366,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 6,
    "total_testcases": 636,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C#",
    "submission_id": "1173659137",
    "input_formatted": "[3,2,0,1,0], [6,5,0]",
    "input": "[3,2,0,1,0]\n[6,5,0]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "public class Solution {\n    public long MinSum(int[] nums1, int[] nums2) {\n        long sum1 = 0, sum2 = 0;\n        int zeros1 = 0, zeros2 = 0;\n        foreach (int num in nums1) {\n            if (num == 0) zeros1++;\n            sum1 += num;\n        }\n        foreach (int num in nums2) {\n            if (num == 0) zeros2++;\n            sum2 += num;\n        }\n        \n        if (zeros1 == 0 && zeros2 == 0) {\n            return sum1 == sum2 ? sum1 : -1;\n        }\n        \n        if ((zeros1 == 0 || zeros2 == 0) && sum1 != sum2) {\n            return -1;\n        }\n        \n        long diff = Math.Abs(sum1 - sum2);\n        if (diff % Math.Abs(zeros1 - zeros2) != 0) {\n            return -1;\n        }\n        \n        long minValue = diff / Math.Abs(zeros1 - zeros2) + 1;\n        long finalSum = Math.Max(sum1, sum2) + minValue * Math.Max(zeros1, zeros2);\n        return finalSum;\n    }\n}"
}