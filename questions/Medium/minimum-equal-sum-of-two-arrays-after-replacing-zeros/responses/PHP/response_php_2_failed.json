{
    "status_code": 11,
    "lang": "php",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 28916000,
    "question_id": "3171",
    "elapsed_time": 507,
    "compare_result
    "code_output": "-1",
    "std_output": "",
    "last_testcase": "[3,2,0,1,0]\n[6,5,0]",
    "expected_output": "12",
    "task_finish_time": 1707784871282,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 171,
    "total_testcases": 636,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "PHP",
    "submission_id": "1173663115",
    "input_formatted": "[3,2,0,1,0], [6,5,0]",
    "input": "[3,2,0,1,0]\n[6,5,0]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n\n    /**\n     * @param Integer[] $nums1\n     * @param Integer[] $nums2\n     * @return Integer\n     */\n    function minSum($nums1, $nums2) {\n        $sum1 = array_sum($nums1);\n        $sum2 = array_sum($nums2);\n        $zeros1 = count(array_filter($nums1, function($v) { return $v === 0; }));\n        $zeros2 = count(array_filter($nums2, function($v) { return $v === 0; }));\n\n        if ($sum1 == $sum2 && $zeros1 == 0 && $zeros2 == 0) {\n            return $sum1;\n        }\n\n        // Calculate the minimum sum needed to balance both arrays\n        $totalZeros = $zeros1 + $zeros2;\n        if ($sum1 == $sum2 && $totalZeros > 0) {\n            return $sum1 + $totalZeros;\n        }\n\n        $diff = abs($sum1 - $sum2);\n        if ($zeros1 + $zeros2 == 0) {\n            return -1; // No zeros to replace and sums are different\n        }\n\n        if (($sum1 + $zeros1) == ($sum2 + $zeros2)) {\n            return $sum1 + $zeros1;\n        }\n\n        // If the difference can be divided equally among the zeros, then return the sum + difference\n        if ($sum1 > $sum2) {\n            if (($diff + $zeros2) % $totalZeros == 0) {\n                return $sum1 + $zeros1;\n            }\n        } else {\n            if (($diff + $zeros1) % $totalZeros == 0) {\n                return $sum2 + $zeros2;\n            }\n        }\n\n        // Calculate the minimum value to make the sums equal\n        $minValue = max($diff / $totalZeros, 1);\n        if (floor($minValue) != $minValue) {\n            return -1; // Cannot evenly distribute the difference\n        }\n\n        return max($sum1 + $zeros1 * $minValue, $sum2 + $zeros2 * $minValue);\n    }\n}"
}