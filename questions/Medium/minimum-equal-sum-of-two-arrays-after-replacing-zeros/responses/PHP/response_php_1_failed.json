{
    "status_code": 11,
    "lang": "php",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 20220000,
    "question_id": "3171",
    "elapsed_time": 5064,
    "compare_result
    "code_output": "16",
    "std_output": "",
    "last_testcase": "[3,2,0,1,0]\n[6,5,0]",
    "expected_output": "12",
    "task_finish_time": 1707784841426,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 1,
    "total_testcases": 636,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "PHP",
    "submission_id": "1173662820",
    "input_formatted": "[3,2,0,1,0], [6,5,0]",
    "input": "[3,2,0,1,0]\n[6,5,0]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n\n    /**\n     * @param Integer[] $nums1\n     * @param Integer[] $nums2\n     * @return Integer\n     */\n    function minSum($nums1, $nums2) {\n        $sum1 = array_sum($nums1);\n        $sum2 = array_sum($nums2);\n        $zeros1 = count(array_filter($nums1, function($val) { return $val === 0; }));\n        $zeros2 = count(array_filter($nums2, function($val) { return $val === 0; }));\n        \n        if ($sum1 == $sum2 && $zeros1 == 0 && $zeros2 == 0) {\n            return $sum1; // No zeros and sums are equal\n        }\n\n        for ($i = 1; ; $i++) {\n            $newSum1 = $sum1 + $zeros1 * $i;\n            $newSum2 = $sum2 + $zeros2 * $i;\n            if ($newSum1 == $newSum2) {\n                return $newSum1;\n            } elseif ($newSum1 > $newSum2 && $zeros2 == 0 || $newSum2 > $newSum1 && $zeros1 == 0) {\n                return -1; // Impossible to make sums equal\n            }\n        }\n    }\n}"
}