{
    "status_code": 11,
    "lang": "kotlin",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 72468000,
    "question_id": "3171",
    "elapsed_time": 998,
    "compare_result
    "code_output": "-1",
    "std_output": "",
    "last_testcase": "[3,2,0,1,0]\n[6,5,0]",
    "expected_output": "12",
    "task_finish_time": 1707793799109,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 132,
    "total_testcases": 636,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Kotlin",
    "submission_id": "1173741257",
    "input_formatted": "[3,2,0,1,0], [6,5,0]",
    "input": "[3,2,0,1,0]\n[6,5,0]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    fun minSum(nums1: IntArray, nums2: IntArray): Long {\n        var sum1 = nums1.sum()\n        var sum2 = nums2.sum()\n        var zeroCount1 = nums1.count { it == 0 }\n        var zeroCount2 = nums2.count { it == 0 }\n        \n        if (zeroCount1 == 0 && zeroCount2 == 0) {\n            return if (sum1 == sum2) sum1.toLong() else -1\n        }\n        \n        val totalZeros = zeroCount1 + zeroCount2\n        val diff = kotlin.math.abs(sum1 - sum2)\n        \n        if ((diff % totalZeros) != 0) return -1\n        val valueToAdd = diff / totalZeros\n        \n        sum1 += zeroCount1 * valueToAdd\n        sum2 += zeroCount2 * valueToAdd\n        \n        return if (sum1 == sum2) sum1.toLong() else -1\n    }\n}"
}