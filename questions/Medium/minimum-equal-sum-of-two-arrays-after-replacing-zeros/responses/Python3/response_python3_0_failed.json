{
    "status_code": 11,
    "lang": "python3",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 16740000,
    "question_id": "3171",
    "elapsed_time": 50,
    "compare_result
    "code_output": "18",
    "std_output": "",
    "last_testcase": "[3,2,0,1,0]\n[6,5,0]",
    "expected_output": "12",
    "task_finish_time": 1708818540627,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 636,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python3",
    "submission_id": "1185245055",
    "input_formatted": "[3,2,0,1,0], [6,5,0]",
    "input": "[3,2,0,1,0]\n[6,5,0]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution:\n    def minSum(self, nums1: List[int], nums2: List[int]) -> int:\n        sum1 = sum(nums1)\n        sum2 = sum(nums2)\n        zeros1 = nums1.count(0)\n        zeros2 = nums2.count(0)\n\n        if zeros1 == 0 and zeros2 == 0:\n            return sum1 if sum1 == sum2 else -1\n\n        if sum1 > sum2:\n            required_sum = sum1 + zeros2 - sum2\n            if required_sum % zeros1 == 0:\n                return sum1 + max(zeros2, required_sum // zeros1)\n            else:\n                return -1\n        elif sum2 > sum1:\n            required_sum = sum2 + zeros1 - sum1\n            if required_sum % zeros2 == 0:\n                return sum2 + max(zeros1, required_sum // zeros2)\n            else:\n                return -1\n        else:\n            return sum1 + max(zeros1, zeros2)"
}