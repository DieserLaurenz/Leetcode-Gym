{
    "status_code": 11,
    "lang": "erlang",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 176556000,
    "question_id": "3171",
    "elapsed_time": 2143,
    "compare_result
    "code_output": "14",
    "std_output": "",
    "last_testcase": "[3,2,0,1,0]\n[6,5,0]",
    "expected_output": "12",
    "task_finish_time": 1707794722961,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 15,
    "total_testcases": 636,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Erlang",
    "submission_id": "1173750667",
    "input_formatted": "[3,2,0,1,0], [6,5,0]",
    "input": "[3,2,0,1,0]\n[6,5,0]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "-spec min_sum(Nums1 :: [integer()], Nums2 :: [integer()]) -> integer().\nmin_sum(Nums1, Nums2) ->\n    Sum1 = lists:sum(Nums1),\n    Sum2 = lists:sum(Nums2),\n    Zeroes1 = length([X || X <- Nums1, X == 0]),\n    Zeroes2 = length([X || X <- Nums2, X == 0]),\n    if \n        Sum1 == Sum2 -> Sum1 + Zeroes1 + Zeroes2;\n        true ->\n            Diff = abs(Sum1 - Sum2),\n            TotalZeroes = Zeroes1 + Zeroes2,\n            if \n                TotalZeroes == 0 -> -1;\n                true ->\n                    NewSum = max(Sum1, Sum2) + TotalZeroes,\n                    if \n                        NewSum - min(Sum1, Sum2) >= Diff -> NewSum;\n                        true -> -1\n                    end\n            end\n    end."
}