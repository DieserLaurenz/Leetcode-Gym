{
    "status_code": 11,
    "lang": "scala",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 54816000,
    "question_id": "3171",
    "elapsed_time": 762,
    "compare_result
    "code_output": "-1",
    "std_output": "",
    "last_testcase": "[3,2,0,1,0]\n[6,5,0]",
    "expected_output": "12",
    "task_finish_time": 1707794298445,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 10,
    "total_testcases": 636,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Scala",
    "submission_id": "1173746405",
    "input_formatted": "[3,2,0,1,0], [6,5,0]",
    "input": "[3,2,0,1,0]\n[6,5,0]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "object Solution {\n    def minSum(nums1: Array[Int], nums2: Array[Int]): Long = {\n        val sum1 = nums1.sum\n        val sum2 = nums2.sum\n        val zeros1 = nums1.count(_ == 0)\n        val zeros2 = nums2.count(_ == 0)\n        \n        if (sum1 == sum2) {\n            sum1.toLong\n        } else if ((zeros1 == 0 && zeros2 > 0) || (zeros2 == 0 && zeros1 > 0)) {\n            -1\n        } else {\n            val diff = math.abs(sum1 - sum2)\n            val totalZeros = zeros1 + zeros2\n            if (diff % totalZeros == 0) (math.max(sum1, sum2) + diff / totalZeros * zeros1).toLong\n            else -1\n        }\n    }\n}"
}