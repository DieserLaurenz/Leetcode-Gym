{
    "status_code": 11,
    "lang": "scala",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 71180000,
    "question_id": "3171",
    "elapsed_time": 997,
    "compare_result
    "code_output": "10",
    "std_output": "",
    "last_testcase": "[3,2,0,1,0]\n[6,5,0]",
    "expected_output": "12",
    "task_finish_time": 1707794319924,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 55,
    "total_testcases": 636,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Scala",
    "submission_id": "1173746617",
    "input_formatted": "[3,2,0,1,0], [6,5,0]",
    "input": "[3,2,0,1,0]\n[6,5,0]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "object Solution {\n    def minSum(nums1: Array[Int], nums2: Array[Int]): Long = {\n        val totalSum = nums1.sum.toLong + nums2.sum.toLong\n        val totalZeros = nums1.count(_ == 0) + nums2.count(_ == 0)\n        if (totalZeros == 0) return totalSum\n        val targetSum = totalSum + totalZeros\n        if (targetSum % 2 != 0) return -1\n        targetSum / 2\n    }\n}"
}