{
    "status_code": 11,
    "lang": "golang",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 11336000,
    "question_id": "3171",
    "elapsed_time": 150,
    "compare_result": "011011111101000000010111011001010111110111000011110000101110111000111101110110010011111011111000101111111011110101101011001111111101101011111011101111010001111010110111110001111011111110010100101011101011110010111110011111110111111101101111110011110101111110011111111101111011100111111111111010110111011011010010110010001100010111110101010110010100010000101101010011011011100101000110110100110111101011001000101110110111010111101001101111110011101010101101011111101111010010110111100111101100110100011111111111110111111111111111111111011111111111011111111111111111101111111111101011111111111111111110111100010111111111111111111111111100",
    "code_output": "13",
    "std_output": "",
    "last_testcase": "[3,2,0,1,0]\n[6,5,0]",
    "expected_output": "12",
    "task_finish_time": 1707794120450,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 443,
    "total_testcases": 636,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Go",
    "submission_id": "1173744565",
    "input_formatted": "[3,2,0,1,0], [6,5,0]",
    "input": "[3,2,0,1,0]\n[6,5,0]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "func minSum(nums1 []int, nums2 []int) int64 {\n    sum1, sum2, zeroCount1, zeroCount2 := 0, 0, 0, 0\n    for _, v := range nums1 {\n        if v == 0 {\n            zeroCount1++\n        }\n        sum1 += v\n    }\n    for _, v := range nums2 {\n        if v == 0 {\n            zeroCount2++\n        }\n        sum2 += v\n    }\n\n    if sum1 == sum2 {\n        return int64(sum1)\n    }\n\n    diff := abs(sum1 - sum2)\n    zeroCountDiff := abs(zeroCount1 - zeroCount2)\n\n    if zeroCount1 > 0 && zeroCount2 > 0 {\n        return int64(max(sum1, sum2) + max(zeroCount1, zeroCount2))\n    } else if zeroCount1 == 0 && zeroCount2 == 0 {\n        return -1\n    } else if (zeroCount1 > 0 && sum1 < sum2) || (zeroCount2 > 0 && sum2 < sum1) {\n        return -1\n    } else if diff%zeroCountDiff != 0 {\n        return -1\n    }\n\n    return int64(max(sum1+zeroCount1, sum2+zeroCount2))\n}\n\nfunc abs(x int) int {\n    if x < 0 {\n        return -x\n    }\n    return x\n}\n\nfunc max(a, b int) int {\n    if a > b {\n        return a\n    }\n    return b\n}"
}