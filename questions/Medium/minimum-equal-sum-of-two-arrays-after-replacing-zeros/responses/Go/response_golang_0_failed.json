{
    "status_code": 11,
    "lang": "golang",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 2064000,
    "question_id": "3171",
    "elapsed_time": 11,
    "compare_result
    "code_output": "21",
    "std_output": "",
    "last_testcase": "[3,2,0,1,0]\n[6,5,0]",
    "expected_output": "12",
    "task_finish_time": 1707794047624,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 2,
    "total_testcases": 636,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Go",
    "submission_id": "1173743814",
    "input_formatted": "[3,2,0,1,0], [6,5,0]",
    "input": "[3,2,0,1,0]\n[6,5,0]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "func minSum(nums1 []int, nums2 []int) int64 {\n    sum1, sum2, zeros1, zeros2 := 0, 0, 0, 0\n    for _, num := range nums1 {\n        sum1 += num\n        if num == 0 {\n            zeros1++\n        }\n    }\n    for _, num := range nums2 {\n        sum2 += num\n        if num == 0 {\n            zeros2++\n        }\n    }\n    if zeros1 == 0 && zeros2 == 0 {\n        if sum1 == sum2 {\n            return int64(sum1)\n        }\n        return -1\n    }\n    if (zeros1 > 0 && zeros2 == 0 && sum1 <= sum2) || (zeros2 > 0 && zeros1 == 0 && sum2 <= sum1) {\n        return -1\n    }\n    diff := abs(sum1 - sum2)\n    if diff%abs(zeros1-zeros2) != 0 {\n        return -1\n    }\n    return int64(max(sum1, sum2) + diff/abs(zeros1-zeros2)*max(zeros1, zeros2))\n}\n\nfunc abs(x int) int {\n    if x < 0 {\n        return -x\n    }\n    return x\n}\n\nfunc max(x, y int) int {\n    if x > y {\n        return x\n    }\n    return y\n}"
}