{
    "status_code": 11,
    "lang": "java",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 60336000,
    "display_runtime": "3",
    "question_id": "3171",
    "elapsed_time": 484,
    "compare_result
    "code_output": "-1",
    "std_output": "",
    "last_testcase": "[3,2,0,1,0]\n[6,5,0]",
    "expected_output": "12",
    "task_finish_time": 1707784158811,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 73,
    "total_testcases": 636,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Java",
    "submission_id": "1173657047",
    "input_formatted": "[3,2,0,1,0], [6,5,0]",
    "input": "[3,2,0,1,0]\n[6,5,0]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    public long minSum(int[] nums1, int[] nums2) {\n        long sum1 = 0, sum2 = 0;\n        int zeroCount1 = 0, zeroCount2 = 0;\n        for (int num : nums1) {\n            if (num == 0) zeroCount1++;\n            sum1 += num;\n        }\n        for (int num : nums2) {\n            if (num == 0) zeroCount2++;\n            sum2 += num;\n        }\n        if (zeroCount1 == 0 && zeroCount2 == 0) {\n            return sum1 == sum2 ? sum1 : -1;\n        }\n        long diff = Math.abs(sum1 - sum2);\n        if ((zeroCount1 + zeroCount2) == 1) {\n            return Math.max(sum1, sum2) + 1;\n        }\n        if (diff % (zeroCount1 + zeroCount2) == 0) {\n            return Math.max(sum1, sum2) + diff / (zeroCount1 + zeroCount2);\n        } else {\n            return -1;\n        }\n    }\n}"
}