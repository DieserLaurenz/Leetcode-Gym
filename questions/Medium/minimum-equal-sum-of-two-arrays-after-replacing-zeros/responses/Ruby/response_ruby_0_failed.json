{
    "status_code": 11,
    "lang": "ruby",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 226748000,
    "question_id": "3171",
    "elapsed_time": 332,
    "compare_result
    "code_output": "13",
    "std_output": "",
    "last_testcase": "[3,2,0,1,0]\n[6,5,0]",
    "expected_output": "12",
    "task_finish_time": 1707794184673,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 159,
    "total_testcases": 636,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Ruby",
    "submission_id": "1173745217",
    "input_formatted": "[3,2,0,1,0], [6,5,0]",
    "input": "[3,2,0,1,0]\n[6,5,0]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "# @param {Integer[]} nums1\n# @param {Integer[]} nums2\n# @return {Integer}\ndef min_sum(nums1, nums2)\n  zero_count1 = nums1.count(0)\n  zero_count2 = nums2.count(0)\n  sum1 = nums1.sum\n  sum2 = nums2.sum\n  \n  return -1 if zero_count1 > 0 && zero_count2 > 0 && sum1 == sum2\n  \n  if sum1 > sum2\n    return sum1 + zero_count2 if zero_count1 == 0\n  elsif sum2 > sum1\n    return sum2 + zero_count1 if zero_count2 == 0\n  else\n    return sum1 if zero_count1 == 0 && zero_count2 == 0\n    return [sum1 + zero_count2, sum2 + zero_count1].max\n  end\n  \n  diff = (sum1 - sum2).abs\n  if zero_count1 > 0 && zero_count2 > 0\n    equal_sum = [sum1 + zero_count2, sum2 + zero_count1].max\n    return equal_sum if diff < equal_sum\n  elsif zero_count1 > 0\n    return sum2 + zero_count1 if diff < zero_count1\n  elsif zero_count2 > 0\n    return sum1 + zero_count2 if diff < zero_count2\n  end\n  \n  -1\nend"
}