{
    "status_code": 15,
    "lang": "dart",
    "run_success": false,
    "runtime_error": "Line 12: Char 21: Error: The getter 'Math' isn't defined for the class 'Solution'.",
    "full_runtime_error": "Line 12: Char 21: Error: The getter 'Math' isn't defined for the class 'Solution'.\nTry correcting the name to the name of an existing getter, or defining a getter or field named 'Math'.\n      return sum1 + Math.max(zeros1, zeros2);\n                    ^^^^\nLine 12: Char 19: Error: A value of type 'num' can't be returned from a function with return type 'int'.\n      return sum1 + Math.max(zeros1, zeros2);\n                  ^",
    "status_runtime": "N/A",
    "memory": 151076000,
    "question_id": "3171",
    "elapsed_time": 471,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "[3,2,0,1,0]\n[6,5,0]",
    "expected_output": "12",
    "task_finish_time": 1707793978898,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 636,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Dart",
    "submission_id": "1173743109",
    "status_msg": "Runtime Error",
    "state": "SUCCESS",
    "code": "class Solution {\n  int minSum(List<int> nums1, List<int> nums2) {\n    int sum1 = nums1.fold(0, (a, b) => a + b);\n    int sum2 = nums2.fold(0, (a, b) => a + b);\n    int zeros1 = nums1.where((element) => element == 0).length;\n    int zeros2 = nums2.where((element) => element == 0).length;\n    if ((sum1 - sum2).abs() % (zeros1 + zeros2) != 0 && zeros1 + zeros2 > 0) {\n      return -1;\n    }\n    int targetDiff = (sum1 - sum2).abs();\n    if (sum1 == sum2) {\n      return sum1 + Math.max(zeros1, zeros2);\n    }\n    int totalZeros = zeros1 + zeros2;\n    if (targetDiff % totalZeros != 0) {\n      return -1;\n    }\n    int minFill = targetDiff ~/ totalZeros + 1;\n    return sum1 + sum2 + minFill * totalZeros;\n  }\n}"
}