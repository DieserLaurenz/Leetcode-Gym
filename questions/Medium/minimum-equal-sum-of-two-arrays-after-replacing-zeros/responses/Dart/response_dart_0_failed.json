{
    "status_code": 11,
    "lang": "dart",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 189844000,
    "question_id": "3171",
    "elapsed_time": 695,
    "compare_result
    "code_output": "-1",
    "std_output": "",
    "last_testcase": "[3,2,0,1,0]\n[6,5,0]",
    "expected_output": "12",
    "task_finish_time": 1707793912752,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 70,
    "total_testcases": 636,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Dart",
    "submission_id": "1173742462",
    "input_formatted": "[3,2,0,1,0], [6,5,0]",
    "input": "[3,2,0,1,0]\n[6,5,0]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n  int minSum(List<int> nums1, List<int> nums2) {\n    int sum1 = nums1.reduce((a, b) => a + b);\n    int sum2 = nums2.reduce((a, b) => a + b);\n    int zeros1 = nums1.where((x) => x == 0).length;\n    int zeros2 = nums2.where((x) => x == 0).length;\n    \n    if ((zeros1 + zeros2) == 0) {\n      return sum1 == sum2 ? sum1 : -1;\n    }\n    \n    int diff = (sum1 - sum2).abs();\n    if ((zeros1 == 0 || zeros2 == 0) && diff % (zeros1 + zeros2) != 0) {\n      return -1;\n    }\n    \n    int minIncrement = diff ~/ (zeros1 + zeros2);\n    int newSum = (sum1 > sum2 ? sum1 : sum2) + minIncrement * (zeros1 + zeros2);\n    \n    if ((diff % (zeros1 + zeros2) == 0) || (sum1 == sum2)) {\n      return newSum;\n    } else {\n      return -1;\n    }\n  }\n}"
}