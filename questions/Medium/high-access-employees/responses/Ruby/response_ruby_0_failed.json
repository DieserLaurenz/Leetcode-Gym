{
    "status_code": 11,
    "lang": "ruby",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 211848000,
    "question_id": "3202",
    "elapsed_time": 201,
    "compare_result": "000111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111101100110110111111111110110111111101111101110000111111111111011111111101111101111011111010111001010110111111101111110110111111110110110001101111111011010110101101011110011011100011111101110000100110110110110101111101011000111111100100001000001110101110001000111010110011110101011110111101101101011011010011011111001111011001110100011111001111000101000011111110000110101010000111111110000000110001100101000101100110000111101100111000101010010001111101100011110111101001111000111001101110001010010011110011010100010101100011101000010101010111001000000101001001110101111111100010010000100111100100111000010001100100111101101101110011001001010001010110011000011100011001101101101101010101011101011001010011100100101000011001111110001111110100011100001110010101111011000101110100101111100000101100011011101011110110110110010111111010100100100110010111110110101110111111011111111111100000001111111111011111111011001111111111111111110011110111111111111111101011101011111111111111111111111101110111111101111101010101110000000000000000000000010000000010000000",
    "code_output": "[]",
    "std_output": "",
    "last_testcase": "[[\"a\",\"0549\"],[\"b\",\"0457\"],[\"a\",\"0532\"],[\"a\",\"0621\"],[\"b\",\"0540\"]]",
    "expected_output": "[\"a\"]",
    "task_finish_time": 1707397797947,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 718,
    "total_testcases": 1143,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Ruby",
    "submission_id": "1169718970",
    "input_formatted": "[[\"a\",\"0549\"],[\"b\",\"0457\"],[\"a\",\"0532\"],[\"a\",\"0621\"],[\"b\",\"0540\"]]",
    "input": "[[\"a\",\"0549\"],[\"b\",\"0457\"],[\"a\",\"0532\"],[\"a\",\"0621\"],[\"b\",\"0540\"]]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "# @param {String[][]} access_times\n# @return {String[]}\ndef find_high_access_employees(access_times)\n  # Group times by employee\n  grouped_times = access_times.group_by { |entry| entry[0] }\n  high_access_employees = []\n\n  grouped_times.each do |employee, times|\n    # Sort times for each employee\n    sorted_times = times.map { |entry| entry[1] }.sort\n    (0...sorted_times.length).each do |i|\n      count = 1\n      (i+1...sorted_times.length).each do |j|\n        if sorted_times[j].to_i < sorted_times[i].to_i + 100\n          if sorted_times[j][2..3].to_i < sorted_times[i][2..3].to_i\n            break\n          else\n            count += 1\n          end\n        else\n          break\n        end\n      end\n      if count >= 3\n        high_access_employees << employee\n        break\n      end\n    end\n  end\n\n  high_access_employees.uniq\nend"
}