{
    "status_code": 11,
    "lang": "c",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 10072000,
    "question_id": "3202",
    "elapsed_time": 76,
    "compare_result
    "code_output": "[]",
    "std_output": "",
    "last_testcase": "[[\"a\",\"0549\"],[\"b\",\"0457\"],[\"a\",\"0532\"],[\"a\",\"0621\"],[\"b\",\"0540\"]]",
    "expected_output": "[\"a\"]",
    "task_finish_time": 1707396478070,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 716,
    "total_testcases": 1143,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C",
    "submission_id": "1169704612",
    "input_formatted": "[[\"a\",\"0549\"],[\"b\",\"0457\"],[\"a\",\"0532\"],[\"a\",\"0621\"],[\"b\",\"0540\"]]",
    "input": "[[\"a\",\"0549\"],[\"b\",\"0457\"],[\"a\",\"0532\"],[\"a\",\"0621\"],[\"b\",\"0540\"]]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "#include <stdlib.h>\n#include <string.h>\n\nchar** findHighAccessEmployees(char*** access_times, int access_timesSize, int* access_timesColSize, int* returnSize) {\n    char **result = (char**)malloc(access_timesSize * sizeof(char*));\n    int *accessCounts = (int*)calloc(access_timesSize, sizeof(int));\n    int resultCount = 0;\n\n    for (int i = 0; i < access_timesSize; i++) {\n        int count = 1;\n        for (int j = i + 1; j < access_timesSize; j++) {\n            if (strcmp(access_times[i][0], access_times[j][0]) == 0) {\n                int time1 = atoi(access_times[i][1]);\n                int time2 = atoi(access_times[j][1]);\n                int hourDiff = abs(time2 / 100 - time1 / 100);\n                int minuteDiff = abs(time2 % 100 - time1 % 100);\n                if (hourDiff == 0 || (hourDiff == 1 && minuteDiff == 0)) {\n                    count++;\n                }\n            }\n        }\n        if (count >= 3) {\n            int exists = 0;\n            for (int k = 0; k < resultCount; k++) {\n                if (strcmp(result[k], access_times[i][0]) == 0) {\n                    exists = 1;\n                    break;\n                }\n            }\n            if (!exists) {\n                result[resultCount] = (char*)malloc(strlen(access_times[i][0]) + 1);\n                strcpy(result[resultCount], access_times[i][0]);\n                resultCount++;\n            }\n        }\n    }\n\n    *returnSize = resultCount;\n    return result;\n}"
}