{
    "status_code": 11,
    "lang": "c",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 10520000,
    "question_id": "3202",
    "elapsed_time": 65,
    "compare_result
    "code_output": "[\"afwpabwyds\",\"relf\"]",
    "std_output": "",
    "last_testcase": "[[\"eazbkekis\",\"1034\"],[\"relf\",\"1126\"],[\"afwpabwyds\",\"1114\"],[\"afwpabwyds\",\"1105\"],[\"relf\",\"1031\"],[\"afwpabwyds\",\"1010\"],[\"vzqpz\",\"1047\"],[\"relf\",\"1103\"]]",
    "expected_output": "[\"relf\"]",
    "task_finish_time": 1707396514003,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 870,
    "total_testcases": 1143,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C",
    "submission_id": "1169705028",
    "input_formatted": "[[\"eazbkekis\",\"1034\"],[\"relf\",\"1126\"],[\"afwpabwyds\",\"1114\"],[\"afwpabwyds\",\"1105\"],[\"relf\",\"1031\"],[\"afwpabwyds\",\"1010\"],[\"vzqpz\",\"1047\"],[\"relf\",\"1103\"]]",
    "input": "[[\"eazbkekis\",\"1034\"],[\"relf\",\"1126\"],[\"afwpabwyds\",\"1114\"],[\"afwpabwyds\",\"1105\"],[\"relf\",\"1031\"],[\"afwpabwyds\",\"1010\"],[\"vzqpz\",\"1047\"],[\"relf\",\"1103\"]]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint compare(const void *a, const void *b) {\n    char **arrA = *(char ***)a;\n    char **arrB = *(char ***)b;\n    int cmp = strcmp(arrA[0], arrB[0]);\n    if (cmp == 0) return strcmp(arrA[1], arrB[1]);\n    return cmp;\n}\n\nchar** findHighAccessEmployees(char*** access_times, int access_timesSize, int* access_timesColSize, int* returnSize) {\n    qsort(access_times, access_timesSize, sizeof(char**), compare);\n    \n    char **result = (char**)malloc(access_timesSize * sizeof(char*));\n    *returnSize = 0;\n    for (int i = 0; i < access_timesSize; ) {\n        int count = 1;\n        int j = i + 1;\n        while (j < access_timesSize && strcmp(access_times[i][0], access_times[j][0]) == 0) {\n            int time1 = atoi(access_times[j - 1][1]);\n            int time2 = atoi(access_times[j][1]);\n            if (time2 - time1 < 100) {\n                count++;\n                if (count >= 3) {\n                    result[*returnSize] = (char*)malloc(strlen(access_times[i][0]) + 1);\n                    strcpy(result[*returnSize], access_times[i][0]);\n                    (*returnSize)++;\n                    break;\n                }\n            } else {\n                count = 1;\n            }\n            j++;\n        }\n        while (i < access_timesSize && strcmp(access_times[i][0], access_times[j - 1][0]) == 0) {\n            i++;\n        }\n    }\n    return result;\n}"
}