{
    "status_code": 10,
    "lang": "python3",
    "run_success": true,
    "status_runtime": "176 ms",
    "memory": 16612000,
    "question_id": "3202",
    "elapsed_time": 195,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1708776888316,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 1143,
    "total_testcases": 1143,
    "runtime_percentile": 65.15110000000004,
    "status_memory": "16.6 MB",
    "memory_percentile": 93.77099999999999,
    "pretty_lang": "Python3",
    "submission_id": "1184784948",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "from typing import List\nfrom collections import defaultdict\n\nclass Solution:\n    def findHighAccessEmployees(self, access_times: List[List[str]]) -> List[str]:\n        def time_diff(t1: str, t2: str) -> int:\n            h1, m1 = int(t1[:2]), int(t1[2:])\n            h2, m2 = int(t2[:2]), int(t2[2:])\n            return (h2 - h1) * 60 + (m2 - m1)\n        \n        employee_access = defaultdict(list)\n        for name, time in access_times:\n            employee_access[name].append(time)\n        \n        for times in employee_access.values():\n            times.sort()\n        \n        high_access_employees = set()\n        for name, times in employee_access.items():\n            for i in range(len(times)):\n                for j in range(i+2, len(times)):\n                    if time_diff(times[i], times[j]) < 60:\n                        high_access_employees.add(name)\n                        break\n        \n        return list(high_access_employees)"
}