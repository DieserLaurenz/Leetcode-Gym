{
    "status_code": 10,
    "lang": "php",
    "run_success": true,
    "status_runtime": "61 ms",
    "memory": 20304000,
    "question_id": "3202",
    "elapsed_time": 149,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1707397248874,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 1143,
    "total_testcases": 1143,
    "runtime_percentile": 100,
    "status_memory": "20.3 MB",
    "memory_percentile": 100,
    "pretty_lang": "PHP",
    "submission_id": "1169712915",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\n\n    /**\n     * @param String[][] $access_times\n     * @return String[]\n     */\n    function findHighAccessEmployees($access_times) {\n        $accessLogs = [];\n        foreach ($access_times as $entry) {\n            $employee = $entry[0];\n            $time = intval(substr($entry[1], 0, 2)) * 60 + intval(substr($entry[1], 2, 2));\n            $accessLogs[$employee][] = $time;\n        }\n\n        $result = [];\n        foreach ($accessLogs as $employee => $times) {\n            sort($times);\n            for ($i = 0; $i < count($times); $i++) {\n                $count = 1;\n                for ($j = $i + 1; $j < count($times); $j++) {\n                    if ($times[$j] - $times[$i] < 60) {\n                        $count++;\n                    }\n                }\n                if ($count >= 3) {\n                    $result[] = $employee;\n                    break;\n                }\n            }\n        }\n\n        return $result;\n    }\n}"
}