{
    "status_code": 10,
    "lang": "golang",
    "run_success": true,
    "status_runtime": "18 ms",
    "memory": 7028000,
    "question_id": "3202",
    "elapsed_time": 39,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1707397741301,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 1143,
    "total_testcases": 1143,
    "runtime_percentile": 83.33340000000001,
    "status_memory": "7 MB",
    "memory_percentile": 66.66670000000002,
    "pretty_lang": "Go",
    "submission_id": "1169718334",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "func findHighAccessEmployees(access_times [][]string) []string {\n    employeeAccessMap := make(map[string][]int)\n    for _, access := range access_times {\n        employee, timeStr := access[0], access[1]\n        hours, _ := strconv.Atoi(timeStr[:2])\n        minutes, _ := strconv.Atoi(timeStr[2:])\n        totalMinutes := hours*60 + minutes\n        employeeAccessMap[employee] = append(employeeAccessMap[employee], totalMinutes)\n    }\n\n    var highAccessEmployees []string\n    highAccessCheck := make(map[string]bool)\n\n    for employee, times := range employeeAccessMap {\n        sort.Ints(times)\n        for i := 0; i < len(times)-2; i++ {\n            if times[i+2]-times[i] < 60 {\n                if !highAccessCheck[employee] {\n                    highAccessEmployees = append(highAccessEmployees, employee)\n                    highAccessCheck[employee] = true\n                    break\n                }\n            }\n        }\n    }\n\n    return highAccessEmployees\n}"
}