{
    "status_code": 10,
    "lang": "java",
    "run_success": true,
    "status_runtime": "10 ms",
    "memory": 45440000,
    "display_runtime": "10",
    "question_id": "3202",
    "elapsed_time": 213,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1707396414762,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 1143,
    "total_testcases": 1143,
    "runtime_percentile": 79.2731,
    "status_memory": "45.4 MB",
    "memory_percentile": 63.9489,
    "pretty_lang": "Java",
    "submission_id": "1169703891",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "import java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.HashMap;\nimport java.util.List;\n\nclass Solution {\n    public List<String> findHighAccessEmployees(List<List<String>> access_times) {\n        HashMap<String, List<Integer>> employeeTimes = new HashMap<>();\n        for (List<String> access : access_times) {\n            String name = access.get(0);\n            int time = Integer.parseInt(access.get(1));\n            employeeTimes.putIfAbsent(name, new ArrayList<>());\n            employeeTimes.get(name).add(time);\n        }\n        \n        List<String> result = new ArrayList<>();\n        for (String employee : employeeTimes.keySet()) {\n            List<Integer> times = employeeTimes.get(employee);\n            Collections.sort(times);\n            for (int i = 0; i < times.size(); i++) {\n                int count = 1;\n                for (int j = i + 1; j < times.size() && times.get(j) - times.get(i) < 100; j++) {\n                    if (times.get(j) / 100 == times.get(i) / 100 || \n                        (times.get(j) / 100 == times.get(i) / 100 + 1 && times.get(j) % 100 < times.get(i) % 100)) {\n                        count++;\n                    }\n                }\n                if (count >= 3) {\n                    result.add(employee);\n                    break;\n                }\n            }\n        }\n        \n        return result;\n    }\n}"
}