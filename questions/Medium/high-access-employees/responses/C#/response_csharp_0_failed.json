{
    "status_code": 11,
    "lang": "csharp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 61964000,
    "question_id": "3202",
    "elapsed_time": 295,
    "compare_result
    "code_output": "[]",
    "std_output": "",
    "last_testcase": "[[\"a\",\"0549\"],[\"b\",\"0457\"],[\"a\",\"0532\"],[\"a\",\"0621\"],[\"b\",\"0540\"]]",
    "expected_output": "[\"a\"]",
    "task_finish_time": 1707396860067,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 749,
    "total_testcases": 1143,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C#",
    "submission_id": "1169708736",
    "input_formatted": "[[\"a\",\"0549\"],[\"b\",\"0457\"],[\"a\",\"0532\"],[\"a\",\"0621\"],[\"b\",\"0540\"]]",
    "input": "[[\"a\",\"0549\"],[\"b\",\"0457\"],[\"a\",\"0532\"],[\"a\",\"0621\"],[\"b\",\"0540\"]]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "public class Solution {\n    public IList<string> FindHighAccessEmployees(IList<IList<string>> access_times) {\n        var result = new HashSet<string>();\n        var employeeAccessTimes = new Dictionary<string, List<int>>();\n\n        foreach (var access in access_times) {\n            var name = access[0];\n            var time = int.Parse(access[1]);\n            if (!employeeAccessTimes.ContainsKey(name)) {\n                employeeAccessTimes[name] = new List<int>();\n            }\n            employeeAccessTimes[name].Add(time);\n        }\n\n        foreach (var employee in employeeAccessTimes) {\n            var times = employee.Value;\n            times.Sort();\n            for (int i = 0; i < times.Count; i++) {\n                int count = 1;\n                for (int j = i + 1; j < times.Count; j++) {\n                    if (times[j] - times[i] < 60) {\n                        count++;\n                        if (count >= 3) {\n                            result.Add(employee.Key);\n                            break;\n                        }\n                    } else {\n                        break;\n                    }\n                }\n            }\n        }\n\n        return result.ToList();\n    }\n}"
}