{
    "status_code": 11,
    "lang": "csharp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 76384000,
    "question_id": "3170",
    "elapsed_time": 448,
    "compare_result
    "code_output": "[0,1]",
    "std_output": "",
    "last_testcase": "[5,1,4,1]\n2\n4",
    "expected_output": "[0,3]",
    "task_finish_time": 1707253413553,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 154,
    "total_testcases": 517,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C#",
    "submission_id": "1168192742",
    "input_formatted": "[5,1,4,1], 2, 4",
    "input": "[5,1,4,1]\n2\n4",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "public class Solution {\n    public int[] FindIndices(int[] nums, int indexDifference, int valueDifference) {\n        for (int i = 0; i < nums.Length; i++) {\n            for (int j = Math.Max(i - indexDifference, 0); j < nums.Length && j <= i + indexDifference; j++) {\n                if (i != j && Math.Abs(nums[i] - nums[j]) >= valueDifference) {\n                    return new int[] { i, j };\n                }\n            }\n        }\n        return new int[] { -1, -1 };\n    }\n}"
}