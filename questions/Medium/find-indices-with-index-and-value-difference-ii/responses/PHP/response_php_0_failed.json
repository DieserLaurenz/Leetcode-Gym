{
    "status_code": 11,
    "lang": "php",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 26804000,
    "question_id": "3170",
    "elapsed_time": 727,
    "compare_result": "0111111111111111111111101111111000011111111111111111111010101000110011111111111111101101111011111111111010111110011001110101001111111001100111101101111101101011111100111111111111110111011000111111110101111110100111001000011111111111111011111101111111101111101111111111011111111111111110101111111111101111111111111011101110011111111101111111111111011110111111110011111111011110111111111111101101111111111111011111101111111011111111111101111111011111111111111111111111111101111111101111111110111111111101111111101011110",
    "code_output": "[-1,-1]",
    "std_output": "",
    "last_testcase": "[5,1,4,1]\n2\n4",
    "expected_output": "[0,3]",
    "task_finish_time": 1707253766804,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 430,
    "total_testcases": 517,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "PHP",
    "submission_id": "1168196044",
    "input_formatted": "[5,1,4,1], 2, 4",
    "input": "[5,1,4,1]\n2\n4",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @param Integer $indexDifference\n     * @param Integer $valueDifference\n     * @return Integer[]\n     */\n    function findIndices($nums, $indexDifference, $valueDifference) {\n        $n = count($nums);\n        for ($i = 0; $i < $n; $i++) {\n            for ($j = max(0, $i - $indexDifference); $j <= min($n - 1, $i + $indexDifference); $j++) {\n                if (abs($nums[$i] - $nums[$j]) >= $valueDifference && abs($i - $j) >= $indexDifference) {\n                    return [$i, $j];\n                }\n            }\n        }\n        return [-1, -1];\n    }\n}"
}