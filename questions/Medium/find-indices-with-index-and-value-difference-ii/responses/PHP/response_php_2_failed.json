{
    "status_code": 11,
    "lang": "php",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 26748000,
    "question_id": "3170",
    "elapsed_time": 332,
    "compare_result
    "code_output": "[0,1]",
    "std_output": "",
    "last_testcase": "[5,1,4,1]\n2\n4",
    "expected_output": "[0,3]",
    "task_finish_time": 1707253831701,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 154,
    "total_testcases": 517,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "PHP",
    "submission_id": "1168196606",
    "input_formatted": "[5,1,4,1], 2, 4",
    "input": "[5,1,4,1]\n2\n4",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @param Integer $indexDifference\n     * @param Integer $valueDifference\n     * @return Integer[]\n     */\n    function findIndices($nums, $indexDifference, $valueDifference) {\n        for ($i = 0; $i < count($nums); $i++) {\n            for ($j = $i + 1; $j < count($nums) && $j <= $i + $indexDifference; $j++) {\n                if (abs($nums[$i] - $nums[$j]) >= $valueDifference) {\n                    return [$i, $j];\n                }\n            }\n        }\n        return [-1, -1];\n    }\n}"
}