{
    "status_code": 11,
    "lang": "python3",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 17272000,
    "question_id": "3170",
    "elapsed_time": 57,
    "compare_result": "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "code_output": "[-1,1]",
    "std_output": "",
    "last_testcase": "[5,1,4,1]\n2\n4",
    "expected_output": "[0,3]",
    "task_finish_time": 1708765995691,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 517,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python3",
    "submission_id": "1184680765",
    "input_formatted": "[5,1,4,1], 2, 4",
    "input": "[5,1,4,1]\n2\n4",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "from typing import List\nfrom sortedcontainers import SortedList\n\nclass Solution:\n    def findIndices(self, nums: List[int], indexDifference: int, valueDifference: int) -> List[int]:\n        sList = SortedList()\n        for i, num in enumerate(nums):\n            if i >= indexDifference:\n                sList.remove(nums[i - indexDifference])\n            idx = sList.bisect_left(num - valueDifference)\n            if idx < len(sList) and abs(sList[idx] - num) >= valueDifference:\n                return [i - indexDifference, i]\n            idx = sList.bisect_right(num + valueDifference)\n            if idx > 0 and abs(sList[idx - 1] - num) >= valueDifference:\n                return [i - indexDifference, i]\n            sList.add(num)\n        return [-1, -1]"
}