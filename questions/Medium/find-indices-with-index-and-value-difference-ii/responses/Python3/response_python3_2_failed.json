{
    "status_code": 11,
    "lang": "python3",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 31720000,
    "question_id": "3170",
    "elapsed_time": 1047,
    "compare_result": "0111111111111111111111101111111000011111111111111111111010101000110011111111111111101101111011111111111010111110011001110101001111111001100111101101111101101011111100111111111111110111011000111111110101111110100111001000011111111111111011111101111111101111101111111111011111111111111110101111111111101111111111111011101110011111111101111111111111011110111111110011111111011110111111111111101101111111111111011111101111111011111111111101111111011111111111111111111111111101111111101111111110111111111101111111101011110",
    "code_output": "[-1,-1]",
    "std_output": "",
    "last_testcase": "[5,1,4,1]\n2\n4",
    "expected_output": "[0,3]",
    "task_finish_time": 1708766019027,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 430,
    "total_testcases": 517,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python3",
    "submission_id": "1184680982",
    "input_formatted": "[5,1,4,1], 2, 4",
    "input": "[5,1,4,1]\n2\n4",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "from typing import List\n\nclass Solution:\n    def findIndices(self, nums: List[int], indexDifference: int, valueDifference: int) -> List[int]:\n        for i in range(len(nums)):\n            for j in range(max(i - indexDifference, 0), min(i + indexDifference + 1, len(nums))):\n                if abs(nums[i] - nums[j]) >= valueDifference and abs(i - j) >= indexDifference:\n                    return [i, j]\n        return [-1, -1]"
}