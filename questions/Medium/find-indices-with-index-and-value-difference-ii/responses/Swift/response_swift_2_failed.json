{
    "status_code": 11,
    "lang": "swift",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 15776000,
    "question_id": "3170",
    "elapsed_time": 5075,
    "compare_result": "0001111001111111111001000101010001000010010000010100000000001000010010001001101001000000000000000000000000100000000000001000100000010001100000100101100000001001010100011000000101000000100010000100000000010000100000000000001100000111000010000101010000000001100000000011000000100100000010000000000000100100001100000110000000000011000100100100000000000000000010100000001000000000000000010000000001101000000100000001000001101000000000000000100000000000000000000000000000000000000000000000000000000000000001010011000000000",
    "code_output": "[2,0]",
    "std_output": "",
    "last_testcase": "[5,1,4,1]\n2\n4",
    "expected_output": "[0,3]",
    "task_finish_time": 1707263157191,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 98,
    "total_testcases": 517,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Swift",
    "submission_id": "1168273836",
    "input_formatted": "[5,1,4,1], 2, 4",
    "input": "[5,1,4,1]\n2\n4",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    func findIndices(_ nums: [Int], _ indexDifference: Int, _ valueDifference: Int) -> [Int] {\n        var map = [Int: [Int]]() // Value to indices map\n\n        for (i, num) in nums.enumerated() {\n            // Check for values within the valueDifference in the map\n            for val in (num - valueDifference)...(num + valueDifference) {\n                if let indices = map[val] {\n                    for j in indices where abs(i - j) >= indexDifference {\n                        return [i, j]\n                    }\n                }\n            }\n            // Update map with the current number\n            map[num, default: []].append(i)\n        }\n\n        return [-1, -1]\n    }\n}"
}