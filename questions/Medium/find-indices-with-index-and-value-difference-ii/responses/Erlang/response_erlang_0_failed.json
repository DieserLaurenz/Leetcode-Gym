{
    "status_code": 15,
    "lang": "erlang",
    "run_success": false,
    "runtime_error": "Line 11: exception error: function_clause",
    "full_runtime_error": "Line 11: exception error: function_clause\n[{lists,nth,[0,[5,1,4,1]],[{file,\"lists.erl\"},{line,198}]},\n {solution,find_pair,6,[{file,\"solution.erl\"},{line,11}]},\n {solution,consume_test_cases,2,[{file,\"solution.erl\"},{line,44}]},\n {solution,driver,0,[{file,\"solution.erl\"},{line,28}]},\n {solution,start,0,[{file,\"solution.erl\"},{line,61}]},\n {init,start_em,1,[]},\n {init,do_boot,3,[]}]",
    "status_runtime": "N/A",
    "memory": 64424000,
    "question_id": "3170",
    "elapsed_time": 1361,
    "compare_result": "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "code_output": "",
    "std_output": "",
    "last_testcase": "[5,1,4,1]\n2\n4",
    "expected_output": "[0,3]",
    "task_finish_time": 1707264142495,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 517,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Erlang",
    "submission_id": "1168281059",
    "status_msg": "Runtime Error",
    "state": "SUCCESS",
    "code": "-spec find_indices(Nums :: [integer()], IndexDifference :: integer(), ValueDifference :: integer()) -> [integer()].\nfind_indices(Nums, IndexDifference, ValueDifference) ->\n    find_indices_helper(Nums, IndexDifference, ValueDifference, 0, length(Nums) - 1).\n\nfind_indices_helper(Nums, IndexDifference, ValueDifference, Start, End) when Start =< End ->\n    find_pair(Nums, IndexDifference, ValueDifference, Start, Start + IndexDifference, length(Nums));\nfind_indices_helper(_, _, _, _, _) ->\n    [-1, -1].\n\nfind_pair(Nums, IndexDifference, ValueDifference, I, J, Len) when J < Len ->\n    case abs(Nums -- [lists:nth(I, Nums)] -- [lists:nth(J, Nums)]) >= ValueDifference of\n        true -> [I, J];\n        false -> \n            case J + 1 < Len of\n                true -> find_pair(Nums, IndexDifference, ValueDifference, I, J + 1, Len);\n                false ->\n                    case I + 1 =< Len - IndexDifference of\n                        true -> find_pair(Nums, IndexDifference, ValueDifference, I + 1, I + 1 + IndexDifference, Len);\n                        false -> [-1, -1]\n                    end\n            end\n    end;\nfind_pair(_, _, _, _, _, _) ->\n    [-1, -1]."
}