{
    "status_code": 11,
    "lang": "scala",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 71076000,
    "question_id": "3170",
    "elapsed_time": 10243,
    "compare_result": "1111111001111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110011110000000",
    "code_output": "[-1,-1]",
    "std_output": "",
    "last_testcase": "[7]\n0\n0",
    "expected_output": "[0,0]",
    "task_finish_time": 1707263851711,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 506,
    "total_testcases": 517,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Scala",
    "submission_id": "1168278930",
    "input_formatted": "[7], 0, 0",
    "input": "[7]\n0\n0",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "object Solution {\n    def findIndices(nums: Array[Int], indexDifference: Int, valueDifference: Int): Array[Int] = {\n        val n = nums.length\n        for (i <- 0 until n) {\n            for (j <- (i + 1) until n if Math.abs(i - j) >= indexDifference) {\n                if (Math.abs(nums(i) - nums(j)) >= valueDifference) {\n                    return Array(i, j)\n                }\n            }\n        }\n        Array(-1, -1)\n    }\n}"
}