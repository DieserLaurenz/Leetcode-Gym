{
    "status_code": 11,
    "lang": "c",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 13100000,
    "question_id": "3170",
    "elapsed_time": 146,
    "compare_result
    "code_output": "[0,1]",
    "std_output": "",
    "last_testcase": "[5,1,4,1]\n2\n4",
    "expected_output": "[0,3]",
    "task_finish_time": 1707253291297,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 154,
    "total_testcases": 517,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C",
    "submission_id": "1168191568",
    "input_formatted": "[5,1,4,1], 2, 4",
    "input": "[5,1,4,1]\n2\n4",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "/**\n * Note: The returned array must be malloced, assume caller calls free().\n */\nint* findIndices(int* nums, int numsSize, int indexDifference, int valueDifference, int* returnSize) {\n    *returnSize = 2;\n    int* result = (int*)malloc(2 * sizeof(int));\n    result[0] = -1;\n    result[1] = -1;\n    \n    for (int i = 0; i < numsSize; ++i) {\n        for (int j = i + 1; j < numsSize && j <= i + indexDifference; ++j) {\n            if (abs(nums[i] - nums[j]) >= valueDifference) {\n                result[0] = i;\n                result[1] = j;\n                return result;\n            }\n        }\n    }\n    \n    return result;\n}"
}