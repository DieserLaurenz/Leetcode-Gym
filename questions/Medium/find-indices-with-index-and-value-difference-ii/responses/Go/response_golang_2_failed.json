{
    "status_code": 11,
    "lang": "golang",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 11296000,
    "question_id": "3170",
    "elapsed_time": 182,
    "compare_result": "1110101111010010111011001111111000011111111111101101111010001000110011111111101001101011001010111011110010100010010001110100000110010001000111000101100100101000110000001100100111100101001000001111000001010000000011001000001010000101010010010101011110001001100101000111000100011110000010000010010010100100111100001011101110010000000000111101000000000000010000100010000001010000000110010000000000101000011001010111000001100010000100001100100100011010010000000010001000000001001000000010001000000000000101011111000011010",
    "code_output": "[0,0]",
    "std_output": "",
    "last_testcase": "[1]\n0\n1",
    "expected_output": "[-1,-1]",
    "task_finish_time": 1707263618701,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 204,
    "total_testcases": 517,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Go",
    "submission_id": "1168277266",
    "input_formatted": "[1], 0, 1",
    "input": "[1]\n0\n1",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "func findIndices(nums []int, indexDifference int, valueDifference int) []int {\n    if indexDifference == 0 {\n        return []int{0, 0}\n    }\n\n    type ValIndex struct {\n        val   int\n        index int\n    }\n\n    valIndices := make([]ValIndex, 0, len(nums))\n    for i, v := range nums {\n        valIndices = append(valIndices, ValIndex{v, i})\n    }\n\n    sort.Slice(valIndices, func(i, j int) bool {\n        return valIndices[i].val < valIndices[j].val\n    })\n\n    i, j := 0, 1\n    for j < len(valIndices) {\n        if abs(valIndices[i].val-valIndices[j].val) >= valueDifference &&\n            abs(valIndices[i].index-valIndices[j].index) >= indexDifference {\n            return []int{valIndices[i].index, valIndices[j].index}\n        }\n        if abs(valIndices[i].index-valIndices[j].index) < indexDifference {\n            j++\n        } else {\n            i++\n            if i == j {\n                j++\n            }\n        }\n    }\n\n    return []int{-1, -1}\n}\n\nfunc abs(x int) int {\n    if x < 0 {\n        return -x\n    }\n    return x\n}"
}