{
    "status_code": 11,
    "lang": "kotlin",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 67268000,
    "question_id": "3170",
    "elapsed_time": 5223,
    "compare_result": "1111111001111111111111111111111111111111111111111111111111110111111111111111111111111101111111111111111111111111111111111111111111111111111111110111111111111111111111111111111111111111111111111111111111111111111111001111011111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110011110000000",
    "code_output": "[-1,-1]",
    "std_output": "",
    "last_testcase": "[7]\n0\n0",
    "expected_output": "[0,0]",
    "task_finish_time": 1707263288727,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 499,
    "total_testcases": 517,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Kotlin",
    "submission_id": "1168274793",
    "input_formatted": "[7], 0, 0",
    "input": "[7]\n0\n0",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    fun findIndices(nums: IntArray, indexDifference: Int, valueDifference: Int): IntArray {\n        val map = mutableMapOf<Int, Int>()\n        nums.forEachIndexed { index, num ->\n            map.keys.forEach {\n                if (Math.abs(num - it) >= valueDifference && Math.abs(map[it]!! - index) >= indexDifference) {\n                    return intArrayOf(map[it]!!, index)\n                }\n            }\n            map[num] = index\n        }\n        return intArrayOf(-1, -1)\n    }\n}"
}