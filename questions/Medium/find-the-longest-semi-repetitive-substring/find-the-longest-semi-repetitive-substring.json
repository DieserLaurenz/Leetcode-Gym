{
    "acRate": 35.357749961366096,
    "difficulty": "Medium",
    "freqBar": null,
    "questionId": "2786",
    "frontendQuestionId": "2730",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Find the Longest Semi-Repetitive Substring",
    "titleSlug": "find-the-longest-semi-repetitive-substring",
    "topicTags": [
        {
            "name": "String",
            "id": "VG9waWNUYWdOb2RlOjEw",
            "slug": "string"
        },
        {
            "name": "Sliding Window",
            "id": "VG9waWNUYWdOb2RlOjU1ODIx",
            "slug": "sliding-window"
        }
    ],
    "hasSolution": false,
    "hasVideoSolution": false,
    "codeSnippets": [
        {
            "lang": "C++",
            "langSlug": "cpp",
            "code": "class Solution {\npublic:\n    int longestSemiRepetitiveSubstring(string s) {\n        \n    }\n};"
        },
        {
            "lang": "Java",
            "langSlug": "java",
            "code": "class Solution {\n    public int longestSemiRepetitiveSubstring(String s) {\n        \n    }\n}"
        },
        {
            "lang": "Python",
            "langSlug": "python",
            "code": "class Solution(object):\n    def longestSemiRepetitiveSubstring(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: int\n        \"\"\"\n        "
        },
        {
            "lang": "Python3",
            "langSlug": "python3",
            "code": "class Solution:\n    def longestSemiRepetitiveSubstring(self, s: str) -> int:\n        "
        },
        {
            "lang": "C",
            "langSlug": "c",
            "code": "int longestSemiRepetitiveSubstring(char * s){\n\n}"
        },
        {
            "lang": "C#",
            "langSlug": "csharp",
            "code": "public class Solution {\n    public int LongestSemiRepetitiveSubstring(string s) {\n        \n    }\n}"
        },
        {
            "lang": "JavaScript",
            "langSlug": "javascript",
            "code": "/**\n * @param {string} s\n * @return {number}\n */\nvar longestSemiRepetitiveSubstring = function(s) {\n    \n};"
        },
        {
            "lang": "TypeScript",
            "langSlug": "typescript",
            "code": "function longestSemiRepetitiveSubstring(s: string): number {\n\n};"
        },
        {
            "lang": "PHP",
            "langSlug": "php",
            "code": "class Solution {\n\n    /**\n     * @param String $s\n     * @return Integer\n     */\n    function longestSemiRepetitiveSubstring($s) {\n        \n    }\n}"
        },
        {
            "lang": "Swift",
            "langSlug": "swift",
            "code": "class Solution {\n    func longestSemiRepetitiveSubstring(_ s: String) -> Int {\n        \n    }\n}"
        },
        {
            "lang": "Kotlin",
            "langSlug": "kotlin",
            "code": "class Solution {\n    fun longestSemiRepetitiveSubstring(s: String): Int {\n        \n    }\n}"
        },
        {
            "lang": "Dart",
            "langSlug": "dart",
            "code": "class Solution {\n  int longestSemiRepetitiveSubstring(String s) {\n\n  }\n}"
        },
        {
            "lang": "Go",
            "langSlug": "golang",
            "code": "func longestSemiRepetitiveSubstring(s string) int {\n    \n}"
        },
        {
            "lang": "Ruby",
            "langSlug": "ruby",
            "code": "# @param {String} s\n# @return {Integer}\ndef longest_semi_repetitive_substring(s)\n    \nend"
        },
        {
            "lang": "Scala",
            "langSlug": "scala",
            "code": "object Solution {\n    def longestSemiRepetitiveSubstring(s: String): Int = {\n        \n    }\n}"
        },
        {
            "lang": "Rust",
            "langSlug": "rust",
            "code": "impl Solution {\n    pub fn longest_semi_repetitive_substring(s: String) -> i32 {\n        \n    }\n}"
        },
        {
            "lang": "Racket",
            "langSlug": "racket",
            "code": "(define/contract (longest-semi-repetitive-substring s)\n  (-> string? exact-integer?)\n\n  )"
        },
        {
            "lang": "Erlang",
            "langSlug": "erlang",
            "code": "-spec longest_semi_repetitive_substring(S :: unicode:unicode_binary()) -> integer().\nlongest_semi_repetitive_substring(S) ->\n  ."
        },
        {
            "lang": "Elixir",
            "langSlug": "elixir",
            "code": "defmodule Solution do\n  @spec longest_semi_repetitive_substring(s :: String.t) :: integer\n  def longest_semi_repetitive_substring(s) do\n\n  end\nend"
        }
    ],
    "content": "You are given a 0-indexed string s that consists of digits from 0 to 9.\nA string t is called a semi-repetitive if there is at most one consecutive pair of the same digits inside t. For example, 0010, 002020, 0123, 2002, and 54944 are semi-repetitive while00101022, and 1101234883 are not.\nReturn the length of the longest semi-repetitive substring inside s.\nA substring is a contiguous non-empty sequence of characters within a string.\n\nExample 1:\n\nInput: s = \"52233\"\nOutput: 4\nExplanation: The longest semi-repetitive substring is \"5223\", which starts at i = 0 and ends at j = 3. \n\nExample 2:\n\nInput: s = \"5494\"\nOutput: 4\nExplanation: s is a semi-reptitive string, so the answer is 4.\n\nExample 3:\n\nInput: s = \"1111111\"\nOutput: 2\nExplanation: The longest semi-repetitive substring is \"11\", which starts at i = 0 and ends at j = 1.\n\n\nConstraints:\n\n1 <= s.length <= 50\n'0' <= s[i] <= '9'\n\n"
}