{
    "status_code": 11,
    "lang": "cpp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 207228000,
    "question_id": "2834",
    "elapsed_time": 470,
    "compare_result
    "code_output": "[2]",
    "std_output": "",
    "last_testcase": "[3,4]\n[4,3,1,2,2,3,2,4,1]\n[3,1,2,2,3,2,4,1,1]",
    "expected_output": "[1]",
    "task_finish_time": 1708104426570,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 1842,
    "total_testcases": 2129,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C++",
    "submission_id": "1177148424",
    "input_formatted": "[3,4], [4,3,1,2,2,3,2,4,1], [3,1,2,2,3,2,4,1,1]",
    "input": "[3,4]\n[4,3,1,2,2,3,2,4,1]\n[3,1,2,2,3,2,4,1,1]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "#include <vector>\n#include <unordered_map>\n#include <set>\nusing namespace std;\n\nclass Solution {\npublic:\n    vector<int> relocateMarbles(vector<int>& nums, vector<int>& moveFrom, vector<int>& moveTo) {\n        unordered_map<int, int> marbleCount;\n        set<int> occupied;\n\n        // Count initial positions\n        for (int num : nums) {\n            marbleCount[num]++;\n            occupied.insert(num);\n        }\n\n        for (int i = 0; i < moveFrom.size(); ++i) {\n            if (marbleCount[moveFrom[i]] > 0) {\n                // Move marbles from moveFrom[i] to moveTo[i]\n                marbleCount[moveTo[i]] += marbleCount[moveFrom[i]];\n                marbleCount[moveFrom[i]] = 0;\n\n                // Update occupied positions\n                occupied.erase(moveFrom[i]);\n                occupied.insert(moveTo[i]);\n            }\n        }\n\n        return vector<int>(occupied.begin(), occupied.end());\n    }\n};"
}