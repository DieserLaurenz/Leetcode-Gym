{
    "status_code": 11,
    "lang": "kotlin",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 92428000,
    "question_id": "2834",
    "elapsed_time": 1606,
    "compare_result
    "code_output": "[2,5,6,8,9]",
    "std_output": "",
    "last_testcase": "[1,6,7,8]\n[1,7,2]\n[2,9,5]",
    "expected_output": "[5,6,8,9]",
    "task_finish_time": 1708113382830,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 691,
    "total_testcases": 2129,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Kotlin",
    "submission_id": "1177261706",
    "input_formatted": "[1,6,7,8], [1,7,2], [2,9,5]",
    "input": "[1,6,7,8]\n[1,7,2]\n[2,9,5]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    fun relocateMarbles(nums: IntArray, moveFrom: IntArray, moveTo: IntArray): List<Int> {\n        val map = nums.groupBy { it }.mapValues { (_, v) -> v.size }.toMutableMap()\n        for (i in moveFrom.indices) {\n            val from = moveFrom[i]\n            val to = moveTo[i]\n            if (from in map) {\n                map[to] = map.getOrDefault(to, 0) + map[from]!!\n                map.remove(from)\n            }\n        }\n        val result = map.keys.toMutableSet()\n        for (i in moveFrom.indices) {\n            if (moveTo[i] !in map) result.add(moveTo[i])\n        }\n        return result.sorted()\n    }\n}"
}