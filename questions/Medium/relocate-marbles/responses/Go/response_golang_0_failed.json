{
    "status_code": 11,
    "lang": "golang",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 13280000,
    "question_id": "2834",
    "elapsed_time": 422,
    "compare_result
    "code_output": "[]",
    "std_output": "",
    "last_testcase": "[3,4]\n[4,3,1,2,2,3,2,4,1]\n[3,1,2,2,3,2,4,1,1]",
    "expected_output": "[1]",
    "task_finish_time": 1708113556532,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 1781,
    "total_testcases": 2129,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Go",
    "submission_id": "1177263507",
    "input_formatted": "[3,4], [4,3,1,2,2,3,2,4,1], [3,1,2,2,3,2,4,1,1]",
    "input": "[3,4]\n[4,3,1,2,2,3,2,4,1]\n[3,1,2,2,3,2,4,1,1]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "func relocateMarbles(nums []int, moveFrom []int, moveTo []int) []int {\n    occupied := make(map[int]int)\n    for _, num := range nums {\n        occupied[num]++\n    }\n    for i, from := range moveFrom {\n        to := moveTo[i]\n        occupied[to] += occupied[from]\n        delete(occupied, from)\n    }\n    var result []int\n    for position := range occupied {\n        result = append(result, position)\n    }\n    sort.Ints(result)\n    return result\n}"
}