{
    "status_code": 11,
    "lang": "swift",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 28748000,
    "question_id": "2834",
    "elapsed_time": 521,
    "compare_result
    "code_output": "[1,3]",
    "std_output": "",
    "last_testcase": "[3,4]\n[4,3,1,2,2,3,2,4,1]\n[3,1,2,2,3,2,4,1,1]",
    "expected_output": "[1]",
    "task_finish_time": 1708113267887,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 1553,
    "total_testcases": 2129,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Swift",
    "submission_id": "1177260529",
    "input_formatted": "[3,4], [4,3,1,2,2,3,2,4,1], [3,1,2,2,3,2,4,1,1]",
    "input": "[3,4]\n[4,3,1,2,2,3,2,4,1]\n[3,1,2,2,3,2,4,1,1]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    func relocateMarbles(_ nums: [Int], _ moveFrom: [Int], _ moveTo: [Int]) -> [Int] {\n        var marblePositions = Set(nums)\n        var moveMap = [Int: Int]()\n\n        for i in 0..<moveFrom.count {\n            moveMap[moveFrom[i]] = (moveMap[moveFrom[i]] ?? 0) + 1\n            moveMap[moveTo[i]] = (moveMap[moveTo[i]] ?? 0) - 1\n        }\n\n        for (position, change) in moveMap {\n            if change > 0 {\n                if marblePositions.contains(position) {\n                    marblePositions.remove(position)\n                }\n            } else if change < 0 {\n                marblePositions.insert(position)\n            }\n        }\n\n        return marblePositions.sorted()\n    }\n}"
}