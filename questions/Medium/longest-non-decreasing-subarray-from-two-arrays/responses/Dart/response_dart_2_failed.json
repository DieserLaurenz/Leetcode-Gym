{
    "status_code": 11,
    "lang": "dart",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 162548000,
    "question_id": "2869",
    "elapsed_time": 5023,
    "compare_result
    "code_output": "3",
    "std_output": "",
    "last_testcase": "[5,16,15]\n[12,1,14]",
    "expected_output": "2",
    "task_finish_time": 1707516285004,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 835,
    "total_testcases": 2973,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Dart",
    "submission_id": "1170975753",
    "input_formatted": "[5,16,15], [12,1,14]",
    "input": "[5,16,15]\n[12,1,14]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n  int maxNonDecreasingLength(List<int> nums1, List<int> nums2) {\n    int n = nums1.length;\n    List<int> dp = List.filled(n, 1);\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < i; j++) {\n        if ((nums1[j] <= nums1[i] || nums2[j] <= nums1[i]) && dp[j] + 1 > dp[i]) {\n          dp[i] = dp[j] + 1;\n        }\n        if ((nums1[j] <= nums2[i] || nums2[j] <= nums2[i]) && dp[j] + 1 > dp[i]) {\n          dp[i] = dp[j] + 1;\n        }\n      }\n    }\n    return dp.reduce((curr, next) => curr > next ? curr : next);\n  }\n}"
}