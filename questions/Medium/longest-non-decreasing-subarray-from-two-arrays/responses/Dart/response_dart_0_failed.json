{
    "status_code": 15,
    "lang": "dart",
    "run_success": false,
    "runtime_error": "Line 13: Char 24: Error: The getter 'Math' isn't defined for the class 'Solution'.",
    "full_runtime_error": "Line 13: Char 24: Error: The getter 'Math' isn't defined for the class 'Solution'.\nTry correcting the name to the name of an existing getter, or defining a getter or field named 'Math'.\n            dp[i][j] = Math.max(dp[i][j], 1 + dp[i + 1][0]);\n                       ^^^^\nLine 16: Char 24: Error: The getter 'Math' isn't defined for the class 'Solution'.\nTry correcting the name to the name of an existing getter, or defining a getter or field named 'Math'.\n            dp[i][j] = Math.max(dp[i][j], 1 + dp[i + 1][1]);\n                       ^^^^\nLine 21: Char 12: Error: The getter 'Math' isn't defined for the class 'Solution'.\nTry correcting the name to the name of an existing getter, or defining a getter or field named 'Math'.\n    return Math.max(dp[0][0], dp[0][1]);\n           ^^^^",
    "status_runtime": "N/A",
    "memory": 147416000,
    "question_id": "2869",
    "elapsed_time": 340,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "[2,3,1]\n[1,2,1]",
    "expected_output": "2",
    "task_finish_time": 1707516222668,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 2973,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Dart",
    "submission_id": "1170975375",
    "status_msg": "Runtime Error",
    "state": "SUCCESS",
    "code": "class Solution {\n  int maxNonDecreasingLength(List<int> nums1, List<int> nums2) {\n    int n = nums1.length;\n    List<List<int>> dp = List.generate(n + 1, (_) => List.filled(2, 0));\n    for (int i = n - 1; i >= 0; i--) {\n      for (int j = 0; j < 2; j++) {\n        int current = (j == 0) ? nums1[i] : nums2[i];\n        if (i == n - 1) {\n          dp[i][j] = 1;\n        } else {\n          dp[i][j] = 1;\n          if (current <= nums1[i + 1]) {\n            dp[i][j] = Math.max(dp[i][j], 1 + dp[i + 1][0]);\n          }\n          if (current <= nums2[i + 1]) {\n            dp[i][j] = Math.max(dp[i][j], 1 + dp[i + 1][1]);\n          }\n        }\n      }\n    }\n    return Math.max(dp[0][0], dp[0][1]);\n  }\n}"
}