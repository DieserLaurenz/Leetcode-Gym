{
    "status_code": 10,
    "lang": "swift",
    "run_success": true,
    "status_runtime": "416 ms",
    "memory": 24528000,
    "question_id": "2869",
    "elapsed_time": 464,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1707516056052,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 2973,
    "total_testcases": 2973,
    "runtime_percentile": 100,
    "status_memory": "24.5 MB",
    "memory_percentile": 100,
    "pretty_lang": "Swift",
    "submission_id": "1170974232",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\n    func maxNonDecreasingLength(_ nums1: [Int], _ nums2: [Int]) -> Int {\n        let n = nums1.count\n        var dp = Array(repeating: [1, 1], count: n)\n        var maxLen = 1\n\n        for i in 1..<n {\n            if nums1[i] >= nums1[i - 1] {\n                dp[i][0] = dp[i - 1][0] + 1\n            }\n            if nums2[i] >= nums2[i - 1] {\n                dp[i][1] = dp[i - 1][1] + 1\n            }\n            if nums1[i] >= nums2[i - 1] {\n                dp[i][0] = max(dp[i][0], dp[i - 1][1] + 1)\n            }\n            if nums2[i] >= nums1[i - 1] {\n                dp[i][1] = max(dp[i][1], dp[i - 1][0] + 1)\n            }\n            maxLen = max(maxLen, dp[i][0], dp[i][1])\n        }\n\n        return maxLen\n    }\n}"
}