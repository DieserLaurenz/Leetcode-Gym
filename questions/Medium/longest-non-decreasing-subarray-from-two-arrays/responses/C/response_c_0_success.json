{
    "status_code": 10,
    "lang": "c",
    "run_success": true,
    "status_runtime": "116 ms",
    "memory": 14156000,
    "question_id": "2869",
    "elapsed_time": 173,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1707515627798,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 2973,
    "total_testcases": 2973,
    "runtime_percentile": 100,
    "status_memory": "14.2 MB",
    "memory_percentile": 100,
    "pretty_lang": "C",
    "submission_id": "1170971387",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "int maxNonDecreasingLength(int* nums1, int nums1Size, int* nums2, int nums2Size){\n    int dp[nums1Size][2];\n    dp[0][0] = dp[0][1] = 1;\n    int maxLen = 1;\n    \n    for(int i = 1; i < nums1Size; ++i){\n        dp[i][0] = dp[i][1] = 1;\n        \n        if(nums1[i] >= nums1[i-1]) dp[i][0] = dp[i-1][0] + 1;\n        if(nums2[i] >= nums2[i-1]) dp[i][1] = dp[i-1][1] + 1;\n        \n        if(nums1[i] >= nums2[i-1]) dp[i][0] = fmax(dp[i][0], dp[i-1][1] + 1);\n        if(nums2[i] >= nums1[i-1]) dp[i][1] = fmax(dp[i][1], dp[i-1][0] + 1);\n        \n        maxLen = fmax(maxLen, fmax(dp[i][0], dp[i][1]));\n    }\n    \n    return maxLen;\n}"
}