{
    "status_code": 10,
    "lang": "rust",
    "run_success": true,
    "status_runtime": "18 ms",
    "memory": 4364000,
    "question_id": "2869",
    "elapsed_time": 31,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1707525395594,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 2973,
    "total_testcases": 2973,
    "runtime_percentile": 26.66659999999999,
    "status_memory": "4.4 MB",
    "memory_percentile": 13.333300000000001,
    "pretty_lang": "Rust",
    "submission_id": "1171031398",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "impl Solution {\n    pub fn max_non_decreasing_length(nums1: Vec<i32>, nums2: Vec<i32>) -> i32 {\n        let n = nums1.len();\n        let mut dp = vec![(1, 1); n]; // (max_length_ending_with_nums1[i], max_length_ending_with_nums2[i])\n\n        for i in 1..n {\n            if nums1[i] >= nums1[i - 1] {\n                dp[i].0 = dp[i].0.max(dp[i - 1].0 + 1);\n            }\n            if nums2[i] >= nums2[i - 1] {\n                dp[i].1 = dp[i].1.max(dp[i - 1].1 + 1);\n            }\n            if nums1[i] >= nums2[i - 1] {\n                dp[i].0 = dp[i].0.max(dp[i - 1].1 + 1);\n            }\n            if nums2[i] >= nums1[i - 1] {\n                dp[i].1 = dp[i].1.max(dp[i - 1].0 + 1);\n            }\n        }\n\n        dp.iter().map(|&(a, b)| a.max(b)).max().unwrap_or(0)\n    }\n}"
}