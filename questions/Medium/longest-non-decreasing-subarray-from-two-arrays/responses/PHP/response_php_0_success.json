{
    "status_code": 10,
    "lang": "php",
    "run_success": true,
    "status_runtime": "345 ms",
    "memory": 50800000,
    "question_id": "2869",
    "elapsed_time": 417,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1707515939374,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 2973,
    "total_testcases": 2973,
    "runtime_percentile": 100,
    "status_memory": "50.8 MB",
    "memory_percentile": 100,
    "pretty_lang": "PHP",
    "submission_id": "1170973479",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\n\n    /**\n     * @param Integer[] $nums1\n     * @param Integer[] $nums2\n     * @return Integer\n     */\n    function maxNonDecreasingLength($nums1, $nums2) {\n        $n = count($nums1);\n        $dp = array_fill(0, $n, [1, 1]); // dp[i][0] for nums1[i], dp[i][1] for nums2[i]\n\n        for ($i = 1; $i < $n; $i++) {\n            if ($nums1[$i] >= $nums1[$i - 1]) {\n                $dp[$i][0] = max($dp[$i][0], $dp[$i - 1][0] + 1);\n            }\n            if ($nums2[$i] >= $nums2[$i - 1]) {\n                $dp[$i][1] = max($dp[$i][1], $dp[$i - 1][1] + 1);\n            }\n            if ($nums1[$i] >= $nums2[$i - 1]) {\n                $dp[$i][0] = max($dp[$i][0], $dp[$i - 1][1] + 1);\n            }\n            if ($nums2[$i] >= $nums1[$i - 1]) {\n                $dp[$i][1] = max($dp[$i][1], $dp[$i - 1][0] + 1);\n            }\n        }\n\n        $maxLength = 0;\n        for ($i = 0; $i < $n; $i++) {\n            $maxLength = max($maxLength, $dp[$i][0], $dp[$i][1]);\n        }\n\n        return $maxLength;\n    }\n}"
}