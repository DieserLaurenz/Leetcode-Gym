{
    "status_code": 11,
    "lang": "scala",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 76680000,
    "question_id": "2869",
    "elapsed_time": 951,
    "compare_result
    "code_output": "4",
    "std_output": "",
    "last_testcase": "[2,3,1]\n[1,2,1]",
    "expected_output": "2",
    "task_finish_time": 1707525310602,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 336,
    "total_testcases": 2973,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Scala",
    "submission_id": "1171030921",
    "input_formatted": "[2,3,1], [1,2,1]",
    "input": "[2,3,1]\n[1,2,1]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "object Solution {\n    def maxNonDecreasingLength(nums1: Array[Int], nums2: Array[Int]): Int = {\n        val n = nums1.length\n        var maxLen = 1\n        var len1 = 1\n        var len2 = 1\n\n        for (i <- 1 until n) {\n            if (nums1(i) >= nums1(i - 1) && nums2(i) >= nums2(i - 1)) {\n                len1 += 1\n                len2 += 1\n            } else if (nums1(i) >= nums1(i - 1)) {\n                len1 += 1\n                len2 = 1\n            } else if (nums2(i) >= nums2(i - 1)) {\n                len2 += 1\n                len1 = 1\n            } else {\n                len1 = 1\n                len2 = 1\n            }\n\n            if (nums1(i) >= nums2(i - 1)) len1 = Math.max(len1, len2 + 1)\n            if (nums2(i) >= nums1(i - 1)) len2 = Math.max(len2, len1 + 1)\n\n            maxLen = Math.max(maxLen, Math.max(len1, len2))\n        }\n\n        maxLen\n    }\n}"
}