{
    "status_code": 11,
    "lang": "racket",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 126196000,
    "question_id": "2855",
    "elapsed_time": 5016,
    "compare_result
    "code_output": "2",
    "std_output": "",
    "last_testcase": "[1,0,3,4,2]\n2",
    "expected_output": "3",
    "task_finish_time": 1707609188926,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 2258,
    "total_testcases": 2639,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Racket",
    "submission_id": "1171809679",
    "input_formatted": "[1,0,3,4,2], 2",
    "input": "[1,0,3,4,2]\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "(define/contract (maximum-jumps nums target)\n  (-> (listof exact-integer?) exact-integer? exact-integer?)\n  (let loop ([i 0] [jumps 0] [reachable (make-vector (length nums) #f)])\n    (vector-set! reachable i #t)\n    (if (= i (- (length nums) 1))\n        jumps\n        (let iter ([j (+ i 1)])\n          (if (= j (length nums))\n              (if (vector-ref reachable (- (length nums) 1))\n                  jumps\n                  -1)\n              (if (and (<= (- (list-ref nums j) (list-ref nums i)) target)\n                       (>= (- (list-ref nums j) (list-ref nums i)) (- target)))\n                  (let ([res (loop j (+ jumps 1) reachable)])\n                    (if (= res -1)\n                        (iter (+ j 1))\n                        res))\n                  (iter (+ j 1))))))))"
}