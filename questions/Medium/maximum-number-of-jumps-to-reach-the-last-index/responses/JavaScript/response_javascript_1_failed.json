{
    "status_code": 11,
    "lang": "javascript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 54412000,
    "question_id": "2855",
    "elapsed_time": 106,
    "compare_result
    "code_output": "2",
    "std_output": "",
    "last_testcase": "[1,3,4,0,2]\n2",
    "expected_output": "3",
    "task_finish_time": 1707608311334,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 2298,
    "total_testcases": 2639,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "JavaScript",
    "submission_id": "1171804324",
    "input_formatted": "[1,3,4,0,2], 2",
    "input": "[1,3,4,0,2]\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "/**\n * @param {number[]} nums\n * @param {number} target\n * @return {number}\n */\nvar maximumJumps = function(nums, target) {\n    let n = nums.length;\n    let jumps = Array(n).fill(0);\n    let maxReach = 0;\n    jumps[0] = 1; // Start position is always reachable\n\n    for (let i = 1; i < n; i++) {\n        for (let j = maxReach; j >= 0; j--) {\n            if (jumps[j] > 0 && Math.abs(nums[i] - nums[j]) <= target) {\n                jumps[i] = Math.max(jumps[i], jumps[j] + 1);\n                maxReach = Math.max(maxReach, i);\n                break; // Found a valid jump, no need to check further\n            }\n        }\n    }\n\n    return jumps[n - 1] > 0 ? jumps[n - 1] - 1 : -1; // Subtract 1 to exclude the start position\n};"
}