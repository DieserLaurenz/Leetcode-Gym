{
    "status_code": 11,
    "lang": "typescript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 54660000,
    "question_id": "2855",
    "elapsed_time": 234,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "[0,2,1,3]\n1",
    "expected_output": "-1",
    "task_finish_time": 1707608429483,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 2138,
    "total_testcases": 2639,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "TypeScript",
    "submission_id": "1171805100",
    "input_formatted": "[0,2,1,3], 1",
    "input": "[0,2,1,3]\n1",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "function maximumJumps(nums: number[], target: number): number {\n    const n = nums.length;\n    let jumps = new Array(n).fill(0);\n    let maxJumps = -1;\n\n    for (let i = 1; i < n; i++) {\n        for (let j = 0; j < i; j++) {\n            if (Math.abs(nums[i] - nums[j]) <= target) {\n                jumps[i] = Math.max(jumps[i], jumps[j] + 1);\n            }\n        }\n        maxJumps = Math.max(maxJumps, jumps[i]);\n    }\n\n    return jumps[n - 1] > 0 ? jumps[n - 1] : -1;\n}"
}