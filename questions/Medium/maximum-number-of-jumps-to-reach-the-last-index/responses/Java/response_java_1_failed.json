{
    "status_code": 11,
    "lang": "java",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 44996000,
    "display_runtime": "17",
    "question_id": "2855",
    "elapsed_time": 267,
    "compare_result
    "code_output": "-2147483647",
    "std_output": "",
    "last_testcase": "[1,3,6,4,1,2]\n2",
    "expected_output": "3",
    "task_finish_time": 1707608012816,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 490,
    "total_testcases": 2639,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Java",
    "submission_id": "1171802523",
    "input_formatted": "[1,3,6,4,1,2], 2",
    "input": "[1,3,6,4,1,2]\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    public int maximumJumps(int[] nums, int target) {\n        int n = nums.length;\n        int[] dp = new int[n];\n        Arrays.fill(dp, Integer.MAX_VALUE);\n        dp[0] = 0; // start with 0 jumps from the first index\n\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (Math.abs(nums[j] - nums[i]) <= target) {\n                    dp[j] = Math.min(dp[j], dp[i] + 1);\n                }\n            }\n        }\n\n        return dp[n - 1] == Integer.MAX_VALUE ? -1 : dp[n - 1];\n    }\n}"
}