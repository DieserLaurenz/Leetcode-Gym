{
    "status_code": 15,
    "lang": "cpp",
    "run_success": false,
    "runtime_error": "Line 10: Char 55: runtime error: signed integer overflow: 2147483647 + 1 cannot be represented in type 'int' (solution.cpp)",
    "full_runtime_error": "Line 10: Char 55: runtime error: signed integer overflow: 2147483647 + 1 cannot be represented in type 'int' (solution.cpp)\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:19:55",
    "status_runtime": "N/A",
    "memory": 7976000,
    "question_id": "2855",
    "elapsed_time": 12,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "[1,3,6,4,1,2]\n2",
    "expected_output": "3",
    "task_finish_time": 1707598916585,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 2639,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C++",
    "submission_id": "1171736053",
    "status_msg": "Runtime Error",
    "state": "SUCCESS",
    "code": "class Solution {\npublic:\n    int maximumJumps(vector<int>& nums, int target) {\n        int n = nums.size();\n        vector<int> jumps(n, INT_MAX);\n        jumps[0] = 0;\n        for (int i = 0; i < n; ++i) {\n            for (int j = i + 1; j < n && nums[j] - nums[i] <= target; ++j) {\n                if (nums[j] - nums[i] >= -target) {\n                    jumps[j] = min(jumps[j], jumps[i] + 1);\n                }\n            }\n        }\n        return jumps[n - 1] == INT_MAX ? -1 : jumps[n - 1];\n    }\n};"
}