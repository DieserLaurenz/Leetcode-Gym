{
    "status_code": 11,
    "lang": "swift",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 15888000,
    "question_id": "2855",
    "elapsed_time": 84,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "[1,3,6,4,1,2]\n0",
    "expected_output": "-1",
    "task_finish_time": 1707608601907,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 1771,
    "total_testcases": 2639,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Swift",
    "submission_id": "1171806197",
    "input_formatted": "[1,3,6,4,1,2], 0",
    "input": "[1,3,6,4,1,2]\n0",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    func maximumJumps(_ nums: [Int], _ target: Int) -> Int {\n        let n = nums.count\n        var dp = [Int](repeating: -1, count: n)\n        dp[0] = 0\n        for i in 1..<n {\n            for j in 0..<i {\n                if abs(nums[i] - nums[j]) <= target {\n                    if dp[j] != -1 {\n                        dp[i] = max(dp[i], dp[j] + 1)\n                    }\n                }\n            }\n        }\n        var maxJumps = -1\n        for i in 0..<n {\n            if dp[i] > maxJumps {\n                maxJumps = dp[i]\n            }\n        }\n        return maxJumps\n    }\n}"
}