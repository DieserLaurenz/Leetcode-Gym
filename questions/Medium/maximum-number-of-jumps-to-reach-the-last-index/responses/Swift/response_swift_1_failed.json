{
    "status_code": 11,
    "lang": "swift",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 15640000,
    "question_id": "2855",
    "elapsed_time": 72,
    "compare_result
    "code_output": "-1",
    "std_output": "",
    "last_testcase": "[0,2,1]\n1",
    "expected_output": "1",
    "task_finish_time": 1707608579786,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 1768,
    "total_testcases": 2639,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Swift",
    "submission_id": "1171806053",
    "input_formatted": "[0,2,1], 1",
    "input": "[0,2,1]\n1",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    func maximumJumps(_ nums: [Int], _ target: Int) -> Int {\n        let n = nums.count\n        var jumps = Array(repeating: 0, count: n)\n        var maxJump = 0\n\n        for i in 1..<n {\n            jumps[i] = -1\n            for j in stride(from: i - 1, through: max(0, i - maxJump - 1), by: -1) {\n                if abs(nums[i] - nums[j]) <= target {\n                    if jumps[j] >= 0 {\n                        jumps[i] = max(jumps[i], jumps[j] + 1)\n                        maxJump = max(maxJump, jumps[i])\n                        break\n                    }\n                }\n            }\n        }\n        \n        return jumps[n - 1]\n    }\n}"
}