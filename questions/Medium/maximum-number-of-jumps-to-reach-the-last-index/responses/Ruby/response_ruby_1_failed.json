{
    "status_code": 11,
    "lang": "ruby",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 212200000,
    "question_id": "2855",
    "elapsed_time": 178,
    "compare_result
    "code_output": "-1",
    "std_output": "",
    "last_testcase": "[1,0,2]\n1",
    "expected_output": "1",
    "task_finish_time": 1707608997932,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 1941,
    "total_testcases": 2639,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Ruby",
    "submission_id": "1171808613",
    "input_formatted": "[1,0,2], 1",
    "input": "[1,0,2]\n1",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "# @param {Integer[]} nums\n# @param {Integer} target\n# @return {Integer}\ndef maximum_jumps(nums, target)\n    n = nums.length\n    jumps = 0\n    current = 0\n    \n    while current < n - 1\n        next_jump = current\n        for i in (current + 1)...n\n            if nums[i] - nums[current] <= target && nums[current] - nums[i] <= target\n                next_jump = i\n                break\n            end\n        end\n        return -1 if next_jump == current\n        jumps += 1\n        current = next_jump\n    end\n    \n    jumps\nend"
}