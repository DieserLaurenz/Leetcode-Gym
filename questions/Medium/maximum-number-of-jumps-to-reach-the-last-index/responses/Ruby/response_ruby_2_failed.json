{
    "status_code": 11,
    "lang": "ruby",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 212120000,
    "question_id": "2855",
    "elapsed_time": 635,
    "compare_result
    "code_output": "4",
    "std_output": "",
    "last_testcase": "[1,3,6,4,1,2]\n2",
    "expected_output": "3",
    "task_finish_time": 1707609025539,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 1510,
    "total_testcases": 2639,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Ruby",
    "submission_id": "1171808753",
    "input_formatted": "[1,3,6,4,1,2], 2",
    "input": "[1,3,6,4,1,2]\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "# @param {Integer[]} nums\n# @param {Integer} target\n# @return {Integer}\ndef maximum_jumps(nums, target)\n    n = nums.size\n    dp = Array.new(n, Float::INFINITY)\n    dp[0] = 0\n    (1...n).each do |i|\n        (0...i).each do |j|\n            if (nums[i] - nums[j]).abs <= target\n                dp[i] = [dp[i], dp[j] + 1].min\n            end\n        end\n    end\n    dp.last == Float::INFINITY ? -1 : dp.count { |x| x != Float::INFINITY } - 1\nend"
}