{
    "status_code": 11,
    "lang": "racket",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 127836000,
    "question_id": "2845",
    "elapsed_time": 503,
    "compare_result
    "code_output": "0",
    "std_output": "",
    "last_testcase": "[1,3,2,4]",
    "expected_output": "1",
    "task_finish_time": 1707375558144,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 78,
    "total_testcases": 806,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Racket",
    "submission_id": "1169494680",
    "input_formatted": "[1,3,2,4]",
    "input": "[1,3,2,4]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "(define/contract (find-value-of-partition nums)\n  (-> (listof exact-integer?) exact-integer?)\n  (define sorted-nums (sort nums <))\n  (let* ([min-diff (abs (- (car sorted-nums) (car (reverse sorted-nums))))])\n    0))"
}