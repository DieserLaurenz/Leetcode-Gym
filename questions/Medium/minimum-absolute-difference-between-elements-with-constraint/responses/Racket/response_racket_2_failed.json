{
    "status_code": 15,
    "lang": "racket",
    "run_success": false,
    "runtime_error": "Line 1: Char 19: min-absolute-difference: broke its own contract",
    "full_runtime_error": "Line 1: Char 19: min-absolute-difference: broke its own contract\n  promised: exact-integer?\n  produced: 0.0\n  in: the range of\n      (->\n       (listof exact-integer?)\n       exact-integer?\n       exact-integer?)\n  contract from:\n      (function min-absolute-difference)\n  blaming: (function min-absolute-difference)\n   (assuming the contract is correct)\n  context...:\n   /usr/share/racket/collects/racket/contract/private/blame.rkt:346:0: raise-blame-error\n   /usr/share/racket/collects/racket/contract/private/arrow-higher-order.rkt:379:33\n   solution.rkt:12:2\n   body of (submod \"solution.rkt\" main)",
    "status_runtime": "N/A",
    "memory": 100648000,
    "question_id": "3000",
    "elapsed_time": 250,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "[4,3,2,4]\n2",
    "expected_output": "0",
    "task_finish_time": 1707730964227,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 2013,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Racket",
    "submission_id": "1173043141",
    "status_msg": "Runtime Error",
    "state": "SUCCESS",
    "code": "(define/contract (min-absolute-difference nums x)\n  (-> (listof exact-integer?) exact-integer? exact-integer?)\n  (let ([min-diff +inf.0])\n    (for ([i (in-range 0 (- (length nums) x))])\n      (for ([j (in-range (+ i x) (length nums))])\n        (set! min-diff (min min-diff (abs (- (list-ref nums i) (list-ref nums j)))))))\n    min-diff))"
}