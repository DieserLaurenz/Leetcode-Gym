{
    "status_code": 11,
    "lang": "rust",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 5128000,
    "question_id": "3000",
    "elapsed_time": 38,
    "compare_result
    "code_output": "2147483647",
    "std_output": "",
    "last_testcase": "[36,19,27]\n2",
    "expected_output": "9",
    "task_finish_time": 1707722326094,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 1027,
    "total_testcases": 2013,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Rust",
    "submission_id": "1172953271",
    "input_formatted": "[36,19,27], 2",
    "input": "[36,19,27]\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "impl Solution {\n    pub fn min_absolute_difference(nums: Vec<i32>, x: i32) -> i32 {\n        let mut sorted_pairs: Vec<(i32, usize)> = nums.iter().enumerate().map(|(i, &val)| (val, i)).collect();\n        sorted_pairs.sort_unstable();\n        let mut min_diff = i32::MAX;\n        let mut i = 0;\n        let mut j = 1;\n        \n        while j < sorted_pairs.len() {\n            let (val_i, idx_i) = sorted_pairs[i];\n            let (val_j, idx_j) = sorted_pairs[j];\n            \n            if (idx_i as i32 - idx_j as i32).abs() >= x {\n                min_diff = min_diff.min((val_i - val_j).abs());\n                i += 1;\n                if i == j {\n                    j += 1;\n                }\n            } else {\n                j += 1;\n            }\n        }\n        \n        min_diff\n    }\n}"
}