{
    "status_code": 11,
    "lang": "erlang",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 196268000,
    "question_id": "3000",
    "elapsed_time": 5088,
    "compare_result
    "code_output": "2",
    "std_output": "",
    "last_testcase": "[4,3,2,4]\n2",
    "expected_output": "0",
    "task_finish_time": 1707731020564,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 828,
    "total_testcases": 2013,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Erlang",
    "submission_id": "1173043551",
    "input_formatted": "[4,3,2,4], 2",
    "input": "[4,3,2,4]\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "-spec min_absolute_difference(Nums :: [integer()], X :: integer()) -> integer().\nmin_absolute_difference(Nums, X) ->\n    SortedNums = lists:sort(Nums),\n    lists:foldl(fun(N, Acc) ->\n                    {NewAcc, _} = lists:foldl(fun(M, {MinDiff, Prev}) ->\n                                                 if\n                                                     abs(N - M) >= X ->\n                                                         {min(MinDiff, abs(Prev - M)), M};\n                                                     true ->\n                                                         {MinDiff, Prev}\n                                                 end\n                                             end, {Acc, N}, SortedNums),\n                    NewAcc\n                end, hd(SortedNums), tl(SortedNums))."
}