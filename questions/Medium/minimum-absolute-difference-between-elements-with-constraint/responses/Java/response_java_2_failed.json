{
    "status_code": 11,
    "lang": "java",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 63788000,
    "display_runtime": "424",
    "question_id": "3000",
    "elapsed_time": 861,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "[4,3,2,4]\n2",
    "expected_output": "0",
    "task_finish_time": 1707720885465,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 1342,
    "total_testcases": 2013,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Java",
    "submission_id": "1172936790",
    "input_formatted": "[4,3,2,4], 2",
    "input": "[4,3,2,4]\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    public int minAbsoluteDifference(List<Integer> nums, int x) {\n        TreeMap<Integer, Integer> map = new TreeMap<>();\n        for (int i = 0; i < nums.size(); i++) {\n            map.put(nums.get(i), i);\n        }\n        int minDiff = Integer.MAX_VALUE;\n        for (int i = 0; i < nums.size(); i++) {\n            Integer higher = map.higherKey(nums.get(i));\n            Integer lower = map.lowerKey(nums.get(i));\n            if (higher != null && Math.abs(map.get(higher) - i) >= x) {\n                minDiff = Math.min(minDiff, Math.abs(nums.get(i) - higher));\n            }\n            if (lower != null && Math.abs(map.get(lower) - i) >= x) {\n                minDiff = Math.min(minDiff, Math.abs(nums.get(i) - lower));\n            }\n        }\n        return minDiff;\n    }\n}"
}