{
    "status_code": 11,
    "lang": "python3",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 37232000,
    "question_id": "3000",
    "elapsed_time": 955,
    "compare_result": "100000000000001000000000000000000000000000000000000000000000000000000000000000000100100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000001000000000000000000000000100000000000000000000010000000000000000000000000000000000000100000000000000000000000000001001110000000000000000000000000000000010000000000001000010000000000000000000000000100000000000000010001000000000000001000000000000000001000000000000000000000000010000000000000000000000000000000000001000010001000000000000000010000010000000000001000000000000010010001000000000000000010000010000100000000000000000001000000001000000000001000000000001100000000010000000100000000000000000000000000000000000000000010000000100101010001000000100010000100000000000000000000001110010000010000010000001001001000000000000101000000100000100000000011000000100000000000000000001001000000010000000000001100100100010000000001000000000000110000010000000000000001000001001000000001000000000000000000000000000010000000100000000000001100000100001000000011010000000000001000011011100000100011011110000001010000000000001111000000000010100010000000000100000000000001111000010000100000100000000000101100000000000000001000011000000000000001000001000010000000000010000000101000000000000000010010000010000010000010101001001001010110000000000000000001100001011100100000011100000000000100000000001010000000001001000000101000000000100100000000010001100101000001010100011000011101000000001100000100000000000010001100000010001000000001000001000000010101110000111000000110011010000000011100010001010110000000001000110101010110000110000011010100000100100100001110100001000000111000011110101000011000100010000001101101110000100100111000100011101100101001000000110010010000011000000000000000000001000001001010000000001000000011001110000000010010110000000100000001001111000010",
    "code_output": "0",
    "std_output": "",
    "last_testcase": "[5,3,2,10,15]\n1",
    "expected_output": "1",
    "task_finish_time": 1708808118819,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 295,
    "total_testcases": 2013,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python3",
    "submission_id": "1185164261",
    "input_formatted": "[5,3,2,10,15], 1",
    "input": "[5,3,2,10,15]\n1",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "from typing import List\nimport bisect\n\nclass Solution:\n    def minAbsoluteDifference(self, nums: List[int], x: int) -> int:\n        nums_sorted = sorted((num, i) for i, num in enumerate(nums))\n        min_diff = float('inf')\n        for i, (num, idx) in enumerate(nums_sorted):\n            j = bisect.bisect_left(nums_sorted, (num, idx + x))\n            if j < len(nums_sorted):\n                min_diff = min(min_diff, abs(nums_sorted[j][0] - num))\n            if j > 0:\n                min_diff = min(min_diff, abs(nums_sorted[j - 1][0] - num))\n        return min_diff"
}