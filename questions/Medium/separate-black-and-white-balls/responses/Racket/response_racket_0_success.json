{
    "status_code": 10,
    "lang": "racket",
    "run_success": true,
    "status_runtime": "231 ms",
    "memory": 128044000,
    "question_id": "3195",
    "elapsed_time": 332,
    "compare_result": "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1708134312736,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 581,
    "total_testcases": 581,
    "runtime_percentile": 100,
    "status_memory": "128 MB",
    "memory_percentile": 100,
    "pretty_lang": "Racket",
    "submission_id": "1177408636",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "(define/contract (minimum-steps s)\n  (-> string? exact-integer?)\n  (let loop ([i 0] [count 0] [result 0])\n    (if (= i (string-length s))\n        result\n        (loop (add1 i)\n              (if (char=? (string-ref s i) #\\1) (add1 count) count)\n              (if (char=? (string-ref s i) #\\0) (+ result count) result)))))"
}