{
    "status_code": 11,
    "lang": "kotlin",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 38788000,
    "question_id": "3195",
    "elapsed_time": 221,
    "compare_result
    "code_output": "0",
    "std_output": "",
    "last_testcase": "\"101\"",
    "expected_output": "1",
    "task_finish_time": 1708133793677,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 49,
    "total_testcases": 581,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Kotlin",
    "submission_id": "1177405580",
    "input_formatted": "\"101\"",
    "input": "\"101\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    fun minimumSteps(s: String): Long {\n        var leftBlack = 0\n        var rightBlack = s.count { it == '1' }\n        var minSteps = Long.MAX_VALUE\n        var currentSteps = 0L\n        \n        for (i in s.indices) {\n            if (s[i] == '1') {\n                rightBlack--\n            }\n            minSteps = minOf(minSteps, currentSteps + rightBlack - leftBlack)\n            if (s[i] == '1') {\n                leftBlack++\n            } else {\n                currentSteps += leftBlack\n            }\n        }\n        return if (minSteps == Long.MAX_VALUE) 0L else minSteps\n    }\n}"
}