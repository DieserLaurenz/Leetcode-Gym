{
    "status_code": 20,
    "lang": "racket",
    "run_success": false,
    "compile_error": "Line 1: Char 1: read-syntax: expected a `)` to close `(`",
    "full_compile_error": "Line 1: Char 1: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 15\n  compilation context...:\n   solution.rkt",
    "status_runtime": "N/A",
    "memory": 0,
    "question_id": "2878",
    "task_finish_time": 1706721691277,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": null,
    "total_testcases": null,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Racket",
    "submission_id": "1162205919",
    "status_msg": "Compile Error",
    "state": "SUCCESS",
    "code": "(define/contract (check-array nums k)\n  (-> (listof exact-integer?) exact-integer? boolean?)\n  (let ([diffs (make-vector (add1 (length nums)) 0)])\n    (let loop ([i 0] [current 0])\n      (cond\n        [(= i (length nums)) #t]\n        [else\n         (let ([decrease (+ current (vector-ref diffs i))])\n           (if (> decrease (list-ref nums i))\n               #f\n               (begin\n                 (when (< (+ i k) (length nums))\n                   (vector-set! diffs (+ i k) (- (vector-ref diffs (+ i k)) (- (list-ref nums i) decrease))))\n                 (loop (add1 i) (- decrease (list-ref nums i))))))])))"
}