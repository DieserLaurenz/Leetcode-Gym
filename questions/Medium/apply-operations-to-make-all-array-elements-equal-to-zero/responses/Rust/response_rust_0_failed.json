{
    "status_code": 11,
    "lang": "rust",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 3236000,
    "question_id": "2878",
    "elapsed_time": 32,
    "compare_result": "010001011010100000110000001111001000011100000001010001110010110011010001001011000001000010110000000001001010001110100110010000011101000000000100000000010000000010001000110100111000000001001000011100010101010100000111011010000110100011000111111000000010001000101010111100010000000001101101111100011000011111010010011001100010101000001010001001011101001100000100000100011110011001011111001000000001110000110001010001101101000000101110100101001000000001001100101100111001100001100010011110100011001110000110011100000010000010001100000101100000011011110101011011011000110000000101111000010010001010100011001111001100000000010100011010000000100010010100110111000000000001000000000100001000010000010000001110000101000011000100010010100011001101000010100111110000001000010101000010010001000000000010100101001100000010010001100001000001000000110000001001011000000011100000101001001000001000000001100010001000111101011100110001000100000001000000101001100000010000100010000000011001000110100111000100001001110100100001101000000001101110",
    "code_output": "false",
    "std_output": "",
    "last_testcase": "[2,2,3,1,1,0]\n3",
    "expected_output": "true",
    "task_finish_time": 1706721584766,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 359,
    "total_testcases": 1026,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Rust",
    "submission_id": "1162204159",
    "input_formatted": "[2,2,3,1,1,0], 3",
    "input": "[2,2,3,1,1,0]\n3",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "impl Solution {\n    pub fn check_array(nums: Vec<i32>, k: i32) -> bool {\n        let mut nums = nums;\n        let k = k as usize; // Convert k to usize for indexing\n        let mut carry = 0; // This will hold the cumulative decrement needed\n        for i in 0..nums.len() {\n            nums[i] -= carry; // Apply the cumulative decrement\n            if nums[i] < 0 {\n                // If any element becomes negative, return false\n                return false;\n            }\n            if i + k > nums.len() {\n                // If the current index + k exceeds the array length, all remaining elements must be 0\n                for j in i..nums.len() {\n                    if nums[j] != 0 {\n                        return false;\n                    }\n                }\n                break; // All checks passed, no need to continue\n            }\n            if nums[i] > 0 {\n                // If current element is positive, prepare to decrement future elements\n                carry += nums[i];\n                if i + k < nums.len() {\n                    // Ensure not to add carry beyond the array's length\n                    nums[i + k] += nums[i];\n                }\n            }\n        }\n        true\n    }\n}"
}