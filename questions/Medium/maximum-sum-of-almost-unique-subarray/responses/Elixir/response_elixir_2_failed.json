{
    "status_code": 15,
    "lang": "elixir",
    "run_success": false,
    "runtime_error": "Line 30: ** (FunctionClauseError) no function clause matching in Enum.max_sort_fun/1",
    "full_runtime_error": "Line 30: ** (FunctionClauseError) no function clause matching in Enum.max_sort_fun/1\n    The following arguments were given to Enum.max_sort_fun/1:\n        # 1\n        0\n    Attempted function clauses (showing 2 out of 2):\n        defp max_sort_fun(+sorter+) when -is_function(sorter, 2)-\n        defp max_sort_fun(+module+) when -is_atom(module)-\n    (elixir 1.15.7) lib/enum.ex:1898: Enum.max_sort_fun/1\n    (elixir 1.15.7) lib/enum.ex:1895: Enum.max/3\n    solution.ex:30: Driver.consume_test_cases/2\n    solution.ex:14: Driver.start/0\n    nofile:1: (file)\n    (stdlib 5.1.1) erl_eval.erl:750: :erl_eval.do_apply/7",
    "status_runtime": "N/A",
    "memory": 76680000,
    "question_id": "2954",
    "elapsed_time": 910,
    "compare_result": "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "code_output": "",
    "std_output": "",
    "last_testcase": "[2,6,7,3,1,7]\n3\n4",
    "expected_output": "18",
    "task_finish_time": 1707816083609,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 767,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Elixir",
    "submission_id": "1174009753",
    "status_msg": "Runtime Error",
    "state": "SUCCESS",
    "code": "defmodule Solution do\n  @spec max_sum(nums :: [integer], m :: integer, k :: integer) :: integer\n  def max_sum(nums, m, k) do\n    0..(length(nums) - k)\n    |> Enum.map(fn i -> Enum.slice(nums, i, k) end)\n    |> Enum.filter(fn subarray -> Enum.uniq(subarray) |> length() >= m end)\n    |> Enum.map(&Enum.sum/1)\n    |> Enum.max(0)\n  end\nend"
}