{
    "status_code": 11,
    "lang": "typescript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 78516000,
    "question_id": "2954",
    "elapsed_time": 3995,
    "compare_result
    "code_output": "0",
    "std_output": "",
    "last_testcase": "[1,1,1,2]\n2\n4",
    "expected_output": "5",
    "task_finish_time": 1707660032415,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 732,
    "total_testcases": 767,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "TypeScript",
    "submission_id": "1172330464",
    "input_formatted": "[1,1,1,2], 2, 4",
    "input": "[1,1,1,2]\n2\n4",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "function maxSum(nums: number[], m: number, k: number): number {\n    let maxSum = 0;\n    for (let i = 0; i <= nums.length - k; i++) {\n        let subarraySet = new Set();\n        let subarraySum = 0;\n        let validSubarray = true;\n        for (let j = i; j < i + k; j++) {\n            subarraySum += nums[j];\n            subarraySet.add(nums[j]);\n            if (subarraySet.size < Math.min(m, j - i + 1)) {\n                validSubarray = false;\n                break;\n            }\n        }\n        if (validSubarray && subarraySet.size >= m) {\n            maxSum = Math.max(maxSum, subarraySum);\n        }\n    }\n    return maxSum;\n}"
}