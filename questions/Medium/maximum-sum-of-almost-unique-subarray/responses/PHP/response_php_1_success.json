{
    "status_code": 10,
    "lang": "php",
    "run_success": true,
    "status_runtime": "138 ms",
    "memory": 23776000,
    "question_id": "2954",
    "elapsed_time": 172,
    "compare_result": "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1707660174382,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 767,
    "total_testcases": 767,
    "runtime_percentile": 100,
    "status_memory": "23.8 MB",
    "memory_percentile": 100,
    "pretty_lang": "PHP",
    "submission_id": "1172332201",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @param Integer $m\n     * @param Integer $k\n     * @return Integer\n     */\n    function maxSum($nums, $m, $k) {\n        $maxSum = 0;\n        $windowSum = 0;\n        $uniqueCount = 0;\n        $count = [];\n        \n        for ($i = 0; $i < $k; $i++) {\n            $windowSum += $nums[$i];\n            if (!isset($count[$nums[$i]])) {\n                $count[$nums[$i]] = 0;\n                $uniqueCount++;\n            }\n            $count[$nums[$i]]++;\n        }\n        \n        if ($uniqueCount >= $m) {\n            $maxSum = $windowSum;\n        }\n        \n        for ($i = $k; $i < count($nums); $i++) {\n            $windowSum += $nums[$i] - $nums[$i - $k];\n            \n            $count[$nums[$i - $k]]--;\n            if ($count[$nums[$i - $k]] == 0) {\n                $uniqueCount--;\n            }\n            \n            if (!isset($count[$nums[$i]])) {\n                $count[$nums[$i]] = 0;\n            }\n            if ($count[$nums[$i]] == 0) {\n                $uniqueCount++;\n            }\n            $count[$nums[$i]]++;\n            \n            if ($uniqueCount >= $m) {\n                $maxSum = max($maxSum, $windowSum);\n            }\n        }\n        \n        return $maxSum;\n    }\n}"
}