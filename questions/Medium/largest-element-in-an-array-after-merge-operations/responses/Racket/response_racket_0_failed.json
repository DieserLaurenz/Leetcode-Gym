{
    "status_code": 20,
    "lang": "racket",
    "run_success": false,
    "compile_error": "Line 5: Char 19: find-index: unbound identifier",
    "full_compile_error": "Line 5: Char 19: find-index: unbound identifier\n  in: find-index\n  compilation context...:\n   solution.rkt\n  location...:\n   prog_joined.rkt:16:18",
    "status_runtime": "N/A",
    "memory": 0,
    "question_id": "2872",
    "task_finish_time": 1707474076874,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": null,
    "total_testcases": null,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Racket",
    "submission_id": "1170519982",
    "status_msg": "Compile Error",
    "state": "SUCCESS",
    "code": "(define/contract (max-array-value nums)\n  (-> (listof exact-integer?) exact-integer?)\n  (let loop ([nums nums])\n    (if (null? (cdr nums)) (car nums)\n        (let ([i (find-index (lambda (i) (<= (list-ref nums i) (list-ref nums (+ i 1)))) (build-list (- (length nums) 1) identity))])\n          (if (null? i) (apply max nums)\n              (loop (append (take nums i) (list (+ (list-ref nums i) (list-ref nums (+ i 1)))) (drop nums (+ 2 i)))))))))"
}