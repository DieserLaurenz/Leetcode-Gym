{
    "status_code": 11,
    "lang": "python3",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 30956000,
    "question_id": "2872",
    "elapsed_time": 779,
    "compare_result
    "code_output": "6",
    "std_output": "",
    "last_testcase": "[5,3,3]",
    "expected_output": "11",
    "task_finish_time": 1708777141320,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 86,
    "total_testcases": 1023,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python3",
    "submission_id": "1184787351",
    "input_formatted": "[5,3,3]",
    "input": "[5,3,3]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "from typing import List\n\nclass Solution:\n    def maxArrayValue(self, nums: List[int]) -> int:\n        max_val = nums[0]\n        sum_val = nums[0]\n        for i in range(1, len(nums)):\n            if nums[i] >= nums[i - 1]:\n                sum_val += nums[i]\n                max_val = max(max_val, sum_val)\n            else:\n                sum_val = nums[i]\n                max_val = max(max_val, sum_val)\n        return max_val"
}