{
    "status_code": 11,
    "lang": "csharp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 64012000,
    "question_id": "2872",
    "elapsed_time": 527,
    "compare_result
    "code_output": "15",
    "std_output": "",
    "last_testcase": "[2,3,7,9,3]",
    "expected_output": "21",
    "task_finish_time": 1707464107153,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 49,
    "total_testcases": 1023,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C#",
    "submission_id": "1170426393",
    "input_formatted": "[2,3,7,9,3]",
    "input": "[2,3,7,9,3]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "public class Solution {\n    public long MaxArrayValue(int[] nums) {\n        long maxVal = 0;\n        long sum = 0;\n        foreach (int num in nums) {\n            if (num > maxVal) {\n                sum += maxVal;\n                maxVal = num;\n            } else {\n                sum += num;\n            }\n        }\n        return Math.Max(maxVal, sum);\n    }\n}"
}