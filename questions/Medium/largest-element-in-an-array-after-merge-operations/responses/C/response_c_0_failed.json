{
    "status_code": 11,
    "lang": "c",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 14236000,
    "question_id": "2872",
    "elapsed_time": 140,
    "compare_result
    "code_output": "12",
    "std_output": "",
    "last_testcase": "[2,3,7,9,3]",
    "expected_output": "21",
    "task_finish_time": 1707464013193,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 74,
    "total_testcases": 1023,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C",
    "submission_id": "1170425544",
    "input_formatted": "[2,3,7,9,3]",
    "input": "[2,3,7,9,3]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "long long maxArrayValue(int* nums, int numsSize){\n    long long max = nums[0];\n    for(int i = 1; i < numsSize; i++){\n        if(nums[i-1] <= nums[i]){\n            nums[i] += nums[i-1];\n        }\n        if(nums[i] > max){\n            max = nums[i];\n        }\n    }\n    return max;\n}"
}