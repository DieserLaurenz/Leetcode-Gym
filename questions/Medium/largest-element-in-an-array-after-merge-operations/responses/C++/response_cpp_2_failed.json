{
    "status_code": 11,
    "lang": "cpp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 108960000,
    "question_id": "2872",
    "elapsed_time": 178,
    "compare_result
    "code_output": "6",
    "std_output": "",
    "last_testcase": "[5,3,3]",
    "expected_output": "11",
    "task_finish_time": 1707463868384,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 86,
    "total_testcases": 1023,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C++",
    "submission_id": "1170424097",
    "input_formatted": "[5,3,3]",
    "input": "[5,3,3]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\npublic:\n    long long maxArrayValue(vector<int>& nums) {\n        long long maxVal = 0, curSum = 0;\n        for (int i = 0; i < nums.size(); i++) {\n            if (i == 0 || nums[i] >= nums[i - 1]) {\n                curSum += nums[i];\n            } else {\n                maxVal = max(maxVal, curSum);\n                curSum = nums[i];\n            }\n        }\n        maxVal = max(maxVal, curSum);\n        return maxVal;\n    }\n};"
}