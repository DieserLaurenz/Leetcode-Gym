{
    "status_code": 15,
    "lang": "elixir",
    "run_success": false,
    "runtime_error": "Line 12: ** (FunctionClauseError) no function clause matching in :lists.max/2",
    "full_runtime_error": "Line 12: ** (FunctionClauseError) no function clause matching in :lists.max/2\n    The following arguments were given to :lists.max/2:\n        # 1\n        2\n        # 2\n        3\n    (stdlib 5.1.1) lists.erl:367: :lists.max/2\n    solution.ex:12: Solution.max_array_value_helper/1\n    solution.ex:31: Driver.consume_test_cases/2\n    solution.ex:19: Driver.start/0\n    nofile:1: (file)\n    (stdlib 5.1.1) erl_eval.erl:750: :erl_eval.do_apply/7",
    "status_runtime": "N/A",
    "memory": 80344000,
    "question_id": "2872",
    "elapsed_time": 418,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "[2,3,7,9,3]",
    "expected_output": "21",
    "task_finish_time": 1707483934221,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 1023,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Elixir",
    "submission_id": "1170608567",
    "status_msg": "Runtime Error",
    "state": "SUCCESS",
    "code": "defmodule Solution do\n  @spec max_array_value(nums :: [integer]) :: integer\n  def max_array_value(nums) do\n    max_array_value_helper(Enum.reverse(nums))\n  end\n\n  defp max_array_value_helper([head | []]), do: head\n  defp max_array_value_helper([first, second | tail]) when second >= first do\n    max_array_value_helper([first + second | tail])\n  end\n  defp max_array_value_helper([first | tail]) do\n    [first | max_array_value_helper(tail)]\n    |> Enum.max()\n  end\nend"
}