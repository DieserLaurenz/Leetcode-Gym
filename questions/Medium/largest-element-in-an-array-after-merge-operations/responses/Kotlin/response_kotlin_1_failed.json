{
    "status_code": 11,
    "lang": "kotlin",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 71940000,
    "question_id": "2872",
    "elapsed_time": 974,
    "compare_result
    "code_output": "12",
    "std_output": "",
    "last_testcase": "[2,3,7,9,3]",
    "expected_output": "21",
    "task_finish_time": 1707473367538,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 189,
    "total_testcases": 1023,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Kotlin",
    "submission_id": "1170513082",
    "input_formatted": "[2,3,7,9,3]",
    "input": "[2,3,7,9,3]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    fun maxArrayValue(nums: IntArray): Long {\n        var max = 0L\n        var current = 0L\n        nums.forEach { num ->\n            if (num > current) {\n                max = maxOf(max, current)\n                current = num.toLong()\n            } else {\n                current += num\n            }\n        }\n        return maxOf(max, current)\n    }\n}"
}