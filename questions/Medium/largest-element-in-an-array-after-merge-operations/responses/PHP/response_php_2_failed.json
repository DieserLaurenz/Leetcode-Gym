{
    "status_code": 11,
    "lang": "php",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 26212000,
    "question_id": "2872",
    "elapsed_time": 5304,
    "compare_result
    "code_output": "12",
    "std_output": "",
    "last_testcase": "[2,3,7,9,3]",
    "expected_output": "21",
    "task_finish_time": 1707464453513,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 73,
    "total_testcases": 1023,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "PHP",
    "submission_id": "1170429633",
    "input_formatted": "[2,3,7,9,3]",
    "input": "[2,3,7,9,3]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @return Integer\n     */\n    function maxArrayValue($nums) {\n        $i = 0;\n        while ($i < count($nums) - 1) {\n            if ($nums[$i] <= $nums[$i + 1]) {\n                $nums[$i + 1] += $nums[$i];\n                array_splice($nums, $i, 1);\n            } else {\n                $i++;\n            }\n        }\n        return max($nums);\n    }\n}"
}