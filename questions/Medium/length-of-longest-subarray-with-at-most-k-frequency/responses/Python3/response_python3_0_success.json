{
    "status_code": 10,
    "lang": "python3",
    "run_success": true,
    "status_runtime": "1183 ms",
    "memory": 31088000,
    "question_id": "3225",
    "elapsed_time": 1252,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1708777236724,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 992,
    "total_testcases": 992,
    "runtime_percentile": 46.4515000000001,
    "status_memory": "31.1 MB",
    "memory_percentile": 89.0411,
    "pretty_lang": "Python3",
    "submission_id": "1184788262",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "from typing import List\nfrom collections import defaultdict\n\nclass Solution:\n    def maxSubarrayLength(self, nums: List[int], k: int) -> int:\n        count = defaultdict(int)\n        left = 0\n        max_length = 0\n        for right in range(len(nums)):\n            count[nums[right]] += 1\n            while count[nums[right]] > k:\n                count[nums[left]] -= 1\n                left += 1\n            max_length = max(max_length, right - left + 1)\n        return max_length"
}