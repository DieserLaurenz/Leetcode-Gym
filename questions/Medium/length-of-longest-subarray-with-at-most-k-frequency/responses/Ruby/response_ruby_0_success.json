{
    "status_code": 10,
    "lang": "ruby",
    "run_success": true,
    "status_runtime": "322 ms",
    "memory": 230504000,
    "question_id": "3225",
    "elapsed_time": 505,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1707484639289,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 992,
    "total_testcases": 992,
    "runtime_percentile": 100,
    "status_memory": "230.5 MB",
    "memory_percentile": 62.5,
    "pretty_lang": "Ruby",
    "submission_id": "1170615369",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "# @param {Integer[]} nums\n# @param {Integer} k\n# @return {Integer}\ndef max_subarray_length(nums, k)\n    left = 0\n    right = 0\n    max_length = 0\n    frequency = Hash.new(0)\n    \n    while right < nums.length\n        frequency[nums[right]] += 1\n        \n        while frequency[nums[right]] > k\n            frequency[nums[left]] -= 1\n            left += 1\n        end\n        \n        max_length = [max_length, right - left + 1].max\n        right += 1\n    end\n    \n    max_length\nend"
}