{
    "status_code": 10,
    "lang": "python",
    "run_success": true,
    "status_runtime": "1186 ms",
    "memory": 23920000,
    "question_id": "3225",
    "elapsed_time": 1232,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1708777186939,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 992,
    "total_testcases": 992,
    "runtime_percentile": 59.374499999999905,
    "status_memory": "23.9 MB",
    "memory_percentile": 68.75,
    "pretty_lang": "Python",
    "submission_id": "1184787785",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution(object):\n    def maxSubarrayLength(self, nums, k):\n        \"\"\"\n        :type nums: List[int]\n        :type k: int\n        :rtype: int\n        \"\"\"\n        max_len = 0\n        left = 0\n        freq = {}\n        \n        for right in range(len(nums)):\n            freq[nums[right]] = freq.get(nums[right], 0) + 1\n            \n            while freq[nums[right]] > k:\n                freq[nums[left]] -= 1\n                left += 1\n                \n            max_len = max(max_len, right - left + 1)\n        \n        return max_len"
}