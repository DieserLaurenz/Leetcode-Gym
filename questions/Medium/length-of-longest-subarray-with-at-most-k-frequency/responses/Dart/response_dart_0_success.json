{
    "status_code": 10,
    "lang": "dart",
    "run_success": true,
    "status_runtime": "512 ms",
    "memory": 196456000,
    "question_id": "3225",
    "elapsed_time": 683,
    "compare_result": "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1707484535532,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 992,
    "total_testcases": 992,
    "runtime_percentile": 100,
    "status_memory": "196.5 MB",
    "memory_percentile": 50.0,
    "pretty_lang": "Dart",
    "submission_id": "1170614298",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\n  int maxSubarrayLength(List<int> nums, int k) {\n    int maxLength = 0;\n    Map<int, int> countMap = {};\n    int start = 0;\n    for (int end = 0; end < nums.length; end++) {\n      countMap[nums[end]] = (countMap[nums[end]] ?? 0) + 1;\n      while (countMap[nums[end]]! > k) {\n        countMap[nums[start]] = countMap[nums[start]]! - 1;\n        start++;\n      }\n      maxLength = max(maxLength, end - start + 1);\n    }\n    return maxLength;\n  }\n}"
}