{
    "status_code": 10,
    "lang": "rust",
    "run_success": true,
    "status_runtime": "16 ms",
    "memory": 3492000,
    "question_id": "3249",
    "elapsed_time": 46,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1707886505755,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 684,
    "total_testcases": 684,
    "runtime_percentile": 7.842999999999982,
    "status_memory": "3.5 MB",
    "memory_percentile": 100,
    "pretty_lang": "Rust",
    "submission_id": "1174792652",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "impl Solution {\n    pub fn min_operations(nums: Vec<i32>, k: i32) -> i32 {\n        let mut xor_sum = 0;\n        for &num in &nums {\n            xor_sum ^= num;\n        }\n        xor_sum ^= k;\n\n        let mut operations = 0;\n        for i in 0..=30 {\n            if xor_sum & (1 << i) > 0 {\n                operations += 1;\n            }\n        }\n        operations\n    }\n}"
}