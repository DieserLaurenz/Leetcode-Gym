{
    "status_code": 10,
    "lang": "php",
    "run_success": true,
    "status_runtime": "224 ms",
    "memory": 26616000,
    "question_id": "3249",
    "elapsed_time": 321,
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1707877141311,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 684,
    "total_testcases": 684,
    "runtime_percentile": 100,
    "status_memory": "26.6 MB",
    "memory_percentile": 16.666700000000006,
    "pretty_lang": "PHP",
    "submission_id": "1174691709",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @param Integer $k\n     * @return Integer\n     */\n    function minOperations($nums, $k) {\n        $xor = 0;\n        foreach ($nums as $num) {\n            $xor ^= $num;\n        }\n        $xor ^= $k;\n\n        if ($xor == 0) {\n            return 0;\n        }\n\n        $operations = 0;\n        while ($xor) {\n            $operations += $xor & 1;\n            $xor >>= 1;\n        }\n\n        return $operations;\n    }\n}"
}