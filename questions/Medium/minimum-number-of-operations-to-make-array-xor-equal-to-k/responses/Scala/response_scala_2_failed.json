{
    "status_code": 11,
    "lang": "scala",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 80744000,
    "question_id": "3249",
    "elapsed_time": 1023,
    "compare_result
    "code_output": "-1",
    "std_output": "",
    "last_testcase": "[2,1,3,4]\n1",
    "expected_output": "2",
    "task_finish_time": 1707886457120,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 227,
    "total_testcases": 684,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Scala",
    "submission_id": "1174791998",
    "input_formatted": "[2,1,3,4], 1",
    "input": "[2,1,3,4]\n1",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "object Solution {\n    def minOperations(nums: Array[Int], k: Int): Int = {\n        val currentXOR = nums.foldLeft(0)(_ ^ _)\n        if (currentXOR == k) return 0\n\n        val maxBit = (nums :+ k).map(Integer.bitCount).max\n        var flips = 0\n        var xor = currentXOR\n\n        for (i <- 0 until maxBit) {\n            val bit = 1 << i\n            if ((xor & bit) != (k & bit)) {\n                flips += 1\n                xor ^= bit\n            }\n        }\n\n        if (xor == k) flips else -1\n    }\n}"
}