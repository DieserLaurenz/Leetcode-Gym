{
    "status_code": 11,
    "lang": "scala",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 82472000,
    "question_id": "3249",
    "elapsed_time": 1376,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "[2,1,3,4]\n1",
    "expected_output": "2",
    "task_finish_time": 1707886413795,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 97,
    "total_testcases": 684,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Scala",
    "submission_id": "1174791417",
    "input_formatted": "[2,1,3,4], 1",
    "input": "[2,1,3,4]\n1",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "object Solution {\n    def minOperations(nums: Array[Int], k: Int): Int = {\n        val xor = nums.foldLeft(0)(_ ^ _)\n        val target = xor ^ k\n        if (target == 0) 0\n        else {\n            val bitCounts = Array.fill(32)(0)\n            nums.foreach(n => (0 until 32).foreach(i => if (((n >> i) & 1) == 1) bitCounts(i) += 1))\n            var ops = 0\n            var found = false\n            for (i <- 31 to 0 by -1 if !found) {\n                if (((target >> i) & 1) == 1) {\n                    if (bitCounts(i) > 0) {\n                        found = true\n                        ops = 1\n                    }\n                }\n            }\n            if (!found) -1 else ops\n        }\n    }\n}"
}