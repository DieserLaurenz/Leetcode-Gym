{
    "status_code": 11,
    "lang": "swift",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 19648000,
    "question_id": "3249",
    "elapsed_time": 491,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "[2,1,3,4]\n1",
    "expected_output": "2",
    "task_finish_time": 1707877242424,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 79,
    "total_testcases": 684,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Swift",
    "submission_id": "1174692618",
    "input_formatted": "[2,1,3,4], 1",
    "input": "[2,1,3,4]\n1",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    func minOperations(_ nums: [Int], _ k: Int) -> Int {\n        var xorSum = nums.reduce(0) { $0 ^ $1 }\n        xorSum ^= k\n\n        if xorSum == 0 { return 0 }\n\n        var counts = Array(repeating: 0, count: 31)\n        for num in nums {\n            for i in 0..<31 {\n                if (num & (1 << i)) != 0 {\n                    counts[i] += 1\n                }\n            }\n        }\n\n        var ops = Int.max\n        for i in 0..<31 {\n            if (xorSum & (1 << i)) != 0 {\n                ops = min(ops, min(counts[i], nums.count - counts[i]))\n            }\n        }\n\n        return ops == Int.max ? -1 : ops\n    }\n}"
}