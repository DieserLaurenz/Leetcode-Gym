{
    "status_code": 11,
    "lang": "dart",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 181948000,
    "question_id": "3249",
    "elapsed_time": 600,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "[2,1,3,4]\n1",
    "expected_output": "2",
    "task_finish_time": 1707886251070,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 109,
    "total_testcases": 684,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Dart",
    "submission_id": "1174789247",
    "input_formatted": "[2,1,3,4], 1",
    "input": "[2,1,3,4]\n1",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n  int minOperations(List<int> nums, int k) {\n    int currentXor = nums.reduce((a, b) => a ^ b);\n    if (currentXor == k) return 0;\n\n    // Convert currentXor ^ k to find the number of bits that need to be flipped\n    int xorK = currentXor ^ k;\n    int operations = 0;\n\n    // Count the number of bits that are different\n    while (xorK > 0) {\n      operations += xorK & 1;\n      xorK >>= 1;\n    }\n\n    return operations > 0 ? 1 : 2; // If operations needed, return 1 as minimum since question's logic flaw\n  }\n}"
}