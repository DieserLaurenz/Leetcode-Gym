{
    "status_code": 10,
    "lang": "javascript",
    "run_success": true,
    "status_runtime": "83 ms",
    "memory": 60800000,
    "question_id": "3249",
    "elapsed_time": 116,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1707876985086,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 684,
    "total_testcases": 684,
    "runtime_percentile": 43.40620000000002,
    "status_memory": "60.8 MB",
    "memory_percentile": 8.79000000000004,
    "pretty_lang": "JavaScript",
    "submission_id": "1174690413",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "/**\n * @param {number[]} nums\n * @param {number} k\n * @return {number}\n */\nvar minOperations = function(nums, k) {\n    let xor = 0;\n    for (const num of nums) {\n        xor ^= num;\n    }\n    xor ^= k;\n\n    let operations = 0;\n    while (xor) {\n        operations += xor & 1;\n        xor >>= 1;\n    }\n\n    return operations;\n};"
}