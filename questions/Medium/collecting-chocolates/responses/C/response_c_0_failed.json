{
    "status_code": 11,
    "lang": "c",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 6224000,
    "question_id": "2810",
    "elapsed_time": 94,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "[20,1,15]\n5",
    "expected_output": "13",
    "task_finish_time": 1706804228880,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 193,
    "total_testcases": 2564,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C",
    "submission_id": "1163106536",
    "input_formatted": "[20,1,15], 5",
    "input": "[20,1,15]\n5",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "#include <limits.h>\n\nlong long minCost(int* nums, int numsSize, int x) {\n    long long minTotalCost = LLONG_MAX;\n    for (int start = 0; start < numsSize; ++start) {\n        long long cost = 0;\n        long long operationCost = 0;\n        for (int i = 0; i < numsSize; ++i) {\n            int index = (start + i) % numsSize; // Calculate the current index after i rotations.\n            cost += nums[index]; // Add the cost of the chocolate at this index.\n            minTotalCost = (cost + operationCost < minTotalCost) ? cost + operationCost : minTotalCost;\n            operationCost += x; // Add the operation cost for the next rotation.\n        }\n    }\n    return minTotalCost;\n}"
}