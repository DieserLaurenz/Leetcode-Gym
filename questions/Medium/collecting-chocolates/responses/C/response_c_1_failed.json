{
    "status_code": 11,
    "lang": "c",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 6140000,
    "question_id": "2810",
    "elapsed_time": 84,
    "compare_result
    "code_output": "16",
    "std_output": "",
    "last_testcase": "[20,1,15]\n5",
    "expected_output": "13",
    "task_finish_time": 1706804275809,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 6,
    "total_testcases": 2564,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C",
    "submission_id": "1163107224",
    "input_formatted": "[20,1,15], 5",
    "input": "[20,1,15]\n5",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "#include <limits.h>\n\nlong long minCost(int* nums, int numsSize, int x) {\n    long long directCost = 0;\n    for (int i = 0; i < numsSize; ++i) {\n        directCost += nums[i];\n    }\n\n    long long minTotalCost = directCost; // Start with direct cost as initial minimum\n    for (int i = 0; i < numsSize; ++i) { // Try each chocolate to start with\n        long long currentCost = 0;\n        long long rotateCost = 0;\n        for (int j = 0; j < numsSize; ++j) { // Simulate buying each chocolate\n            int index = (i + j) % numsSize;\n            currentCost += nums[index];\n            rotateCost += x;\n            long long totalCost = directCost - nums[index] + rotateCost - x; // Subtract cost of chocolate replaced by operation cost\n            if (totalCost < minTotalCost) {\n                minTotalCost = totalCost;\n            }\n        }\n    }\n    return minTotalCost;\n}"
}