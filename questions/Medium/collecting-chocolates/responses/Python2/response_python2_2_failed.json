{
    "status_code": 11,
    "lang": "python",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 11664000,
    "question_id": "2810",
    "elapsed_time": 2417,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "[20,1,15]\n5",
    "expected_output": "13",
    "task_finish_time": 1708745191925,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 193,
    "total_testcases": 2564,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python",
    "submission_id": "1184476347",
    "input_formatted": "[20,1,15], 5",
    "input": "[20,1,15]\n5",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution(object):\n    def minCost(self, nums, x):\n        \"\"\"\n        :type nums: List[int]\n        :type x: int\n        :rtype: int\n        \"\"\"\n        n = len(nums)\n        min_cost = float('inf')\n        for start in range(n):\n            cost = 0\n            for i in range(n):\n                idx = (start + i) % n\n                cost += nums[idx]\n                total_cost = cost + i * x\n                min_cost = min(min_cost, total_cost)\n        return min_cost"
}