{
    "status_code": 11,
    "lang": "php",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 20556000,
    "question_id": "2810",
    "elapsed_time": 573,
    "compare_result
    "code_output": "15",
    "std_output": "",
    "last_testcase": "[20,1,15]\n5",
    "expected_output": "13",
    "task_finish_time": 1706812938896,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 321,
    "total_testcases": 2564,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "PHP",
    "submission_id": "1163251503",
    "input_formatted": "[20,1,15], 5",
    "input": "[20,1,15]\n5",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @param Integer $x\n     * @return Integer\n     */\n    function minCost($nums, $x) {\n        $n = count($nums);\n        $totalCost = array_sum($nums); // The cost to buy all chocolates without any operation\n        $minCost = $totalCost; // Start with the total cost as the minimum\n        $fullCycleCost = $n * $x; // Cost to make a full cycle\n        \n        // To avoid collecting the same type more than once, calculate extra cost for each possible cycle\n        for ($cycle = 1; $cycle < $n; $cycle++) {\n            $extraCost = 0;\n            for ($i = 0; $i < $cycle; $i++) {\n                // Calculate the extra cost for the initial partial cycle\n                $extraCost += $x * ($n - $cycle + $i);\n            }\n            for ($i = $cycle; $i < $n; $i++) {\n                // Slide the window, remove the leftmost, add the new rightmost\n                $extraCost = $extraCost - $x * ($n - 1) + $nums[$i - $cycle] * $cycle;\n                $minCost = min($minCost, $totalCost + $extraCost);\n            }\n        }\n\n        // Check if doing full cycles is cheaper (it's a special case)\n        $minCost = min($minCost, $fullCycleCost);\n        \n        return $minCost;\n    }\n}"
}