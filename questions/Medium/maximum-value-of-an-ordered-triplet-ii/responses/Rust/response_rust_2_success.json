{
    "status_code": 10,
    "lang": "rust",
    "run_success": true,
    "status_runtime": "11 ms",
    "memory": 3644000,
    "question_id": "3152",
    "elapsed_time": 23,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1707689931491,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 599,
    "total_testcases": 599,
    "runtime_percentile": 57.14289999999999,
    "status_memory": "3.6 MB",
    "memory_percentile": 85.7143,
    "pretty_lang": "Rust",
    "submission_id": "1172663936",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "impl Solution {\n    pub fn maximum_triplet_value(nums: Vec<i32>) -> i64 {\n        let mut max_value = 0i64;\n        let mut max_suffix = vec![0; nums.len()];\n        \n        max_suffix[nums.len() - 1] = nums[nums.len() - 1];\n        for i in (0..nums.len() - 1).rev() {\n            max_suffix[i] = max_suffix[i + 1].max(nums[i]);\n        }\n\n        let mut max = 0;\n        for j in 1..nums.len() - 1 {\n            max = max.max(nums[j - 1]);\n            let potential_value = (max - nums[j]) as i64 * max_suffix[j + 1] as i64;\n            max_value = max_value.max(potential_value);\n        }\n        \n        max_value\n    }\n}"
}