{
    "status_code": 11,
    "lang": "python",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 22796000,
    "question_id": "3152",
    "elapsed_time": 803,
    "compare_result
    "code_output": "0",
    "std_output": "",
    "last_testcase": "[12,6,1,2,7]",
    "expected_output": "77",
    "task_finish_time": 1708798244236,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 47,
    "total_testcases": 599,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python",
    "submission_id": "1185051101",
    "input_formatted": "[12,6,1,2,7]",
    "input": "[12,6,1,2,7]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution(object):\n    def maximumTripletValue(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: int\n        \"\"\"\n        min_val = [0] * len(nums)\n        max_val = 0\n\n        min_val[0] = nums[0]\n        for i in range(1, len(nums)):\n            min_val[i] = min(min_val[i-1], nums[i])\n\n        max_k = nums[-1]\n        for k in range(len(nums)-2, 1, -1):\n            if nums[k] > max_k:\n                max_k = nums[k]\n            max_val = max(max_val, (nums[k-1] - min_val[k-1]) * max_k)\n\n        return max(max_val, 0)"
}