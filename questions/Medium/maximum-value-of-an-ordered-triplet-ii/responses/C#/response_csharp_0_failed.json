{
    "status_code": 11,
    "lang": "csharp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 60364000,
    "question_id": "3152",
    "elapsed_time": 4022,
    "compare_result
    "code_output": "0",
    "std_output": "",
    "last_testcase": "[10,13,6,2]",
    "expected_output": "14",
    "task_finish_time": 1707680122780,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 575,
    "total_testcases": 599,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C#",
    "submission_id": "1172577963",
    "input_formatted": "[10,13,6,2]",
    "input": "[10,13,6,2]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "public class Solution {\n    public long MaximumTripletValue(int[] nums) {\n        long maxVal = 0;\n        int n = nums.Length;\n        int maxRight = nums[n - 1];\n\n        // Array to store the maximum value to the right for every element\n        int[] maxToRight = new int[n];\n        maxToRight[n - 1] = nums[n - 1];\n\n        for (int i = n - 2; i >= 0; i--) {\n            maxToRight[i] = Math.Max(maxToRight[i + 1], nums[i]);\n        }\n\n        for (int j = n - 2; j >= 1; j--) {\n            if (nums[j] < maxToRight[j + 1]) {\n                for (int i = j - 1; i >= 0; i--) {\n                    long val = (long)(nums[i] - nums[j]) * maxToRight[j + 1];\n                    if (val > maxVal) {\n                        maxVal = val;\n                    }\n                }\n            }\n        }\n\n        return maxVal;\n    }\n}"
}