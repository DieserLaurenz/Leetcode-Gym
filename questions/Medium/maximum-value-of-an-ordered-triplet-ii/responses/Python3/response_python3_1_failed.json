{
    "status_code": 11,
    "lang": "python3",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 28864000,
    "question_id": "3152",
    "elapsed_time": 728,
    "compare_result
    "code_output": "70",
    "std_output": "",
    "last_testcase": "[12,6,1,2,7]",
    "expected_output": "77",
    "task_finish_time": 1708807407502,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 35,
    "total_testcases": 599,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python3",
    "submission_id": "1185157687",
    "input_formatted": "[12,6,1,2,7]",
    "input": "[12,6,1,2,7]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "from typing import List\n\nclass Solution:\n    def maximumTripletValue(self, nums: List[int]) -> int:\n        max1 = max2 = float('-inf')\n        min1 = float('inf')\n        for num in nums:\n            if num > max1:\n                max2 = max1\n                max1 = num\n            elif num > max2:\n                max2 = num\n            if num < min1:\n                min1 = num\n        max_product = float('-inf')\n        for i in range(1, len(nums) - 1):\n            if nums[i] == min1:\n                continue\n            max_product = max(max_product, (max1 - nums[i]) * max2, (nums[i] - min1) * max1)\n        return max(max_product, 0)"
}