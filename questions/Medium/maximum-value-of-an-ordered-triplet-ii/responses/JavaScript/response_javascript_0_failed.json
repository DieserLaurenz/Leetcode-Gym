{
    "status_code": 11,
    "lang": "javascript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 61200000,
    "question_id": "3152",
    "elapsed_time": 130,
    "compare_result
    "code_output": "180",
    "std_output": "",
    "last_testcase": "[1,10,3,4,19]",
    "expected_output": "133",
    "task_finish_time": 1707680258502,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 120,
    "total_testcases": 599,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "JavaScript",
    "submission_id": "1172579500",
    "input_formatted": "[1,10,3,4,19]",
    "input": "[1,10,3,4,19]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "/**\n * @param {number[]} nums\n * @return {number}\n */\nvar maximumTripletValue = function(nums) {\n    let maxVal = 0;\n    let max1 = -Infinity, max2 = -Infinity, max3 = -Infinity;\n    let min1 = Infinity, min2 = Infinity;\n\n    for (let n of nums) {\n        if (n > max1) {\n            max3 = max2;\n            max2 = max1;\n            max1 = n;\n        } else if (n > max2) {\n            max3 = max2;\n            max2 = n;\n        } else if (n > max3) {\n            max3 = n;\n        }\n\n        if (n < min1) {\n            min2 = min1;\n            min1 = n;\n        } else if (n < min2) {\n            min2 = n;\n        }\n    }\n\n    maxVal = Math.max(maxVal, (max1 - min1) * max2, (max1 - min1) * max3, (max1 - min2) * max3);\n    return maxVal > 0 ? maxVal : 0;\n};"
}