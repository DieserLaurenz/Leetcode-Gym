{
    "status_code": 11,
    "lang": "ruby",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 222476000,
    "question_id": "3152",
    "elapsed_time": 327,
    "compare_result
    "code_output": "66",
    "std_output": "",
    "last_testcase": "[12,6,1,2,7]",
    "expected_output": "77",
    "task_finish_time": 1707681148526,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 57,
    "total_testcases": 599,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Ruby",
    "submission_id": "1172588630",
    "input_formatted": "[12,6,1,2,7]",
    "input": "[12,6,1,2,7]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "# @param {Integer[]} nums\n# @return {Integer}\ndef maximum_triplet_value(nums)\n    max_val = 0\n    min1, min2 = [Float::INFINITY, Float::INFINITY]\n    max1, max2, max3 = [-Float::INFINITY] * 3\n    \n    nums.each do |num|\n        if num <= min1\n            min2 = min1\n            min1 = num\n        elsif num <= min2\n            min2 = num\n        end\n        \n        if num >= max1\n            max3 = max2\n            max2 = max1\n            max1 = num\n        elsif num >= max2\n            max3 = max2\n            max2 = num\n        elsif num >= max3\n            max3 = num\n        end\n    end\n    \n    max_val = [max_val, (max1 - min1) * max3, (max1 - min2) * max3].max\n    max_val > 0 ? max_val : 0\nend"
}