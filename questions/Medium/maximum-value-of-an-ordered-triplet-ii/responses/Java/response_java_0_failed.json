{
    "status_code": 11,
    "lang": "java",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 57704000,
    "display_runtime": "6",
    "question_id": "3152",
    "elapsed_time": 404,
    "compare_result
    "code_output": "70",
    "std_output": "",
    "last_testcase": "[12,6,1,2,7]",
    "expected_output": "77",
    "task_finish_time": 1707670874202,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 123,
    "total_testcases": 599,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Java",
    "submission_id": "1172458096",
    "input_formatted": "[12,6,1,2,7]",
    "input": "[12,6,1,2,7]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    public long maximumTripletValue(int[] nums) {\n        long maxVal = 0;\n        int max = nums[nums.length - 1];\n        int secondMax = -1;\n        for (int k = nums.length - 2; k >= 1; k--) {\n            if (nums[k] > secondMax) {\n                secondMax = nums[k];\n                for (int i = 0; i < k; i++) {\n                    maxVal = Math.max(maxVal, (long) (nums[i] - secondMax) * max);\n                }\n            }\n            max = Math.max(max, nums[k]);\n        }\n        return maxVal;\n    }\n}"
}