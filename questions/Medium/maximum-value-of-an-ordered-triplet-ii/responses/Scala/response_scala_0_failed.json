{
    "status_code": 11,
    "lang": "scala",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 77484000,
    "question_id": "3152",
    "elapsed_time": 10155,
    "compare_result
    "code_output": "0",
    "std_output": "",
    "last_testcase": "[10,13,6,2]",
    "expected_output": "14",
    "task_finish_time": 1707681284863,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 578,
    "total_testcases": 599,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Scala",
    "submission_id": "1172589890",
    "input_formatted": "[10,13,6,2]",
    "input": "[10,13,6,2]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "object Solution {\n    def maximumTripletValue(nums: Array[Int]): Long = {\n        var maxVal = 0L\n        val n = nums.length\n        val maxRight = new Array[Int](n)\n        maxRight(n - 1) = nums(n - 1)\n        for (i <- n - 2 to 0 by -1) {\n            maxRight(i) = math.max(maxRight(i + 1), nums(i))\n        }\n        for (j <- 1 until n - 1) {\n            var maxLeft = nums(0)\n            for (i <- 1 until j) {\n                maxLeft = math.max(maxLeft, nums(i))\n            }\n            if (nums(j) < maxLeft && nums(j) < maxRight(j + 1)) {\n                maxVal = math.max(maxVal, (maxLeft - nums(j)).toLong * maxRight(j + 1))\n            }\n        }\n        maxVal\n    }\n}"
}