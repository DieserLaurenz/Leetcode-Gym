{
    "status_code": 15,
    "lang": "dart",
    "run_success": false,
    "runtime_error": "Line 10: Char 17: Error: The getter 'Math' isn't defined for the class 'Solution'.",
    "full_runtime_error": "Line 10: Char 17: Error: The getter 'Math' isn't defined for the class 'Solution'.\nTry correcting the name to the name of an existing getter, or defining a getter or field named 'Math'.\n      left[i] = Math.min(maxHeights[i], left[i - 1] + 1);\n                ^^^^\nLine 16: Char 18: Error: The getter 'Math' isn't defined for the class 'Solution'.\nTry correcting the name to the name of an existing getter, or defining a getter or field named 'Math'.\n      right[i] = Math.min(maxHeights[i], right[i + 1] + 1);\n                 ^^^^\nLine 22: Char 17: Error: The getter 'Math' isn't defined for the class 'Solution'.\nTry correcting the name to the name of an existing getter, or defining a getter or field named 'Math'.\n      maxSum += Math.min(left[i], right[i]);\n                ^^^^\nLine 22: Char 14: Error: A value of type 'num' can't be assigned to a variable of type 'int'.\n      maxSum += Math.min(left[i], right[i]);\n             ^",
    "status_runtime": "N/A",
    "memory": 146608000,
    "question_id": "3113",
    "elapsed_time": 623,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "[5,3,4,1,1]",
    "expected_output": "13",
    "task_finish_time": 1706761654499,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 785,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Dart",
    "submission_id": "1162605269",
    "status_msg": "Runtime Error",
    "state": "SUCCESS",
    "code": "class Solution {\n  int maximumSumOfHeights(List<int> maxHeights) {\n    int n = maxHeights.length;\n    // Left and right arrays to store the maximum height achievable from each side.\n    List<int> left = List.filled(n, 0), right = List.filled(n, 0);\n\n    // Calculate maximum heights from the left side towards the peak.\n    left[0] = maxHeights[0];\n    for (int i = 1; i < n; i++) {\n      left[i] = Math.min(maxHeights[i], left[i - 1] + 1);\n    }\n\n    // Calculate maximum heights from the right side towards the peak.\n    right[n - 1] = maxHeights[n - 1];\n    for (int i = n - 2; i >= 0; i--) {\n      right[i] = Math.min(maxHeights[i], right[i + 1] + 1);\n    }\n\n    // Find the maximum sum of heights by taking the minimum of left and right at each position.\n    int maxSum = 0;\n    for (int i = 0; i < n; i++) {\n      maxSum += Math.min(left[i], right[i]);\n    }\n\n    return maxSum;\n  }\n}"
}