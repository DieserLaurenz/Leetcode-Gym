{
    "status_code": 11,
    "lang": "swift",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 15860000,
    "question_id": "3234",
    "elapsed_time": 27,
    "compare_result
    "code_output": "[2]",
    "std_output": "",
    "last_testcase": "[[2,3,3,10],[3,3,3,1],[6,1,1,4]]\n2",
    "expected_output": "[0,2]",
    "task_finish_time": 1707200945752,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 341,
    "total_testcases": 524,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Swift",
    "submission_id": "1167529490",
    "input_formatted": "[[2,3,3,10],[3,3,3,1],[6,1,1,4]], 2",
    "input": "[[2,3,3,10],[3,3,3,1],[6,1,1,4]]\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    func getGoodIndices(_ variables: [[Int]], _ target: Int) -> [Int] {\n        var result: [Int] = []\n        for i in 0..<variables.count {\n            let v = variables[i]\n            let a = v[0], b = v[1], c = v[2], m = v[3]\n            if (((a * b) % 10).power(c, modulo: m)) == target {\n                result.append(i)\n            }\n        }\n        return result\n    }\n}\n\nextension Int {\n    func power(_ exponent: Int, modulo: Int) -> Int {\n        var ans = 1\n        var base = self % modulo\n        var exp = exponent\n        while exp > 0 {\n            if exp % 2 == 1 {\n                ans = (ans * base) % modulo\n            }\n            base = (base * base) % modulo\n            exp /= 2\n        }\n        return ans\n    }\n}"
}