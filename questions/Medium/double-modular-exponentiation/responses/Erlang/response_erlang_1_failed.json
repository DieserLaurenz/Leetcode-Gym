{
    "status_code": 11,
    "lang": "erlang",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 59616000,
    "question_id": "3234",
    "elapsed_time": 1378,
    "compare_result
    "code_output": "[[],2]",
    "std_output": "",
    "last_testcase": "[[2,3,3,10],[3,3,3,1],[6,1,1,4]]\n2",
    "expected_output": "[0,2]",
    "task_finish_time": 1707210496171,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 254,
    "total_testcases": 524,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Erlang",
    "submission_id": "1167639148",
    "input_formatted": "[[2,3,3,10],[3,3,3,1],[6,1,1,4]], 2",
    "input": "[[2,3,3,10],[3,3,3,1],[6,1,1,4]]\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "-spec get_good_indices(Variables :: [[integer()]], Target :: integer()) -> [integer()].\nget_good_indices(Variables, Target) ->\n    lists:foldl(\n        fun([A, B, C, M], Acc) ->\n            Result = ((A*B rem 10) * C) rem M,\n            if Result == Target -> [Acc | [Result]];\n               true -> Acc\n            end\n        end, [], Variables)."
}