{
    "status_code": 15,
    "lang": "erlang",
    "run_success": false,
    "runtime_error": "Line 9: exception error: badarg",
    "full_runtime_error": "Line 9: exception error: badarg\n[{lists,split,[1,[]],[{file,\"lists.erl\"},{line,1812}]},\n {solution,minimum_coins,3,[{file,\"solution.erl\"},{line,9}]},\n {solution,consume_test_cases,2,[{file,\"solution.erl\"},{line,26}]},\n {solution,driver,0,[{file,\"solution.erl\"},{line,14}]},\n {solution,start,0,[{file,\"solution.erl\"},{line,43}]},\n {init,start_em,1,[]},\n {init,do_boot,3,[]}]",
    "status_runtime": "N/A",
    "memory": 59304000,
    "question_id": "3209",
    "elapsed_time": 1308,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "[3,1,2]",
    "expected_output": "4",
    "task_finish_time": 1707844938744,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 578,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Erlang",
    "submission_id": "1174365080",
    "status_msg": "Runtime Error",
    "state": "SUCCESS",
    "code": "-spec minimum_coins(Prices :: [integer()]) -> integer().\nminimum_coins(Prices) ->\n    minimum_coins(Prices, 1, 0).\n\nminimum_coins([], _, Acc) ->\n    Acc;\nminimum_coins([H|T], Skip, Acc) when length(T) >= Skip; length(T) == 0 ->\n    NewAcc = Acc + H,\n    {_, NewT} = lists:split(Skip, T),\n    minimum_coins(NewT, 1, NewAcc)."
}