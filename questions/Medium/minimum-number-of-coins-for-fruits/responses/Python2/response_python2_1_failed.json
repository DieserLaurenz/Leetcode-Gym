{
    "status_code": 11,
    "lang": "python",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 11948000,
    "question_id": "3209",
    "elapsed_time": 540,
    "compare_result
    "code_output": "3",
    "std_output": "",
    "last_testcase": "[3,1,2]",
    "expected_output": "4",
    "task_finish_time": 1708819210699,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 51,
    "total_testcases": 578,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python",
    "submission_id": "1185249660",
    "input_formatted": "[3,1,2]",
    "input": "[3,1,2]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution(object):\n    def minimumCoins(self, prices):\n        \"\"\"\n        :type prices: List[int]\n        :rtype: int\n        \"\"\"\n        n = len(prices)\n        dp = [float('inf')] * (n + 1)\n        dp[0] = 0\n        for i in range(n):\n            dp[i + 1] = min(dp[i + 1], dp[i] + prices[i])\n            for j in range(i + 2, min(n + 1, i + 2 + prices[i])):\n                dp[j] = min(dp[j], dp[i] + prices[i])\n        return dp[n]"
}