{
    "status_code": 11,
    "lang": "csharp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 43128000,
    "question_id": "3209",
    "elapsed_time": 152,
    "compare_result
    "code_output": "0",
    "std_output": "",
    "last_testcase": "[3,1,2]",
    "expected_output": "4",
    "task_finish_time": 1707835325965,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 578,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C#",
    "submission_id": "1174223756",
    "input_formatted": "[3,1,2]",
    "input": "[3,1,2]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "public class Solution {\n    public int MinimumCoins(int[] prices) {\n        int n = prices.Length;\n        int[] dp = new int[n + 1];\n        for (int i = 0; i < n; i++) dp[i] = int.MaxValue;\n        dp[0] = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i; j < n && j < i + prices[i]; j++) {\n                dp[j + 1] = Math.Min(dp[j + 1], dp[i] + prices[i]);\n            }\n        }\n        return dp[n];\n    }\n}"
}