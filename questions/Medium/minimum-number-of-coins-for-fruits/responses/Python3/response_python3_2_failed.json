{
    "status_code": 11,
    "lang": "python3",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 16668000,
    "question_id": "3209",
    "elapsed_time": 682,
    "compare_result
    "code_output": "6",
    "std_output": "",
    "last_testcase": "[3,1,2]",
    "expected_output": "4",
    "task_finish_time": 1708819338974,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 30,
    "total_testcases": 578,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python3",
    "submission_id": "1185250530",
    "input_formatted": "[3,1,2]",
    "input": "[3,1,2]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "from typing import List\n\nclass Solution:\n    def minimumCoins(self, prices: List[int]) -> int:\n        dp = [0] * (len(prices) + 1)\n        for i in range(1, len(prices) + 1):\n            dp[i] = dp[i-1] + prices[i-1]\n            for j in range(i):\n                if i+j < len(prices):\n                    dp[i+j+1] = min(dp[i+j+1], dp[j] + prices[j])\n        return dp[len(prices)]"
}