{
    "status_code": 11,
    "lang": "elixir",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 73316000,
    "question_id": "3209",
    "elapsed_time": 355,
    "compare_result
    "code_output": "3",
    "std_output": "",
    "last_testcase": "[3,1,2]",
    "expected_output": "4",
    "task_finish_time": 1707845031257,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 53,
    "total_testcases": 578,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Elixir",
    "submission_id": "1174366672",
    "input_formatted": "[3,1,2]",
    "input": "[3,1,2]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "defmodule Solution do\n  @spec minimum_coins(prices :: [integer]) :: integer\n  def minimum_coins(prices) do\n    prices\n    |> Enum.with_index(1)\n    |> Enum.reduce({0, 0}, fn {price, index}, {sum, last_free_index} ->\n      if index > last_free_index do\n        {sum + price, index + price}\n      else\n        {sum, last_free_index}\n      end\n    end)\n    |> elem(0)\n  end\nend"
}