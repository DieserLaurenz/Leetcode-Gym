{
    "status_code": 11,
    "lang": "elixir",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 73200000,
    "question_id": "3209",
    "elapsed_time": 571,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "[3,1,2]",
    "expected_output": "4",
    "task_finish_time": 1707845052938,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 5,
    "total_testcases": 578,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Elixir",
    "submission_id": "1174367009",
    "input_formatted": "[3,1,2]",
    "input": "[3,1,2]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "defmodule Solution do\n  @spec minimum_coins(prices :: [integer]) :: integer\n  def minimum_coins(prices) do\n    prices\n    |> Enum.with_index()\n    |> Enum.reduce({0, 0}, fn {price, index}, {acc, last_free} ->\n      if index > last_free, do: {acc + price, index + price}, else: {acc, last_free}\n    end)\n    |> elem(0)\n  end\nend"
}