{
    "status_code": 11,
    "lang": "golang",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 3272000,
    "question_id": "3209",
    "elapsed_time": 21,
    "compare_result
    "code_output": "0",
    "std_output": "",
    "last_testcase": "[3,1,2]",
    "expected_output": "4",
    "task_finish_time": 1707844404723,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 578,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Go",
    "submission_id": "1174356021",
    "input_formatted": "[3,1,2]",
    "input": "[3,1,2]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "func minimumCoins(prices []int) int {\n    n := len(prices)\n    dp := make([]int, n+1)\n    for i := 0; i < n; i++ {\n        dp[i] = 1<<31 - 1 // Initialize with a large number\n    }\n    dp[0] = 0 // Base case\n\n    for i := 0; i < n; i++ {\n        sum := 0\n        for j := i; j < n && j < i+prices[i]; j++ {\n            sum += prices[j]\n            if dp[i]+sum < dp[j+1] {\n                dp[j+1] = dp[i] + sum\n            }\n        }\n    }\n\n    return dp[n]\n}"
}