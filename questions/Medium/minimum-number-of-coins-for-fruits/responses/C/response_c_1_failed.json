{
    "status_code": 11,
    "lang": "c",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 5876000,
    "question_id": "3209",
    "elapsed_time": 17,
    "compare_result
    "code_output": "3",
    "std_output": "",
    "last_testcase": "[3,1,2]",
    "expected_output": "4",
    "task_finish_time": 1707835237902,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 51,
    "total_testcases": 578,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C",
    "submission_id": "1174222541",
    "input_formatted": "[3,1,2]",
    "input": "[3,1,2]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "int minimumCoins(int* prices, int pricesSize) {\n    int totalCoins = 0, i = 0;\n    while (i < pricesSize) {\n        totalCoins += prices[i];\n        i += prices[i] + 1;\n        if (i >= pricesSize) break;\n        // Check for a cheaper option in the next i fruits\n        int minPrice = prices[i];\n        for (int j = i + 1; j < pricesSize && j < i + prices[i]; ++j) {\n            if (prices[j] < minPrice) {\n                minPrice = prices[j];\n                i = j; // Update i to purchase the cheaper fruit\n            }\n        }\n    }\n    return totalCoins;\n}"
}