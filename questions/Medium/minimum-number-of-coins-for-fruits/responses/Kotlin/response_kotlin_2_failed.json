{
    "status_code": 11,
    "lang": "kotlin",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 37640000,
    "question_id": "3209",
    "elapsed_time": 206,
    "compare_result": "00000000000000000000000000000001000010000000000000000000000000000000000000000000000000010000000000000010000000000101100000100010000000010000000000000010000000000001010000000000000000000000000000010000000000000000000000000000000001000010000000000010000000000000000000000000000000000011111010000001000000000000000001000000000000100000010000000010000000101001000000010001000000000000000000000000100000000000000000000000000000000000000000000000010000100000100000000000000000000000100000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000100",
    "code_output": "1",
    "std_output": "",
    "last_testcase": "[3,1,2]",
    "expected_output": "4",
    "task_finish_time": 1707835953260,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 40,
    "total_testcases": 578,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Kotlin",
    "submission_id": "1174231823",
    "input_formatted": "[3,1,2]",
    "input": "[3,1,2]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    fun minimumCoins(prices: IntArray): Int {\n        val n = prices.size\n        var minCost = IntArray(n + 1) { 0 }\n        for (i in n - 1 downTo 0) {\n            minCost[i] = prices[i] + minCost.getOrElse(i + prices[i] + 1) { 0 }\n            if (i < n - 1) minCost[i] = minOf(minCost[i], minCost[i + 1])\n        }\n        return minCost[0]\n    }\n}"
}