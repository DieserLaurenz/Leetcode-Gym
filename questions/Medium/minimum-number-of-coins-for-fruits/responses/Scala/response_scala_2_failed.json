{
    "status_code": 11,
    "lang": "scala",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 56220000,
    "question_id": "3209",
    "elapsed_time": 795,
    "compare_result
    "code_output": "3",
    "std_output": "",
    "last_testcase": "[3,1,2]",
    "expected_output": "4",
    "task_finish_time": 1707844643427,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 49,
    "total_testcases": 578,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Scala",
    "submission_id": "1174360039",
    "input_formatted": "[3,1,2]",
    "input": "[3,1,2]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "object Solution {\n    def minimumCoins(prices: Array[Int]): Int = {\n        val dp = Array.ofDim[Int](prices.length + 1)\n        dp(0) = 0\n        for (i <- 1 to prices.length) {\n            dp(i) = dp(i - 1) + prices(i - 1)\n            for (j <- 1 until i) {\n                dp(i) = dp(i).min(dp(j - 1) + prices(j - 1))\n            }\n        }\n        dp(prices.length)\n    }\n}"
}