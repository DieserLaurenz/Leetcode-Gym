{
    "status_code": 15,
    "lang": "cpp",
    "run_success": false,
    "runtime_error": "Line 13: Char 48: runtime error: signed integer overflow: 2147483647 + 1 cannot be represented in type 'value_type' (aka 'int') (solution.cpp)",
    "full_runtime_error": "Line 13: Char 48: runtime error: signed integer overflow: 2147483647 + 1 cannot be represented in type 'value_type' (aka 'int') (solution.cpp)\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:22:48",
    "status_runtime": "N/A",
    "memory": 7712000,
    "question_id": "3209",
    "elapsed_time": 17,
    "compare_result": "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "code_output": "",
    "std_output": "",
    "last_testcase": "[3,1,2]",
    "expected_output": "4",
    "task_finish_time": 1707835031268,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 578,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C++",
    "submission_id": "1174219917",
    "status_msg": "Runtime Error",
    "state": "SUCCESS",
    "code": "class Solution {\npublic:\n    int minimumCoins(vector<int>& prices) {\n        int n = prices.size();\n        vector<int> dp(n + 1, INT_MAX);\n        dp[0] = 0;\n        for (int i = 0; i < n; i++) {\n            int cost = 0;\n            for (int j = i; j < n; j++) {\n                cost += prices[j];\n                int next = j + (j - i + 2);\n                if (next > n) next = n;\n                dp[next] = min(dp[next], dp[i] + prices[i]);\n            }\n        }\n        return dp[n];\n    }\n};"
}