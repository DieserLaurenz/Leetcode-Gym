{
    "status_code": 10,
    "lang": "kotlin",
    "run_success": true,
    "status_runtime": "215 ms",
    "memory": 37616000,
    "question_id": "3143",
    "elapsed_time": 256,
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1707526282904,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 384,
    "total_testcases": 384,
    "runtime_percentile": 100,
    "status_memory": "37.6 MB",
    "memory_percentile": 100,
    "pretty_lang": "Kotlin",
    "submission_id": "1171036024",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\n    fun getWordsInLongestSubsequence(n: Int, words: Array<String>, groups: IntArray): List<String> {\n        var lastGroup = -1\n        val result = mutableListOf<String>()\n        for (i in 0 until n) {\n            if (groups[i] != lastGroup) {\n                result.add(words[i])\n                lastGroup = groups[i]\n            }\n        }\n        return result\n    }\n}"
}