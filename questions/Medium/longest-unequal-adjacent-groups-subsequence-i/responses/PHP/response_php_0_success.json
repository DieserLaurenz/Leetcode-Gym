{
    "status_code": 10,
    "lang": "php",
    "run_success": true,
    "status_runtime": "12 ms",
    "memory": 20052000,
    "question_id": "3143",
    "elapsed_time": 32,
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1707526183923,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 384,
    "total_testcases": 384,
    "runtime_percentile": 100,
    "status_memory": "20.1 MB",
    "memory_percentile": 100,
    "pretty_lang": "PHP",
    "submission_id": "1171035469",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\n\n    /**\n     * @param Integer $n\n     * @param String[] $words\n     * @param Integer[] $groups\n     * @return String[]\n     */\n    function getWordsInLongestSubsequence($n, $words, $groups) {\n        $result = [];\n        for ($i = 0; $i < $n; $i++) {\n            if ($i == 0 || $groups[$i] != $groups[$i - 1]) {\n                $result[] = $words[$i];\n            }\n        }\n        return $result;\n    }\n}"
}