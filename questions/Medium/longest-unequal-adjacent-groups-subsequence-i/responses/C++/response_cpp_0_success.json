{
    "status_code": 10,
    "lang": "cpp",
    "run_success": true,
    "status_runtime": "3 ms",
    "memory": 28756000,
    "question_id": "3143",
    "elapsed_time": 27,
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1707525776180,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 384,
    "total_testcases": 384,
    "runtime_percentile": 97.3034,
    "status_memory": "28.8 MB",
    "memory_percentile": 28.090000000000032,
    "pretty_lang": "C++",
    "submission_id": "1171033316",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\npublic:\n    vector<string> getWordsInLongestSubsequence(int n, vector<string>& words, vector<int>& groups) {\n        vector<string> ans;\n        int lastGroup = -1; // To keep track of the last group added to the subsequence\n        for (int i = 0; i < n; ++i) {\n            if (groups[i] != lastGroup) {\n                ans.push_back(words[i]);\n                lastGroup = groups[i];\n            }\n        }\n        return ans;\n    }\n};"
}