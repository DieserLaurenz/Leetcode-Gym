{
    "status_code": 10,
    "lang": "dart",
    "run_success": true,
    "status_runtime": "375 ms",
    "memory": 152976000,
    "question_id": "3143",
    "elapsed_time": 447,
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1707526327449,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 384,
    "total_testcases": 384,
    "runtime_percentile": 100,
    "status_memory": "153 MB",
    "memory_percentile": 100,
    "pretty_lang": "Dart",
    "submission_id": "1171036264",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\n  List<String> getWordsInLongestSubsequence(int n, List<String> words, List<int> groups) {\n    List<String> result = [];\n    int? lastGroup;\n    for (int i = 0; i < n; i++) {\n      if (lastGroup == null || lastGroup != groups[i]) {\n        result.add(words[i]);\n        lastGroup = groups[i];\n      }\n    }\n    return result;\n  }\n}"
}