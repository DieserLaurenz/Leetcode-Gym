{
    "status_code": 10,
    "lang": "golang",
    "run_success": true,
    "status_runtime": "3 ms",
    "memory": 4024000,
    "question_id": "3143",
    "elapsed_time": 15,
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1707526374371,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 384,
    "total_testcases": 384,
    "runtime_percentile": 85.7143,
    "status_memory": "4 MB",
    "memory_percentile": 14.285699999999991,
    "pretty_lang": "Go",
    "submission_id": "1171036527",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "func getWordsInLongestSubsequence(n int, words []string, groups []int) []string {\n    var result []string\n    if n == 0 {\n        return result\n    }\n\n    // Initialize the result with the first word\n    result = append(result, words[0])\n    lastGroup := groups[0]\n\n    for i := 1; i < n; i++ {\n        if groups[i] != lastGroup {\n            result = append(result, words[i])\n            lastGroup = groups[i]\n        }\n    }\n\n    return result\n}"
}