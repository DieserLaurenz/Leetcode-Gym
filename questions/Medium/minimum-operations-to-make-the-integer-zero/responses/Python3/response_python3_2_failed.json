{
    "status_code": 11,
    "lang": "python3",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 16724000,
    "question_id": "2837",
    "elapsed_time": 68,
    "compare_result
    "code_output": "-1",
    "std_output": "",
    "last_testcase": "3\n-2",
    "expected_output": "3",
    "task_finish_time": 1708829440331,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 194,
    "total_testcases": 542,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python3",
    "submission_id": "1185339017",
    "input_formatted": "3, -2",
    "input": "3\n-2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution:\n    def makeTheIntegerZero(self, num1: int, num2: int) -> int:\n        operations = 0\n        while num1 != 0 and operations <= 60:\n            i = 0\n            while i <= 60:\n                if num1 - (2**i + num2) == 0:\n                    num1 = 0\n                    operations += 1\n                    break\n                elif abs(num1 - (2**i + num2)) < abs(num1):\n                    num1 -= (2**i + num2)\n                    operations += 1\n                    break\n                i += 1\n            if i > 60:\n                return -1\n        return operations if num1 == 0 else -1"
}