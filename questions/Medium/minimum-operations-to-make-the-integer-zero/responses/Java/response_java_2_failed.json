{
    "status_code": 14,
    "lang": "java",
    "run_success": false,
    "status_runtime": "N/A",
    "memory": 40660000,
    "question_id": "2837",
    "elapsed_time": 3991,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "3\n-2",
    "expected_output": "3",
    "task_finish_time": 1707917506081,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 542,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Java",
    "submission_id": "1175135203",
    "status_msg": "Time Limit Exceeded",
    "state": "SUCCESS",
    "code": "class Solution {\n    public int makeTheIntegerZero(int num1, int num2) {\n        int operations = 0;\n        while (num1 > 0) {\n            if (num2 == 0) return -1; // If num2 is 0, it's impossible to continue.\n            int i = 60;\n            // Try to find the maximum i where 2^i + num2 <= num1\n            while (i >= 0 && (1L << i) + num2 > num1) {\n                i--;\n            }\n            if (i < 0) return -1; // If no such i is found, return -1.\n            num1 -= (1 << i) + num2; // Perform the operation\n            operations++;\n        }\n        return operations;\n    }\n}"
}