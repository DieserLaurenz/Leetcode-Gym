{
    "status_code": 11,
    "lang": "java",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 40436000,
    "display_runtime": "2",
    "question_id": "2837",
    "elapsed_time": 167,
    "compare_result
    "code_output": "-1",
    "std_output": "",
    "last_testcase": "3\n-2",
    "expected_output": "3",
    "task_finish_time": 1707917435840,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 210,
    "total_testcases": 542,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Java",
    "submission_id": "1175134472",
    "input_formatted": "3, -2",
    "input": "3\n-2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    public int makeTheIntegerZero(int num1, int num2) {\n        if (num2 >= 0) return -1; // Impossible if num2 is non-negative\n        int operations = 0;\n        while (num1 > 0 && operations <= 60) {\n            int i = 60;\n            while (i >= 0 && (1L << i) + num2 > num1) i--;\n            if (i < 0) break; // No valid i found\n            num1 -= (1L << i) + num2;\n            operations++;\n        }\n        return num1 == 0 ? operations : -1;\n    }\n}"
}