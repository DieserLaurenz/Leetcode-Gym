{
    "status_code": 12,
    "lang": "scala",
    "run_success": false,
    "status_runtime": "N/A",
    "memory": 52144000,
    "question_id": "2837",
    "elapsed_time": 10389,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "3\n-2",
    "expected_output": "3",
    "task_finish_time": 1707927821487,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 542,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Scala",
    "submission_id": "1175262252",
    "status_msg": "Memory Limit Exceeded",
    "state": "SUCCESS",
    "code": "object Solution {\n  def makeTheIntegerZero(num1: Int, num2: Int): Int = {\n    var (n, result) = (num1, 0)\n    while (n > 0) {\n      var i = 0\n      var found = false\n      while (i <= 60 && !found) {\n        if ((2L << i) + num2 <= n) {\n          n -= (2 << i) + num2\n          found = true\n        }\n        i += 1\n      }\n      if (!found) {\n        if (n + num2 >= 1) n -= (1 + num2)\n        else return -1\n      }\n      result += 1\n    }\n    if (n < 0) -1 else result\n  }\n}"
}