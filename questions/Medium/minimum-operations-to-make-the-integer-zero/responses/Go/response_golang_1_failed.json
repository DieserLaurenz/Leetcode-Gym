{
    "status_code": 11,
    "lang": "golang",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 2140000,
    "question_id": "2837",
    "elapsed_time": 11,
    "compare_result
    "code_output": "-1",
    "std_output": "",
    "last_testcase": "3\n-2",
    "expected_output": "3",
    "task_finish_time": 1707918893803,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 194,
    "total_testcases": 542,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Go",
    "submission_id": "1175151408",
    "input_formatted": "3, -2",
    "input": "3\n-2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "func makeTheIntegerZero(num1 int, num2 int) int {\n    if num2 == 0 {\n        return -1\n    }\n\n    operations := 0\n    for num1 != 0 && operations <= 60 {\n        modified := false\n        for i := 0; i <= 60; i++ {\n            operationValue := (1 << i) + num2\n            if num1-operationValue == 0 {\n                num1 -= operationValue\n                operations++\n                return operations\n            } else if abs(num1-operationValue) < abs(num1) {\n                num1 -= operationValue\n                operations++\n                modified = true\n                break\n            }\n        }\n        if !modified {\n            return -1\n        }\n    }\n    \n    if num1 != 0 {\n        return -1\n    }\n    return operations\n}\n\nfunc abs(x int) int {\n    if x < 0 {\n        return -x\n    }\n    return x\n}"
}