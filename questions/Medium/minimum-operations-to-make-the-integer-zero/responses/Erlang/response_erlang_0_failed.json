{
    "status_code": 14,
    "lang": "erlang",
    "run_success": false,
    "status_runtime": "N/A",
    "memory": 57880000,
    "question_id": "2837",
    "elapsed_time": 5237,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "3\n-2",
    "expected_output": "3",
    "task_finish_time": 1707928156954,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 542,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Erlang",
    "submission_id": "1175267418",
    "status_msg": "Time Limit Exceeded",
    "state": "SUCCESS",
    "code": "-spec make_the_integer_zero(Num1 :: integer(), Num2 :: integer()) -> integer().\nmake_the_integer_zero(Num1, Num2) ->\n    make_the_integer_zero_helper(Num1, Num2, 0).\n\nmake_the_integer_zero_helper(0, _, Ops) ->\n    Ops;\nmake_the_integer_zero_helper(Num1, Num2, Ops) when Num1 > 0, Num2 < 0; Num1 < 0, Num2 > 0 ->\n    make_the_integer_zero_helper(Num1 - (1 + Num2), Num2, Ops + 1);\nmake_the_integer_zero_helper(_, _, _) ->\n    -1."
}