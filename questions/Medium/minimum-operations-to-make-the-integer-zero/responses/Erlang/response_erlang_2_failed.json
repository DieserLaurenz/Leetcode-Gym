{
    "status_code": 14,
    "lang": "erlang",
    "run_success": false,
    "status_runtime": "N/A",
    "memory": 58132000,
    "question_id": "2837",
    "elapsed_time": 5063,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "3\n-2",
    "expected_output": "3",
    "task_finish_time": 1707928230965,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 542,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Erlang",
    "submission_id": "1175268532",
    "status_msg": "Time Limit Exceeded",
    "state": "SUCCESS",
    "code": "-spec make_the_integer_zero(integer(), integer()) -> integer().\nmake_the_integer_zero(Num1, Num2) ->\n    find_min_operations(Num1, Num2, 0, 0).\n\nfind_min_operations(0, _, _, Ops) ->\n    Ops;\nfind_min_operations(_, _, 61, _) ->\n    -1;\nfind_min_operations(Num1, Num2, I, Ops) ->\n    Sub = (1 bsl I) + Num2,\n    case Num1 - Sub of\n        0 -> Ops + 1;\n        NewNum1 when NewNum1 < 0 -> find_min_operations(Num1, Num2, I + 1, Ops);\n        NewNum1 -> find_min_operations(NewNum1, Num2, 0, Ops + 1)\n    end."
}