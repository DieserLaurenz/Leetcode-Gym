{
    "status_code": 11,
    "lang": "swift",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 14808000,
    "question_id": "2837",
    "elapsed_time": 26,
    "compare_result
    "code_output": "-1",
    "std_output": "",
    "last_testcase": "3\n-2",
    "expected_output": "3",
    "task_finish_time": 1707918320515,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 222,
    "total_testcases": 542,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Swift",
    "submission_id": "1175144623",
    "input_formatted": "3, -2",
    "input": "3\n-2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    func makeTheIntegerZero(_ num1: Int, _ num2: Int) -> Int {\n        var num1 = num1\n        var operations = 0\n        \n        while num1 > 0 && operations <= 60 {\n            var found = false\n            for i in (0...60).reversed() {\n                let value = (1 << i) + num2\n                if num1 - value >= 0 {\n                    num1 -= value\n                    operations += 1\n                    found = true\n                    break\n                }\n            }\n            if !found {\n                return -1\n            }\n        }\n        \n        return num1 == 0 ? operations : -1\n    }\n}"
}