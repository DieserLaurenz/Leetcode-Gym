{
    "status_code": 14,
    "lang": "php",
    "run_success": false,
    "status_runtime": "N/A",
    "memory": 20068000,
    "question_id": "2837",
    "elapsed_time": 5479,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "3\n-2",
    "expected_output": "3",
    "task_finish_time": 1707918262359,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 542,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "PHP",
    "submission_id": "1175143826",
    "status_msg": "Time Limit Exceeded",
    "state": "SUCCESS",
    "code": "class Solution {\n\n    /**\n     * @param Integer $num1\n     * @param Integer $num2\n     * @return Integer\n     */\n    function makeTheIntegerZero($num1, $num2) {\n        $operations = 0;\n        while ($num1 > 0) {\n            $i = 60;\n            $found = false;\n            while ($i >= 0 && !$found) {\n                $subtract = pow(2, $i) + $num2;\n                if ($num1 - $subtract >= 0) {\n                    $num1 -= $subtract;\n                    $operations++;\n                    $found = true;\n                }\n                $i--;\n            }\n            if (!$found) {\n                break;\n            }\n        }\n        if ($num1 == 0) {\n            return $operations;\n        } else {\n            // Trying with i=0 if num1 is not yet zero and previous steps didn't make it zero\n            while ($num1 != 0 && $operations <= 60) {\n                $subtract = 1 + $num2; // Since 2^0 = 1\n                if ($num1 - $subtract < 0 && $num2 < 0) {\n                    $num1 -= $subtract;\n                    $operations++;\n                } else {\n                    break;\n                }\n            }\n            return $num1 == 0 ? $operations : -1;\n        }\n    }\n}"
}