{
    "status_code": 20,
    "lang": "racket",
    "run_success": false,
    "compile_error": "Line 1: Char 1: read-syntax: expected a `)` to close `(`",
    "full_compile_error": "Line 1: Char 1: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 14\n  compilation context...:\n   solution.rkt",
    "status_runtime": "N/A",
    "memory": 0,
    "question_id": "2837",
    "task_finish_time": 1707928022665,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": null,
    "total_testcases": null,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Racket",
    "submission_id": "1175265486",
    "status_msg": "Compile Error",
    "state": "SUCCESS",
    "code": "(define/contract (make-the-integer-zero num1 num2)\n  (-> exact-integer? exact-integer? exact-integer?)\n  (let loop ((num1 num1) (count 0))\n    (cond\n      ((= num1 0) count)\n      ((or (< num1 0) (> count 60)) -1)\n      (else\n       (let ((i (for/or ([i (in-range 0 61)])\n                         (when (= (- num1 (+ (expt 2 i) num2)) 0) i)\n                         #f)))\n         (if i\n             (loop (- num1 (+ (expt 2 i) num2)) (+ count 1))\n             -1)))))"
}