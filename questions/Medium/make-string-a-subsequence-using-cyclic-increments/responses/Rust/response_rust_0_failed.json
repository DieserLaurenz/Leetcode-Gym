{
    "status_code": 11,
    "lang": "rust",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 2440000,
    "question_id": "3018",
    "elapsed_time": 15,
    "compare_result
    "code_output": "false",
    "std_output": "",
    "last_testcase": "\"abc\"\n\"ad\"",
    "expected_output": "true",
    "task_finish_time": 1707557965036,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 616,
    "total_testcases": 1126,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Rust",
    "submission_id": "1171292271",
    "input_formatted": "\"abc\", \"ad\"",
    "input": "\"abc\"\n\"ad\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "impl Solution {\n    pub fn can_make_subsequence(str1: String, str2: String) -> bool {\n        let mut i = 0;\n        let mut j = 0;\n        let str1_bytes = str1.as_bytes();\n        let str2_bytes = str2.as_bytes();\n        while i < str1.len() && j < str2.len() {\n            if str1_bytes[i] == str2_bytes[j] || (str1_bytes[i] as u8 + 1) % 26 == (str2_bytes[j] - b'a') % 26 {\n                j += 1;\n            }\n            i += 1;\n        }\n        j == str2.len()\n    }\n}"
}