{
    "status_code": 11,
    "lang": "rust",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 2468000,
    "question_id": "3018",
    "elapsed_time": 15,
    "compare_result
    "code_output": "false",
    "std_output": "",
    "last_testcase": "\"zc\"\n\"ad\"",
    "expected_output": "true",
    "task_finish_time": 1707558007309,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 696,
    "total_testcases": 1126,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Rust",
    "submission_id": "1171292640",
    "input_formatted": "\"zc\", \"ad\"",
    "input": "\"zc\"\n\"ad\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "impl Solution {\n    pub fn can_make_subsequence(str1: String, str2: String) -> bool {\n        let mut i = 0;\n        let mut j = 0;\n        while i < str1.len() && j < str2.len() {\n            if str1.as_bytes()[i] == str2.as_bytes()[j] {\n                j += 1;\n            } else if (str1.as_bytes()[i] + 1 - b'a') % 26 == (str2.as_bytes()[j] - b'a') % 26 {\n                i += 1;\n                j += 1;\n                break;\n            }\n            i += 1;\n        }\n        while i < str1.len() && j < str2.len() {\n            if str1.as_bytes()[i] == str2.as_bytes()[j] {\n                j += 1;\n            }\n            i += 1;\n        }\n        j == str2.len()\n    }\n}"
}