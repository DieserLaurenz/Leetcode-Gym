{
    "status_code": 11,
    "lang": "java",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 44592000,
    "question_id": "3018",
    "elapsed_time": 4010,
    "compare_result
    "code_output": "true",
    "std_output": "",
    "last_testcase": "\"eao\"\n\"ofa\"",
    "expected_output": "false",
    "task_finish_time": 1707557072062,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 1115,
    "total_testcases": 1126,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Java",
    "submission_id": "1171283948",
    "input_formatted": "\"eao\", \"ofa\"",
    "input": "\"eao\"\n\"ofa\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    public boolean canMakeSubsequence(String str1, String str2) {\n        boolean[] visited = new boolean[str1.length()];\n        for (int i = 0; i < str2.length(); i++) {\n            char target = str2.charAt(i);\n            boolean found = false;\n            for (int j = 0; j < str1.length(); j++) {\n                if (!visited[j] && (str1.charAt(j) == target || ((str1.charAt(j) - 'a' + 1) % 26 + 'a') == target)) {\n                    visited[j] = true;\n                    found = true;\n                    break;\n                }\n            }\n            if (!found) return false;\n        }\n        return true;\n    }\n}"
}