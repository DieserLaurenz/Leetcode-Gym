{
    "status_code": 11,
    "lang": "c",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 13340000,
    "question_id": "3080",
    "elapsed_time": 135,
    "compare_result
    "code_output": "6",
    "std_output": "",
    "last_testcase": "[1,0,2,0,1,2]",
    "expected_output": "3",
    "task_finish_time": 1708196031779,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 41,
    "total_testcases": 887,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C",
    "submission_id": "1178163685",
    "input_formatted": "[1,0,2,0,1,2]",
    "input": "[1,0,2,0,1,2]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "int maxSubarrays(int* nums, int numsSize){\n    int count = 0;\n    for (int i = 0; i < numsSize - 1; i++) {\n        if (nums[i] == 0 || nums[i+1] == 0) count++;\n        else if ((nums[i] & nums[i+1]) != nums[i+1]) count++;\n    }\n    return count + 1;\n}"
}