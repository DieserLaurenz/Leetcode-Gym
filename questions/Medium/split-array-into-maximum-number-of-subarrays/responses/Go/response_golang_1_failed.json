{
    "status_code": 11,
    "lang": "golang",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 8356000,
    "question_id": "3080",
    "elapsed_time": 216,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "[1,2,2,1]",
    "expected_output": "2",
    "task_finish_time": 1708196828278,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 331,
    "total_testcases": 887,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Go",
    "submission_id": "1178173519",
    "input_formatted": "[1,2,2,1]",
    "input": "[1,2,2,1]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "func maxSubarrays(nums []int) int {\n    count := 1 // Starting with 1 to count the initial subarray\n    for i := 1; i < len(nums); i++ {\n        if nums[i] == 0 {\n            count++ // Increment for each zero found\n        }\n    }\n    return count\n}"
}