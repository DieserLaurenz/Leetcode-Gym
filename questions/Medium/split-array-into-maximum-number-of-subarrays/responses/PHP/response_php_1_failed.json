{
    "status_code": 11,
    "lang": "php",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 27508000,
    "question_id": "3080",
    "elapsed_time": 457,
    "compare_result
    "code_output": "2",
    "std_output": "",
    "last_testcase": "[1,0,2,0,1,2]",
    "expected_output": "3",
    "task_finish_time": 1708196418155,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 298,
    "total_testcases": 887,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "PHP",
    "submission_id": "1178168486",
    "input_formatted": "[1,0,2,0,1,2]",
    "input": "[1,0,2,0,1,2]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @return Integer\n     */\n    function maxSubarrays($nums) {\n        $count = 0;\n        foreach ($nums as $num) {\n            if ($num === 0) {\n                $count++;\n            }\n        }\n        return max(1, $count); // Ensure at least one subarray for non-zero arrays\n    }\n}"
}