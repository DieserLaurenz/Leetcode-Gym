{
    "status_code": 11,
    "lang": "python",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 32012000,
    "question_id": "3181",
    "elapsed_time": 11010,
    "compare_result
    "code_output": "[2,-1,-1,5,2]",
    "std_output": "",
    "last_testcase": "[6,4,8,5,2,7]\n[[0,1],[0,3],[2,4],[3,4],[2,2]]",
    "expected_output": "[2,5,-1,5,2]",
    "task_finish_time": 1708882145158,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 60,
    "total_testcases": 949,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python",
    "submission_id": "1185980468",
    "input_formatted": "[6,4,8,5,2,7], [[0,1],[0,3],[2,4],[3,4],[2,2]]",
    "input": "[6,4,8,5,2,7]\n[[0,1],[0,3],[2,4],[3,4],[2,2]]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution(object):\n    def leftmostBuildingQueries(self, heights, queries):\n        \"\"\"\n        :type heights: List[int]\n        :type queries: List[List[int]]\n        :rtype: List[int]\n        \"\"\"\n        answer = []\n        for ai, bi in queries:\n            if ai == bi:\n                answer.append(ai)\n                continue\n            leftmost = -1\n            max_height_ai = heights[ai]\n            for j in range(ai + 1, len(heights)):\n                if heights[j] > max_height_ai:\n                    max_height_ai = heights[j]\n                    if j >= bi:\n                        leftmost = j\n                        break\n            answer.append(leftmost)\n        return answer"
}