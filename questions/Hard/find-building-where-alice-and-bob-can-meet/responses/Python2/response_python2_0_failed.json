{
    "status_code": 11,
    "lang": "python",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 31928000,
    "question_id": "3181",
    "elapsed_time": 11035,
    "compare_result
    "code_output": "[2,5,-1,5,-1]",
    "std_output": "",
    "last_testcase": "[6,4,8,5,2,7]\n[[0,1],[0,3],[2,4],[3,4],[2,2]]",
    "expected_output": "[2,5,-1,5,2]",
    "task_finish_time": 1708882060236,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 2,
    "total_testcases": 949,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python",
    "submission_id": "1185979234",
    "input_formatted": "[6,4,8,5,2,7], [[0,1],[0,3],[2,4],[3,4],[2,2]]",
    "input": "[6,4,8,5,2,7]\n[[0,1],[0,3],[2,4],[3,4],[2,2]]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution(object):\n    def leftmostBuildingQueries(self, heights, queries):\n        \"\"\"\n        :type heights: List[int]\n        :type queries: List[List[int]]\n        :rtype: List[int]\n        \"\"\"\n        n = len(heights)\n        max_right = [0] * n\n        max_height = -1\n        for i in range(n - 1, -1, -1):\n            if heights[i] > max_height:\n                max_height = heights[i]\n            max_right[i] = max_height\n        \n        ans = []\n        for a, b in queries:\n            if a >= b or heights[a] >= max_right[b]:\n                ans.append(-1)\n                continue\n            leftmost = -1\n            for j in range(max(a, b), n):\n                if heights[j] > heights[a] and heights[j] > heights[b]:\n                    leftmost = j\n                    break\n            ans.append(leftmost)\n        return ans"
}