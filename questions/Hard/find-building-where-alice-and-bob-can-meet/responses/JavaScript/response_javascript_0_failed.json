{
    "status_code": 11,
    "lang": "javascript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 65292000,
    "question_id": "3181",
    "elapsed_time": 3011,
    "compare_result
    "code_output": "[0,2,2,3,2]",
    "std_output": "",
    "last_testcase": "[6,4,8,5,2,7]\n[[0,1],[0,3],[2,4],[3,4],[2,2]]",
    "expected_output": "[2,5,-1,5,2]",
    "task_finish_time": 1708474640617,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 12,
    "total_testcases": 949,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "JavaScript",
    "submission_id": "1181453232",
    "input_formatted": "[6,4,8,5,2,7], [[0,1],[0,3],[2,4],[3,4],[2,2]]",
    "input": "[6,4,8,5,2,7]\n[[0,1],[0,3],[2,4],[3,4],[2,2]]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "/**\n * @param {number[]} heights\n * @param {number[][]} queries\n * @return {number[]}\n */\nvar leftmostBuildingQueries = function(heights, queries) {\n    let ans = new Array(queries.length).fill(-1);\n    for (let q = 0; q < queries.length; q++) {\n        const [a, b] = queries[q];\n        let maxLeft = -1, maxRight = -1, meet = -1;\n        for (let i = a; i < heights.length; i++) {\n            if (heights[i] > maxLeft) {\n                maxLeft = heights[i];\n                if (maxLeft > maxRight && i <= b) meet = i;\n            }\n            if (i <= b && heights[i] > maxRight) {\n                maxRight = heights[i];\n                if (maxRight >= maxLeft) meet = i;\n            }\n        }\n        ans[q] = meet;\n    }\n    return ans;\n};"
}