{
    "status_code": 15,
    "lang": "kotlin",
    "run_success": false,
    "runtime_error": "Line 14: Exception in thread \"main\" java.lang.NumberFormatException: For input string: \"4179205230\"",
    "full_runtime_error": "Line 14: Exception in thread \"main\" java.lang.NumberFormatException: For input string: \"4179205230\"",
    "status_runtime": "N/A",
    "memory": 33056000,
    "question_id": "2757",
    "elapsed_time": 398,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "\"4179205230\"\n\"7748704426\"\n8\n46",
    "expected_output": "883045899",
    "task_finish_time": 1708329143997,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 2,
    "total_testcases": 615,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Kotlin",
    "submission_id": "1179633986",
    "status_msg": "Runtime Error",
    "state": "SUCCESS",
    "code": "class Solution {\n    private val MOD = 1_000_000_007\n\n    private fun digitSum(s: String): Int {\n        return s.sumOf { it - '0' }\n    }\n\n    private fun isGood(x: Int, minSum: Int, maxSum: Int): Boolean {\n        return digitSum(x.toString()) in minSum..maxSum\n    }\n\n    fun count(num1: String, num2: String, min_sum: Int, max_sum: Int): Int {\n        var count = 0\n        val start = num1.toInt()\n        val end = num2.toInt()\n        for (i in start..end) {\n            if (isGood(i, min_sum, max_sum)) {\n                count = (count + 1) % MOD\n            }\n        }\n        return count\n    }\n}"
}