{
    "status_code": 11,
    "lang": "kotlin",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 34156000,
    "question_id": "2757",
    "elapsed_time": 416,
    "compare_result
    "code_output": "9",
    "std_output": "",
    "last_testcase": "\"1\"\n\"12\"\n1\n8",
    "expected_output": "11",
    "task_finish_time": 1708329107857,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 615,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Kotlin",
    "submission_id": "1179633532",
    "input_formatted": "\"1\", \"12\", 1, 8",
    "input": "\"1\"\n\"12\"\n1\n8",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    fun count(num1: String, num2: String, min_sum: Int, max_sum: Int): Int {\n        val MOD = 1_000_000_007\n        fun digitSum(n: String): IntArray {\n            val dp = Array(n.length + 1) { IntArray(400) }\n            dp[0][0] = 1\n            for (i in 1..n.length) {\n                val digit = n[i - 1] - '0'\n                for (sum in 0 until 400) {\n                    for (d in 0..9) {\n                        if (sum + d < 400) {\n                            dp[i][sum + d] = (dp[i][sum + d] + dp[i - 1][sum]) % MOD\n                            if (d < digit) dp[i][sum + d] = (dp[i][sum + d] + if (i == 1 && d == 0) 0 else 1) % MOD\n                        }\n                    }\n                    if (sum + digit < 400) dp[i][sum + digit] = (dp[i][sum + digit] - if (i == 1 && digit == 0) 0 else 1 + MOD) % MOD\n                }\n            }\n            return dp[n.length]\n        }\n\n        val sum1 = digitSum((num1.toBigInteger() - \"1\".toBigInteger()).toString())\n        val sum2 = digitSum(num2)\n        var result = 0\n        for (i in min_sum..max_sum) {\n            result = (result + sum2[i] - sum1[i] + MOD) % MOD\n        }\n        return result\n    }\n}"
}