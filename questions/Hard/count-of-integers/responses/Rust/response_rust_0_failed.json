{
    "status_code": 14,
    "lang": "rust",
    "run_success": false,
    "status_runtime": "N/A",
    "memory": 1952000,
    "question_id": "2757",
    "elapsed_time": 2073,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "\"4179205230\"\n\"7748704426\"\n8\n46",
    "expected_output": "883045899",
    "task_finish_time": 1708329985411,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 2,
    "total_testcases": 615,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Rust",
    "submission_id": "1179644447",
    "status_msg": "Time Limit Exceeded",
    "state": "SUCCESS",
    "code": "impl Solution {\n    pub fn count(num1: String, num2: String, min_sum: i32, max_sum: i32) -> i32 {\n        let mod_val = 1_000_000_007;\n        let mut count = 0;\n\n        let start = num1.parse::<i64>().unwrap();\n        let end = num2.parse::<i64>().unwrap();\n\n        for num in start..=end {\n            let sum: i32 = num.to_string().chars().map(|c| c.to_digit(10).unwrap() as i32).sum();\n            if sum >= min_sum && sum <= max_sum {\n                count += 1;\n                count %= mod_val;\n            }\n        }\n\n        count\n    }\n}"
}