{
    "status_code": 14,
    "lang": "php",
    "run_success": false,
    "status_runtime": "N/A",
    "memory": 20048000,
    "question_id": "2757",
    "elapsed_time": 5113,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "\"4179205230\"\n\"7748704426\"\n8\n46",
    "expected_output": "883045899",
    "task_finish_time": 1708328827985,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 2,
    "total_testcases": 615,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "PHP",
    "submission_id": "1179629951",
    "status_msg": "Time Limit Exceeded",
    "state": "SUCCESS",
    "code": "class Solution {\n\n    /**\n     * @param String $num1\n     * @param String $num2\n     * @param Integer $min_sum\n     * @param Integer $max_sum\n     * @return Integer\n     */\n    function count($num1, $num2, $min_sum, $max_sum) {\n        $MOD = 1000000007;\n\n        $count = 0;\n        for ($i = max(1, (int)$num1); $i <= (int)$num2; $i++) {\n            $sum = $this->digitSum($i);\n            if ($sum >= $min_sum && $sum <= $max_sum) {\n                $count = ($count + 1) % $MOD;\n            }\n        }\n        return $count;\n    }\n\n    private function digitSum($n) {\n        $sum = 0;\n        while ($n > 0) {\n            $sum += $n % 10;\n            $n = intdiv($n, 10);\n        }\n        return $sum;\n    }\n}"
}