{
    "status_code": 11,
    "lang": "dart",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 151816000,
    "question_id": "2757",
    "elapsed_time": 485,
    "compare_result
    "code_output": "0",
    "std_output": "",
    "last_testcase": "\"4179205230\"\n\"7748704426\"\n8\n46",
    "expected_output": "883045899",
    "task_finish_time": 1708329269809,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 3,
    "total_testcases": 615,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Dart",
    "submission_id": "1179635557",
    "input_formatted": "\"4179205230\", \"7748704426\", 8, 46",
    "input": "\"4179205230\"\n\"7748704426\"\n8\n46",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n  int count(String num1, String num2, int min_sum, int max_sum) {\n    final MOD = 1000000007;\n    List<List<List<int>>> memo = List.generate(\n        21,\n        (_) => List.generate(\n            403,\n            (_) => List.generate(2, (_) => -1)));\n\n    int dp(int n, int sum, int tight, String num) {\n      if (n == 0) return sum >= min_sum && sum <= max_sum ? 1 : 0;\n      if (sum > max_sum) return 0;\n      if (memo[n][sum][tight] != -1) return memo[n][sum][tight];\n      int limit = tight == 1 ? int.parse(num[num.length - n]) : 9;\n      int ans = 0;\n      for (int i = 0; i <= limit; i++) {\n        ans = (ans + dp(n - 1, sum + i, tight == 1 && i == limit ? 1 : 0, num)) % MOD;\n      }\n      return memo[n][sum][tight] = ans;\n    }\n\n    int countInRange(String num) {\n      return dp(num.length, 0, 1, num);\n    }\n\n    int toInt(String num) => int.parse(num);\n    int num1Int = toInt(num1) - 1;\n    int num2Int = toInt(num2);\n    int ans1 = countInRange(num2Int.toString());\n    int ans2 = num1Int > 0 ? countInRange(num1Int.toString()) : 0;\n    return (ans1 - ans2 + MOD) % MOD;\n  }\n}"
}