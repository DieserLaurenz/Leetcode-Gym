{
    "status_code": 14,
    "lang": "javascript",
    "run_success": false,
    "status_runtime": "N/A",
    "memory": 56184000,
    "question_id": "2757",
    "elapsed_time": 4014,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "\"4179205230\"\n\"7748704426\"\n8\n46",
    "expected_output": "883045899",
    "task_finish_time": 1708328434900,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 2,
    "total_testcases": 615,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "JavaScript",
    "submission_id": "1179624931",
    "status_msg": "Time Limit Exceeded",
    "state": "SUCCESS",
    "code": "/**\n * @param {string} num1\n * @param {string} num2\n * @param {number} min_sum\n * @param {number} max_sum\n * @return {number}\n */\nvar count = function(num1, num2, min_sum, max_sum) {\n    const MOD = 1000000007;\n\n    function digitSum(x) {\n        let sum = 0;\n        while (x > 0) {\n            sum += x % 10;\n            x = Math.floor(x / 10);\n        }\n        return sum;\n    }\n\n    let start = BigInt(num1);\n    let end = BigInt(num2);\n    let totalCount = 0;\n\n    for (let i = start; i <= end; i++) {\n        let sum = digitSum(Number(i));\n        if (sum >= min_sum && sum <= max_sum) {\n            totalCount = (totalCount + 1) % MOD;\n        }\n    }\n\n    return totalCount;\n};"
}