{
    "status_code": 14,
    "lang": "php",
    "run_success": false,
    "status_runtime": "N/A",
    "memory": 20364000,
    "question_id": "3233",
    "elapsed_time": 5154,
    "compare_result": "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "code_output": "",
    "std_output": "",
    "last_testcase": "\"accca\"\n2",
    "expected_output": "3",
    "task_finish_time": 1708526699975,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 277,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "PHP",
    "submission_id": "1182067566",
    "status_msg": "Time Limit Exceeded",
    "state": "SUCCESS",
    "code": "class Solution {\n\n    /**\n     * @param String $s\n     * @param Integer $k\n     * @return Integer\n     */\n    function maxPartitionsAfterOperations($s, $k) {\n        $result = 0;\n        $freq = array_fill(0, 26, 0);\n        $total = 0;\n        \n        for ($change = 0; $change <= 26; $change++) {\n            $partitions = 1;\n            $distinct = 0;\n            $left = 0;\n            \n            for ($i = 0; $i < strlen($s); $i++) {\n                if ($freq[ord($s[$i]) - ord('a')]++ == 0) $distinct++;\n                \n                while ($distinct > $k || ($change < 26 && $freq[$change] == 0)) {\n                    if (--$freq[ord($s[$left]) - ord('a')] == 0) $distinct--;\n                    $left++;\n                }\n                \n                if ($i - $left + 1 == $total) $partitions++;\n            }\n            \n            $result = max($result, $partitions);\n            \n            array_fill(0, 26, 0); // Reset frequency array for the next iteration\n        }\n        \n        return $result;\n    }\n}"
}