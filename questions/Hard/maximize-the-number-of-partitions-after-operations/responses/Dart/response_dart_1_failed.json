{
    "status_code": 15,
    "lang": "dart",
    "run_success": false,
    "runtime_error": "Line 22: Char 21: Error: A comparison expression can't be an operand of another comparison expression.",
    "full_runtime_error": "Line 22: Char 21: Error: A comparison expression can't be an operand of another comparison expression.\nTry putting parentheses around one of the comparisons.\n      Set<characters> = {};\n                    ^\nLine 22: Char 23: Error: Expected an identifier, but got '='.\nTry inserting an identifier before '='.\n      Set<characters> = {};\n                      ^\nLine 22: Char 23: Error: Can't assign to this.\n      Set<characters> = {};\n                      ^\nLine 25: Char 14: Error: The getter 'characters' isn't defined for the class 'Solution'.\nTry correcting the name to the name of an existing getter, or defining a getter or field named 'characters'.\n        if (!characters.contains(s[i])) {\n             ^^^^^^^^^^\nLine 29: Char 9: Error: The getter 'characters' isn't defined for the class 'Solution'.\nTry correcting the name to the name of an existing getter, or defining a getter or field named 'characters'.\n        characters.add(s[i]);\n        ^^^^^^^^^^",
    "status_runtime": "N/A",
    "memory": 150024000,
    "question_id": "3233",
    "elapsed_time": 348,
    "compare_result": "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "code_output": "",
    "std_output": "",
    "last_testcase": "\"accca\"\n2",
    "expected_output": "3",
    "task_finish_time": 1708535629882,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 277,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Dart",
    "submission_id": "1182205456",
    "status_msg": "Runtime Error",
    "state": "SUCCESS",
    "code": "class Solution {\n  int maxPartitionsAfterOperations(String s, int k) {\n    int maxPartitions = 0;\n    for (int changeIndex = -1; changeIndex < s.length; changeIndex++) {\n      String modifiedS = s;\n      if (changeIndex != -1) {\n        for (int ascii = 97; ascii <= 122; ascii++) {\n          modifiedS = s.substring(0, changeIndex) + String.fromCharCode(ascii) + s.substring(changeIndex + 1);\n          maxPartitions = max(maxPartitions, calculatePartitions(modifiedS, k));\n        }\n      } else {\n        maxPartitions = max(maxPartitions, calculatePartitions(modifiedS, k));\n      }\n    }\n    return maxPartitions;\n  }\n\n  int calculatePartitions(String s, int k) {\n    int partitions = 0;\n    while (s.isNotEmpty) {\n      int distinctCount = 0;\n      Set<characters> = {};\n      int i = 0;\n      for (; i < s.length && distinctCount <= k; i++) {\n        if (!characters.contains(s[i])) {\n          distinctCount++;\n          if (distinctCount > k) break;\n        }\n        characters.add(s[i]);\n      }\n      partitions++;\n      s = s.substring(i);\n    }\n    return partitions;\n  }\n\n  int max(int a, int b) => a > b ? a : b;\n}"
}