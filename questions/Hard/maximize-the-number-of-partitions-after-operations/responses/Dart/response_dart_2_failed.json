{
    "status_code": 15,
    "lang": "dart",
    "run_success": false,
    "runtime_error": "Line 22: Char 21: Error: A comparison expression can't be an operand of another comparison expression.",
    "full_runtime_error": "Line 22: Char 21: Error: A comparison expression can't be an operand of another comparison expression.\nTry putting parentheses around one of the comparisons.\n      Set<characters> = Set();\n                    ^\nLine 22: Char 23: Error: Expected an identifier, but got '='.\nTry inserting an identifier before '='.\n      Set<characters> = Set();\n                      ^\nLine 22: Char 23: Error: Can't assign to this.\n      Set<characters> = Set();\n                      ^\nLine 23: Char 19: Error: A comparison expression can't be an operand of another comparison expression.\nTry putting parentheses around one of the comparisons.\n      Map<charFreq> = {};\n                  ^\nLine 23: Char 21: Error: Expected an identifier, but got '='.\nTry inserting an identifier before '='.\n      Map<charFreq> = {};\n                    ^\nLine 23: Char 21: Error: Can't assign to this.\n      Map<charFreq> = {};\n                    ^\nLine 24: Char 28: Error: The getter 'characters' isn't defined for the class 'Solution'.\nTry correcting the name to the name of an existing getter, or defining a getter or field named 'characters'.\n      while (right < n && (characters.contains(s[right]) || characters.length < k)) {\n                           ^^^^^^^^^^\nLine 24: Char 61: Error: The getter 'characters' isn't defined for the class 'Solution'.\nTry correcting the name to the name of an existing getter, or defining a getter or field named 'characters'.\n      while (right < n && (characters.contains(s[right]) || characters.length < k)) {\n                                                            ^^^^^^^^^^\nLine 25: Char 9: Error: The getter 'characters' isn't defined for the class 'Solution'.\nTry correcting the name to the name of an existing getter, or defining a getter or field named 'characters'.\n        characters.add(s[right]);\n        ^^^^^^^^^^",
    "status_runtime": "N/A",
    "memory": 146916000,
    "question_id": "3233",
    "elapsed_time": 574,
    "compare_result": "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "code_output": "",
    "std_output": "",
    "last_testcase": "\"accca\"\n2",
    "expected_output": "3",
    "task_finish_time": 1708535662951,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 277,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Dart",
    "submission_id": "1182206047",
    "status_msg": "Runtime Error",
    "state": "SUCCESS",
    "code": "class Solution {\n  int maxPartitionsAfterOperations(String s, int k) {\n    int result = 0;\n\n    for (int i = 0; i < s.length; i++) {\n      for (int j = 0; j < 26; j++) {\n        String modified = s.substring(0, i) + String.fromCharCode(97 + j) + s.substring(i + 1);\n        result = max(result, getMaxPartitions(modified, k));\n      }\n    }\n\n    // Check without any modification\n    result = max(result, getMaxPartitions(s, k));\n\n    return result;\n  }\n\n  int getMaxPartitions(String s, int k) {\n    int left = 0, partitions = 0, n = s.length;\n    while (left < n) {\n      int right = left;\n      Set<characters> = Set();\n      Map<charFreq> = {};\n      while (right < n && (characters.contains(s[right]) || characters.length < k)) {\n        characters.add(s[right]);\n        right++;\n      }\n      partitions++;\n      left = right;\n    }\n    return partitions;\n  }\n\n  int max(int a, int b) => a > b ? a : b;\n}"
}