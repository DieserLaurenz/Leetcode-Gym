{
    "status_code": 11,
    "lang": "python",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 11644000,
    "question_id": "3233",
    "elapsed_time": 11014,
    "compare_result": "0001111011011010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000001000000000000101000001111000000000000",
    "code_output": "5",
    "std_output": "",
    "last_testcase": "\"accca\"\n2",
    "expected_output": "3",
    "task_finish_time": 1708891513170,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 18,
    "total_testcases": 277,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python",
    "submission_id": "1186100719",
    "input_formatted": "\"accca\", 2",
    "input": "\"accca\"\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution(object):\n    def maxPartitionsAfterOperations(self, s, k):\n        def partitions(s, k):\n            count, unique, max_len = 0, 0, 0\n            char_count = [0] * 26\n            for i in range(len(s)):\n                if char_count[ord(s[i]) - ord('a')] == 0:\n                    unique += 1\n                char_count[ord(s[i]) - ord('a')] += 1\n                while unique > k:\n                    char_count[ord(s[max_len]) - ord('a')] -= 1\n                    if char_count[ord(s[max_len]) - ord('a')] == 0:\n                        unique -= 1\n                    max_len += 1\n                count = max(count, i - max_len + 1)\n            return count\n\n        max_partitions = 0\n        for i in range(len(s)):\n            for j in range(26):\n                new_s = s[:i] + chr(j + ord('a')) + s[i + 1:]\n                max_partitions = max(max_partitions, partitions(new_s, k))\n        return max_partitions\n\n# Since the solution is requested without explanation and additional main function,\n# the above code represents the implementation of the specified problem within the given constraints."
}