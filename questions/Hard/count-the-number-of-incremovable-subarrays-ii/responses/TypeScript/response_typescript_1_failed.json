{
    "status_code": 11,
    "lang": "typescript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 71520000,
    "question_id": "3248",
    "elapsed_time": 228,
    "compare_result
    "code_output": "10",
    "std_output": "",
    "last_testcase": "[6,5,7,8]",
    "expected_output": "7",
    "task_finish_time": 1708392987330,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 28,
    "total_testcases": 839,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "TypeScript",
    "submission_id": "1180447362",
    "input_formatted": "[6,5,7,8]",
    "input": "[6,5,7,8]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "function incremovableSubarrayCount(nums: number[]): number {\n    let total = 0;\n    const n = nums.length;\n    let dp = new Array(n).fill(0);\n    let stack: number[] = [];\n\n    for (let i = 0; i < n; ++i) {\n        while (stack.length > 0 && nums[stack[stack.length - 1]] >= nums[i]) {\n            stack.pop();\n        }\n        dp[i] = (stack.length > 0) ? (dp[stack[stack.length - 1]] + i - stack[stack.length - 1]) : i + 1;\n        total += dp[i];\n        stack.push(i);\n    }\n\n    return total;\n};"
}