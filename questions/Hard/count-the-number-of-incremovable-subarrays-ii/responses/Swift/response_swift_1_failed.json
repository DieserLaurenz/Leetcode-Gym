{
    "status_code": 11,
    "lang": "swift",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 19808000,
    "question_id": "3248",
    "elapsed_time": 496,
    "compare_result
    "code_output": "9",
    "std_output": "",
    "last_testcase": "[6,5,7,8]",
    "expected_output": "7",
    "task_finish_time": 1708393271818,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 29,
    "total_testcases": 839,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Swift",
    "submission_id": "1180450222",
    "input_formatted": "[6,5,7,8]",
    "input": "[6,5,7,8]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    func incremovableSubarrayCount(_ nums: [Int]) -> Int {\n        let n = nums.count\n        var dp = Array(repeating: 0, count: n + 1)\n        var total = 0\n        \n        for i in stride(from: n - 1, to: -1, by: -1) {\n            dp[i] = 1 + dp[i + 1]\n            if i + 1 < n && nums[i] >= nums[i + 1] {\n                dp[i] = min(dp[i], dp[i + 1])\n            }\n            total += dp[i]\n        }\n        \n        return total\n    }\n}"
}