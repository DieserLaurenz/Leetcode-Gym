{
    "status_code": 11,
    "lang": "racket",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 127400000,
    "question_id": "3248",
    "elapsed_time": 5016,
    "compare_result
    "code_output": "16",
    "std_output": "",
    "last_testcase": "[1,2,3,4]",
    "expected_output": "10",
    "task_finish_time": 1708403100807,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 11,
    "total_testcases": 839,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Racket",
    "submission_id": "1180562354",
    "input_formatted": "[1,2,3,4]",
    "input": "[1,2,3,4]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "(define/contract (incremovable-subarray-count nums)\n  (-> (listof exact-integer?) exact-integer?)\n\n  (define (incremovable-helper n)\n    (let ([dp (make-vector n 0)])\n      (let loop ([i 0] [max-len 0])\n        (when (< i n)\n          (vector-set! dp i 1)\n          (let loop-inner ([j 0])\n            (when (< j i)\n              (when (< (list-ref nums j) (list-ref nums i))\n                (vector-set! dp i (max (vector-ref dp i) (+ 1 (vector-ref dp j)))))\n              (loop-inner (+ j 1))))\n          (loop (+ i 1) (max max-len (vector-ref dp i)))))\n      dp))\n\n  (define n (length nums))\n  (define dp-lis (incremovable-helper n))\n  (define dp-lds (incremovable-helper n))\n  (define total 0)\n\n  (for ([i (in-range n)])\n    (set! total (+ total (- (+ (vector-ref dp-lis i) (vector-ref dp-lds i)) 1))))\n  total)"
}