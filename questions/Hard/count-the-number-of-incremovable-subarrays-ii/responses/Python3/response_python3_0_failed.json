{
    "status_code": 11,
    "lang": "python3",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 18136000,
    "question_id": "3248",
    "elapsed_time": 11010,
    "compare_result
    "code_output": "4",
    "std_output": "",
    "last_testcase": "[1,2,3,4]",
    "expected_output": "10",
    "task_finish_time": 1708871275047,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 10,
    "total_testcases": 839,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python3",
    "submission_id": "1185837255",
    "input_formatted": "[1,2,3,4]",
    "input": "[1,2,3,4]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "from typing import List\n\nclass Solution:\n    def incremovableSubarrayCount(self, nums: List[int]) -> int:\n        n = len(nums)\n        prefix = [0] * (n + 1)\n        suffix = [0] * (n + 1)\n        ans = 0\n\n        for i in range(1, n + 1):\n            prefix[i] = prefix[i - 1] + (nums[i - 1] < nums[i] if i < n else 0)\n        \n        for i in range(n - 1, -1, -1):\n            suffix[i] = suffix[i + 1] + (nums[i] < nums[i + 1] if i < n - 1 else 0)\n        \n        for i in range(n):\n            for j in range(i, n):\n                if prefix[i] == i and suffix[j + 1] == n - j - 1:\n                    ans += 1\n\n        return ans"
}