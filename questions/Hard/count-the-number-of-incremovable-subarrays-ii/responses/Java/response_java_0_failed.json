{
    "status_code": 11,
    "lang": "java",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 61292000,
    "display_runtime": "4",
    "question_id": "3248",
    "elapsed_time": 426,
    "compare_result
    "code_output": "16",
    "std_output": "",
    "last_testcase": "[1,2,3,4]",
    "expected_output": "10",
    "task_finish_time": 1708392448274,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 5,
    "total_testcases": 839,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Java",
    "submission_id": "1180442028",
    "input_formatted": "[1,2,3,4]",
    "input": "[1,2,3,4]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    public long incremovableSubarrayCount(int[] nums) {\n        int n = nums.length;\n        long count = 0;\n        int[] left = new int[n];\n        int[] right = new int[n];\n        \n        left[0] = 0;\n        for (int i = 1; i < n; i++) {\n            if (nums[i] > nums[i - 1]) {\n                left[i] = left[i - 1] + 1;\n            } else {\n                left[i] = 0;\n            }\n        }\n        \n        right[n - 1] = 0;\n        for (int i = n - 2; i >= 0; i--) {\n            if (nums[i] < nums[i + 1]) {\n                right[i] = right[i + 1] + 1;\n            } else {\n                right[i] = 0;\n            }\n        }\n        \n        for (int i = 0; i < n; i++) {\n            count += (long) (left[i] + 1) * (right[i] + 1) - 1;\n        }\n        \n        return count;\n    }\n}"
}