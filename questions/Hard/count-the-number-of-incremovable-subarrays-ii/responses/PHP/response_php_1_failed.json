{
    "status_code": 14,
    "lang": "php",
    "run_success": false,
    "status_runtime": "N/A",
    "memory": 20176000,
    "question_id": "3248",
    "elapsed_time": 5231,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "[35,35,35,35,35,35,35,35,35,35,35,36,36,36,36,36,36,36,36,36,36,36,36,36,37,37,37,37,37,37,37,37,37,37,37,37,38,38,38,38,38,38,38,38,38,39,39,39,39,39,39,39,40,40,40,40,40,40,40,40,41,41,41,41,41,41,41,41,41,41,42,42,42,42,42,42,42,42,42,43,43,43,43,43,43,43,43,43,43,43,43,43,44,44,44,44,44,44,44,44,44,45,45,45,45,45,45,45,45,45,46,46,46,46,46,46,46,46,46,46,46,46,47,47,47,47,47,47,47,48,48,48,48,48,48,48,48,48,48,48,49,49,49,49,49,50,50,50,50,50,5,18,8,43,23,12,19,25,12,12,24,1,24,43,3,18,20,42,28,18,16,28,26,13,31,9,13,42,1,29,18,46,37,38,6,6,37,20,50,47,10,37,12,29,15,48,36,47,30,20,42,11,42,5,34,34,25,41,43,9,34,16,32,37,30,39,16,30,37,12,3,42,46,6,40,13,7,3,45,14,25,28,13,26,39,28,2,33,24,44,28,7,4,24,6,35,5,37,5,15,3,26,40,7,24,22,5,8,21,42,13,24,21,34,21,14,37,14,35,43,49,10,35,14,12,13,44,46,3,14,28,1,12,40,14,20,26,50,29,2,28,11,20,17,4,21,45,19,36,25,26,21,49,33,22,40,1,43,50,50,9,32,10,36,32,9,6,47,4,21,16,27,34,42,27,33,29,47,13,5,37,23,4,42,49,22,43,30,42,29,41,36,1,16,5,49,16,1,15,43,334,644,647,1153,1322,1343,1512,1802,1983,2456,2697,2720,2815,2887,3105,3374,3570,3595,3730,3755,3971,4374,4589,4726,4729,4862,5042,5217,5232,5258,5288,5825,5938,5992,6106,6418,6438,6721,6950,7076,7220,7368,7404,7436,7535,7738,7941,8314,8431,8444,9472,9556,9694,9701,9714,9726,9922,9961,10087,10107,10175,10203,10319,10341,10509,10548,10643,10664,10721,10742,10796,10922,10950,10969,11058,11098,11324,11410,11543,11596,11646,11777,11860,11940,12207,12243,12306,12444,12595,12628,12687,12836,12859,12923,13196,13251,13445,13704,13902,13974,14158,14255,14380,14483,14573,14697,14750,14826,14864,14950,15008,15022,15070,15119,15357,15561,15644,15671,15706,15738,15740,15883,15916,16330,16491,16493,16621,16653,17051,17100,17292,17706,17712,17734,18096,18236,18565,18856,18922,18987,18995,19236,19249,19370,19421,19435,19592,19742,19814,19959,4978,4611,4956,1154,1971,2234,3980,4759,3744,2314,2878,1970,3985,4275,2712,2318,4817,2483,1420,4803,3444,4415,1856,1604,4973,4970,2776,4866,2335,3153,4048,4097,2484,2448,4270,2256,4555,1259,4336,1165,3573,1112,2179,4921,3672,3989,4827,3443,2908,1661,1916,4731,3472,1015,3172,1638,1355,2384,2837,1248,1689,2437,3230,1259,3092,4296,3304,4976,2917,2318,1481,3404,2812,1759,1366,3206,4659,3803,2078,2322,1851,2954,1926,2123,3192,4106,1356,2788,3933,2986,3897,5000,3245,1266,3281,3922,4839,2988,1411,4236,3053,3941,1218,4450,3247,3032,3745,3445,2768,2480,4681,2692,1241,3364,1174,4394,2401,3588,2034,2125,3172,1961,2846,4237,3576,2251,1662,4377,3553,3341,3718,1685,1771,4343,1033,3532,3052,4147,4440,1631,4637,1109,3083,4108,3381,2775,1470,2011,4182,2805,2341,2832,1104,1781,4171,1944,1312,1616,3388,1826,1936,2367,1159,1481,3858,1255,3485,4495,4724,4721,2177,4820,4441,2797,4996,4970,2006,2356,2932,4145,3301,2960,4326,4018,4189,3467,4283,4057,3843,2700,3938,4091,3314,2607,3824,3357,4126,2494,3114,2262,3638,3015,4718,3825,2051,2498,1673,4510,3252,1865,4735,2576,2746,4061,3939,2068,1809,4715,1337,4161,4664,4504,1088,1097,3425,3593,1993,2031,2995,1369,1789,4934,3010,2577,4483,2430,2168,1853,1470,2949,3715,3046,1780,3390,2194,3352,2838,3342,2056,2956,1640,1935,1239,1278,1068,4241,3943,1260,3145,3878,3558,3751,3769,4453,1835,3834,3811,2918,4197,1744,4172,2734,4567,3396,3904,2132,4760,1314,4531,1799,4069,2830,2781,4990,2382,4194,3404,4742,3268,2876,1825,1998,4046,1150,3797,4617,1805,3418,1593,1936,1534,3694,4524,4255,1432,2562,1387,1708,4544,4225,2801,2630,1413,1154,1045,3218,3247,3243,1837,1823,4508,2372,2828,1888,3914,2813,1566,3349,1124,4338,1727,2927,3119,2338,2122,4384,3286,3293,1093,3777,4802,2413,1386,1094,4373,4428,1047,2005,2077,2434,2522,4922,2476,1766,1925,1034,4081,1902,2066,3553,4272,3448,2790,4552,1291,2278,1201,3937,4447,2781,3794,4422,2571,4466,4594,1698,3621,4586,3174,4007,2776,2146,4324,1776,2230,1405,4029,4786,1523,2615,3486,2188,3868,3582,1421,2364,3145,2412,2561,4226,4710,1074,1517,4246,2374,3278,1564,4992,3121,2543,3296,1607,2455,1000,1947,3449,2728,1231,1696,4152,1267,4899,1870,1051,1473,4829,2458,3774,1514,3432,1462,4029,1130,3842,3812,1675,4595,2204,2067,4276,4924,1737,4799,3185,1908,2415,2223,2870,3065,2888,2805,4341,1173,1225,4958,2173,1699,1672,4190,2081,3727,3263,1578,3237,3397,3879,3159,4914,4724,3514,2708,1093,2511,1431,3610,2839,1563,1356,1534,3667,3992,3603,2233,3506,3638,3976,3278,3636,2619,2977,2668,1514,1854,4869,1664,4871,2803,4485,1790,2661]",
    "expected_output": "6",
    "task_finish_time": 1708393146992,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 784,
    "total_testcases": 839,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "PHP",
    "submission_id": "1180448923",
    "status_msg": "Time Limit Exceeded",
    "state": "SUCCESS",
    "code": "class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @return Integer\n     */\n    function incremovableSubarrayCount($nums) {\n        $n = count($nums);\n        $incremovableCount = 0;\n\n        // Check every subarray\n        for ($i = 0; $i < $n; $i++) {\n            for ($j = $i; $j < $n; $j++) {\n                $remove = array_slice($nums, $i, $j - $i + 1);\n                $remaining = array_merge(array_slice($nums, 0, $i), array_slice($nums, $j + 1));\n                if ($this->isStrictlyIncreasing($remaining)) {\n                    $incremovableCount++;\n                }\n            }\n        }\n\n        return $incremovableCount;\n    }\n\n    private function isStrictlyIncreasing($arr) {\n        for ($i = 1; $i < count($arr); $i++) {\n            if ($arr[$i] <= $arr[$i - 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n}"
}