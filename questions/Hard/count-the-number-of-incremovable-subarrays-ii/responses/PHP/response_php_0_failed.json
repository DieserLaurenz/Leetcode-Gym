{
    "status_code": 11,
    "lang": "php",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 29100000,
    "question_id": "3248",
    "elapsed_time": 556,
    "compare_result
    "code_output": "10",
    "std_output": "",
    "last_testcase": "[6,5,7,8]",
    "expected_output": "7",
    "task_finish_time": 1708393107978,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 28,
    "total_testcases": 839,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "PHP",
    "submission_id": "1180448550",
    "input_formatted": "[6,5,7,8]",
    "input": "[6,5,7,8]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @return Integer\n     */\n    function incremovableSubarrayCount($nums) {\n        $n = count($nums);\n        $left = array_fill(0, $n, 0);\n        $right = array_fill(0, $n, 0);\n        $stack = [];\n        \n        for ($i = 0; $i < $n; ++$i) {\n            while (!empty($stack) && $nums[$stack[count($stack) - 1]] >= $nums[$i]) {\n                array_pop($stack);\n            }\n            $left[$i] = empty($stack) ? -1 : $stack[count($stack) - 1];\n            $stack[] = $i;\n        }\n\n        $stack = [];\n        for ($i = $n - 1; $i >= 0; --$i) {\n            while (!empty($stack) && $nums[$stack[count($stack) - 1]] > $nums[$i]) {\n                array_pop($stack);\n            }\n            $right[$i] = empty($stack) ? $n : $stack[count($stack) - 1];\n            $stack[] = $i;\n        }\n\n        $result = 0;\n        for ($i = 0; $i < $n; ++$i) {\n            $result += ($i - $left[$i]) * ($right[$i] - $i);\n        }\n\n        return $result;\n    }\n}"
}