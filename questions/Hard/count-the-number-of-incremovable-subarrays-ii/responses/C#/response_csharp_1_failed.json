{
    "status_code": 11,
    "lang": "csharp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 63700000,
    "question_id": "3248",
    "elapsed_time": 464,
    "compare_result
    "code_output": "6",
    "std_output": "",
    "last_testcase": "[1,2,3,4]",
    "expected_output": "10",
    "task_finish_time": 1708392721481,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 1,
    "total_testcases": 839,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C#",
    "submission_id": "1180444746",
    "input_formatted": "[1,2,3,4]",
    "input": "[1,2,3,4]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "public class Solution {\n    public long IncremovableSubarrayCount(int[] nums) {\n        int n = nums.Length;\n        long ans = 0;\n        int[] left = new int[n];\n        int[] right = new int[n];\n\n        for (int i = 0; i < n; ++i) {\n            left[i] = i > 0 && nums[i - 1] >= nums[i] ? left[i - 1] : i;\n        }\n        for (int i = n - 1; i >= 0; --i) {\n            right[i] = i < n - 1 && nums[i] <= nums[i + 1] ? right[i + 1] : i;\n        }\n        for (int i = 0; i < n; ++i) {\n            ans += (long)(i - left[i] + 1) * (right[i] - i + 1) - 1;\n        }\n        return ans;\n    }\n}"
}