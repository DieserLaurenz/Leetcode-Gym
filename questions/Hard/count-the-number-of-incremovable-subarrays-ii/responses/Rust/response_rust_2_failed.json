{
    "status_code": 11,
    "lang": "rust",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 2560000,
    "question_id": "3248",
    "elapsed_time": 2068,
    "compare_result
    "code_output": "0",
    "std_output": "",
    "last_testcase": "[1,2,3,4]",
    "expected_output": "10",
    "task_finish_time": 1708402966648,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 839,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Rust",
    "submission_id": "1180560648",
    "input_formatted": "[1,2,3,4]",
    "input": "[1,2,3,4]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "impl Solution {\n    pub fn incremovable_subarray_count(nums: Vec<i32>) -> i64 {\n        let n = nums.len() as i64;\n        let mut lis = vec![1; n as usize];\n        let mut lds = vec![1; n as usize];\n\n        for i in 1..n as usize {\n            for j in 0..i {\n                if nums[i] > nums[j] {\n                    lis[i] = lis[i].max(lis[j] + 1);\n                }\n            }\n        }\n\n        for i in (0..n as usize).rev() {\n            for j in (i + 1)..n as usize {\n                if nums[i] > nums[j] {\n                    lds[i] = lds[i].max(lds[j] + 1);\n                }\n            }\n        }\n\n        let mut result = 0;\n        for i in 0..n as usize {\n            result += ((lis[i] + lds[i] - 1) as i64).min(n);\n        }\n\n        result - n * (n + 1) / 2\n    }\n}"
}