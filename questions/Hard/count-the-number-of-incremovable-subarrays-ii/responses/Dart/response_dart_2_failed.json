{
    "status_code": 15,
    "lang": "dart",
    "run_success": false,
    "runtime_error": "Line 9: Unsupported operation: Infinity or NaN toInt",
    "full_runtime_error": "Line 9: Unsupported operation: Infinity or NaN toInt\n#0      double.toInt (dart:core-patch/double.dart)\n#1      Solution.incremovableSubarrayCount.isIncremovable (file:///solution.dart:9:63)\n#2      Solution.incremovableSubarrayCount (file:///solution.dart:15:13)\n#3      main (file:///solution.dart:48:30)\n<asynchronous suspension>",
    "status_runtime": "N/A",
    "memory": 148436000,
    "question_id": "3248",
    "elapsed_time": 409,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "[1,2,3,4]",
    "expected_output": "10",
    "task_finish_time": 1708393572402,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 839,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Dart",
    "submission_id": "1180453180",
    "status_msg": "Runtime Error",
    "state": "SUCCESS",
    "code": "class Solution {\n  int incremovableSubarrayCount(List<int> nums) {\n    final int n = nums.length;\n    int count = 0;\n\n    // Function to check if removing subarray from i to j makes the array strictly increasing\n    bool isIncremovable(int i, int j) {\n      int left = (i > 0) ? nums[i - 1] : 0;\n      int right = (j < n - 1) ? nums[j + 1] : double.infinity.toInt();\n      return i == 0 || j == n - 1 || left < right;\n    }\n\n    for (int i = 0; i < n; ++i) {\n      for (int j = i; j < n; ++j) {\n        if (isIncremovable(i, j)) {\n          ++count;\n        }\n      }\n    }\n\n    return count;\n  }\n}"
}