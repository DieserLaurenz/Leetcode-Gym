{
    "status_code": 11,
    "lang": "ruby",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 234892000,
    "question_id": "3248",
    "elapsed_time": 374,
    "compare_result": "11011111111111001001111100001100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111111110000000000000000000000000000000000000000000000000000000000000000000110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000",
    "code_output": "4",
    "std_output": "",
    "last_testcase": "[8,7,6,6]",
    "expected_output": "3",
    "task_finish_time": 1708402553327,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 32,
    "total_testcases": 839,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Ruby",
    "submission_id": "1180555148",
    "input_formatted": "[8,7,6,6]",
    "input": "[8,7,6,6]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "# @param {Integer[]} nums\n# @return {Integer}\ndef incremovable_subarray_count(nums)\n  n = nums.size\n  dp = Array.new(n, 0)\n  max_len = Array.new(n, 0)\n  stack = []\n  total = 0\n\n  nums.each_with_index do |num, i|\n    dp[i] = 1\n    dp[i] = dp[stack.last] + 1 if stack.any? && nums[stack.last] < num\n    while stack.any? && nums[stack.last] <= num\n      stack.pop\n    end\n    stack.push(i)\n    max_len[i] = dp[i]\n    total += max_len[i]\n  end\n\n  total\nend"
}