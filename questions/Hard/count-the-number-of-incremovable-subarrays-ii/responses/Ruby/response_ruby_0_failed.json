{
    "status_code": 14,
    "lang": "ruby",
    "run_success": false,
    "status_runtime": "N/A",
    "memory": 211460000,
    "question_id": "3248",
    "elapsed_time": 3198,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "[1,2,3,4]",
    "expected_output": "10",
    "task_finish_time": 1708402527421,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 839,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Ruby",
    "submission_id": "1180554732",
    "status_msg": "Time Limit Exceeded",
    "state": "SUCCESS",
    "code": "# @param {Integer[]} nums\n# @return {Integer}\ndef incremovable_subarray_count(nums)\n  n = nums.size\n  left = Array.new(n, 0)\n  right = Array.new(n, 0)\n  stack = []\n\n  (0...n).each do |i|\n    left[i] = i - 1 while !stack.empty? && nums[stack.last] < nums[i]\n    stack.push(i)\n  end\n\n  stack.clear\n\n  (n - 1).downto(0) do |i|\n    right[i] = i + 1 while !stack.empty? && nums[stack.last] <= nums[i]\n    stack.push(i)\n  end\n\n  count = 0\n  (0...n).each do |i|\n    count += (i - left[i]) * (right[i] - i)\n  end\n\n  count\nend"
}