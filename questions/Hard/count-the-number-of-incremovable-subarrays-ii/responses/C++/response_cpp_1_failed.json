{
    "status_code": 11,
    "lang": "cpp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 101548000,
    "question_id": "3248",
    "elapsed_time": 161,
    "compare_result
    "code_output": "13",
    "std_output": "",
    "last_testcase": "[1,2,3,4]",
    "expected_output": "10",
    "task_finish_time": 1708392347504,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 11,
    "total_testcases": 839,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C++",
    "submission_id": "1180441069",
    "input_formatted": "[1,2,3,4]",
    "input": "[1,2,3,4]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "#include <vector>\n#include <algorithm>\n\nclass Solution {\npublic:\n    long long incremovableSubarrayCount(std::vector<int>& nums) {\n        int n = nums.size();\n        std::vector<int> dp(n, 1);\n        long long result = 0;\n\n        for (int i = 1; i < n; ++i) {\n            if (nums[i] > nums[i - 1]) {\n                dp[i] = dp[i - 1] + 1;\n            }\n            result += dp[i];\n        }\n\n        // Add the single-element subarrays\n        result += n;\n\n        // Process for decreasing sequences\n        for (int i = 0; i < n; ++i) {\n            int j = i;\n            while (j < n - 1 && nums[j] > nums[j + 1]) {\n                ++j;\n            }\n            if (j != i) {\n                result += (j - i) * (j - i + 1) / 2;\n                i = j;\n            }\n        }\n\n        return result;\n    }\n};"
}