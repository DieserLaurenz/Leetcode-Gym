{
    "status_code": 11,
    "lang": "scala",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 76156000,
    "question_id": "3248",
    "elapsed_time": 878,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "[8,7,6,6]",
    "expected_output": "3",
    "task_finish_time": 1708402716222,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 46,
    "total_testcases": 839,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Scala",
    "submission_id": "1180557343",
    "input_formatted": "[8,7,6,6]",
    "input": "[8,7,6,6]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "object Solution {\n    def incremovableSubarrayCount(nums: Array[Int]): Long = {\n        val n = nums.length\n        val dp = new Array[Long](n + 2)\n        var total = 0L\n        \n        dp(n) = 1\n        dp(n + 1) = 0\n        \n        for (i <- n - 1 to 0 by -1) {\n            dp(i) = 1 + dp(i + 1)\n            if (i + 1 < n && nums(i) >= nums(i + 1))\n                dp(i) = dp(i) - dp(i + 2)\n            total += dp(i)\n        }\n        \n        total - n // Subtract n to exclude the single-element subarrays\n    }\n}"
}