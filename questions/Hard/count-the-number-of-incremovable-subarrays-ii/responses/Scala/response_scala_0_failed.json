{
    "status_code": 15,
    "lang": "scala",
    "run_success": false,
    "runtime_error": "Line 17: java.lang.ArrayIndexOutOfBoundsException: 4 (at $anonfun$incremovableSubarrayCount$3)",
    "full_runtime_error": "java.lang.ArrayIndexOutOfBoundsException: 4\nLine 17: Solution$.$anonfun$incremovableSubarrayCount$3 (solution.scala)\nLine 190: scala.collection.immutable.Range.foreach$mVc$sp (Range.scala)\nLine 15: Solution$.$anonfun$incremovableSubarrayCount$2 (solution.scala)\nLine 190: scala.collection.immutable.Range.foreach$mVc$sp (Range.scala)\nLine 14: Solution$.incremovableSubarrayCount (solution.scala)\nLine 29: Main$.__helper__ (solution.scala)\nLine 43: Main$.main (solution.scala)\nMain.main (prog_joined.scala)\nsun.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)\nLine 62: sun.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java)\nLine 43: sun.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java)\nLine 498: java.lang.reflect.Method.invoke (Method.java)\nLine 101: scala.reflect.internal.util.RichClassLoader$.$anonfun$run$extension$1 (ScalaClassLoader.scala)\nLine 36: scala.reflect.internal.util.RichClassLoader$.run$extension (ScalaClassLoader.scala)\nLine 30: scala.tools.nsc.CommonRunner.run (ObjectRunner.scala)\nLine 28: scala.tools.nsc.CommonRunner.run$ (ObjectRunner.scala)\nLine 45: scala.tools.nsc.ObjectRunner$.run (ObjectRunner.scala)\nLine 37: scala.tools.nsc.CommonRunner.runAndCatch (ObjectRunner.scala)\nLine 36: scala.tools.nsc.CommonRunner.runAndCatch$ (ObjectRunner.scala)\nLine 70: scala.tools.nsc.MainGenericRunner.runTarget$1 (MainGenericRunner.scala)\nLine 91: scala.tools.nsc.MainGenericRunner.run$1 (MainGenericRunner.scala)\nLine 103: scala.tools.nsc.MainGenericRunner.process (MainGenericRunner.scala)\nLine 108: scala.tools.nsc.MainGenericRunner$.main (MainGenericRunner.scala)\nscala.tools.nsc.MainGenericRunner.main (MainGenericRunner.scala)",
    "status_runtime": "N/A",
    "memory": 54924000,
    "question_id": "3248",
    "elapsed_time": 620,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "[1,2,3,4]",
    "expected_output": "10",
    "task_finish_time": 1708402650465,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 839,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Scala",
    "submission_id": "1180556468",
    "status_msg": "Runtime Error",
    "state": "SUCCESS",
    "code": "object Solution {\n    def incremovableSubarrayCount(nums: Array[Int]): Long = {\n        val n = nums.length\n        var totalIncremovable = 0L\n\n        // Helper function to check if a subarray is strictly increasing\n        def isStrictlyIncreasing(start: Int, end: Int): Boolean = {\n            for (i <- start until end) {\n                if (nums(i) >= nums(i + 1)) return false\n            }\n            true\n        }\n\n        for (i <- 0 until n) {\n            for (j <- i until n) {\n                // Check if removing the subarray [i, j] makes the entire array strictly increasing\n                if ((i == 0 || nums(i - 1) < nums(j + 1)) && (j == n - 1 || isStrictlyIncreasing(j + 1, n - 1))) {\n                    totalIncremovable += 1\n                }\n            }\n        }\n\n        totalIncremovable\n    }\n}"
}