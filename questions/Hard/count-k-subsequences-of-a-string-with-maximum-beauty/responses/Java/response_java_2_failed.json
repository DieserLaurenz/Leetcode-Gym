{
    "status_code": 11,
    "lang": "java",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 46040000,
    "display_runtime": "9",
    "question_id": "3057",
    "elapsed_time": 195,
    "compare_result
    "code_output": "0",
    "std_output": "",
    "last_testcase": "\"bcca\"\n2",
    "expected_output": "4",
    "task_finish_time": 1708308855157,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 111,
    "total_testcases": 611,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Java",
    "submission_id": "1179363896",
    "input_formatted": "\"bcca\", 2",
    "input": "\"bcca\"\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    public int countKSubsequencesWithMaxBeauty(String s, int k) {\n        final int MOD = 1000000007;\n        int[] freq = new int[26];\n        for (char c : s.toCharArray()) {\n            freq[c - 'a']++;\n        }\n        \n        long[][] dp = new long[k + 1][27];\n        dp[0][26] = 1; // Base case: 0 characters chosen\n        \n        for (int i = 0; i < 26; i++) {\n            for (int j = k; j >= 1; j--) {\n                for (int l = 26; l >= 1; l--) {\n                    if (freq[i] >= l) {\n                        dp[j][l] = (dp[j][l] + dp[j - 1][l - 1] * freq[i]) % MOD;\n                    }\n                }\n            }\n        }\n        \n        long result = 0;\n        for (int i = 1; i <= 26; i++) {\n            result = (result + dp[k][i]) % MOD;\n        }\n        \n        return (int) result;\n    }\n}"
}