{
    "status_code": 11,
    "lang": "javascript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 54344000,
    "question_id": "3057",
    "elapsed_time": 231,
    "compare_result
    "code_output": "3",
    "std_output": "",
    "last_testcase": "\"bcca\"\n2",
    "expected_output": "4",
    "task_finish_time": 1708309217354,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 86,
    "total_testcases": 611,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "JavaScript",
    "submission_id": "1179367547",
    "input_formatted": "\"bcca\", 2",
    "input": "\"bcca\"\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "/**\n * @param {string} s\n * @param {number} k\n * @return {number}\n */\nvar countKSubsequencesWithMaxBeauty = function(s, k) {\n    const mod = 10**9 + 7;\n    const freq = new Array(26).fill(0);\n    for (let i = 0; i < s.length; i++) {\n        freq[s.charCodeAt(i) - 'a'.charCodeAt(0)]++;\n    }\n\n    freq.sort((a, b) => b - a);\n    let maxBeauty = freq.slice(0, k).reduce((a, b) => a + b, 0);\n    let ways = 1;\n\n    for (let i = 0; i < k; i++) {\n        let count = 0;\n        for (let j = 0; j < s.length; j++) {\n            if (freq[i] === freq[s.charCodeAt(j) - 'a'.charCodeAt(0)]) count++;\n        }\n        ways = (ways * count) % mod;\n    }\n\n    return ways;\n};"
}