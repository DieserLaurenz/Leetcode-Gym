{
    "status_code": 11,
    "lang": "golang",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 6344000,
    "question_id": "3057",
    "elapsed_time": 57,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "\"bcca\"\n2",
    "expected_output": "4",
    "task_finish_time": 1708318602740,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 161,
    "total_testcases": 611,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Go",
    "submission_id": "1179480087",
    "input_formatted": "\"bcca\", 2",
    "input": "\"bcca\"\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "func countKSubsequencesWithMaxBeauty(s string, k int) int {\n const MOD int = 1e9 + 7\n freq := make(map[rune]int)\n for _, c := range s {\n  freq[c]++\n }\n\n type pair struct {\n  freq, count int\n }\n freqs := make([]pair, 0)\n for _, v := range freq {\n  freqs = append(freqs, pair{v, 0})\n }\n\n for i := range freqs {\n  freqs[i].count = 1\n  for j := freqs[i].freq - 1; j > freqs[i].freq-k; j-- {\n   freqs[i].count = (freqs[i].count * j) % MOD\n  }\n }\n\n maxBeauty, ways := 0, 0\n for _, sub := range freqs {\n  if sub.freq >= k {\n   maxBeauty = max(maxBeauty, sub.freq)\n  }\n }\n\n for _, sub := range freqs {\n  if sub.freq == maxBeauty {\n   ways = (ways + sub.count) % MOD\n  }\n }\n\n return ways\n}\n\nfunc max(a, b int) int {\n if a > b {\n  return a\n }\n return b\n}"
}