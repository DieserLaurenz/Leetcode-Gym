{
    "status_code": 11,
    "lang": "golang",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 6780000,
    "question_id": "3057",
    "elapsed_time": 47,
    "compare_result": "00001000101100110000111001010000000110100101000010000011000010000000000100100000011100001000010110000000000101000101000100000000100000000000010000001100010000000100000110001000000000000000001000000001100000000001000000000000000000000000010001000000000000000000000000000100110010000000100000000000010000100001000000000100101111101010010000011110000000000000000000101000001010010001111000000000000000000101000001000100100110011011100001100011001100110100000000100000000000101100000000010001110111000000001000100011011100000110101001001110100011001000100000111111111111111111111111110000000010000000000100000011000",
    "code_output": "1",
    "std_output": "",
    "last_testcase": "\"bcca\"\n2",
    "expected_output": "4",
    "task_finish_time": 1708318636749,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 162,
    "total_testcases": 611,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Go",
    "submission_id": "1179480599",
    "input_formatted": "\"bcca\", 2",
    "input": "\"bcca\"\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "package main\n\nimport (\n \"math/big\"\n)\n\nfunc countKSubsequencesWithMaxBeauty(s string, k int) int {\n const MOD = 1000000007\n freq := make(map[rune]int)\n for _, c := range s {\n  freq[c]++\n }\n\n values := make([]int, 0, len(freq))\n for _, v := range freq {\n  values = append(values, v)\n }\n\n maxBeauty := 0\n for _, v := range values {\n  maxBeauty += v\n }\n\n comb := func(n, r int) int {\n  if r > n {\n   return 0\n  }\n  C := big.NewInt(1)\n  for i := 0; i < r; i++ {\n   C.Mul(C, big.NewInt(int64(n-i)))\n   C.Div(C, big.NewInt(int64(i+1)))\n  }\n  C.Mod(C, big.NewInt(MOD))\n  return int(C.Int64())\n }\n\n ans := 0\n for _, v := range values {\n  if v >= k {\n   ans += comb(v, k)\n   ans %= MOD\n  }\n }\n\n return ans\n}"
}