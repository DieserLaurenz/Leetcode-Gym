{
    "status_code": 15,
    "lang": "dart",
    "run_success": false,
    "runtime_error": "Line 4: Char 15: Error: 'char' isn't a type.",
    "full_runtime_error": "Line 4: Char 15: Error: 'char' isn't a type.\n    final Map<char, int> freq = {};\n              ^^^^\nLine 4: Char 33: Error: A value of type 'Map<dynamic, dynamic>' can't be assigned to a variable of type 'Map<invalid-type, int>'.\n - 'Map' is from 'dart:core'.\n    final Map<char, int> freq = {};\n                                ^",
    "status_runtime": "N/A",
    "memory": 146376000,
    "question_id": "3057",
    "elapsed_time": 376,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "\"bcca\"\n2",
    "expected_output": "4",
    "task_finish_time": 1708318462693,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 611,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Dart",
    "submission_id": "1179477981",
    "status_msg": "Runtime Error",
    "state": "SUCCESS",
    "code": "class Solution {\n  int countKSubsequencesWithMaxBeauty(String s, int k) {\n    const int mod = 1000000007;\n    final Map<char, int> freq = {};\n    for (final char in s.split('')) {\n      freq[char] = (freq[char] ?? 0) + 1;\n    }\n    final List<int> values = freq.values.toList()..sort((a, b) => b.compareTo(a));\n    if (k > values.length) return 0;\n    int maxBeauty = values.sublist(0, k).reduce((a, b) => a + b);\n    final List<int> comb = List.filled(k + 1, 0);\n    comb[0] = 1;\n    int count = 1;\n    for (int i = 0; i < k; ++i) {\n      comb[i + 1] = (comb[i] * (values[i] - i)) % mod;\n      count = (count * comb[i + 1]) % mod;\n    }\n    return count;\n  }\n}"
}