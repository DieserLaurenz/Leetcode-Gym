{
    "status_code": 11,
    "lang": "php",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 30072000,
    "question_id": "3057",
    "elapsed_time": 213,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "\"bcca\"\n2",
    "expected_output": "4",
    "task_finish_time": 1708318026486,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 267,
    "total_testcases": 611,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "PHP",
    "submission_id": "1179471330",
    "input_formatted": "\"bcca\", 2",
    "input": "\"bcca\"\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n\n    /**\n     * @param String $s\n     * @param Integer $k\n     * @return Integer\n     */\n    function countKSubsequencesWithMaxBeauty($s, $k) {\n        $mod = 1000000007;\n        $freq = array_count_values(str_split($s));\n        arsort($freq);\n        $freq = array_values($freq);\n\n        if ($k == 1) {\n            return count($freq) % $mod;\n        }\n\n        $comb = function($n, $k) use ($mod) {\n            $result = 1;\n            for ($i = 0; $i < $k; $i++) {\n                $result = ($result * ($n - $i)) % $mod;\n                $result = ($result / ($i + 1)) % $mod;\n            }\n            return $result;\n        };\n\n        $maxBeauty = 0;\n        for ($i = 0; $i < $k; $i++) {\n            $maxBeauty += $freq[$i];\n        }\n\n        $countMaxBeauty = 0;\n        foreach ($freq as $f) {\n            if ($f == $freq[$k - 1]) {\n                $countMaxBeauty++;\n            }\n        }\n\n        return ($comb($countMaxBeauty, $k) % $mod);\n    }\n}"
}