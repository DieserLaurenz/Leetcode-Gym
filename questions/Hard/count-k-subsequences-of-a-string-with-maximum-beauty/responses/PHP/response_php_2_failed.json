{
    "status_code": 11,
    "lang": "php",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 29792000,
    "question_id": "3057",
    "elapsed_time": 130,
    "compare_result
    "code_output": "0",
    "std_output": "",
    "last_testcase": "\"bcca\"\n2",
    "expected_output": "4",
    "task_finish_time": 1708318097418,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 164,
    "total_testcases": 611,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "PHP",
    "submission_id": "1179472401",
    "input_formatted": "\"bcca\", 2",
    "input": "\"bcca\"\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n\n    /**\n     * @param String $s\n     * @param Integer $k\n     * @return Integer\n     */\n    function countKSubsequencesWithMaxBeauty($s, $k) {\n        $mod = 1000000007;\n        $freq = array_count_values(str_split($s));\n        arsort($freq);\n        $freqValues = array_values($freq);\n\n        $dp = array_fill(0, $k + 1, 0);\n        $dp[0] = 1;\n\n        foreach ($freq as $count) {\n            for ($i = min($k, $count); $i >= 1; $i--) {\n                $dp[$i] = ($dp[$i] + $dp[$i - 1]) % $mod;\n            }\n        }\n\n        return $dp[$k];\n    }\n}"
}