{
    "status_code": 11,
    "lang": "ruby",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 216204000,
    "question_id": "3057",
    "elapsed_time": 3270,
    "compare_result
    "code_output": "2",
    "std_output": "",
    "last_testcase": "\"bcca\"\n2",
    "expected_output": "4",
    "task_finish_time": 1708318755684,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 262,
    "total_testcases": 611,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Ruby",
    "submission_id": "1179482326",
    "input_formatted": "\"bcca\", 2",
    "input": "\"bcca\"\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "# @param {String} s\n# @param {Integer} k\n# @return {Integer}\ndef count_k_subsequences_with_max_beauty(s, k)\n    mod = 10**9 + 7\n    count = Hash.new(0)\n    s.each_char { |c| count[c] += 1 }\n    freqs = count.values.sort.reverse\n    return freqs.combination(k).count { |combo| combo.sum == freqs[0...k].sum } % mod if k <= freqs.size\n    \n    # When k is greater than the number of unique characters, no valid k-subsequence exists\n    0\nend"
}