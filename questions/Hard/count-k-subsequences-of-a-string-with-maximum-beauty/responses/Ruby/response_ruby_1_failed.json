{
    "status_code": 11,
    "lang": "ruby",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 215636000,
    "question_id": "3057",
    "elapsed_time": 464,
    "compare_result
    "code_output": "0",
    "std_output": "",
    "last_testcase": "\"bcca\"\n2",
    "expected_output": "4",
    "task_finish_time": 1708318787885,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 164,
    "total_testcases": 611,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Ruby",
    "submission_id": "1179482880",
    "input_formatted": "\"bcca\", 2",
    "input": "\"bcca\"\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "# @param {String} s\n# @param {Integer} k\n# @return {Integer}\ndef count_k_subsequences_with_max_beauty(s, k)\n    return 0 if k <= 0 || s.empty?\n    mod = 10**9 + 7\n    freq = Hash.new(0)\n    s.each_char { |c| freq[c] += 1 }\n    max_beauty = freq.values.sort.reverse[0...k].sum\n    freq = freq.values.select { |f| f >= max_beauty/k }.sort.reverse\n    n = freq.length\n    dp = Array.new(n+1) { Array.new(k+1, 0) }\n    dp[0][0] = 1\n    1.upto(n) do |i|\n        0.upto(k) do |j|\n            dp[i][j] = dp[i-1][j]\n            dp[i][j] += dp[i-1][j-1] if j > 0 && freq[i-1] >= j\n            dp[i][j] %= mod\n        end\n    end\n    dp[n][k]\nend"
}