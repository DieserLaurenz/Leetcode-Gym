{
    "status_code": 11,
    "lang": "csharp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 118392000,
    "question_id": "3208",
    "elapsed_time": 4014,
    "compare_result
    "code_output": "11",
    "std_output": "",
    "last_testcase": "\"baeyh\"\n2",
    "expected_output": "2",
    "task_finish_time": 1708287663435,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 29,
    "total_testcases": 684,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C#",
    "submission_id": "1179180707",
    "input_formatted": "\"baeyh\", 2",
    "input": "\"baeyh\"\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "public class Solution {\n    public long BeautifulSubstrings(string s, int k) {\n        long count = 0;\n        for (int len = 2; len <= s.Length; len += 2) {\n            int vowels = 0, consonants = 0, balance = 0;\n            var freq = new int[2 * k];\n            freq[k] = 1;\n            \n            for (int i = 0; i < s.Length; i++) {\n                if (IsVowel(s[i])) vowels++;\n                else consonants++;\n                \n                balance = (vowels - consonants) % k;\n                if (balance < 0) balance += k;\n                \n                if (i >= len) {\n                    if (IsVowel(s[i - len])) vowels--;\n                    else consonants--;\n                }\n                \n                if (i >= len - 1) {\n                    count += freq[balance + k];\n                }\n                \n                freq[balance + k]++;\n            }\n        }\n        return count;\n    }\n\n    private bool IsVowel(char c) {\n        return \"aeiou\".Contains(c);\n    }\n}"
}