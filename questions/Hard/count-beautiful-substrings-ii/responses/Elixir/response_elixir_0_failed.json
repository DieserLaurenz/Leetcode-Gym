{
    "status_code": 15,
    "lang": "elixir",
    "run_success": false,
    "runtime_error": "Line 6: ** (FunctionClauseError) no function clause matching in anonymous fn/2 in Solution.beautiful_substrings/2",
    "full_runtime_error": "Line 6: ** (FunctionClauseError) no function clause matching in anonymous fn/2 in Solution.beautiful_substrings/2\n    The following arguments were given to anonymous fn/2 in Solution.beautiful_substrings/2:\n        # 1\n        \"a\"\n        # 2\n        0\n    solution.ex:6: anonymous fn/2 in Solution.beautiful_substrings/2\n    (elixir 1.15.7) lib/enum.ex:2510: Enum.\"-reduce/3-lists^foldl/2-0-\"/3\n    solution.ex:6: Solution.beautiful_substrings/2\n    solution.ex:42: Driver.consume_test_cases/2\n    solution.ex:28: Driver.start/0\n    nofile:1: (file)\n    (stdlib 5.1.1) erl_eval.erl:750: :erl_eval.do_apply/7",
    "status_runtime": "N/A",
    "memory": 73996000,
    "question_id": "3208",
    "elapsed_time": 466,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "\"baeyh\"\n2",
    "expected_output": "2",
    "task_finish_time": 1708297784460,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 684,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Elixir",
    "submission_id": "1179266436",
    "status_msg": "Runtime Error",
    "state": "SUCCESS",
    "code": "defmodule Solution do\n  @spec beautiful_substrings(s :: String.t, k :: integer) :: integer\n  def beautiful_substrings(s, k) do\n    s\n    |> String.graphemes()\n    |> Enum.reduce({0, %{}}, fn char, {count, acc} ->\n      new_acc = Map.update(acc, char, {1, char in [\"a\", \"e\", \"i\", \"o\", \"u\"]}, fn {c, is_vowel} ->\n        {c + 1, is_vowel}\n      end)\n      count + count_beautiful_substrings(new_acc, k)\n    end)\n    |> elem(0)\n  end\n\n  defp count_beautiful_substrings(acc, k) do\n    acc\n    |> Enum.reduce({0, 0, 0}, fn {_, {count, is_vowel}}, {total, vowels, consonants} ->\n      if is_vowel, do: {total, vowels + count, consonants}, else: {total, vowels, consonants + count}\n    end)\n    |> (fn {_, vowels, consonants} -> \n      if vowels == consonants and rem(vowels * consonants, k) == 0, do: 1, else: 0\n    end).()\n  end\nend"
}