{
    "status_code": 11,
    "lang": "python3",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 20512000,
    "question_id": "3208",
    "elapsed_time": 11010,
    "compare_result
    "code_output": "0",
    "std_output": "",
    "last_testcase": "\"baeyh\"\n2",
    "expected_output": "2",
    "task_finish_time": 1708860833039,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 233,
    "total_testcases": 684,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python3",
    "submission_id": "1185719881",
    "input_formatted": "\"baeyh\", 2",
    "input": "\"baeyh\"\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution:\n    def beautifulSubstrings(self, s: str, k: int) -> int:\n        vowels = set(\"aeiou\")\n        n = len(s)\n        count = 0\n        prefix_vowels = [0] * (n + 1)\n        prefix_consonants = [0] * (n + 1)\n\n        for i in range(n):\n            prefix_vowels[i + 1] = prefix_vowels[i] + (s[i] in vowels)\n            prefix_consonants[i + 1] = prefix_consonants[i] + (s[i] not in vowels)\n\n        for i in range(n):\n            for j in range(i + 1, n + 1, 2):\n                v_count = prefix_vowels[j] - prefix_vowels[i]\n                c_count = prefix_consonants[j] - prefix_consonants[i]\n                if v_count == c_count and (v_count * c_count) % k == 0:\n                    count += 1\n\n        return count"
}