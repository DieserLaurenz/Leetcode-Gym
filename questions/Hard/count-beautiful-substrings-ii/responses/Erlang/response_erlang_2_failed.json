{
    "status_code": 11,
    "lang": "erlang",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 60600000,
    "question_id": "3208",
    "elapsed_time": 1555,
    "compare_result
    "code_output": "0",
    "std_output": "",
    "last_testcase": "\"baeyh\"\n2",
    "expected_output": "2",
    "task_finish_time": 1708297721282,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 1,
    "total_testcases": 684,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Erlang",
    "submission_id": "1179265924",
    "input_formatted": "\"baeyh\", 2",
    "input": "\"baeyh\"\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "-spec beautiful_substrings(S :: unicode:unicode_binary(), K :: integer()) -> integer().\nbeautiful_substrings(S, K) ->\n    SLen = byte_size(S),\n    IsVowel = fun(C) -> lists:member(C, [<<\"a\">>, <<\"e\">>, <<\"i\">>, <<\"o\">>, <<\"u\">>]) end,\n    CountBeautiful = fun\n        CountBeautiful(_, J, Acc) when J > SLen -> Acc;\n        CountBeautiful(I, J, Acc) ->\n            SubStr = binary:part(S, {I-1, J-I+1}),\n            Vowels = length([Char || <<Char:8/binary>> <= SubStr, IsVowel(<<Char>>)]),\n            Consonants = (J-I+1) - Vowels,\n            NewAcc = case (Vowels == Consonants) andalso ((Vowels * Consonants) rem K == 0) of\n                true -> Acc + 1;\n                false -> Acc\n            end,\n            CountBeautiful(I, J+1, NewAcc)\n    end,\n    OuterLoop = fun\n        OuterLoop(N, Acc) when N > SLen -> Acc;\n        OuterLoop(N, Acc) ->\n            NewAcc = CountBeautiful(N, N, Acc),\n            OuterLoop(N+1, NewAcc)\n    end,\n    OuterLoop(1, 0)."
}