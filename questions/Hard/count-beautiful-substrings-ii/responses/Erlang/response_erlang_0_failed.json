{
    "status_code": 15,
    "lang": "erlang",
    "run_success": false,
    "runtime_error": "Line 6: exception error: badarg",
    "full_runtime_error": "Line 6: exception error: badarg\n[{binary,at,[<<\"baeyh\">>,5],[{error_info,#{module => erl_stdlib_errors}}]},\n {solution,'-beautiful_substrings/2-fun-1-',9,\n              [{file,\"solution.erl\"},{line,6}]},\n {solution,consume_test_cases,2,[{file,\"solution.erl\"},{line,43}]},\n {solution,driver,0,[{file,\"solution.erl\"},{line,29}]},\n {solution,start,0,[{file,\"solution.erl\"},{line,60}]},\n {init,start_em,1,[]},\n {init,do_boot,3,[]}]",
    "status_runtime": "N/A",
    "memory": 60196000,
    "question_id": "3208",
    "elapsed_time": 1313,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "\"baeyh\"\n2",
    "expected_output": "2",
    "task_finish_time": 1708297631745,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 684,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Erlang",
    "submission_id": "1179265317",
    "status_msg": "Runtime Error",
    "state": "SUCCESS",
    "code": "-spec beautiful_substrings(S :: unicode:unicode_binary(), K :: integer()) -> integer().\nbeautiful_substrings(S, K) ->\n    IsVowel = fun(C) -> lists:member(C, \"aeiou\") end,\n    CountBeauties = fun\n        (CountBeauties, I, J, Vowels, Consonants, Acc) when I =< byte_size(S), J =< byte_size(S) ->\n            case IsVowel(binary:at(S, I)) of\n                true -> Vowels1 = Vowels + 1;\n                false -> Vowels1 = Vowels\n            end,\n            case IsVowel(binary:at(S, J)) of\n                true -> Consonants1 = Consonants + 1;\n                false -> Consonants1 = Consonants\n            end,\n            if \n                Vowels == Consonants, (Vowels * Consonants) rem K == 0 ->\n                    CountBeauties(CountBeauties, I+1, J+1, Vowels1, Consonants1, Acc+1);\n                true ->\n                    CountBeauties(CountBeauties, I+1, J+1, Vowels1, Consonants1, Acc)\n            end;\n        (CountBeauties, I, _, _, _, Acc) when I =:= byte_size(S) + 1 ->\n            Acc;\n        (_, _, _, _, _, Acc) ->\n            Acc\n    end,\n    CountBeauties(CountBeauties, 0, 0, 0, 0, 0)."
}