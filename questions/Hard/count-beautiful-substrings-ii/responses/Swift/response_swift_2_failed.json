{
    "status_code": 11,
    "lang": "swift",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 17448000,
    "question_id": "3208",
    "elapsed_time": 746,
    "compare_result
    "code_output": "11",
    "std_output": "",
    "last_testcase": "\"baeyh\"\n2",
    "expected_output": "2",
    "task_finish_time": 1708288248844,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 684,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Swift",
    "submission_id": "1179186654",
    "input_formatted": "\"baeyh\", 2",
    "input": "\"baeyh\"\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    func beautifulSubstrings(_ s: String, _ k: Int) -> Int {\n        var result = 0\n        let chars = Array(s)\n        let n = chars.count\n        var freq = Array(repeating: 0, count: 2 * n + 1)\n        var balance = 0\n        freq[n] = 1\n\n        for char in chars {\n            if \"aeiou\".contains(char) {\n                balance += 1\n            } else {\n                balance -= 1\n            }\n\n            for div in stride(from: 1, through: min(k, n), by: 1) where k % div == 0 {\n                if balance - div + n >= 0 {\n                    result += freq[balance - div + n]\n                }\n                if balance + div + n < 2 * n + 1 {\n                    result += freq[balance + div + n]\n                }\n            }\n            freq[balance + n] += 1\n        }\n\n        return result\n    }\n}"
}