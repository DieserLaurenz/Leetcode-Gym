{
    "status_code": 11,
    "lang": "kotlin",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 130140000,
    "question_id": "3203",
    "elapsed_time": 1023,
    "compare_result": "00011111110110111010011011111111111111101111111110110010000010000010011101111110100010000010100111111111111111110100100000000000001111111111100100000000010000000011101110111111111011100000000000000000000000000001110010011111111100000000000000000000000011111101111111111100000000000000100111111111100000000000001010100101111100000000000000000000000000000010011100000001100111000000000100100100010011100000000000000110011011000001000100000110000000000000000111000000000101010000000010011111000000000000000000101110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111110110010111111111111111110111111111111100000",
    "code_output": "[false,false]",
    "std_output": "",
    "last_testcase": "\"abcabc\"\n[[1,1,3,5],[0,2,5,5]]",
    "expected_output": "[true,true]",
    "task_finish_time": 1708965987469,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 238,
    "total_testcases": 1211,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Kotlin",
    "submission_id": "1186912618",
    "input_formatted": "\"abcabc\", [[1,1,3,5],[0,2,5,5]]",
    "input": "\"abcabc\"\n[[1,1,3,5],[0,2,5,5]]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    fun canMakePalindromeQueries(s: String, queries: Array<IntArray>): BooleanArray {\n        val prefixCounts = Array(s.length + 1) { IntArray(26) }\n        for (i in s.indices) {\n            for (j in 0 until 26) {\n                prefixCounts[i + 1][j] = prefixCounts[i][j] + if (s[i] - 'a' == j) 1 else 0\n            }\n        }\n        return BooleanArray(queries.size) { idx ->\n            val (ai, bi, ci, di) = queries[idx]\n            val countDiff = IntArray(26)\n            for (j in 0 until 26) {\n                countDiff[j] = prefixCounts[bi + 1][j] - prefixCounts[ai][j] - (prefixCounts[di + 1][j] - prefixCounts[ci][j])\n            }\n            countDiff.count { it != 0 } <= 1\n        }\n    }\n}"
}