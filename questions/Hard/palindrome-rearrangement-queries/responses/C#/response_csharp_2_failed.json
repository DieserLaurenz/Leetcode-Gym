{
    "status_code": 11,
    "lang": "csharp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 144224000,
    "question_id": "3203",
    "elapsed_time": 804,
    "compare_result": "01111110011110111011100000101101101010011100111110110101001000000100000001001110100011000000000100100011111111010000100000000000000001111111011100000010100000000000100000001111111011111000000000000000000000000000000000001111111100100010000000000000000000000001111111111111000000000000000001111111100000000000000000000000111110100000001000000000000000000000000010000000000001100000000000000000000000011000000000000000000011100000000100000000010000000000000111000000000000000000000000000001000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001011000000010000000000000001000000000000000100010",
    "code_output": "[false,false]",
    "std_output": "",
    "last_testcase": "\"abcabc\"\n[[1,1,3,5],[0,2,5,5]]",
    "expected_output": "[true,true]",
    "task_finish_time": 1708964994179,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 141,
    "total_testcases": 1211,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C#",
    "submission_id": "1186903505",
    "input_formatted": "\"abcabc\", [[1,1,3,5],[0,2,5,5]]",
    "input": "\"abcabc\"\n[[1,1,3,5],[0,2,5,5]]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "public class Solution {\n    public bool[] CanMakePalindromeQueries(string s, int[][] queries) {\n        int n = s.Length / 2;\n        int[,] prefixSum = new int[n + 1, 26];\n        for (int i = 1; i <= n; i++) {\n            for (int j = 0; j < 26; j++) {\n                prefixSum[i, j] = prefixSum[i - 1, j] + (s[i - 1] - 'a' == j ? 1 : 0);\n            }\n        }\n\n        bool[] ans = new bool[queries.Length];\n        for (int i = 0; i < queries.Length; i++) {\n            int leftSum = 0, rightSum = 0;\n            for (int j = 0; j < 26; j++) {\n                int left = prefixSum[queries[i][1] + 1, j] - prefixSum[queries[i][0], j];\n                int right = prefixSum[queries[i][3] - n + 1, j] - prefixSum[queries[i][2] - n, j];\n                leftSum += left % 2;\n                rightSum += right % 2;\n            }\n            ans[i] = leftSum == rightSum || Math.Abs(leftSum - rightSum) == 1;\n        }\n\n        return ans;\n    }\n}"
}