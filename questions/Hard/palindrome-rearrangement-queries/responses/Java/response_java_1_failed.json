{
    "status_code": 11,
    "lang": "java",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 109652000,
    "display_runtime": "40",
    "question_id": "3203",
    "elapsed_time": 525,
    "compare_result": "00011111110110111011010011111111111111101111111110110010000010000000011101111110100010000010100011111111111111110100100000000000001111111111100100000000010000000011101110111111111011100000000000000000000000000001110000011111111100000000000000000000000011111101111111111100000000000000100111111111100000000000001010100101111100000000000000000000000000000000001100000001100111000000000100100100010001100000000000000010011011000001000100000110000000000000000111000000000101010000000010010111000000000000000000101110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111110110010111111111111111110111111111111100000",
    "code_output": "[false,false]",
    "std_output": "",
    "last_testcase": "\"abcabc\"\n[[1,1,3,5],[0,2,5,5]]",
    "expected_output": "[true,true]",
    "task_finish_time": 1708964058258,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 230,
    "total_testcases": 1211,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Java",
    "submission_id": "1186889199",
    "input_formatted": "\"abcabc\", [[1,1,3,5],[0,2,5,5]]",
    "input": "\"abcabc\"\n[[1,1,3,5],[0,2,5,5]]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    public boolean[] canMakePalindromeQueries(String s, int[][] queries) {\n        int n = s.length();\n        int[][] prefixCounts = new int[n + 1][26];\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < 26; j++) {\n                prefixCounts[i + 1][j] = prefixCounts[i][j];\n            }\n            prefixCounts[i + 1][s.charAt(i) - 'a']++;\n        }\n\n        boolean[] answer = new boolean[queries.length];\n        for (int i = 0; i < queries.length; i++) {\n            int[] query = queries[i];\n            int oddCount = 0;\n            for (int j = 0; j < 26; j++) {\n                int charCount = prefixCounts[query[1] + 1][j] - prefixCounts[query[0]][j]\n                              + prefixCounts[query[3] + 1][j] - prefixCounts[query[2]][j];\n                if (charCount % 2 == 1) oddCount++;\n            }\n            // For palindrome, the number of characters with odd count should not be more than 1\n            answer[i] = oddCount <= 1;\n        }\n        return answer;\n    }\n}"
}