{
    "status_code": 11,
    "lang": "java",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 109244000,
    "display_runtime": "46",
    "question_id": "3203",
    "elapsed_time": 565,
    "compare_result": "00011011101000000000001011111111111111101111111110000000000010101011111101111110001010000011110111111111111001000000100000000101001111111101000000000011010000010011101110111111111011000000000000000000000000000000101010011111111100000000000000000010000011110101111110010000000000000000100111111111000000000000011010100111111100000000000000000000000000000000111100000011100111000000000101100100010010000000000000000110001011000000000100000110000000010000000110000000000100000000000010011111000000001000010100111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001001110000100111111111111111110111111111111100000",
    "code_output": "[false,false]",
    "std_output": "",
    "last_testcase": "\"abcabc\"\n[[1,1,3,5],[0,2,5,5]]",
    "expected_output": "[true,true]",
    "task_finish_time": 1708964019133,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 222,
    "total_testcases": 1211,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Java",
    "submission_id": "1186888650",
    "input_formatted": "\"abcabc\", [[1,1,3,5],[0,2,5,5]]",
    "input": "\"abcabc\"\n[[1,1,3,5],[0,2,5,5]]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    public boolean[] canMakePalindromeQueries(String s, int[][] queries) {\n        int n = s.length();\n        int[][] prefixCounts = new int[n + 1][26];\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < 26; j++) {\n                prefixCounts[i + 1][j] = prefixCounts[i][j];\n            }\n            prefixCounts[i + 1][s.charAt(i) - 'a']++;\n        }\n        \n        boolean[] answer = new boolean[queries.length];\n        for (int i = 0; i < queries.length; i++) {\n            int[] query = queries[i];\n            int leftCount = 0, rightCount = 0;\n            for (int j = 0; j < 26; j++) {\n                int leftCharCount = prefixCounts[query[1] + 1][j] - prefixCounts[query[0]][j];\n                int rightCharCount = prefixCounts[query[3] + 1][j] - prefixCounts[query[2]][j];\n                if (leftCharCount % 2 == 1) leftCount++;\n                if (rightCharCount % 2 == 1) rightCount++;\n            }\n            answer[i] = leftCount <= 1 && rightCount <= 1;\n        }\n        return answer;\n    }\n}"
}