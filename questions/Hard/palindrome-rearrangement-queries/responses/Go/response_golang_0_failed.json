{
    "status_code": 11,
    "lang": "golang",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 61992000,
    "question_id": "3203",
    "elapsed_time": 257,
    "compare_result": "00111111010111111011110000000100010001010101111110110100000100000000000000001110100010010000000000000011111111110100100000000000010001111111100100000010100000000000000000001111111011100000000000000000000000000000000000001111111100000100000000000001000000000001111111111100000000000000000001111111100000000000000000000000111100000000001000000000000000000000000000000000000001000000000000000000000000000000000000000000000011000000000100000000000000000000000111000000000000000000000000000001000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111000110010000000000000000000000000000000100000",
    "code_output": "[false,true]",
    "std_output": "",
    "last_testcase": "\"abcabc\"\n[[1,1,3,5],[0,2,5,5]]",
    "expected_output": "[true,true]",
    "task_finish_time": 1708974444706,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 123,
    "total_testcases": 1211,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Go",
    "submission_id": "1187040217",
    "input_formatted": "\"abcabc\", [[1,1,3,5],[0,2,5,5]]",
    "input": "\"abcabc\"\n[[1,1,3,5],[0,2,5,5]]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "func canMakePalindromeQueries(s string, queries [][]int) []bool {\n    n := len(s)\n    prefix := make([][26]int, n+1)\n    for i := 0; i < n; i++ {\n        prefix[i+1] = prefix[i]\n        prefix[i+1][s[i]-'a']++\n    }\n\n    canMakePalindrome := func(a, b, c, d int) bool {\n        count := 0\n        for i := 0; i < 26; i++ {\n            count += (prefix[b+1][i] - prefix[a][i] + prefix[d+1][i] - prefix[c][i]) % 2\n        }\n        return count/2 <= (b-a+1)/2\n    }\n\n    result := make([]bool, len(queries))\n    for i, q := range queries {\n        a, b, c, d := q[0], q[1], q[2], q[3]\n        result[i] = canMakePalindrome(a, b, c, d)\n    }\n    return result\n}"
}