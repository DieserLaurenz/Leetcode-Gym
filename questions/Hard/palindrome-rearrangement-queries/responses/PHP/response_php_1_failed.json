{
    "status_code": 11,
    "lang": "php",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 137208000,
    "question_id": "3203",
    "elapsed_time": 1349,
    "compare_result": "00111011110010111010110010100001011011010001111110000010100001100001100010000110010110000000000100000011111000000110100100000000000011111100000000000000000000000000000000001111111000000101000000000000000000000000000000001111111100000000000000000000010100000001111110000000000000000000000001111111000001000000000000000000111100000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000011000000000100000000000000000000000110000000000000000000000000000001000000000000000000011111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001101110111000000000000000000000000000000000100000",
    "code_output": "[false,false]",
    "std_output": "",
    "last_testcase": "\"abcabc\"\n[[1,1,3,5],[0,2,5,5]]",
    "expected_output": "[true,true]",
    "task_finish_time": 1708965704108,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 114,
    "total_testcases": 1211,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "PHP",
    "submission_id": "1186908151",
    "input_formatted": "\"abcabc\", [[1,1,3,5],[0,2,5,5]]",
    "input": "\"abcabc\"\n[[1,1,3,5],[0,2,5,5]]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n\n    /**\n     * @param String $s\n     * @param Integer[][] $queries\n     * @return Boolean[]\n     */\n    function canMakePalindromeQueries($s, $queries) {\n        $n = strlen($s);\n        $prefixSum = array_fill(0, $n + 1, array_fill(0, 26, 0));\n        \n        for ($i = 0; $i < $n; $i++) {\n            for ($j = 0; $j < 26; $j++) {\n                $prefixSum[$i + 1][$j] = $prefixSum[$i][$j];\n            }\n            $prefixSum[$i + 1][ord($s[$i]) - ord('a')]++;\n        }\n        \n        $result = [];\n        foreach ($queries as $query) {\n            [$a, $b, $c, $d] = $query;\n            $oddCount = 0;\n            for ($i = 0; $i < 26; $i++) {\n                $countLeft = $prefixSum[$b + 1][$i] - $prefixSum[$a][$i];\n                $countRight = $prefixSum[$d + 1][$i] - $prefixSum[$c][$i];\n                $oddCount += ($countLeft + $countRight) % 2;\n            }\n            $result[] = $oddCount / 2 <= min($b - $a, $d - $c);\n        }\n        \n        return $result;\n    }\n}"
}