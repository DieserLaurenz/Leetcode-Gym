{
    "status_code": 11,
    "lang": "dart",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 151876000,
    "question_id": "3243",
    "elapsed_time": 479,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "1\n6000\n4\n\"124\"",
    "expected_output": "5",
    "task_finish_time": 1708424141681,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 38,
    "total_testcases": 932,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Dart",
    "submission_id": "1180837080",
    "input_formatted": "1, 6000, 4, \"124\"",
    "input": "1\n6000\n4\n\"124\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n  int numberOfPowerfulInt(int start, int finish, int limit, String s) {\n    int count = 0;\n    int suffix = int.parse(s);\n    if (suffix > finish) return 0;\n    int sLen = s.length;\n    int maxLen = ((finish.toString().length) - sLen).clamp(0, finish.toString().length);\n\n    for (int i = 0; i <= maxLen; i++) {\n      int minPossible = i == 0 ? suffix : int.parse('1' + '0' * i + s);\n      int maxPossible = i == 0 ? suffix : int.parse(List.filled(i, limit.toString()).join('') + s);\n      if (minPossible > finish || maxPossible < start) continue;\n\n      for (int j = minPossible; j <= maxPossible && j <= finish; j++) {\n        String numStr = j.toString();\n        if (numStr.endsWith(s) && numStr.split('').every((d) => int.parse(d) <= limit)) {\n          if (j >= start && j <= finish) count++;\n        }\n      }\n    }\n    return count;\n  }\n}"
}