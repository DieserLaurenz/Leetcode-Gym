{
    "status_code": 11,
    "lang": "csharp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 121032000,
    "question_id": "3243",
    "elapsed_time": 4015,
    "compare_result
    "code_output": "14",
    "std_output": "",
    "last_testcase": "15\n215\n6\n\"10\"",
    "expected_output": "2",
    "task_finish_time": 1708423131593,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 263,
    "total_testcases": 932,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C#",
    "submission_id": "1180824934",
    "input_formatted": "15, 215, 6, \"10\"",
    "input": "15\n215\n6\n\"10\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "public class Solution {\n    public long NumberOfPowerfulInt(long start, long finish, int limit, string s) {\n        long count = 0;\n        long suffix = long.Parse(s);\n        long baseNumber = 1;\n        while (baseNumber < suffix) baseNumber *= 10;\n\n        for (long prefix = 0; ; prefix++) {\n            long num = prefix * baseNumber + suffix;\n            if (num > finish) break;\n            if (num >= start) {\n                bool valid = true;\n                foreach (char c in num.ToString()) {\n                    if (c - '0' > limit) {\n                        valid = false;\n                        break;\n                    }\n                }\n                if (valid) count++;\n            }\n        }\n        return count;\n    }\n}"
}