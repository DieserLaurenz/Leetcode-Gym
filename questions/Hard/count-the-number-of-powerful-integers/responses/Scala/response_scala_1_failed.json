{
    "status_code": 11,
    "lang": "scala",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 54936000,
    "question_id": "3243",
    "elapsed_time": 537,
    "compare_result
    "code_output": "6",
    "std_output": "",
    "last_testcase": "20\n1159\n5\n\"20\"",
    "expected_output": "8",
    "task_finish_time": 1708424577296,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 101,
    "total_testcases": 932,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Scala",
    "submission_id": "1180842315",
    "input_formatted": "20, 1159, 5, \"20\"",
    "input": "20\n1159\n5\n\"20\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "object Solution {\n  def numberOfPowerfulInt(start: Long, finish: Long, limit: Int, s: String): Long = {\n    val startSuffix = s.toLong\n    if (startSuffix > finish) return 0\n    val limitStr = s\"1${\"0\" * s.length}\".toLong\n    var count = 0L\n\n    for (prefix <- 0 to limit) {\n      val num = prefix * limitStr + startSuffix\n      if (num >= start && num <= finish) count += 1\n    }\n    count\n  }\n}"
}