{
    "status_code": 14,
    "lang": "ruby",
    "run_success": false,
    "status_runtime": "N/A",
    "memory": 211572000,
    "question_id": "3243",
    "elapsed_time": 3369,
    "compare_result": "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "code_output": "",
    "std_output": "",
    "last_testcase": "1829505\n1255574165\n7\n\"11223\"",
    "expected_output": "5470",
    "task_finish_time": 1708424399601,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 227,
    "total_testcases": 932,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Ruby",
    "submission_id": "1180840151",
    "status_msg": "Time Limit Exceeded",
    "state": "SUCCESS",
    "code": "# @param {Integer} start\n# @param {Integer} finish\n# @param {Integer} limit\n# @param {String} s\n# @return {Integer}\ndef number_of_powerful_int(start, finish, limit, s)\n  count = 0\n  (start..finish).each do |num|\n    num_str = num.to_s\n    next unless num_str.end_with?(s)\n    \n    all_digits_within_limit = num_str.chars.all? { |digit| digit.to_i <= limit }\n    count += 1 if all_digits_within_limit\n  end\n  count\nend"
}