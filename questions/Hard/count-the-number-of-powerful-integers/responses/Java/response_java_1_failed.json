{
    "status_code": 14,
    "lang": "java",
    "run_success": false,
    "status_runtime": "N/A",
    "memory": 44920000,
    "question_id": "3243",
    "elapsed_time": 4032,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "1\n6000\n4\n\"124\"",
    "expected_output": "5",
    "task_finish_time": 1708414671106,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 932,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Java",
    "submission_id": "1180721284",
    "status_msg": "Time Limit Exceeded",
    "state": "SUCCESS",
    "code": "class Solution {\n    public long numberOfPowerfulInt(long start, long finish, int limit, String s) {\n        long count = 0;\n        long sVal = Long.parseLong(s);\n        long minLength = s.length();\n        long maxLength = String.valueOf(finish).length();\n\n        for (long length = minLength; length <= maxLength; length++) {\n            long minPrefix = length == minLength ? 0 : (long)Math.pow(10, length - minLength - 1);\n            long maxPrefix = (long)Math.pow(10, length - minLength) - 1;\n            for (long prefix = minPrefix; prefix <= maxPrefix; prefix++) {\n                String numStr = prefix + s;\n                long num = Long.parseLong(numStr);\n                if (num >= start && num <= finish) {\n                    boolean valid = true;\n                    while (prefix > 0) {\n                        if (prefix % 10 > limit) {\n                            valid = false;\n                            break;\n                        }\n                        prefix /= 10;\n                    }\n                    if (valid) count++;\n                }\n            }\n        }\n\n        return count;\n    }\n}"
}