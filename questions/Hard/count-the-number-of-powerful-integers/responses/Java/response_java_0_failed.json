{
    "status_code": 11,
    "lang": "java",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 41992000,
    "display_runtime": "3",
    "question_id": "3243",
    "elapsed_time": 197,
    "compare_result
    "code_output": "0",
    "std_output": "",
    "last_testcase": "15\n215\n6\n\"10\"",
    "expected_output": "2",
    "task_finish_time": 1708414626645,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 213,
    "total_testcases": 932,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Java",
    "submission_id": "1180720752",
    "input_formatted": "15, 215, 6, \"10\"",
    "input": "15\n215\n6\n\"10\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    public long numberOfPowerfulInt(long start, long finish, int limit, String s) {\n        long count = 0;\n        long sVal = Long.parseLong(s);\n        if (sVal < start || sVal > finish) return 0;\n\n        // Calculate the range of numbers that can prefix s.\n        long minVal = sVal;\n        long maxVal = Long.parseLong(s);\n        int sLength = s.length();\n        long multiplier = 1;\n        for (int i = 0; i < sLength; i++) {\n            multiplier *= 10;\n        }\n\n        for (long prefix = 0; prefix < multiplier; prefix++) {\n            long num = prefix * multiplier + sVal;\n            if (num >= start && num <= finish) {\n                boolean isValid = true;\n                long temp = prefix;\n                while (temp > 0) {\n                    if (temp % 10 > limit) {\n                        isValid = false;\n                        break;\n                    }\n                    temp /= 10;\n                }\n                if (isValid) count++;\n            }\n            if (num > finish) break;\n        }\n\n        return count;\n    }\n}"
}