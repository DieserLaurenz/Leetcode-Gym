{
    "status_code": 11,
    "lang": "python",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 28400000,
    "question_id": "3212",
    "elapsed_time": 828,
    "compare_result
    "code_output": "15",
    "std_output": "",
    "last_testcase": "[1,2,3,4]",
    "expected_output": "8",
    "task_finish_time": 1708870662510,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 3,
    "total_testcases": 813,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python",
    "submission_id": "1185829916",
    "input_formatted": "[1,2,3,4]",
    "input": "[1,2,3,4]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution(object):\n    def numberOfGoodPartitions(self, nums):\n        MOD = 10**9 + 7\n        last_index = {}\n        dp = [1] * (len(nums) + 1)\n        for i, num in enumerate(nums):\n            if num in last_index:\n                dp[i + 1] = (2 * dp[i] - dp[last_index[num]]) % MOD\n            else:\n                dp[i + 1] = (2 * dp[i]) % MOD\n            last_index[num] = i\n        return (dp[len(nums)] - 1) % MOD"
}