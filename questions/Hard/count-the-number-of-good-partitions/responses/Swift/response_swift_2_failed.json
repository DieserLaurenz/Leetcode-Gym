{
    "status_code": 11,
    "lang": "swift",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 25888000,
    "question_id": "3212",
    "elapsed_time": 522,
    "compare_result
    "code_output": "15",
    "std_output": "",
    "last_testcase": "[1,2,3,4]",
    "expected_output": "8",
    "task_finish_time": 1708382540082,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 6,
    "total_testcases": 813,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Swift",
    "submission_id": "1180350544",
    "input_formatted": "[1,2,3,4]",
    "input": "[1,2,3,4]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    func numberOfGoodPartitions(_ nums: [Int]) -> Int {\n        let mod = 1_000_000_007\n        var lastPosition = [Int: Int]()\n        var dp = [Int](repeating: 0, count: nums.count + 1)\n        dp[0] = 1\n\n        for i in 1...nums.count {\n            dp[i] = (2 * dp[i - 1]) % mod\n            if let last = lastPosition[nums[i - 1]] {\n                dp[i] = (dp[i] - dp[last] + mod) % mod\n            }\n            lastPosition[nums[i - 1]] = i\n        }\n\n        return (dp[nums.count] - 1 + mod) % mod\n    }\n}"
}