{
    "status_code": 11,
    "lang": "javascript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 91892000,
    "question_id": "3303",
    "elapsed_time": 3550,
    "compare_result": "111111010111111100111100111110101111111000110011110101111100110110101111111111011001111111111111111100000111111110111111111001001111111111110111111101000001110110111011110111100011101111111011111111001111111011111111111111101001111110000",
    "code_output": "[0]",
    "std_output": "",
    "last_testcase": "\"vatevavakz\"\n\"va\"\n\"lbda\"\n1",
    "expected_output": "[]",
    "task_finish_time": 1708464120195,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 178,
    "total_testcases": 237,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "JavaScript",
    "submission_id": "1181369931",
    "input_formatted": "\"vatevavakz\", \"va\", \"lbda\", 1",
    "input": "\"vatevavakz\"\n\"va\"\n\"lbda\"\n1",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "var beautifulIndices = function(s, a, b, k) {\n    let result = [];\n    let n = s.length, lastIndex = -1;\n    \n    // Function to check if b exists within k distance\n    function existsB(i) {\n        if (lastIndex >= i - k) return true;\n        let start = Math.max(i - k, 0);\n        let end = Math.min(i + k + a.length, n - b.length);\n        for (let j = start; j <= end; j++) {\n            if (s.substring(j, j + b.length) === b) {\n                lastIndex = j;\n                return true;\n            }\n        }\n        return false;\n    }\n\n    for (let i = 0; i <= n - a.length; i++) {\n        if (s.substring(i, i + a.length) === a && existsB(i)) {\n            result.push(i);\n        }\n    }\n\n    return result;\n};"
}