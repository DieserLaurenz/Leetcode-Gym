{
    "status_code": 14,
    "lang": "python3",
    "run_success": false,
    "status_runtime": "N/A",
    "memory": 46912000,
    "question_id": "3303",
    "elapsed_time": 5682,
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1708881961651,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 237,
    "total_testcases": 237,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python3",
    "submission_id": "1185977767",
    "status_msg": "Time Limit Exceeded",
    "state": "SUCCESS",
    "code": "from typing import List\nfrom bisect import bisect_left, bisect_right\n\nclass Solution:\n    def beautifulIndices(self, s: str, a: str, b: str, k: int) -> List[int]:\n        def find_substrings(s: str, sub: str) -> List[int]:\n            return [i for i in range(len(s) - len(sub) + 1) if s.startswith(sub, i)]\n        \n        a_indices = find_substrings(s, a)\n        b_indices = find_substrings(s, b)\n        beautiful_indices = []\n        \n        for i in a_indices:\n            left = bisect_left(b_indices, i - k)\n            right = bisect_right(b_indices, i + k)\n            if left != right:  # This means there's at least one index j within range\n                beautiful_indices.append(i)\n                \n        return beautiful_indices"
}