{
    "status_code": 11,
    "lang": "php",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 30208000,
    "question_id": "3303",
    "elapsed_time": 5261,
    "compare_result": "011111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111011111101111111111111111111111111111111011111111111111111110111111101111111111111110111111111111111011110111111111100000000000000000",
    "code_output": "[16]",
    "std_output": "",
    "last_testcase": "\"isawsquirrelnearmysquirrelhouseohmy\"\n\"my\"\n\"squirrel\"\n15",
    "expected_output": "[16,33]",
    "task_finish_time": 1708464429779,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 211,
    "total_testcases": 237,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "PHP",
    "submission_id": "1181372689",
    "input_formatted": "\"isawsquirrelnearmysquirrelhouseohmy\", \"my\", \"squirrel\", 15",
    "input": "\"isawsquirrelnearmysquirrelhouseohmy\"\n\"my\"\n\"squirrel\"\n15",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n\n    /**\n     * @param String $s\n     * @param String $a\n     * @param String $b\n     * @param Integer $k\n     * @return Integer[]\n     */\n    function beautifulIndices($s, $a, $b, $k) {\n        $n = strlen($s);\n        $aLen = strlen($a);\n        $bLen = strlen($b);\n        $result = [];\n        \n        $prefixB = array_fill(0, $n, false);\n        for ($i = 0; $i <= $n - $bLen; $i++) {\n            if (substr($s, $i, $bLen) === $b) {\n                for ($j = max(0, $i - $k); $j <= min($n - $aLen, $i + $k - $aLen + 1); $j++) {\n                    $prefixB[$j] = true;\n                }\n            }\n        }\n\n        for ($i = 0; $i <= $n - $aLen; $i++) {\n            if (substr($s, $i, $aLen) === $a && $prefixB[$i]) {\n                $result[] = $i;\n            }\n        }\n\n        return $result;\n    }\n}"
}