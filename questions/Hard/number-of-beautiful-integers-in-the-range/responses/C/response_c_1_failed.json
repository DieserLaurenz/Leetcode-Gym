{
    "status_code": 11,
    "lang": "c",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 5132000,
    "question_id": "3017",
    "elapsed_time": 3011,
    "compare_result
    "code_output": "0",
    "std_output": "",
    "last_testcase": "10\n20\n3",
    "expected_output": "2",
    "task_finish_time": 1708933129429,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 330,
    "total_testcases": 595,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C",
    "submission_id": "1186510611",
    "input_formatted": "10, 20, 3",
    "input": "10\n20\n3",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "#include <stdio.h>\n\nint countDigits(int num) {\n    int count = 0;\n    while (num) {\n        count++;\n        num /= 10;\n    }\n    return count;\n}\n\nint isBeautiful(int num, int k) {\n    if (num % k != 0) return 0;\n    \n    int evenCount = 0, oddCount = 0, digit;\n    while (num) {\n        digit = num % 10;\n        if (digit % 2 == 0) evenCount++;\n        else oddCount++;\n        num /= 10;\n    }\n    \n    return evenCount == oddCount;\n}\n\nint numberOfBeautifulIntegers(int low, int high, int k) {\n    int count = 0;\n    for (int num = low; num <= high; num += k) { // Increment by k to avoid unnecessary checks\n        if (isBeautiful(num, k)) count++;\n    }\n    return count;\n}"
}