{
    "status_code": 12,
    "lang": "racket",
    "run_success": false,
    "status_runtime": "N/A",
    "memory": 975348000,
    "question_id": "3017",
    "elapsed_time": 2557,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "349863935\n772153463\n11",
    "expected_output": "0",
    "task_finish_time": 1708943280901,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 573,
    "total_testcases": 595,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Racket",
    "submission_id": "1186625757",
    "status_msg": "Memory Limit Exceeded",
    "state": "SUCCESS",
    "code": "(define/contract (number-of-beautiful-integers low high k)\n  (-> exact-integer? exact-integer? exact-integer? exact-integer?)\n  (define (even-digit? digit)\n    (even? (string->number (string digit))))\n  (define (beautiful? number)\n    (let* ((digits (string->list (number->string number)))\n           (evens (count even-digit? digits))\n           (odds (- (length digits) evens)))\n      (and (= evens odds) (zero? (modulo number k)))))\n  (count beautiful? (range low (+ high 1))))"
}