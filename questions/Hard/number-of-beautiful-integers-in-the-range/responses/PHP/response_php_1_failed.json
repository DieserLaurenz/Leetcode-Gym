{
    "status_code": 14,
    "lang": "php",
    "run_success": false,
    "status_runtime": "N/A",
    "memory": 19700000,
    "question_id": "3017",
    "elapsed_time": 5235,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "349863935\n772153463\n11",
    "expected_output": "0",
    "task_finish_time": 1708933658378,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 573,
    "total_testcases": 595,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "PHP",
    "submission_id": "1186516243",
    "status_msg": "Time Limit Exceeded",
    "state": "SUCCESS",
    "code": "class Solution {\n\n    /**\n     * @param Integer $low\n     * @param Integer $high\n     * @param Integer $k\n     * @return Integer\n     */\n    function numberOfBeautifulIntegers($low, $high, $k) {\n        $count = 0;\n        for ($i = $low; $i <= $high; $i++) {\n            if ($i % $k !== 0) continue;\n            $num = $i;\n            $evenCount = 0;\n            $oddCount = 0;\n            while ($num > 0) {\n                $digit = $num % 10;\n                $num = (int)($num / 10);\n                $digit % 2 === 0 ? $evenCount++ : $oddCount++;\n            }\n            if ($evenCount === $oddCount) $count++;\n        }\n        return $count;\n    }\n}"
}