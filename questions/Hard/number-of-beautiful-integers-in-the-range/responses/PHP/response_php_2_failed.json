{
    "status_code": 14,
    "lang": "php",
    "run_success": false,
    "status_runtime": "N/A",
    "memory": 19572000,
    "question_id": "3017",
    "elapsed_time": 5161,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "349863935\n772153463\n11",
    "expected_output": "0",
    "task_finish_time": 1708933695741,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 573,
    "total_testcases": 595,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "PHP",
    "submission_id": "1186516622",
    "status_msg": "Time Limit Exceeded",
    "state": "SUCCESS",
    "code": "class Solution {\n\n    /**\n     * @param Integer $low\n     * @param Integer $high\n     * @param Integer $k\n     * @return Integer\n     */\n    function numberOfBeautifulIntegers($low, $high, $k) {\n        $count = 0;\n        // Skip numbers not divisible by k to reduce iterations\n        $start = $low % $k === 0 ? $low : $low + ($k - $low % $k);\n\n        for ($i = $start; $i <= $high; $i += $k) {\n            if ($this->hasEqualEvenOddDigits($i)) {\n                $count++;\n            }\n        }\n        return $count;\n    }\n    \n    private function hasEqualEvenOddDigits($num) {\n        $digits = array_count_values(str_split($num));\n        $even = $odd = 0;\n        foreach ($digits as $digit => $count) {\n            if ($digit % 2 === 0) {\n                $even += $count;\n            } else {\n                $odd += $count;\n            }\n        }\n        return $even == $odd;\n    }\n}"
}