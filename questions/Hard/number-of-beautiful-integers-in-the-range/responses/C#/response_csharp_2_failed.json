{
    "status_code": 14,
    "lang": "csharp",
    "run_success": false,
    "status_runtime": "N/A",
    "memory": 27024000,
    "question_id": "3017",
    "elapsed_time": 4012,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "292948903\n882874745\n2",
    "expected_output": "0",
    "task_finish_time": 1708933291518,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 586,
    "total_testcases": 595,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C#",
    "submission_id": "1186512306",
    "status_msg": "Time Limit Exceeded",
    "state": "SUCCESS",
    "code": "public class Solution {\n    public int NumberOfBeautifulIntegers(int low, int high, int k) {\n        int count = 0;\n        for (int num = (low + k - 1) / k * k; num <= high; num += k) { // Start from the first multiple of k greater than or equal to low\n            if (IsBeautiful(num)) {\n                count++;\n            }\n        }\n        return count;\n    }\n\n    private bool IsBeautiful(int number) {\n        int evenDigits = 0, oddDigits = 0;\n        while (number > 0) {\n            int digit = number % 10;\n            if (digit % 2 == 0) evenDigits++;\n            else oddDigits++;\n            number /= 10;\n        }\n        return evenDigits == oddDigits;\n    }\n}"
}