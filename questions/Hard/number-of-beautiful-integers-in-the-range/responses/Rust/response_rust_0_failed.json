{
    "status_code": 14,
    "lang": "rust",
    "run_success": false,
    "status_runtime": "N/A",
    "memory": 2052000,
    "question_id": "3017",
    "elapsed_time": 2023,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "313689117\n855403849\n17",
    "expected_output": "0",
    "task_finish_time": 1708943071676,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 578,
    "total_testcases": 595,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Rust",
    "submission_id": "1186623365",
    "status_msg": "Time Limit Exceeded",
    "state": "SUCCESS",
    "code": "impl Solution {\n    pub fn number_of_beautiful_integers(low: i32, high: i32, k: i32) -> i32 {\n        let mut count = 0;\n        for num in low..=high {\n            if num % k == 0 && Self::is_beautiful(num) {\n                count += 1;\n            }\n        }\n        count\n    }\n\n    fn is_beautiful(num: i32) -> bool {\n        let mut num = num;\n        let mut even_count = 0;\n        let mut odd_count = 0;\n        while num > 0 {\n            let digit = num % 10;\n            if digit % 2 == 0 {\n                even_count += 1;\n            } else {\n                odd_count += 1;\n            }\n            num /= 10;\n        }\n        even_count == odd_count\n    }\n}"
}