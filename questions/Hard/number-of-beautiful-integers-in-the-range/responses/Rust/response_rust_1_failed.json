{
    "status_code": 14,
    "lang": "rust",
    "run_success": false,
    "status_runtime": "N/A",
    "memory": 1932000,
    "question_id": "3017",
    "elapsed_time": 2054,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "313689117\n855403849\n17",
    "expected_output": "0",
    "task_finish_time": 1708943115019,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 578,
    "total_testcases": 595,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Rust",
    "submission_id": "1186623876",
    "status_msg": "Time Limit Exceeded",
    "state": "SUCCESS",
    "code": "impl Solution {\n    pub fn number_of_beautiful_integers(low: i32, high: i32, k: i32) -> i32 {\n        (low..=high).filter(|&x| x % k == 0 && Self::has_equal_even_odd_digits(x)).count() as i32\n    }\n\n    fn has_equal_even_odd_digits(mut n: i32) -> bool {\n        let mut even_digits = 0;\n        let mut odd_digits = 0;\n        while n > 0 {\n            if n % 2 == 0 {\n                even_digits += 1;\n            } else {\n                odd_digits += 1;\n            }\n            n /= 10;\n        }\n        even_digits == odd_digits\n    }\n}"
}