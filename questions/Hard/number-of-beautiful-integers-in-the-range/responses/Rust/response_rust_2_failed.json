{
    "status_code": 14,
    "lang": "rust",
    "run_success": false,
    "status_runtime": "N/A",
    "memory": 2008000,
    "question_id": "3017",
    "elapsed_time": 2025,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "349863935\n772153463\n11",
    "expected_output": "0",
    "task_finish_time": 1708943149611,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 573,
    "total_testcases": 595,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Rust",
    "submission_id": "1186624284",
    "status_msg": "Time Limit Exceeded",
    "state": "SUCCESS",
    "code": "impl Solution {\n    pub fn number_of_beautiful_integers(low: i32, high: i32, k: i32) -> i32 {\n        (low..=high)\n            .filter(|&num| num % k == 0 && Solution::is_beautiful(num))\n            .count() as i32\n    }\n\n    fn is_beautiful(num: i32) -> bool {\n        let digits = num.to_string();\n        let (even, odd) = digits.chars().fold((0, 0), |(even, odd), c| {\n            if c.to_digit(10).unwrap() % 2 == 0 {\n                (even + 1, odd)\n            } else {\n                (even, odd + 1)\n            }\n        });\n        even == odd\n    }\n}"
}