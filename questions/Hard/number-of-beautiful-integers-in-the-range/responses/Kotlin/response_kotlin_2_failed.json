{
    "status_code": 14,
    "lang": "kotlin",
    "run_success": false,
    "status_runtime": "N/A",
    "memory": 36884000,
    "question_id": "3017",
    "elapsed_time": 5249,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "410887384\n531967917\n19",
    "expected_output": "0",
    "task_finish_time": 1708933979763,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 574,
    "total_testcases": 595,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Kotlin",
    "submission_id": "1186519553",
    "status_msg": "Time Limit Exceeded",
    "state": "SUCCESS",
    "code": "class Solution {\n    fun numberOfBeautifulIntegers(low: Int, high: Int, k: Int): Int {\n        var count = 0\n        for (num in low..high) {\n            if (num % k != 0) continue\n            val digits = num.toString().map { it - '0' }\n            val evenCount = digits.count { it % 2 == 0 }\n            val oddCount = digits.size - evenCount\n            if (evenCount == oddCount) count++\n        }\n        return count\n    }\n}"
}