{
    "status_code": 12,
    "lang": "scala",
    "run_success": false,
    "status_runtime": "N/A",
    "memory": 53640000,
    "question_id": "3017",
    "elapsed_time": 10239,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "313689117\n855403849\n17",
    "expected_output": "0",
    "task_finish_time": 1708942961616,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 578,
    "total_testcases": 595,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Scala",
    "submission_id": "1186622025",
    "status_msg": "Memory Limit Exceeded",
    "state": "SUCCESS",
    "code": "object Solution {\n    def numberOfBeautifulIntegers(low: Int, high: Int, k: Int): Int = {\n        def isEvenOddEqual(n: Int): Boolean = {\n            var even = 0\n            var odd = 0\n            var temp = n\n            while (temp > 0) {\n                val digit = temp % 10\n                if (digit % 2 == 0) even += 1 else odd += 1\n                temp /= 10\n            }\n            even == odd\n        }\n\n        var count = 0\n        for (n <- low to high if n % k == 0 && isEvenOddEqual(n)) count += 1\n        count\n    }\n}"
}