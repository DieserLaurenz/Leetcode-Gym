{
    "status_code": 14,
    "lang": "cpp",
    "run_success": false,
    "status_runtime": "N/A",
    "memory": 7216000,
    "question_id": "3017",
    "elapsed_time": 4020,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "686235831\n747693108\n2",
    "expected_output": "0",
    "task_finish_time": 1708932456099,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 583,
    "total_testcases": 595,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C++",
    "submission_id": "1186503008",
    "status_msg": "Time Limit Exceeded",
    "state": "SUCCESS",
    "code": "#include <cmath>\n\nclass Solution {\npublic:\n    int numberOfBeautifulIntegers(int low, int high, int k) {\n        int count = 0;\n        for (int num = low; num <= high; ++num) {\n            if (num % k == 0 && hasEqualEvenOddDigits(num)) {\n                ++count;\n            }\n        }\n        return count;\n    }\n\nprivate:\n    bool hasEqualEvenOddDigits(int num) {\n        int evenDigits = 0, oddDigits = 0;\n        while (num > 0) {\n            int digit = num % 10;\n            if (digit % 2 == 0) ++evenDigits;\n            else ++oddDigits;\n            num /= 10;\n        }\n        return evenDigits == oddDigits;\n    }\n};"
}