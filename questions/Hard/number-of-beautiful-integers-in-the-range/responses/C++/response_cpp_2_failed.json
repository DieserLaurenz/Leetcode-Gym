{
    "status_code": 14,
    "lang": "cpp",
    "run_success": false,
    "status_runtime": "N/A",
    "memory": 52496000,
    "question_id": "3017",
    "elapsed_time": 4013,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "410887384\n531967917\n19",
    "expected_output": "0",
    "task_finish_time": 1708932491869,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 574,
    "total_testcases": 595,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C++",
    "submission_id": "1186503424",
    "status_msg": "Time Limit Exceeded",
    "state": "SUCCESS",
    "code": "#include <vector>\n#include <cmath>\n\nclass Solution {\npublic:\n    int numberOfBeautifulIntegers(int low, int high, int k) {\n        int count = 0;\n        // Precompute all beautiful numbers within the possible range\n        std::vector<int> beautifulNumbers;\n        for (int i = 1; i <= 1e9; ++i) {\n            if (isBeautiful(i, k)) {\n                beautifulNumbers.push_back(i);\n            }\n            // Optimization: Stop once the maximum possible value is reached\n            if (i > high) break;\n        }\n\n        // Count beautiful numbers within the given range\n        for (int num : beautifulNumbers) {\n            if (num >= low && num <= high) {\n                ++count;\n            }\n        }\n        return count;\n    }\n\nprivate:\n    bool isBeautiful(int num, int k) {\n        if (num % k != 0) return false;\n\n        int evenDigits = 0, oddDigits = 0;\n        while (num > 0) {\n            int digit = num % 10;\n            if (digit % 2 == 0) ++evenDigits;\n            else ++oddDigits;\n            num /= 10;\n        }\n        return evenDigits == oddDigits;\n    }\n};"
}