{
    "status_code": 11,
    "lang": "kotlin",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 58568000,
    "question_id": "3139",
    "elapsed_time": 578,
    "compare_result
    "code_output": "9",
    "std_output": "",
    "last_testcase": "[1,2,1]",
    "expected_output": "15",
    "task_finish_time": 1708996566073,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 42,
    "total_testcases": 542,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Kotlin",
    "submission_id": "1187236309",
    "input_formatted": "[1,2,1]",
    "input": "[1,2,1]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    fun sumCounts(nums: IntArray): Int {\n        val mod = 1000000007\n        var sum = 0L\n        val freq = mutableMapOf<Int, Int>()\n        var prefixSum = 0\n        val contribution = IntArray(nums.size + 1)\n        \n        for (num in nums) {\n            freq[num] = (freq[num] ?: 0) + 1\n            if (freq[num] == 1) {\n                prefixSum++\n            }\n            contribution[prefixSum]++\n        }\n        \n        for (i in contribution.indices) {\n            sum = (sum + 1L * contribution[i] * i * i) % mod\n        }\n        \n        return sum.toInt()\n    }\n}"
}