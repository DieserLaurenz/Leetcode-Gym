{
    "status_code": 11,
    "lang": "kotlin",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 61144000,
    "question_id": "3139",
    "elapsed_time": 538,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "[1,2,1]",
    "expected_output": "15",
    "task_finish_time": 1708996541401,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 542,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Kotlin",
    "submission_id": "1187236115",
    "input_formatted": "[1,2,1]",
    "input": "[1,2,1]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    fun sumCounts(nums: IntArray): Int {\n        val mod = 1000000007\n        val n = nums.size\n        val lastSeen = mutableMapOf<Int, Int>()\n        val contribution = IntArray(n)\n        var sum = 0L\n        \n        for (i in n - 1 downTo 0) {\n            val next = lastSeen.getOrDefault(nums[i], n)\n            contribution[i] = (if (next == n) 0 else contribution[next]) + (n - i) - (next - i)\n            lastSeen[nums[i]] = i\n            sum += contribution[i]\n        }\n        \n        return (sum % mod).toInt()\n    }\n}"
}