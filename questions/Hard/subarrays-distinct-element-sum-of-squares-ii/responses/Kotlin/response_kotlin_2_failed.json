{
    "status_code": 11,
    "lang": "kotlin",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 75496000,
    "question_id": "3139",
    "elapsed_time": 565,
    "compare_result
    "code_output": "9",
    "std_output": "",
    "last_testcase": "[1,2,1]",
    "expected_output": "15",
    "task_finish_time": 1708996601064,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 49,
    "total_testcases": 542,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Kotlin",
    "submission_id": "1187236612",
    "input_formatted": "[1,2,1]",
    "input": "[1,2,1]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    fun sumCounts(nums: IntArray): Int {\n        val mod = 1000000007\n        val lastPosition = IntArray(100001) { -1 }\n        val contribution = LongArray(nums.size + 1)\n        var total = 0L\n        var sum = 0L\n\n        for (i in nums.indices) {\n            val num = nums[i]\n            sum += i - lastPosition[num]\n            contribution[i + 1] = sum\n            lastPosition[num] = i\n        }\n\n        for (i in contribution.indices) {\n            total = (total + contribution[i]) % mod\n        }\n\n        return total.toInt()\n    }\n}"
}