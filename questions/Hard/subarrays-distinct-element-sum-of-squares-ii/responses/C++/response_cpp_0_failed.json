{
    "status_code": 11,
    "lang": "cpp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 93576000,
    "question_id": "3139",
    "elapsed_time": 151,
    "compare_result
    "code_output": "9",
    "std_output": "",
    "last_testcase": "[1,2,1]",
    "expected_output": "15",
    "task_finish_time": 1708995290717,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 49,
    "total_testcases": 542,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C++",
    "submission_id": "1187226006",
    "input_formatted": "[1,2,1]",
    "input": "[1,2,1]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "#include <vector>\n#include <unordered_map>\n\nusing namespace std;\n\nclass Solution {\npublic:\n    int sumCounts(vector<int>& nums) {\n        const int mod = 1e9 + 7;\n        long long answer = 0;\n        unordered_map<int, int> lastIndex;\n        vector<int> contribution(nums.size() + 1, 0);\n        \n        for (int i = 0, start = 0; i < nums.size(); ++i) {\n            if (lastIndex.count(nums[i])) {\n                start = max(start, lastIndex[nums[i]] + 1);\n            }\n            contribution[i + 1] = (contribution[i] + i + 1 - start) % mod;\n            answer = (answer + contribution[i + 1]) % mod;\n            lastIndex[nums[i]] = i;\n        }\n        \n        return answer;\n    }\n};"
}