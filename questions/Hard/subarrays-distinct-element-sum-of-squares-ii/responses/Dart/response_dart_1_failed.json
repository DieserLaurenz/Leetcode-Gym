{
    "status_code": 11,
    "lang": "dart",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 208948000,
    "question_id": "3139",
    "elapsed_time": 557,
    "compare_result
    "code_output": "8",
    "std_output": "",
    "last_testcase": "[1,2,1]",
    "expected_output": "15",
    "task_finish_time": 1708996712120,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 42,
    "total_testcases": 542,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Dart",
    "submission_id": "1187237507",
    "input_formatted": "[1,2,1]",
    "input": "[1,2,1]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n  int sumCounts(List<int> nums) {\n    final int mod = 1000000007;\n    int n = nums.length;\n    Map<int, int> lastPos = {};\n    List<int> left = List.filled(n, 0);\n    for (int i = 0; i < n; i++) {\n      left[i] = lastPos.containsKey(nums[i]) ? lastPos[nums[i]]! + 1 : 0;\n      lastPos[nums[i]] = i;\n    }\n\n    lastPos.clear();\n    List<int> right = List.filled(n, 0);\n    for (int i = n - 1; i >= 0; i--) {\n      right[i] = lastPos.containsKey(nums[i]) ? lastPos[nums[i]]! - 1 : n - 1;\n      lastPos[nums[i]] = i;\n    }\n\n    int result = 0;\n    for (int i = 0; i < n; i++) {\n      int contrib = ((i - left[i] + 1) * (right[i] - i + 1)) % mod;\n      result = (result + contrib) % mod;\n    }\n    return result;\n  }\n}"
}