{
    "status_code": 11,
    "lang": "dart",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 224748000,
    "question_id": "3139",
    "elapsed_time": 582,
    "compare_result
    "code_output": "8",
    "std_output": "",
    "last_testcase": "[1,2,1]",
    "expected_output": "15",
    "task_finish_time": 1708996671760,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 42,
    "total_testcases": 542,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Dart",
    "submission_id": "1187237155",
    "input_formatted": "[1,2,1]",
    "input": "[1,2,1]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n  int sumCounts(List<int> nums) {\n    const int mod = 1000000007;\n    Map<int, List<int>> lastIndex = {};\n    for (int i = 0; i < nums.length; i++) {\n      lastIndex.putIfAbsent(nums[i], () => []).add(i);\n    }\n\n    List<int> contribution = List.filled(nums.length, 0);\n    for (var indexes in lastIndex.values) {\n      for (int i = 0; i < indexes.length; i++) {\n        int start = i > 0 ? indexes[i - 1] : -1;\n        int end = i < indexes.length - 1 ? indexes[i + 1] : nums.length;\n        contribution[indexes[i]] = (indexes[i] - start) * (end - indexes[i]);\n      }\n    }\n\n    int result = 0;\n    for (int i = 0; i < nums.length; i++) {\n      result = (result + contribution[i]) % mod;\n    }\n    return result;\n  }\n}"
}