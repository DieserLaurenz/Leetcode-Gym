{
    "status_code": 15,
    "lang": "java",
    "run_success": false,
    "runtime_error": "Line 17: java.lang.ArrayIndexOutOfBoundsException: Index -1 out of bounds for length 4",
    "full_runtime_error": "java.lang.ArrayIndexOutOfBoundsException: Index -1 out of bounds for length 4\n  at line 17, Solution.sumCounts\n  at line 56, __DriverSolution__.__helper__\n  at line 86, __Driver__.main",
    "status_runtime": "N/A",
    "memory": 41260000,
    "question_id": "3139",
    "elapsed_time": 94,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "[1,2,1]",
    "expected_output": "15",
    "task_finish_time": 1708995462391,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 542,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Java",
    "submission_id": "1187227380",
    "status_msg": "Runtime Error",
    "state": "SUCCESS",
    "code": "class Solution {\n    public int sumCounts(int[] nums) {\n        final int mod = 1000000007;\n        int n = nums.length;\n        long ans = 0;\n        int[] last = new int[100001];\n        long[] contribution = new long[n + 1];\n        \n        for (int i = 0; i < last.length; i++) {\n            last[i] = -1; // Initialize to -1 indicating no occurrence yet\n        }\n        \n        for (int i = 0; i < n; i++) {\n            if (last[nums[i]] != -1) {\n                contribution[i] = (contribution[i - 1] + (i - last[nums[i]])) % mod;\n            } else {\n                contribution[i] = (contribution[i - 1] + (i + 1)) % mod;\n            }\n            last[nums[i]] = i;\n            ans = (ans + contribution[i]) % mod;\n        }\n        \n        return (int) ans;\n    }\n}"
}