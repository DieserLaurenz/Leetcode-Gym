{
    "status_code": 11,
    "lang": "java",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 57368000,
    "display_runtime": "32",
    "question_id": "3139",
    "elapsed_time": 314,
    "compare_result
    "code_output": "9",
    "std_output": "",
    "last_testcase": "[1,2,1]",
    "expected_output": "15",
    "task_finish_time": 1708995429813,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 49,
    "total_testcases": 542,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Java",
    "submission_id": "1187227106",
    "input_formatted": "[1,2,1]",
    "input": "[1,2,1]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    public int sumCounts(int[] nums) {\n        long mod = 1000000007;\n        long result = 0;\n        int n = nums.length;\n        int[] last = new int[100001];\n        long[] dp = new long[n + 1];\n        for (int i = 0; i < 100001; i++) {\n            last[i] = -1;\n        }\n        for (int i = 0; i < n; i++) {\n            dp[i + 1] = (dp[i] + (i - last[nums[i]])) % mod;\n            result = (result + dp[i + 1]) % mod;\n            last[nums[i]] = i;\n        }\n        return (int) result;\n    }\n}"
}