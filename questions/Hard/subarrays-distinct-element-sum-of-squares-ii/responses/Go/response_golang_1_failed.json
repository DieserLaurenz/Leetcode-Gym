{
    "status_code": 11,
    "lang": "golang",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 2012000,
    "question_id": "3139",
    "elapsed_time": 10,
    "compare_result
    "code_output": "14",
    "std_output": "",
    "last_testcase": "[1,2,1]",
    "expected_output": "15",
    "task_finish_time": 1708996851492,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 542,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Go",
    "submission_id": "1187238648",
    "input_formatted": "[1,2,1]",
    "input": "[1,2,1]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "func sumCounts(nums []int) int {\n    const mod int = 1e9 + 7\n    n := len(nums)\n    ans := 0\n    last := make([]int, n+1)\n    for i := range last {\n        last[i] = -1\n    }\n    sum, sqSum := make([]int, n+1), make([]int, n+1)\n    for i, num := range nums {\n        sum[i+1] = (sum[i] + i - last[num]) % mod\n        sqSum[i+1] = (sqSum[i] + sum[i+1]) % mod\n        last[num] = i\n        ans = (ans + sqSum[i+1]) % mod\n    }\n    return ans\n}"
}