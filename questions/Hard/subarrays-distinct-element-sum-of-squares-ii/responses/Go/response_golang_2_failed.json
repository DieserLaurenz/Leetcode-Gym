{
    "status_code": 11,
    "lang": "golang",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 21708000,
    "question_id": "3139",
    "elapsed_time": 127,
    "compare_result
    "code_output": "7",
    "std_output": "",
    "last_testcase": "[1,2,1]",
    "expected_output": "15",
    "task_finish_time": 1708996876115,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 42,
    "total_testcases": 542,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Go",
    "submission_id": "1187238844",
    "input_formatted": "[1,2,1]",
    "input": "[1,2,1]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "func sumCounts(nums []int) int {\n    mod := 1000000007\n    result, freq := 0, make(map[int]int)\n    left := 0\n\n    for right, val := range nums {\n        freq[val]++\n        for freq[val] > 1 {\n            freq[nums[left]]--\n            left++\n        }\n        result = (result + (right-left+1)*(right-left+2)/2) % mod\n    }\n\n    return result\n}"
}