{
    "status_code": 11,
    "lang": "python3",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 29816000,
    "question_id": "3139",
    "elapsed_time": 606,
    "compare_result
    "code_output": "6",
    "std_output": "",
    "last_testcase": "[1,2,1]",
    "expected_output": "15",
    "task_finish_time": 1708995706615,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 20,
    "total_testcases": 542,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python3",
    "submission_id": "1187229341",
    "input_formatted": "[1,2,1]",
    "input": "[1,2,1]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution:\n    def sumCounts(self, nums: list[int]) -> int:\n        MOD = 10**9 + 7\n        answer = 0\n        stack = []\n        prev = [0] * len(nums)\n        for i, num in enumerate(nums):\n            while stack and num >= nums[stack[-1]]:\n                stack.pop()\n            prev[i] = stack[-1] if stack else -1\n            stack.append(i)\n        \n        stack = []\n        next_ = [0] * len(nums)\n        for i in range(len(nums) - 1, -1, -1):\n            while stack and num > nums[stack[-1]]:\n                stack.pop()\n            next_[i] = stack[-1] if stack else len(nums)\n            stack.append(i)\n        \n        for i in range(len(nums)):\n            answer += nums[i] * (i - prev[i]) * (next_[i] - i)\n            answer %= MOD\n        \n        return answer"
}