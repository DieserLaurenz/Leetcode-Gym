{
    "status_code": 11,
    "lang": "python",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 26976000,
    "question_id": "3139",
    "elapsed_time": 560,
    "compare_result
    "code_output": "5",
    "std_output": "",
    "last_testcase": "[1,2,1]",
    "expected_output": "15",
    "task_finish_time": 1708995522214,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 42,
    "total_testcases": 542,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python",
    "submission_id": "1187227871",
    "input_formatted": "[1,2,1]",
    "input": "[1,2,1]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution(object):\n    def sumCounts(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: int\n        \"\"\"\n        mod = 10**9 + 7\n        res, n = 0, len(nums)\n        last_occurrence = {}\n        prefix_sum = [0] * (n + 1)\n\n        for i, num in enumerate(nums):\n            if num in last_occurrence:\n                j = last_occurrence[num]\n                prefix_sum[i + 1] = prefix_sum[i] - (i - j)\n            else:\n                prefix_sum[i + 1] = prefix_sum[i] + i + 1\n            last_occurrence[num] = i\n            res = (res + prefix_sum[i + 1]) % mod\n\n        return res"
}