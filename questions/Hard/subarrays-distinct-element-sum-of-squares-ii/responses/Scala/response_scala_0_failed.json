{
    "status_code": 11,
    "lang": "scala",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 78604000,
    "question_id": "3139",
    "elapsed_time": 949,
    "compare_result
    "code_output": "6",
    "std_output": "",
    "last_testcase": "[1,2,1]",
    "expected_output": "15",
    "task_finish_time": 1709005670369,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 42,
    "total_testcases": 542,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Scala",
    "submission_id": "1187320451",
    "input_formatted": "[1,2,1]",
    "input": "[1,2,1]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "object Solution {\n    def sumCounts(nums: Array[Int]): Int = {\n        val mod = 1000000007\n        var sum = 0L\n        val lastIndices = scala.collection.mutable.Map[Int, Int]()\n        val contribs = Array.fill(nums.length)(0L)\n\n        for (i <- nums.indices) {\n            contribs(i) = if (i > 0) contribs(i - 1) + i else i\n            lastIndices.get(nums(i)) match {\n                case Some(lastIndex) => contribs(i) -= (lastIndex + 1)\n                case None => \n            }\n            lastIndices(nums(i)) = i\n        }\n\n        for (contrib <- contribs) sum = (sum + contrib + 1) % mod\n        sum.toInt\n    }\n}"
}