{
    "status_code": 11,
    "lang": "scala",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 75944000,
    "question_id": "3139",
    "elapsed_time": 913,
    "compare_result
    "code_output": "9",
    "std_output": "",
    "last_testcase": "[1,2,1]",
    "expected_output": "15",
    "task_finish_time": 1709005694446,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 49,
    "total_testcases": 542,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Scala",
    "submission_id": "1187320764",
    "input_formatted": "[1,2,1]",
    "input": "[1,2,1]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "object Solution {\n    def sumCounts(nums: Array[Int]): Int = {\n        val mod = 1000000007\n        val n = nums.length\n        var answer = 0L\n        val lastPosition = scala.collection.mutable.Map[Int, Int]()\n        val prefixSum = Array.ofDim[Long](n + 1)\n\n        for (i <- 0 until n) {\n            prefixSum(i + 1) = prefixSum(i) + (lastPosition.get(nums(i)) match {\n                case Some(pos) => i - pos\n                case None => i + 1\n            })\n            lastPosition(nums(i)) = i\n        }\n\n        for (i <- 1 to n) {\n            answer = (answer + prefixSum(i)) % mod\n        }\n\n        answer.toInt\n    }\n}"
}