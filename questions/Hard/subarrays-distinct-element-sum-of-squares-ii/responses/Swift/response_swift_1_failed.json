{
    "status_code": 11,
    "lang": "swift",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 25656000,
    "question_id": "3139",
    "elapsed_time": 947,
    "compare_result
    "code_output": "5",
    "std_output": "",
    "last_testcase": "[1,2,1]",
    "expected_output": "15",
    "task_finish_time": 1708996465892,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 42,
    "total_testcases": 542,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Swift",
    "submission_id": "1187235547",
    "input_formatted": "[1,2,1]",
    "input": "[1,2,1]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    func sumCounts(_ nums: [Int]) -> Int {\n        let mod = 1_000_000_007\n        var answer: Int = 0\n        var lastIndex = [Int: Int]()\n        var prefixSum = [Int](repeating: 0, count: nums.count + 1)\n\n        for i in stride(from: 0, to: nums.count, by: 1) {\n            prefixSum[i + 1] = prefixSum[i] + 1\n            if let last = lastIndex[nums[i]] {\n                prefixSum[i + 1] -= prefixSum[last + 1]\n            }\n            lastIndex[nums[i]] = i\n            answer = (answer + prefixSum[i + 1]) % mod\n        }\n\n        return answer\n    }\n}"
}