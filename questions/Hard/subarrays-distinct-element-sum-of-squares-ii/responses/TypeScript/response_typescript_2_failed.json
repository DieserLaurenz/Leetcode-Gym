{
    "status_code": 11,
    "lang": "typescript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 70368000,
    "question_id": "3139",
    "elapsed_time": 199,
    "compare_result
    "code_output": "10",
    "std_output": "",
    "last_testcase": "[1,2,1]",
    "expected_output": "15",
    "task_finish_time": 1708996189674,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 49,
    "total_testcases": 542,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "TypeScript",
    "submission_id": "1187233326",
    "input_formatted": "[1,2,1]",
    "input": "[1,2,1]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "function sumCounts(nums: number[]): number {\n    const mod = 1e9 + 7;\n    let result = 0;\n    const freq = new Map<number, number>();\n    let add = 0, distinct = 0;\n\n    nums.forEach((num, i) => {\n        if (!freq.has(num) || freq.get(num) === 0) {\n            freq.set(num, 1);\n            distinct++;\n            add = (add + distinct) % mod;\n        } else {\n            let prevIndex = i - 1;\n            while (nums[prevIndex] !== num) prevIndex--;\n            const distance = i - prevIndex;\n            const temp = (distinct - 1) * distance + 1;\n            add = (add + temp) % mod;\n        }\n        result = (result + add) % mod;\n    });\n\n    return result;\n}"
}