{
    "status_code": 11,
    "lang": "typescript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 71692000,
    "question_id": "3139",
    "elapsed_time": 144,
    "compare_result
    "code_output": "7",
    "std_output": "",
    "last_testcase": "[1,2,1]",
    "expected_output": "15",
    "task_finish_time": 1708996125082,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 42,
    "total_testcases": 542,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "TypeScript",
    "submission_id": "1187232800",
    "input_formatted": "[1,2,1]",
    "input": "[1,2,1]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "function sumCounts(nums: number[]): number {\n    const mod = 1e9 + 7;\n    let ans = 0, j = 0;\n    const count = new Map<number, number>();\n    for (let i = 0; i < nums.length; ++i) {\n        while (j < nums.length && (!count.has(nums[j]) || count.get(nums[j]) === 0)) {\n            count.set(nums[j], (count.get(nums[j]) || 0) + 1);\n            j++;\n        }\n        ans = (ans + (j - i) * (j - i + 1) / 2) % mod;\n        count.set(nums[i], (count.get(nums[i]) || 0) - 1);\n    }\n    return ans;\n};"
}