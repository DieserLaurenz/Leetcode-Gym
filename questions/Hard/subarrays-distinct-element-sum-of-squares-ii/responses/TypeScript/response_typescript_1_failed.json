{
    "status_code": 11,
    "lang": "typescript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 74084000,
    "question_id": "3139",
    "elapsed_time": 189,
    "compare_result
    "code_output": "14",
    "std_output": "",
    "last_testcase": "[1,2,1]",
    "expected_output": "15",
    "task_finish_time": 1708996157915,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 49,
    "total_testcases": 542,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "TypeScript",
    "submission_id": "1187233059",
    "input_formatted": "[1,2,1]",
    "input": "[1,2,1]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "function sumCounts(nums: number[]): number {\n    const mod = 1e9 + 7;\n    let result = 0;\n    const lastIndex = new Map<number, number>();\n    const contrib = new Array(nums.length).fill(0);\n    let total = 0;\n\n    for (let i = 0; i < nums.length; i++) {\n        if (lastIndex.has(nums[i])) {\n            const j = lastIndex.get(nums[i])!;\n            contrib[i] = (contrib[j] + (i - j)) % mod;\n        } else {\n            contrib[i] = (i + 1) % mod;\n        }\n        total = (total + contrib[i]) % mod;\n        lastIndex.set(nums[i], i);\n    }\n\n    for (let i = 0; i < nums.length; i++) {\n        result = (result + total) % mod;\n        total = (total - contrib[i]) % mod;\n        if (total < 0) total += mod;\n    }\n\n    return result;\n}"
}