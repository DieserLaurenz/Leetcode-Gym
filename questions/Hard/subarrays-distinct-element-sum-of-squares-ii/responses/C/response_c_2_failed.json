{
    "status_code": 11,
    "lang": "c",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 259668000,
    "question_id": "3139",
    "elapsed_time": 212,
    "compare_result
    "code_output": "14",
    "std_output": "",
    "last_testcase": "[1,2,1]",
    "expected_output": "15",
    "task_finish_time": 1708995830253,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 10,
    "total_testcases": 542,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C",
    "submission_id": "1187230363",
    "input_formatted": "[1,2,1]",
    "input": "[1,2,1]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "#include <stdio.h>\n#include <stdlib.h>\n\n#define MOD 1000000007\n\nint sumCounts(int* nums, int numsSize) {\n    long long ans = 0;\n    int* last = (int*)malloc((100001) * sizeof(int));\n    int* count = (int*)malloc((numsSize + 1) * sizeof(int));\n    for (int i = 0; i <= 100000; ++i) {\n        last[i] = -1;\n    }\n    count[0] = 0;\n    for (int i = 1; i <= numsSize; ++i) {\n        count[i] = (count[i - 1] + i - last[nums[i - 1]]) % MOD;\n        last[nums[i - 1]] = i;\n        ans = (ans + count[i]) % MOD;\n    }\n    free(last);\n    free(count);\n    return (int)ans;\n}"
}