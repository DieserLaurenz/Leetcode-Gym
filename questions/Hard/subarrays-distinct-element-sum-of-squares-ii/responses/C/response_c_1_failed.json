{
    "status_code": 11,
    "lang": "c",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 12176000,
    "question_id": "3139",
    "elapsed_time": 196,
    "compare_result
    "code_output": "9",
    "std_output": "",
    "last_testcase": "[1,2,1]",
    "expected_output": "15",
    "task_finish_time": 1708995797659,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 49,
    "total_testcases": 542,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C",
    "submission_id": "1187230105",
    "input_formatted": "[1,2,1]",
    "input": "[1,2,1]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "#include <stdio.h>\n#include <string.h>\n\n#define MOD 1000000007\n\nint sumCounts(int* nums, int numsSize) {\n    long long ans = 0;\n    int last[100001];\n    memset(last, -1, sizeof(last));\n    \n    for (int i = 0; i < numsSize; ++i) {\n        for (int j = nums[i]; j <= 100000; ++j) {\n            if (last[j] != -1) break;\n            last[j] = i;\n        }\n    }\n    \n    memset(last, -1, sizeof(last));\n    for (int i = 0; i < numsSize; ++i) {\n        ans = (ans + (long long)(i - last[nums[i]]) * (numsSize - i) % MOD) % MOD;\n        last[nums[i]] = i;\n    }\n    \n    return (int)ans;\n}"
}