{
    "status_code": 11,
    "lang": "c",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 13348000,
    "question_id": "3139",
    "elapsed_time": 47,
    "compare_result
    "code_output": "9",
    "std_output": "",
    "last_testcase": "[1,2,1]",
    "expected_output": "15",
    "task_finish_time": 1708995765024,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 1,
    "total_testcases": 542,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C",
    "submission_id": "1187229843",
    "input_formatted": "[1,2,1]",
    "input": "[1,2,1]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "#include <stdlib.h>\n\nint sumCounts(int* nums, int numsSize) {\n    const int mod = 1e9 + 7;\n    long long result = 0;\n    int* last = (int*)malloc((numsSize + 1) * sizeof(int));\n    int* contribution = (int*)malloc((numsSize + 1) * sizeof(int));\n    for (int i = 0; i <= numsSize; ++i) {\n        last[i] = -1;\n        contribution[i] = 0;\n    }\n\n    for (int i = 0; i < numsSize; ++i) {\n        contribution[i + 1] = (contribution[i] + i - last[nums[i]]) % mod;\n        result = (result + contribution[i + 1]) % mod;\n        last[nums[i]] = i;\n    }\n\n    free(last);\n    free(contribution);\n    return (int)result;\n}"
}