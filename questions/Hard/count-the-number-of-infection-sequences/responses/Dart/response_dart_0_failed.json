{
    "status_code": 11,
    "lang": "dart",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 148608000,
    "question_id": "3224",
    "elapsed_time": 697,
    "compare_result
    "code_output": "6",
    "std_output": "",
    "last_testcase": "5\n[0,4]",
    "expected_output": "4",
    "task_finish_time": 1708413354108,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 17,
    "total_testcases": 1000,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Dart",
    "submission_id": "1180703702",
    "input_formatted": "5, [0,4]",
    "input": "5\n[0,4]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n  int numberOfSequence(int n, List<int> sick) {\n    const int mod = 1000000007;\n    List<int> gaps = [];\n    int prev = -1;\n    for (int pos in sick) {\n      if (prev != -1) gaps.add(pos - prev - 1);\n      prev = pos;\n    }\n    gaps.add(n - prev - 1);\n    int result = 1;\n    for (int gap in gaps) {\n      for (int i = 1; i <= gap; i++) {\n        result = (result * i) % mod;\n      }\n    }\n    return result;\n  }\n}"
}