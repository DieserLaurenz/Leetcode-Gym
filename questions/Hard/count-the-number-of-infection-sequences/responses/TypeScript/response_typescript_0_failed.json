{
    "status_code": 11,
    "lang": "typescript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 54400000,
    "question_id": "3224",
    "elapsed_time": 206,
    "compare_result
    "code_output": "2",
    "std_output": "",
    "last_testcase": "4\n[1]",
    "expected_output": "3",
    "task_finish_time": 1708404075464,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 23,
    "total_testcases": 1000,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "TypeScript",
    "submission_id": "1180575803",
    "input_formatted": "4, [1]",
    "input": "4\n[1]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "function numberOfSequence(n: number, sick: number[]): number {\n    const mod = 1e9 + 7;\n    let totalWays = 1;\n\n    for (let i = 0; i < sick.length; i++) {\n        if (i == 0) {\n            totalWays = totalWays * countWays(sick[i] - 0) % mod;\n        } else {\n            totalWays = totalWays * countWays(sick[i] - sick[i - 1] - 1) % mod;\n        }\n\n        if (i == sick.length - 1) {\n            totalWays = totalWays * countWays(n - 1 - sick[i]) % mod;\n        }\n    }\n\n    function countWays(gap: number): number {\n        if (gap <= 0) return 1;\n        let ways = 1, left = 1, right = 1;\n\n        for (let i = 1; i < gap; i++) {\n            ways = (ways * 2) % mod;\n        }\n\n        return ways;\n    }\n\n    return totalWays;\n}"
}