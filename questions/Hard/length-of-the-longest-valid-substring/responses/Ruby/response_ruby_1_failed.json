{
    "status_code": 11,
    "lang": "ruby",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 215572000,
    "question_id": "2884",
    "elapsed_time": 3053,
    "compare_result
    "code_output": "3",
    "std_output": "",
    "last_testcase": "\"cbaaaabc\"\n[\"aaa\",\"cb\"]",
    "expected_output": "4",
    "task_finish_time": 1708524584154,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 479,
    "total_testcases": 763,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Ruby",
    "submission_id": "1182038035",
    "input_formatted": "\"cbaaaabc\", [\"aaa\",\"cb\"]",
    "input": "\"cbaaaabc\"\n[\"aaa\",\"cb\"]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "# @param {String} word\n# @param {String[]} forbidden\n# @return {Integer}\ndef longest_valid_substring(word, forbidden)\n  return 0 if word.empty? || forbidden.empty?\n\n  valid_starts = [true] * (word.length + 1)\n  max_len = 0\n\n  (0...word.length).each do |i|\n    next unless valid_starts[i]\n\n    (i + max_len...word.length).each do |j|\n      substr = word[i..j]\n      if forbidden.any? { |f| substr.include?(f) }\n        (i..j).each { |k| valid_starts[k] = false }\n        break\n      end\n      max_len = [max_len, j - i + 1].max\n    end\n  end\n\n  max_len\nend"
}