{
    "status_code": 14,
    "lang": "csharp",
    "run_success": false,
    "status_runtime": "N/A",
    "memory": 123884000,
    "question_id": "2884",
    "elapsed_time": 4015,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "\"accaabaaabaaaccacccacabbaaaccacccbabaccacaacabaacbbbcbcbaacacbbbbccabaabaacbaabbcacbcabaabccbbcbbaacaacbacaaabcbacbabccccccccaaccaacbaaababaaabbacaacabbbcaaabbcabcbbaccacabcaaaacbcaacaaaacacacabbcccbcbaaacbbbcbaabbaaccbcabbbabbcbbbccabaabbcaabaababbbcbbbcbabcccaccbcbabcbcccccacaccaccacbbcbacabacbacbccabbcaaabcaabaabaabacaaaaaababacbcbaaccbbcbcacaabcbabbaccaacbbaacbcacbacabcccbcaabccbabacaccbcbbbaccaabccbacccbcaaccbcaabbbcaaacccaabcccbcbbbbbbcabccabcbabbcaacabccaaaccaaccbcbcaabbcbaccbcabacabccabcaacccbbcaacaaabcbbcabaaccccccccbbcaabcbccaaacbccaaccbccacbccacbaccabbbccbacacabccbcbbccbccccbbccaaabaabbaacacacbcbbbbabbcacbbbbccabcccbbcaabccaaabccaaaccbababcbbbabaabaccbbcabccaaacabccbabaaaababbacbcacb\"\n[\"caaabccaaa\",\"baaccbc\",\"bbacbac\",\"cbcaaccbc\",\"caacabbaab\",\"aaaccba\",\"caaaacbcaa\",\"cabccaaac\",\"aabbaabaab\",\"bcccccaac\",\"accbccbba\",\"acbbcacbb\",\"bbbacca\",\"abacabcb\",\"bbabbccbcb\",\"acbcbbac\",\"aacacacb\",\"acccabc\",\"cbcacbaca\",\"bcabcbb\",\"cbccaaccb\",\"abbcabcbb\",\"ccaaacabc\",\"cacacba\",\"ccabccbc\",\"acbacaaab\",\"bccbccac\",\"bcabbabb\",\"cbabbca\",\"bbcabcbba\",\"ccacabb\",\"acabcab\",\"acaaabcba\",\"bcbabbac\",\"bbabbcbbbc\",\"acaabbcab\",\"cacacbcbb\",\"cbbbcbabc\",\"baccaaccac\",\"ccbbcbb\",\"baccccaa\",\"babcbacca\",\"cbccbcabaa\",\"cbcbbbca\",\"bcbbccccba\",\"baabbca\",\"acbacbcca\",\"babaacca\",\"bbbbabaca\",\"aaccbab\",\"cbcabbb\",\"cbcaabb\",\"cbbccaacb\",\"abcabbcbc\",\"aaaabbcabb\",\"ccabcac\",\"abccaab\",\"ccbcabbb\",\"aaacbcca\",\"bcabbaa\",\"abaaabcb\",\"abcacaabaa\",\"bcbcbcacb\",\"ccbbcaab\",\"aacbbbca\",\"abaabac\",\"caaabcc\",\"bccabaab\",\"aacacacbc\",\"bcabcbbba\",\"cbcaabc\",\"accabcb\",\"cbcbaaacb\",\"bcbaaaccb\",\"bbcabcbcca\",\"bbbacabcaa\",\"aaaacabacb\",\"bcbbbac\",\"cccaccccac\",\"bbccbcc\",\"bbaaacca\",\"aaabbbbca\",\"abaaabb\",\"accacccba\",\"acccaabc\",\"abcccbbbb\",\"aaacaacca\",\"bcabccaba\",\"cbbcccb\",\"bacaacabb\",\"cbcaabccba\",\"abaabcc\",\"babbbccbbc\",\"ccbbabbbc\",\"aabbcbac\",\"abaabbca\",\"ccabcccb\",\"cccbaccc\",\"bcbbabbaba\",\"acbccbcbc\"]",
    "expected_output": "57",
    "task_finish_time": 1708515246995,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 697,
    "total_testcases": 763,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C#",
    "submission_id": "1181926855",
    "status_msg": "Time Limit Exceeded",
    "state": "SUCCESS",
    "code": "public class Solution {\n    public int LongestValidSubstring(string word, IList<string> forbidden) {\n        int maxLength = 0;\n        for (int start = 0; start < word.Length; start++) {\n            for (int end = start; end <= word.Length; end++) {\n                string substring = word.Substring(start, end - start);\n                bool isValid = true;\n                foreach (var forb in forbidden) {\n                    if (substring.Contains(forb)) {\n                        isValid = false;\n                        break;\n                    }\n                }\n                if (isValid) {\n                    maxLength = Math.Max(maxLength, substring.Length);\n                }\n            }\n        }\n        return maxLength;\n    }\n}"
}