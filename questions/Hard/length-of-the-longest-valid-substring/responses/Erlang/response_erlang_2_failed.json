{
    "status_code": 15,
    "lang": "erlang",
    "run_success": false,
    "runtime_error": "Line 8: exception error: badarg",
    "full_runtime_error": "Line 8: exception error: badarg\n[{re,split,\n     [<<\"cbaaaabc\">>,\n      {re_pattern,1,0,0,\n                  <<69,82,67,80,83,0,0,0,0,0,0,0,81,0,0,0,255,255,255,255,255,\n                    255,255,255,124,0,97,0,0,0,1,0,0,0,64,0,0,0,0,0,0,0,0,0,0,\n                    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,131,0,15,133,0,9,0,\n                    1,29,124,29,97,120,0,9,120,0,15,0>>},\n      [{return,list},global]],\n     [{file,\"re.erl\"},\n      {line,983},\n      {error_info,#{cause => badopt,module => erl_stdlib_errors}}]},\n {solution,longest_valid_substring,2,[{file,\"solution.erl\"},{line,8}]},\n {solution,consume_test_cases,2,[{file,\"solution.erl\"},{line,28}]},\n {solution,driver,0,[{file,\"solution.erl\"},{line,14}]},\n {solution,start,0,[{file,\"solution.erl\"},{line,45}]},\n {init,start_em,1,[]},\n {init,do_boot,3,[]}]",
    "status_runtime": "N/A",
    "memory": 66264000,
    "question_id": "2884",
    "elapsed_time": 1357,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "\"cbaaaabc\"\n[\"aaa\",\"cb\"]",
    "expected_output": "4",
    "task_finish_time": 1708525191763,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 763,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Erlang",
    "submission_id": "1182046545",
    "status_msg": "Runtime Error",
    "state": "SUCCESS",
    "code": "-spec longest_valid_substring(Word :: unicode:unicode_binary(), Forbidden :: [unicode:unicode_binary()]) -> integer().\nlongest_valid_substring(Word, Forbidden) ->\n    ForbiddenPattern = lists:foldl(fun(F, Acc) -> Acc ++ \"|\" ++ unicode:characters_to_list(F) end, \"\", Forbidden),\n    TrimmedPattern = lists:sublist(ForbiddenPattern, 2),\n    EscapedPattern = re:replace(TrimmedPattern, \"([\\\\|\\\\(\\\\)\\\\{\\\\}\\\\[\\\\]\\\\*\\\\+\\\\?\\\\^\\\\$\\\\.])\", \"\\\\\\\\&\", [global, {return, list}]),\n    Pattern = \"(\" ++ EscapedPattern ++ \")\",\n    {ok, CompiledPattern} = re:compile(Pattern),\n    Splits = re:split(Word, CompiledPattern, [{return, list}, global]),\n    MaxLength = lists:max([byte_size(Split) || Split <- Splits]),\n    MaxLength."
}