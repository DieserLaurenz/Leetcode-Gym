{
    "status_code": 11,
    "lang": "swift",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 16476000,
    "question_id": "2884",
    "elapsed_time": 5087,
    "compare_result
    "code_output": "2",
    "std_output": "",
    "last_testcase": "\"cbaaaabc\"\n[\"aaa\",\"cb\"]",
    "expected_output": "4",
    "task_finish_time": 1708516283723,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 444,
    "total_testcases": 763,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Swift",
    "submission_id": "1181937102",
    "input_formatted": "\"cbaaaabc\", [\"aaa\",\"cb\"]",
    "input": "\"cbaaaabc\"\n[\"aaa\",\"cb\"]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    func longestValidSubstring(_ word: String, _ forbidden: [String]) -> Int {\n        let s = Array(word)\n        var maxLen = 0\n        var dp = Array(repeating: 0, count: s.count + 1)\n\n        for i in 1...s.count {\n            var valid = true\n            dp[i] = dp[i - 1] + 1\n            for f in forbidden where f.count <= i {\n                let substr = String(s[(i - f.count)..<i])\n                if substr == f {\n                    valid = false\n                    break\n                }\n            }\n            if !valid {\n                dp[i] = 0\n            }\n            maxLen = max(maxLen, dp[i])\n        }\n        return maxLen\n    }\n}"
}