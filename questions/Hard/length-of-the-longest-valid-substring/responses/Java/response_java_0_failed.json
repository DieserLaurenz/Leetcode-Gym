{
    "status_code": 14,
    "lang": "java",
    "run_success": false,
    "status_runtime": "N/A",
    "memory": 45432000,
    "question_id": "2884",
    "elapsed_time": 4010,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "\"babcbabbbacaaacbcacabacaacaaabbbcacbbaabcbabaaaaccabcbbcbacabacbbbcaacacacbababcccbcccbcbcbbabaabaaacabbbccaaccbbaacbbabacbacacbaaaaabaccbabccaaacbcbabcaccbbacabaacccbacbccaaabaccccccbbccacacccabcabcbbbabbcbccababccacbcabccccccbacabbccbccbcbbcabbccbcbccbacacababbcacccccacabbaccaabaababbcbaabcaccacccaabbcabbbcbacbbbcaacbabcbaccccbbcbcbcabaccbabcabcccccabacaacabaabaccbcbcbcaaabbbabccaaabcabccbaacccacbabaaccbcabbaacccbcbcccacbacbbabbccaaaaccbacbbaaabccacacbabaabcacbbccaabcbaccaccabbccbbccbabccbcabaacabacaabccababaabaacacacccccaccabbbaaaabcbcbabbaaaabcbcbacbbacbbcbbacabbccbacbacaccababaababcccbbbabcbacacbabcbcaacbaccabccaaccbbbbbacaaabbcaacbbbcabcbacaabbaabccabbbbcacbccabcabb\"\n[\"abcbacacba\",\"bcbcbacbb\",\"caaabbaa\",\"aacaacc\",\"baccccbbcb\",\"aabcabccba\",\"acccaab\",\"abccbcabac\",\"abcabccc\",\"abbcbacba\",\"cababbca\",\"cccabcabc\",\"caabbbcbb\",\"cbaaaab\",\"acccbbacaa\",\"aabaaccaa\",\"ababaabab\",\"ccbbaaccab\",\"babbaaaabc\",\"ccaabaa\",\"bccacaccc\",\"babbcbbbbc\",\"bbcaaab\",\"bcbbacacab\",\"bcacbcca\",\"cabaaaac\",\"bcacaacaac\",\"baacccbcb\",\"caaaabbbaa\",\"aaabbbab\",\"bbbbccbb\",\"cbccbac\",\"abccacbccb\",\"cbacccc\",\"bbbbaaab\",\"ccababa\",\"cacabacabb\",\"acababbcac\",\"bbcabacbaa\",\"babcbbc\",\"abcbbcc\",\"cabcccccc\",\"cccbbcbcb\",\"cbabbaa\",\"abcababac\",\"abacacccba\",\"bcbbccbcca\",\"cbacacca\",\"acccccacab\",\"bacabacb\",\"aaacabcc\",\"baacbba\",\"bbccbacba\",\"acccabca\",\"aacaaca\",\"bbbccbbba\",\"bbacababa\",\"accccbbcbc\",\"cbacacabc\",\"bcbacabacb\",\"aacccbc\",\"ccbacbbaa\",\"cbcabbab\",\"cabccccca\",\"acbaccabcc\",\"cccacbacb\",\"bcacabbcac\",\"cbbcbcb\",\"aabccababa\",\"aabbcbaaac\",\"ccacccaccc\",\"babbbbccca\",\"cabaccbcac\",\"aaabacc\",\"cbababcc\",\"ccbbaac\",\"bbcacacba\",\"bbacaaa\",\"babcbabb\",\"accabccaa\",\"cbabcbaccc\",\"caabaab\",\"cbabcbca\",\"bbcaaba\",\"acacacccc\",\"acbbaabcb\",\"ccabbac\",\"bbcaababc\",\"babbccbc\",\"bbcaabacb\",\"cbbbabcba\",\"abcbaaabc\",\"cbccccb\",\"cbcbccb\",\"acbcabccc\",\"bbcccbaca\",\"ccbcbcbbab\",\"acacaaabb\",\"caaabbbab\",\"aababbc\"]",
    "expected_output": "74",
    "task_finish_time": 1708514957384,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 686,
    "total_testcases": 763,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Java",
    "submission_id": "1181923811",
    "status_msg": "Time Limit Exceeded",
    "state": "SUCCESS",
    "code": "import java.util.List;\n\nclass Solution {\n    public int longestValidSubstring(String word, List<String> forbidden) {\n        int maxLen = 0;\n        for (int i = 0; i < word.length(); i++) {\n            for (int j = i; j <= word.length(); j++) {\n                String sub = word.substring(i, j);\n                boolean isValid = true;\n                for (String forb : forbidden) {\n                    if (sub.contains(forb)) {\n                        isValid = false;\n                        break;\n                    }\n                }\n                if (isValid) {\n                    maxLen = Math.max(maxLen, sub.length());\n                }\n            }\n        }\n        return maxLen;\n    }\n}"
}