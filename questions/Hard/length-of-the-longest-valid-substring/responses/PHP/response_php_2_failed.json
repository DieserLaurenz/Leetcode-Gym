{
    "status_code": 11,
    "lang": "php",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 19904000,
    "question_id": "2884",
    "elapsed_time": 5237,
    "compare_result
    "code_output": "6",
    "std_output": "",
    "last_testcase": "\"bccaacab\"\n[\"ccaac\",\"caac\",\"aba\",\"bbbac\"]",
    "expected_output": "5",
    "task_finish_time": 1708516166988,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 679,
    "total_testcases": 763,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "PHP",
    "submission_id": "1181935839",
    "input_formatted": "\"bccaacab\", [\"ccaac\",\"caac\",\"aba\",\"bbbac\"]",
    "input": "\"bccaacab\"\n[\"ccaac\",\"caac\",\"aba\",\"bbbac\"]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n\n    /**\n     * @param String $word\n     * @param String[] $forbidden\n     * @return Integer\n     */\n    function longestValidSubstring($word, $forbidden) {\n        $n = strlen($word);\n        $maxLength = 0;\n        $forbiddenSet = array_flip($forbidden); // Use flip to make checks faster\n\n        for ($i = 0; $i < $n; $i++) {\n            for ($j = $i; $j < $n; $j++) {\n                $substr = substr($word, $i, $j - $i + 1);\n                $foundForbidden = false;\n                foreach ($forbiddenSet as $f => $val) {\n                    if (strpos($substr, $f) !== false) {\n                        $foundForbidden = true;\n                        break;\n                    }\n                }\n                if (!$foundForbidden) {\n                    $maxLength = max($maxLength, strlen($substr));\n                }\n            }\n        }\n\n        // Optimized approach\n        $validStart = 0;\n        $currentLength = 0;\n        for ($i = 0; $i < $n; ++$i) {\n            $currentLength++;\n            foreach ($forbidden as $f) {\n                if (strlen($f) > $currentLength) continue;\n                $endPos = $i - strlen($f) + 1;\n                if (substr($word, $endPos, strlen($f)) == $f) {\n                    $validStart = $endPos + 1;\n                    $currentLength = $i - $validStart + 1;\n                    break;\n                }\n            }\n            $maxLength = max($maxLength, $currentLength);\n        }\n\n        return $maxLength;\n    }\n}"
}