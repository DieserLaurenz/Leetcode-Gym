{
    "status_code": 14,
    "lang": "rust",
    "run_success": false,
    "status_runtime": "N/A",
    "memory": 2068000,
    "question_id": "2884",
    "elapsed_time": 2081,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "\"cbaaaabc\"\n[\"aaa\",\"cb\"]",
    "expected_output": "4",
    "task_finish_time": 1708524880650,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 763,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Rust",
    "submission_id": "1182042210",
    "status_msg": "Time Limit Exceeded",
    "state": "SUCCESS",
    "code": "impl Solution {\n    pub fn longest_valid_substring(word: String, forbidden: Vec<String>) -> i32 {\n        let mut result = 0;\n        let mut left = 0;\n        let word_len = word.len();\n        'outer: while left < word_len {\n            for right in (left + result + 1..=word_len).rev() {\n                let substring = &word[left..right];\n                for f in &forbidden {\n                    if substring.contains(f) {\n                        continue 'outer;\n                    }\n                }\n                result = result.max(right - left);\n                break;\n            }\n            left += 1;\n        }\n        result as i32\n    }\n}"
}