{
    "status_code": 11,
    "lang": "dart",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 152076000,
    "question_id": "3211",
    "elapsed_time": 5017,
    "compare_result
    "code_output": "2",
    "std_output": "",
    "last_testcase": "[5,2,2]",
    "expected_output": "1",
    "task_finish_time": 1708494839688,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 203,
    "total_testcases": 553,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Dart",
    "submission_id": "1181676144",
    "input_formatted": "[5,2,2]",
    "input": "[5,2,2]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n  int findMaximumLength(List<int> nums) {\n    int maxLength = 1;\n    int n = nums.length;\n\n    // Iterate over all possible subarrays\n    for (int i = 0; i < n; ++i) {\n      for (int j = i; j < n; ++j) {\n        int minVal = nums[i];\n        int maxVal = nums[j];\n        bool valid = true;\n\n        // Check if the subarray can form a non-decreasing sequence\n        for (int k = i; k <= j; ++k) {\n          if (nums[k] < minVal || nums[k] > maxVal) {\n            valid = false;\n            break;\n          }\n        }\n\n        // Update maxLength if a longer valid subarray is found\n        if (valid) {\n          maxLength = max(maxLength, j - i + 1);\n        }\n      }\n    }\n\n    return maxLength;\n  }\n\n  int max(int a, int b) => a > b ? a : b;\n}"
}