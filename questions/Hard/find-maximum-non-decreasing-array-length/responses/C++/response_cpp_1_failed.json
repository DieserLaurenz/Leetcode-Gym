{
    "status_code": 11,
    "lang": "cpp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 126232000,
    "question_id": "3211",
    "elapsed_time": 185,
    "compare_result
    "code_output": "3",
    "std_output": "",
    "last_testcase": "[5,2,2]",
    "expected_output": "1",
    "task_finish_time": 1708485560210,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 213,
    "total_testcases": 553,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C++",
    "submission_id": "1181554057",
    "input_formatted": "[5,2,2]",
    "input": "[5,2,2]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "#include <vector>\nusing namespace std;\n\nclass Solution {\npublic:\n    int findMaximumLength(vector<int>& nums) {\n        int res = 1, count = 1;\n        for (int i = 1; i < nums.size(); ++i) {\n            if (nums[i] >= nums[i - 1]) {\n                ++count;\n                res = max(res, count);\n            } else {\n                count = 1;\n            }\n        }\n        return res == nums.size() ? res : min(res + 1, (int)nums.size());\n    }\n};"
}