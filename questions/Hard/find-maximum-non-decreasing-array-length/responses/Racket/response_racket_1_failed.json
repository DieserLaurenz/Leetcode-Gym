{
    "status_code": 15,
    "lang": "racket",
    "run_success": false,
    "runtime_error": "car: contract violation",
    "full_runtime_error": "car: contract violation\n  expected: pair?\n  given: '()\n  context...:\n   /usr/share/racket/collects/racket/contract/private/arrow-higher-order.rkt:375:33\n   solution.rkt:21:2\n   body of (submod \"solution.rkt\" main)",
    "status_runtime": "N/A",
    "memory": 100096000,
    "question_id": "3211",
    "elapsed_time": 331,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "[5,2,2]",
    "expected_output": "1",
    "task_finish_time": 1708495489820,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 553,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Racket",
    "submission_id": "1181685496",
    "status_msg": "Runtime Error",
    "state": "SUCCESS",
    "code": "(define/contract (find-maximum-length nums)\n  (-> (listof exact-integer?) exact-integer?)\n  \n  (define (non-decreasing-subseq-lengths lst)\n    (let loop ([lst lst] [acc '()])\n      (if (null? lst)\n          acc\n          (loop (cdr lst) (cons (+ 1 (if (or (null? acc) (<= (car lst) (cadr lst))) (car acc) 0)) acc)))))\n  \n  (define (max-increase lst)\n    (let ([lengths (non-decreasing-subseq-lengths lst)])\n      (apply max (cons 0 lengths))))\n  \n  (if (null? nums)\n      0\n      (max-increase nums)))"
}