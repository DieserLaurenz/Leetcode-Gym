{
    "status_code": 11,
    "lang": "ruby",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 231924000,
    "question_id": "3211",
    "elapsed_time": 526,
    "compare_result
    "code_output": "2",
    "std_output": "",
    "last_testcase": "[5,2,2]",
    "expected_output": "1",
    "task_finish_time": 1708495088480,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 194,
    "total_testcases": 553,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Ruby",
    "submission_id": "1181679831",
    "input_formatted": "[5,2,2]",
    "input": "[5,2,2]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "# @param {Integer[]} nums\n# @return {Integer}\ndef find_maximum_length(nums)\n  n = nums.size\n  return n if n <= 1\n  \n  dp = Array.new(n+1) { Array.new(2, 0) }\n  \n  max_length = 1\n  (1...n).each do |i|\n    if nums[i] > nums[i-1]\n      dp[i][0] = dp[i-1][0] + 1\n      dp[i][1] = dp[i-1][1] + 1\n    else\n      dp[i][0] = 1\n      dp[i][1] = dp[i-1][0] + 1\n    end\n    max_length = [max_length, dp[i][0], dp[i][1]].max\n  end\n  \n  max_length\nend"
}