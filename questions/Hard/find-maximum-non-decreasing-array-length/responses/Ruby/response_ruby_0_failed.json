{
    "status_code": 11,
    "lang": "ruby",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 224976000,
    "question_id": "3211",
    "elapsed_time": 388,
    "compare_result": "0101111111111111111111111111111111111110111101111110000110000001111111111111011101101100000010011110111101011011010001001011110101000100000010111011111011100101000100100010001111100100011110000000000000100001000100010010000001000011000000000010010000000000011000001011100000000000011000110100000110110100000001000000010000000000000100000000001110110000010000000001000000001000101000000000000000000000000100001000000000000000000000000000000000000010000010000000000100000000000000000000000001000000000000001000000000000000000000001111101110010001000000000",
    "code_output": "2",
    "std_output": "",
    "last_testcase": "[5,2,2]",
    "expected_output": "1",
    "task_finish_time": 1708495047983,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 176,
    "total_testcases": 553,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Ruby",
    "submission_id": "1181679233",
    "input_formatted": "[5,2,2]",
    "input": "[5,2,2]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "# @param {Integer[]} nums\n# @return {Integer}\ndef find_maximum_length(nums)\n    max_len = 1\n    current_len = 1\n\n    (1...nums.size).each do |i|\n        if nums[i] >= nums[i - 1]\n            current_len += 1\n            max_len = [max_len, current_len].max\n        else\n            current_len = 1\n        end\n    end\n\n    return max_len if max_len > 1\n\n    nums.size == 1 ? 1 : 2\nend"
}