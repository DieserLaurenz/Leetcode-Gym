{
    "status_code": 11,
    "lang": "kotlin",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 61144000,
    "question_id": "3211",
    "elapsed_time": 619,
    "compare_result
    "code_output": "2",
    "std_output": "",
    "last_testcase": "[5,2,2]",
    "expected_output": "1",
    "task_finish_time": 1708494682202,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 222,
    "total_testcases": 553,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Kotlin",
    "submission_id": "1181673882",
    "input_formatted": "[5,2,2]",
    "input": "[5,2,2]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    fun findMaximumLength(nums: IntArray): Int {\n        var decreaseCount = 0\n        for (i in 1 until nums.size) {\n            if (nums[i] < nums[i - 1]) decreaseCount++\n        }\n        return if (decreaseCount == 0) nums.size else nums.size - decreaseCount\n    }\n}"
}