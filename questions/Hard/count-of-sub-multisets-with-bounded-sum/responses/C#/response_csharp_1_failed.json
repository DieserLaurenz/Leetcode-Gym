{
    "status_code": 11,
    "lang": "csharp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 99380000,
    "question_id": "3091",
    "elapsed_time": 4014,
    "compare_result
    "code_output": "12",
    "std_output": "",
    "last_testcase": "[0,0,1,2,3]\n2\n3",
    "expected_output": "9",
    "task_finish_time": 1708351969953,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 531,
    "total_testcases": 643,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C#",
    "submission_id": "1179918999",
    "input_formatted": "[0,0,1,2,3], 2, 3",
    "input": "[0,0,1,2,3]\n2\n3",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "public class Solution {\n    private const int MOD = 1000000007;\n\n    public int CountSubMultisets(IList<int> nums, int l, int r) {\n        int[] freq = new int[20001];\n        foreach (int num in nums) {\n            freq[num]++;\n        }\n\n        int[] dp = new int[r + 1];\n        dp[0] = 1;\n\n        for (int i = 0; i < freq.Length; i++) {\n            if (freq[i] == 0) continue;\n            for (int j = r; j >= i; j--) {\n                for (int k = 1; k <= freq[i] && j - k * i >= 0; k++) {\n                    dp[j] = (dp[j] + dp[j - k * i]) % MOD;\n                }\n            }\n        }\n\n        int result = 0;\n        for (int i = l; i <= r; i++) {\n            result = (result + dp[i]) % MOD;\n        }\n\n        return result;\n    }\n}"
}