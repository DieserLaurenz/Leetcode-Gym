{
    "status_code": 11,
    "lang": "scala",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 60604000,
    "question_id": "3091",
    "elapsed_time": 8165,
    "compare_result
    "code_output": "12",
    "std_output": "",
    "last_testcase": "[0,0,1,2,3]\n2\n3",
    "expected_output": "9",
    "task_finish_time": 1708361148358,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 532,
    "total_testcases": 643,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Scala",
    "submission_id": "1180062332",
    "input_formatted": "[0,0,1,2,3], 2, 3",
    "input": "[0,0,1,2,3]\n2\n3",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "object Solution {\n  def countSubMultisets(nums: List[Int], l: Int, r: Int): Int = {\n    val mod = 1000000007\n    val freq = nums.groupBy(identity).mapValues(_.size).toArray\n    val maxSum = nums.sum.min(r)\n    val dp = Array.ofDim[Int](maxSum + 1)\n    dp(0) = 1\n\n    for ((num, count) <- freq) {\n      for (sum <- maxSum to num by -1) {\n        var k = 1\n        while (k <= count && k * num <= sum) {\n          dp(sum) = (dp(sum) + dp(sum - k * num)) % mod\n          k += 1\n        }\n      }\n    }\n\n    var result = 0\n    for (sum <- l to r) {\n      result = (result + dp(sum)) % mod\n    }\n\n    result\n  }\n}"
}