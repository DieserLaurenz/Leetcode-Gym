{
    "status_code": 11,
    "lang": "python",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 12780000,
    "question_id": "3091",
    "elapsed_time": 11009,
    "compare_result
    "code_output": "2",
    "std_output": "",
    "last_testcase": "[1,2,2,3]\n6\n6",
    "expected_output": "1",
    "task_finish_time": 1708870072258,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 94,
    "total_testcases": 643,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python",
    "submission_id": "1185822662",
    "input_formatted": "[1,2,2,3], 6, 6",
    "input": "[1,2,2,3]\n6\n6",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution(object):\n    def countSubMultisets(self, nums, l, r):\n        mod = 10**9 + 7\n        max_sum = sum(nums)\n        dp = [0] * (max_sum + 1)\n        dp[0] = 1\n        \n        for num in nums:\n            for i in range(max_sum, num - 1, -1):\n                dp[i] = (dp[i] + dp[i - num]) % mod\n        \n        ans = sum(dp[l:r+1]) % mod\n        return ans"
}