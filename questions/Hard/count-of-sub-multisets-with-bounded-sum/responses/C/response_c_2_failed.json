{
    "status_code": 11,
    "lang": "c",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 8508000,
    "question_id": "3091",
    "elapsed_time": 3024,
    "compare_result
    "code_output": "2",
    "std_output": "",
    "last_testcase": "[1,2,2,3]\n6\n6",
    "expected_output": "1",
    "task_finish_time": 1708351855262,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 94,
    "total_testcases": 643,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C",
    "submission_id": "1179917393",
    "input_formatted": "[1,2,2,3], 6, 6",
    "input": "[1,2,2,3]\n6\n6",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\n#define MOD 1000000007\n\nint countSubMultisets(int* nums, int numsSize, int l, int r) {\n    long long *dp = (long long *)calloc(r + 1, sizeof(long long));\n    dp[0] = 1; // Empty subset\n    \n    for (int i = 0; i < numsSize; ++i) {\n        for (int j = r; j >= nums[i]; --j) {\n            dp[j] += dp[j - nums[i]];\n            dp[j] %= MOD;\n        }\n    }\n    \n    long long result = 0;\n    for (int i = l; i <= r; ++i) {\n        result += dp[i];\n        result %= MOD;\n    }\n    \n    free(dp);\n    return (int)result;\n}"
}