{
    "status_code": 11,
    "lang": "dart",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 153720000,
    "question_id": "3091",
    "elapsed_time": 5026,
    "compare_result": "0000001001000100000000010000000001101100010010110001000001000000101000100000010001000001000000100001000000000000100000000000000000110000000000000000000000000000000100010000000000000000000000110010000000000000000100000001000010010100010000010000000100101001000001100110100000000100000101000000000100110010000000100010000000000000001100101000010101010100000010000100100000000001000101110000100100000000000001100000000101000000000000000010000001000100000101011000000010001010100001000000000100000001000000010000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "code_output": "2",
    "std_output": "",
    "last_testcase": "[1,2,2,3]\n6\n6",
    "expected_output": "1",
    "task_finish_time": 1708360630480,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 94,
    "total_testcases": 643,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Dart",
    "submission_id": "1180053258",
    "input_formatted": "[1,2,2,3], 6, 6",
    "input": "[1,2,2,3]\n6\n6",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n  static const int mod = 1000000007;\n\n  int countSubMultisets(List<int> nums, int l, int r) {\n    int sum = nums.reduce((a, b) => a + b);\n    List<int> dp = List.filled(sum + 1, 0);\n    dp[0] = 1;\n    for (int num in nums) {\n      for (int j = sum; j >= num; j--) {\n        dp[j] = (dp[j] + dp[j - num]) % mod;\n      }\n    }\n    int result = 0;\n    for (int i = l; i <= r; i++) {\n      result = (result + dp[i]) % mod;\n    }\n    return result;\n  }\n}"
}