{
    "status_code": 11,
    "lang": "ruby",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 212676000,
    "question_id": "3091",
    "elapsed_time": 3223,
    "compare_result
    "code_output": "2",
    "std_output": "",
    "last_testcase": "[1,2,2,3]\n6\n6",
    "expected_output": "1",
    "task_finish_time": 1708360963596,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 94,
    "total_testcases": 643,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Ruby",
    "submission_id": "1180059211",
    "input_formatted": "[1,2,2,3], 6, 6",
    "input": "[1,2,2,3]\n6\n6",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "# @param {Integer[]} nums\n# @param {Integer} l\n# @param {Integer} r\n# @return {Integer}\ndef count_sub_multisets(nums, l, r)\n    mod = 10**9 + 7\n    max_sum = nums.sum\n    dp = [0] * (max_sum + 1)\n    dp[0] = 1\n\n    nums.each do |num|\n        (max_sum - num).downto(0) do |i|\n            dp[i + num] = (dp[i + num] + dp[i]) % mod\n        end\n    end\n\n    count = 0\n    (l..r).each do |i|\n        count = (count + dp[i]) % mod\n    end\n    count\nend"
}