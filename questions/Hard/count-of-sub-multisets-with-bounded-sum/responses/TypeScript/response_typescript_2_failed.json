{
    "status_code": 11,
    "lang": "typescript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 537592000,
    "question_id": "3091",
    "elapsed_time": 1282,
    "compare_result
    "code_output": "2",
    "std_output": "",
    "last_testcase": "[1,2,2,3]\n6\n6",
    "expected_output": "1",
    "task_finish_time": 1708352328185,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 85,
    "total_testcases": 643,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "TypeScript",
    "submission_id": "1179924467",
    "input_formatted": "[1,2,2,3], 6, 6",
    "input": "[1,2,2,3]\n6\n6",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "function countSubMultisets(nums: number[], l: number, r: number): number {\n    const mod = 1e9 + 7;\n    const sum = nums.reduce((a, b) => a + b, 0);\n    const dp: number[][] = Array.from({ length: nums.length + 1 }, () => Array(sum + 1).fill(0));\n    dp[0][0] = 1;\n    for (let i = 1; i <= nums.length; i++) {\n        for (let j = 0; j <= sum; j++) {\n            dp[i][j] = dp[i - 1][j];\n            if (j >= nums[i - 1]) {\n                dp[i][j] += dp[i - 1][j - nums[i - 1]];\n                dp[i][j] %= mod;\n            }\n        }\n    }\n    let ans = 0;\n    for (let s = l; s <= r; s++) {\n        for (let i = 1; i <= nums.length; i++) {\n            ans += dp[i][s];\n            ans %= mod;\n        }\n    }\n    return ans;\n}"
}