{
    "status_code": 11,
    "lang": "php",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 20504000,
    "question_id": "2879",
    "elapsed_time": 5044,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "\"acba\"\n2",
    "expected_output": "2",
    "task_finish_time": 1708650877648,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 193,
    "total_testcases": 558,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "PHP",
    "submission_id": "1183547015",
    "input_formatted": "\"acba\", 2",
    "input": "\"acba\"\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n\n    /**\n     * @param String $s\n     * @param Integer $k\n     * @return Integer\n     */\n    function minimumChanges($s, $k) {\n        $n = strlen($s);\n        $dp = array_fill(0, $n + 1, array_fill(0, $k + 1, PHP_INT_MAX));\n        $dp[0][0] = 0;\n\n        for ($i = 1; $i <= $n; ++$i) {\n            for ($j = 1; $j <= min($i, $k); ++$j) {\n                for ($p = $j - 1; $p < $i; ++$p) {\n                    $cost = $this->getCost($s, $p, $i - 1);\n                    $dp[$i][$j] = min($dp[$i][$j], $dp[$p][$j - 1] + $cost);\n                }\n            }\n        }\n\n        return $dp[$n][$k];\n    }\n\n    private function getCost($s, $start, $end) {\n        $cost = 0;\n        while ($start < $end) {\n            if ($s[$start] != $s[$end]) {\n                ++$cost;\n            }\n            ++$start;\n            --$end;\n        }\n        return $cost;\n    }\n}"
}