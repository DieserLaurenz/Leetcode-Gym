{
    "status_code": 11,
    "lang": "dart",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 152048000,
    "question_id": "2879",
    "elapsed_time": 551,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "\"acba\"\n2",
    "expected_output": "2",
    "task_finish_time": 1708660332100,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 190,
    "total_testcases": 558,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Dart",
    "submission_id": "1183627363",
    "input_formatted": "\"acba\", 2",
    "input": "\"acba\"\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n  int minimumChanges(String s, int k) {\n    final n = s.length;\n    List<List<int>> dp = List.generate(n + 1, (_) => List.generate(k + 1, (_) => 10000));\n    List<List<int>> change = List.generate(n, (_) => List.generate(n, (_) => 0));\n\n    for (int len = 1; len <= n; ++len) {\n      for (int i = 0; i + len - 1 < n; ++i) {\n        int j = i + len - 1;\n        if (len == 1) {\n          change[i][j] = 0;\n        } else {\n          change[i][j] = change[i + 1][j - 1] + (s[i] != s[j] ? 1 : 0);\n        }\n      }\n    }\n\n    dp[0][0] = 0;\n    for (int i = 1; i <= n; ++i) {\n      for (int j = 1; j <= k; ++j) {\n        for (int p = 0; p < i; ++p) {\n          dp[i][j] = min(dp[i][j], dp[p][j - 1] + change[p][i - 1]);\n        }\n      }\n    }\n\n    int ans = 10000;\n    for (int i = 1; i <= k; ++i) {\n      ans = min(ans, dp[n][i]);\n    }\n    return ans;\n  }\n\n  int min(int a, int b) => a < b ? a : b;\n}"
}