{
    "status_code": 15,
    "lang": "typescript",
    "run_success": false,
    "runtime_error": "",
    "full_runtime_error": "            cost[i][j] = len % 2 === 0 ? 0 : Math.min(cost[i + 1][j], cost[i][j - 1]);\n                                                                 ^\nTypeError: Cannot read properties of undefined (reading '4')\n    Line 9: Char 66 in solution.ts (minimumChanges)\n    Line 50: Char 19 in solution.ts (Object.<anonymous>)\n    Line 16: Char 8 in runner.js (Object.runner)\n    Line 39: Char 26 in solution.ts (Object.<anonymous>)\n    at Module._compile (node:internal/modules/cjs/loader:1376:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1435:10)\n    at Module.load (node:internal/modules/cjs/loader:1207:32)\n    at Function.Module._load (node:internal/modules/cjs/loader:1023:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:135:12)\n    at node:internal/main/run_main_module:28:49",
    "status_runtime": "N/A",
    "memory": 51456000,
    "question_id": "2879",
    "elapsed_time": 88,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "\"abcac\"\n2",
    "expected_output": "1",
    "task_finish_time": 1708650695087,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 558,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "TypeScript",
    "submission_id": "1183545666",
    "status_msg": "Runtime Error",
    "state": "SUCCESS",
    "code": "function minimumChanges(s: string, k: number): number {\n    const n = s.length;\n    const dp = Array.from({ length: n + 1 }, () => Array(k + 1).fill(Infinity));\n    const cost = Array.from({ length: n }, () => Array(n).fill(0));\n\n    for (let len = 1; len <= n; len++) {\n        for (let i = 0; i + len <= n; i++) {\n            let j = i + len - 1;\n            cost[i][j] = len % 2 === 0 ? 0 : Math.min(cost[i + 1][j], cost[i][j - 1]);\n            for (let d = 1; d < len; d++) {\n                if (len % d === 0) {\n                    let changes = 0;\n                    for (let k = 0; k < d; k++) {\n                        let freq = Array(26).fill(0);\n                        let maxFreq = 0;\n                        for (let l = i + k; l <= j; l += d) {\n                            const charIndex = s.charCodeAt(l) - 'a'.charCodeAt(0);\n                            maxFreq = Math.max(maxFreq, ++freq[charIndex]);\n                        }\n                        changes += (len / d) - maxFreq;\n                    }\n                    cost[i][j] = Math.min(cost[i][j], changes);\n                }\n            }\n        }\n    }\n\n    dp[0][0] = 0;\n    for (let i = 1; i <= n; i++) {\n        for (let j = 1; j <= k; j++) {\n            for (let l = 0; l < i; l++) {\n                dp[i][j] = Math.min(dp[i][j], dp[l][j - 1] + cost[l][i - 1]);\n            }\n        }\n    }\n\n    return dp[n][k];\n}"
}