{
    "status_code": 11,
    "lang": "kotlin",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 37848000,
    "question_id": "2879",
    "elapsed_time": 197,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "\"acba\"\n2",
    "expected_output": "2",
    "task_finish_time": 1708651248955,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 193,
    "total_testcases": 558,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Kotlin",
    "submission_id": "1183549773",
    "input_formatted": "\"acba\", 2",
    "input": "\"acba\"\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    fun minimumChanges(s: String, k: Int): Int {\n        val n = s.length\n        val dp = Array(k + 1) { IntArray(n + 1) { Int.MAX_VALUE / 2 } }\n        val cost = Array(n) { IntArray(n) }\n\n        for (len in 1..n) {\n            for (i in 0..n - len) {\n                val j = i + len - 1\n                cost[i][j] = if (len == 1) 0 else cost[i + 1][j - 1] + if (s[i] == s[j]) 0 else 1\n            }\n        }\n\n        dp[0][0] = 0\n\n        for (i in 1..k) {\n            for (j in 1..n) {\n                for (l in i - 1 until j) {\n                    dp[i][j] = dp[i][j].coerceAtMost(dp[i - 1][l] + cost[l][j - 1])\n                }\n            }\n        }\n\n        return dp[k][n]\n    }\n}"
}