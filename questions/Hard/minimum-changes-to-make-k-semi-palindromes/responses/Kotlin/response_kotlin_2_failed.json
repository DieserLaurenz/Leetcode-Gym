{
    "status_code": 11,
    "lang": "kotlin",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 39376000,
    "question_id": "2879",
    "elapsed_time": 633,
    "compare_result": "111111100101000000100010111101111111101111111111101110100000010101101000000010001111110010101111110110000000000001010110100001001001000000000010000100100010010001110100100010011101110100001010010101000001010100010001101010110011010100100000000100110101010100010011001100000001011100000001000001100000000010110111110111101100001101001010000100000100101000110010010000010001000100000100110010000000110110010010100100000001000001001000100000000000000010000011000001000000000010110010000000000000000000000000000000000000000000111111100110100000000000100011100000",
    "code_output": "1",
    "std_output": "",
    "last_testcase": "\"acba\"\n2",
    "expected_output": "2",
    "task_finish_time": 1708651308319,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 193,
    "total_testcases": 558,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Kotlin",
    "submission_id": "1183550210",
    "input_formatted": "\"acba\", 2",
    "input": "\"acba\"\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    fun minimumChanges(s: String, k: Int): Int {\n        val n = s.length\n        val dp = Array(n + 1) { IntArray(k + 1) { Int.MAX_VALUE / 2 } }\n        dp[0][0] = 0\n\n        for (i in 1..n) {\n            for (j in 1..minOf(i, k)) {\n                if (j == 1) {\n                    dp[i][j] = minChanges(s.substring(0, i))\n                } else {\n                    for (l in j - 1 until i) {\n                        dp[i][j] = minOf(dp[i][j], dp[l][j - 1] + minChanges(s.substring(l, i)))\n                    }\n                }\n            }\n        }\n\n        return dp[n][k]\n    }\n\n    private fun minChanges(sub: String): Int {\n        val len = sub.length\n        var changes = 0\n\n        for (i in 0 until len / 2) {\n            if (sub[i] != sub[len - i - 1]) changes++\n        }\n\n        return changes\n    }\n}"
}