{
    "status_code": 11,
    "lang": "python",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 11496000,
    "question_id": "2879",
    "elapsed_time": 11008,
    "compare_result
    "code_output": "0",
    "std_output": "",
    "last_testcase": "\"abcac\"\n2",
    "expected_output": "1",
    "task_finish_time": 1708902968350,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 12,
    "total_testcases": 558,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python",
    "submission_id": "1186201130",
    "input_formatted": "\"abcac\", 2",
    "input": "\"abcac\"\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution(object):\n    def minimumChanges(self, s, k):\n        def changes_to_semi_palindrome(s):\n            n = len(s)\n            if n == 1: return 0\n            changes = 0\n            for length in range(2, n+1):\n                if n % length == 0:\n                    for start in range(length):\n                        count = [0] * 26\n                        for i in range(start, n, length):\n                            count[ord(s[i]) - ord('a')] += 1\n                        changes += sum(count) - max(count)\n                    return changes // (n // length)\n            return 0\n        \n        n = len(s)\n        dp = [[float('inf')] * (k+1) for _ in range(n+1)]\n        dp[0][0] = 0\n        \n        for i in range(1, n+1):\n            for j in range(1, min(i, k)+1):\n                if j == 1:\n                    dp[i][j] = changes_to_semi_palindrome(s[:i])\n                else:\n                    for p in range(j-1, i):\n                        dp[i][j] = min(dp[i][j], dp[p][j-1] + changes_to_semi_palindrome(s[p:i]))\n        \n        return dp[n][k]"
}