{
    "status_code": 11,
    "lang": "javascript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 53368000,
    "question_id": "2879",
    "elapsed_time": 1272,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "\"acba\"\n2",
    "expected_output": "2",
    "task_finish_time": 1708650627337,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 193,
    "total_testcases": 558,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "JavaScript",
    "submission_id": "1183545181",
    "input_formatted": "\"acba\", 2",
    "input": "\"acba\"\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "/**\n * @param {string} s\n * @param {number} k\n * @return {number}\n */\nvar minimumChanges = function(s, k) {\n    const n = s.length;\n    const dp = Array.from(Array(n + 1), () => Array(k + 1).fill(Infinity));\n    const changesToSemiPalindrome = (start, end) => {\n        let changes = 0, mid = Math.floor((start + end) / 2);\n        for (let i = start; i <= mid; i++) {\n            if (s[i] !== s[end - (i - start)]) changes++;\n        }\n        return changes;\n    };\n\n    dp[0][0] = 0;\n    for (let i = 1; i <= n; i++) {\n        for (let j = 1; j <= Math.min(i, k); j++) {\n            if (j == 1) {\n                dp[i][j] = changesToSemiPalindrome(0, i - 1);\n            } else {\n                for (let m = j - 1; m < i; m++) {\n                    dp[i][j] = Math.min(dp[i][j], dp[m][j - 1] + changesToSemiPalindrome(m, i - 1));\n                }\n            }\n        }\n    }\n\n    return dp[n][k];\n};"
}