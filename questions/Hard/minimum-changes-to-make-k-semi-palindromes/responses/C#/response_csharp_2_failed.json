{
    "status_code": 11,
    "lang": "csharp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 133988000,
    "question_id": "2879",
    "elapsed_time": 4027,
    "compare_result
    "code_output": "0",
    "std_output": "",
    "last_testcase": "\"abcac\"\n2",
    "expected_output": "1",
    "task_finish_time": 1708650504819,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 27,
    "total_testcases": 558,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C#",
    "submission_id": "1183544242",
    "input_formatted": "\"abcac\", 2",
    "input": "\"abcac\"\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "public class Solution {\n    public int MinimumChanges(string s, int k) {\n        int n = s.Length;\n        int[,,] dp = new int[n + 1, k + 1, n / 2 + 1];\n        for (int i = 0; i <= n; i++)\n            for (int j = 0; j <= k; j++)\n                for (int l = 0; l <= n / 2; l++)\n                    dp[i, j, l] = int.MaxValue / 2;\n        dp[0, 0, 0] = 0;\n\n        for (int i = 0; i < n; i++) {\n            for (int j = 1; j <= k; j++) {\n                for (int l = 0; l < i; l++) {\n                    for (int d = 1; d <= (i - l) / 2; d++) {\n                        if ((i - l) % d == 0) {\n                            int changes = 0;\n                            for (int start = 0; start < d; start++) {\n                                int[] freq = new int[26];\n                                int maxFreq = 0, total = 0;\n                                for (int index = l + start; index <= i; index += d) {\n                                    maxFreq = Math.Max(maxFreq, ++freq[s[index] - 'a']);\n                                    total++;\n                                }\n                                changes += total - maxFreq;\n                            }\n                            dp[i + 1, j, d] = Math.Min(dp[i + 1, j, d], dp[l, j - 1, 0] + changes);\n                        }\n                    }\n                }\n            }\n        }\n\n        int answer = int.MaxValue;\n        for (int d = 1; d <= n / 2; d++)\n            answer = Math.Min(answer, dp[n, k, d]);\n        return answer == int.MaxValue / 2 ? 0 : answer;\n    }\n}"
}