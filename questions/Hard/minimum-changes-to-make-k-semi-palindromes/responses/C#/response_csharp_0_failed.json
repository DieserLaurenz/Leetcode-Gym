{
    "status_code": 11,
    "lang": "csharp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 42052000,
    "question_id": "2879",
    "elapsed_time": 265,
    "compare_result
    "code_output": "0",
    "std_output": "",
    "last_testcase": "\"abcac\"\n2",
    "expected_output": "1",
    "task_finish_time": 1708650425666,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 39,
    "total_testcases": 558,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C#",
    "submission_id": "1183543665",
    "input_formatted": "\"abcac\", 2",
    "input": "\"abcac\"\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "public class Solution {\n    public int MinimumChanges(string s, int k) {\n        int n = s.Length;\n        int[,] dp = new int[n + 1, k + 1];\n        int[,] cost = new int[n, n];\n\n        for (int len = 2; len <= n; ++len) {\n            for (int i = 0; i + len <= n; ++i) {\n                int j = i + len - 1;\n                cost[i, j] = cost[i + 1, j - 1] + (s[i] == s[j] ? 0 : 1);\n                for (int d = 2; d < len; ++d) {\n                    if (len % d == 0) {\n                        int tmpCost = 0;\n                        for (int x = 0; x < d; ++x) {\n                            for (int y = x; y < len; y += d) {\n                                if (s[i + y] != s[i + x]) tmpCost++;\n                            }\n                        }\n                        cost[i, j] = Math.Min(cost[i, j], tmpCost / 2);\n                    }\n                }\n            }\n        }\n\n        for (int i = 0; i <= n; ++i) {\n            for (int j = 0; j <= k; ++j) {\n                dp[i, j] = int.MaxValue / 2;\n            }\n        }\n        \n        dp[0, 0] = 0;\n        for (int i = 1; i <= n; ++i) {\n            for (int j = 1; j <= k; ++j) {\n                for (int p = 0; p < i; ++p) {\n                    dp[i, j] = Math.Min(dp[i, j], dp[p, j - 1] + cost[p, i - 1]);\n                }\n            }\n        }\n\n        return dp[n, k];\n    }\n}"
}