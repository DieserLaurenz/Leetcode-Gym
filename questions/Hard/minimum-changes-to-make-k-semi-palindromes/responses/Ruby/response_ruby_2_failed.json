{
    "status_code": 11,
    "lang": "ruby",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 214168000,
    "question_id": "2879",
    "elapsed_time": 2394,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "\"acba\"\n2",
    "expected_output": "2",
    "task_finish_time": 1708660620859,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 193,
    "total_testcases": 558,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Ruby",
    "submission_id": "1183630491",
    "input_formatted": "\"acba\", 2",
    "input": "\"acba\"\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "# @param {String} s\n# @param {Integer} k\n# @return {Integer}\ndef minimum_changes(s, k)\n    n = s.length\n    dp = Array.new(k+1) { Array.new(n+1) { Float::INFINITY } }\n    dp[0][0] = 0\n\n    # Precompute the cost to make each substring a palindrome\n    cost = Array.new(n) { Array.new(n, 0) }\n    (0...n).each do |i|\n        (i...n).each do |j|\n            cost[i][j] = compute_cost(s, i, j)\n        end\n    end\n\n    (1..k).each do |i|\n        (1..n).each do |j|\n            (i-1...j).each do |m|\n                dp[i][j] = [dp[i][j], dp[i-1][m] + cost[m][j-1]].min\n            end\n        end\n    end\n\n    dp[k][n]\nend\n\ndef compute_cost(s, i, j)\n    changes = 0\n    while i < j\n        changes += 1 if s[i] != s[j]\n        i += 1\n        j -= 1\n    end\n    changes\nend"
}