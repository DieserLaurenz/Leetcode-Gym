{
    "status_code": 15,
    "lang": "dart",
    "run_success": false,
    "runtime_error": "Line 10: Char 7: Error: 'Queue' isn't a type.",
    "full_runtime_error": "Line 10: Char 7: Error: 'Queue' isn't a type.\n      Queue<int> q = Queue<int>();\n      ^^^^^\nLine 10: Char 22: Error: The method 'Queue' isn't defined for the class 'Solution'.\nTry correcting the name to the name of an existing method, or defining a method named 'Queue'.\n      Queue<int> q = Queue<int>();\n                     ^^^^^",
    "status_runtime": "N/A",
    "memory": 145792000,
    "question_id": "2921",
    "elapsed_time": 385,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "\"1\"\n\"11\"",
    "expected_output": "10",
    "task_finish_time": 1708371972791,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 2523,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Dart",
    "submission_id": "1180238642",
    "status_msg": "Runtime Error",
    "state": "SUCCESS",
    "code": "class Solution {\n  int countSteppingNumbers(String low, String high) {\n    final int mod = 1000000007;\n    int l = int.parse(low);\n    int h = int.parse(high);\n    int count = 0;\n\n    List<int> bfs(int start, int l, int h) {\n      List<int> res = [];\n      Queue<int> q = Queue<int>();\n      q.add(start);\n      while (q.isNotEmpty) {\n        int curr = q.removeFirst();\n        if (curr <= h && curr >= l) {\n          res.add(curr);\n        }\n        if (curr == 0 || curr > h) continue;\n        int lastDigit = curr % 10;\n        int num1 = curr * 10 + lastDigit - 1;\n        int num2 = curr * 10 + lastDigit + 1;\n        if (lastDigit > 0) q.add(num1);\n        if (lastDigit < 9) q.add(num2);\n      }\n      return res;\n    }\n\n    if (l == 0) {\n      count++;\n      l = 1;\n    }\n\n    for (int i = 1; i <= 9; i++) {\n      count += bfs(i, l, h).length;\n    }\n\n    return count % mod;\n  }\n}"
}