{
    "status_code": 11,
    "lang": "java",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 44604000,
    "question_id": "2921",
    "elapsed_time": 2038,
    "compare_result": "010111101111101111111111101010111110111111101111111111111111111011111111111010111111111111111001111100010111110111111110111111111111101110111111111111011111111111011010011111110011111111111111101101111101111111111111111111111111111111111111111111111111111111111111101111111111111111111111100111101011111011111111101111111011111011111111111111111111111111101111111111111111111111101111111110111101111111111101111111101111111111111111111111111111111111101111111111111111110111111101111110111011111111111101011111111111110111111111111111111111111111111111111111111111111111101111111111111111111110110111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111101111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "code_output": "11",
    "std_output": "",
    "last_testcase": "\"1\"\n\"11\"",
    "expected_output": "10",
    "task_finish_time": 1708362037655,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 2342,
    "total_testcases": 2523,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Java",
    "submission_id": "1180078312",
    "input_formatted": "\"1\", \"11\"",
    "input": "\"1\"\n\"11\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    private static final int MOD = 1000000007;\n\n    public int countSteppingNumbers(String low, String high) {\n        int count = 0;\n        for (int i = 1; i <= 9; i++) {\n            count = (count + dfs(i, low, high)) % MOD;\n        }\n        if (isStepping(low)) count = (count + 1) % MOD; // Include low if it's a stepping number\n        return count;\n    }\n\n    private int dfs(long num, String low, String high) {\n        if (num > Long.parseLong(high)) return 0;\n        int count = num >= Long.parseLong(low) ? 1 : 0;\n        long lastDigit = num % 10;\n        if (lastDigit > 0) count = (count + dfs(num * 10 + lastDigit - 1, low, high)) % MOD;\n        if (lastDigit < 9) count = (count + dfs(num * 10 + lastDigit + 1, low, high)) % MOD;\n        return count;\n    }\n\n    private boolean isStepping(String num) {\n        if (num.length() == 1) return true; // Single digit numbers are stepping numbers\n        for (int i = 1; i < num.length(); i++) {\n            if (Math.abs(num.charAt(i) - num.charAt(i - 1)) != 1) return false;\n        }\n        return true;\n    }\n}"
}