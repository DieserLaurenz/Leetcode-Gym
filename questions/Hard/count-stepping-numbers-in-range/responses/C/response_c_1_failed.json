{
    "status_code": 15,
    "lang": "c",
    "run_success": false,
    "runtime_error": "Line 24: Char 9: runtime error: null pointer passed as argument 1, which is declared to never be null [solution.c]",
    "full_runtime_error": "Line 24: Char 9: runtime error: null pointer passed as argument 1, which is declared to never be null [solution.c]",
    "status_runtime": "N/A",
    "memory": 5228000,
    "question_id": "2921",
    "elapsed_time": 12,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "\"1\"\n\"11\"",
    "expected_output": "10",
    "task_finish_time": 1708362200649,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 2523,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C",
    "submission_id": "1180081316",
    "status_msg": "Runtime Error",
    "state": "SUCCESS",
    "code": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n\n#define MOD 1000000007\n\nlong long toLongLong(const char *str) {\n    long long result = 0;\n    for (int i = 0; str[i] != '\\0'; ++i) {\n        result = result * 10 + (str[i] - '0');\n        if (result > MOD) result %= MOD;\n    }\n    return result;\n}\n\nvoid dfs(int num, long long low, long long high, int* count) {\n    if (num != 0) {\n        long long current = toLongLong(num);\n        if (current >= low && current <= high) {\n            (*count)++;\n            if (*count >= MOD) *count -= MOD;\n        }\n    }\n    if (strlen(num) == 10) return; // Limit the length to avoid overflow and because high < 10^100\n\n    if (num == 0) {\n        for (int i = 1; i <= 9; ++i) {\n            dfs(i, low, high, count);\n        }\n    } else {\n        int lastDigit = num % 10;\n        if (lastDigit > 0) dfs(num * 10 + lastDigit - 1, low, high, count);\n        if (lastDigit < 9) dfs(num * 10 + lastDigit + 1, low, high, count);\n    }\n}\n\nint countSteppingNumbers(char *low, char *high) {\n    long long lowNum = atoll(low);\n    long long highNum = atoll(high);\n    int count = 0;\n    \n    dfs(0, lowNum, highNum, &count);\n    \n    return count;\n}"
}