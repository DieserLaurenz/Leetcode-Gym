{
    "status_code": 15,
    "lang": "c",
    "run_success": false,
    "runtime_error": "Line 13: Char 32: runtime error: signed integer overflow: 1010101010101010101 * 10 cannot be represented in type 'long long int' [solution.c]",
    "full_runtime_error": "Line 13: Char 32: runtime error: signed integer overflow: 1010101010101010101 * 10 cannot be represented in type 'long long int' [solution.c]",
    "status_runtime": "N/A",
    "memory": 5928000,
    "question_id": "2921",
    "elapsed_time": 45,
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "code_output": "",
    "std_output": "",
    "last_testcase": "\"1\"\n\"9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999\"",
    "expected_output": "125046265",
    "task_finish_time": 1708362145013,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 2402,
    "total_testcases": 2523,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C",
    "submission_id": "1180080282",
    "status_msg": "Runtime Error",
    "state": "SUCCESS",
    "code": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n\n#define MOD 1000000007\n\nvoid dfs(long long num, int prevDigit, long long low, long long high, int* count) {\n    if (num >= low && num <= high) {\n        (*count)++;\n    }\n    if (num > high) return;\n    \n    if (prevDigit > 0) dfs(num * 10 + prevDigit - 1, prevDigit - 1, low, high, count);\n    if (prevDigit < 9) dfs(num * 10 + prevDigit + 1, prevDigit + 1, low, high, count);\n}\n\nint countSteppingNumbers(char * low, char * high) {\n    long long lowNum = atoll(low);\n    long long highNum = atoll(high);\n    int count = 0;\n    \n    if (lowNum == 0) count++; // 0 is a stepping number but not part of dfs tree\n    \n    for (int digit = 1; digit <= 9; digit++) {\n        dfs(digit, digit, lowNum, highNum, &count);\n    }\n    \n    return count % MOD;\n}"
}