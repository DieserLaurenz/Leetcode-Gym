{
    "status_code": 15,
    "lang": "c",
    "run_success": false,
    "runtime_error": "Line 12: Char 25: runtime error: signed integer overflow: 999999999999999999 * 10 cannot be represented in type 'long long int' [solution.c]",
    "full_runtime_error": "Line 12: Char 25: runtime error: signed integer overflow: 999999999999999999 * 10 cannot be represented in type 'long long int' [solution.c]",
    "status_runtime": "N/A",
    "memory": 5596000,
    "question_id": "2921",
    "elapsed_time": 42,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "\"1\"\n\"9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999\"",
    "expected_output": "125046265",
    "task_finish_time": 1708362247675,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 2402,
    "total_testcases": 2523,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C",
    "submission_id": "1180082183",
    "status_msg": "Runtime Error",
    "state": "SUCCESS",
    "code": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n\n#define MOD 1000000007\n\nint count = 0;\n\nlong long stringToLongLong(char *s) {\n    long long number = 0;\n    for (int i = 0; s[i]; i++) {\n        number = number * 10 + (s[i] - '0');\n    }\n    return number;\n}\n\nvoid dfs(long long n, long long low, long long high) {\n    if (n >= low && n <= high) count = (count + 1) % MOD;\n    if (n == 0 || n > high) return;\n    \n    int lastDigit = n % 10;\n    long long next1 = n * 10 + lastDigit - 1;\n    long long next2 = n * 10 + lastDigit + 1;\n    \n    if (lastDigit > 0) dfs(next1, low, high);\n    if (lastDigit < 9) dfs(next2, low, high);\n}\n\nint countSteppingNumbers(char *low, char *high) {\n    long long lowVal = stringToLongLong(low);\n    long long highVal = stringToLongLong(high);\n    count = 0;\n    \n    if (lowVal == 0) {\n        count = 1; // 0 is a stepping number\n        lowVal = 1; // Start from 1 to avoid infinite recursion\n    }\n    \n    for (int i = 1; i <= 9; i++) {\n        dfs(i, lowVal, highVal);\n    }\n    \n    return count;\n}"
}