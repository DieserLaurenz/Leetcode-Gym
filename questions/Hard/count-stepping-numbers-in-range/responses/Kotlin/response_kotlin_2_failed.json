{
    "status_code": 15,
    "lang": "kotlin",
    "run_success": false,
    "runtime_error": "Line 7: Exception in thread \"main\" java.lang.NumberFormatException: For input string: \"9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999\"",
    "full_runtime_error": "Line 7: Exception in thread \"main\" java.lang.NumberFormatException: For input string: \"9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999\"",
    "status_runtime": "N/A",
    "memory": 39872000,
    "question_id": "2921",
    "elapsed_time": 241,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "\"1\"\n\"9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999\"",
    "expected_output": "125046265",
    "task_finish_time": 1708371846717,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 2402,
    "total_testcases": 2523,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Kotlin",
    "submission_id": "1180236983",
    "status_msg": "Runtime Error",
    "state": "SUCCESS",
    "code": "class Solution {\n    private val mod = 1000000007\n\n    fun countSteppingNumbers(low: String, high: String): Int {\n        var count = 0\n        val lowNum = low.toLong()\n        val highNum = high.toLong()\n\n        fun dfs(n: Long) {\n            if (n > highNum) return\n            if (n >= lowNum) count = (count + 1) % mod\n            val lastDigit = n % 10\n            if (lastDigit < 9) dfs(n * 10 + lastDigit + 1)\n            if (lastDigit > 0) dfs(n * 10 + lastDigit - 1)\n        }\n\n        if (lowNum == 0L) count++\n        for (i in 1..9) dfs(i.toLong())\n        return count\n    }\n}"
}