{
    "status_code": 15,
    "lang": "cpp",
    "run_success": false,
    "runtime_error": "terminate called after throwing an instance of 'std::out_of_range'",
    "full_runtime_error": "terminate called after throwing an instance of 'std::out_of_range'\n  what():  stoll",
    "status_runtime": "N/A",
    "memory": 142156000,
    "question_id": "2921",
    "elapsed_time": 425,
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "code_output": "",
    "std_output": "",
    "last_testcase": "\"1\"\n\"9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999\"",
    "expected_output": "125046265",
    "task_finish_time": 1708361882520,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 2402,
    "total_testcases": 2523,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C++",
    "submission_id": "1180075686",
    "status_msg": "Runtime Error",
    "state": "SUCCESS",
    "code": "#include <string>\n#include <vector>\n#include <queue>\n#define MOD 1000000007\n\nusing namespace std;\n\nclass Solution {\n    long long toInt(string& s) {\n        long long num = 0;\n        for (char c : s) num = num * 10 + (c - '0');\n        return num;\n    }\n\n    int bfs(string low, string high) {\n        long long l = stoll(low), h = stoll(high);\n        int count = 0;\n        for (int i = 0; i <= 9; ++i) {\n            queue<long long> q;\n            q.push(i);\n            while (!q.empty()) {\n                long long curr = q.front();\n                q.pop();\n                if (curr >= l && curr <= h) count++;\n                if (curr == 0 || curr > h) continue;\n                int lastDigit = curr % 10;\n                if (lastDigit > 0) q.push(curr * 10 + lastDigit - 1);\n                if (lastDigit < 9) q.push(curr * 10 + lastDigit + 1);\n            }\n        }\n        return count % MOD;\n    }\npublic:\n    int countSteppingNumbers(string low, string high) {\n        return bfs(low, high);\n    }\n};"
}