{
    "status_code": 15,
    "lang": "cpp",
    "run_success": false,
    "runtime_error": "terminate called after throwing an instance of 'std::out_of_range'",
    "full_runtime_error": "terminate called after throwing an instance of 'std::out_of_range'\n  what():  stoll",
    "status_runtime": "N/A",
    "memory": 64264000,
    "question_id": "2921",
    "elapsed_time": 368,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "\"1\"\n\"9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999\"",
    "expected_output": "125046265",
    "task_finish_time": 1708361923251,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 2402,
    "total_testcases": 2523,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C++",
    "submission_id": "1180076413",
    "status_msg": "Runtime Error",
    "state": "SUCCESS",
    "code": "#include <string>\n#include <vector>\n#define MOD 1000000007\n\nusing namespace std;\n\nclass Solution {\npublic:\n    int countSteppingNumbers(string low, string high) {\n        long long l = stoll(low), h = stoll(high);\n        vector<long long> steppingNumbers;\n        \n        // Special case for 0, as it's a valid stepping number but won't be included in the loop below.\n        if (l == 0) {\n            steppingNumbers.push_back(0);\n            l = 1; // To avoid counting 0 twice if it's within the range.\n        }\n\n        for (int i = 1; i <= 9; ++i) {\n            dfs(i, l, h, steppingNumbers);\n        }\n\n        return steppingNumbers.size() % MOD;\n    }\n\nprivate:\n    void dfs(long long current, long long& low, long long& high, vector<long long>& steppingNumbers) {\n        if (current >= low && current <= high) {\n            steppingNumbers.push_back(current);\n        }\n        \n        if (current > high) return;\n\n        int lastDigit = current % 10;\n        if (lastDigit > 0) dfs(current * 10 + lastDigit - 1, low, high, steppingNumbers);\n        if (lastDigit < 9) dfs(current * 10 + lastDigit + 1, low, high, steppingNumbers);\n    }\n};"
}