{
    "status_code": 14,
    "lang": "erlang",
    "run_success": false,
    "status_runtime": "N/A",
    "memory": 61904000,
    "question_id": "2921",
    "elapsed_time": 5190,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "\"1960897884\"\n\"3794105177\"",
    "expected_output": "743",
    "task_finish_time": 1708372841156,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 1660,
    "total_testcases": 2523,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Erlang",
    "submission_id": "1180249529",
    "status_msg": "Time Limit Exceeded",
    "state": "SUCCESS",
    "code": "-spec count_stepping_numbers(Low :: unicode:unicode_binary(), High :: unicode:unicode_binary()) -> integer().\ncount_stepping_numbers(Low, High) ->\n    LowInt = binary_to_integer(Low),\n    HighInt = binary_to_integer(High),\n    SteppingNumbers = generate_stepping_numbers(LowInt, HighInt),\n    length(SteppingNumbers) rem 1000000007.\n\ngenerate_stepping_numbers(Low, High) ->\n    Queues = lists:foldl(fun(Digit, Acc) -> [Digit | Acc] end, [], lists:seq(1, 9)),\n    bfs(Queues, Low, High, []).\n\nbfs([], _Low, _High, Acc) -> Acc;\nbfs([H|T], Low, High, Acc) when H > High -> bfs(T, Low, High, Acc);\nbfs([H|T], Low, High, Acc) ->\n    NextAcc = if H >= Low andalso H =< High -> [H|Acc]; true -> Acc end,\n    NextDigits = next_steps(H),\n    bfs(T ++ NextDigits, Low, High, NextAcc).\n\nnext_steps(N) ->\n    LastDigit = N rem 10,\n    Candidates = case LastDigit of\n        0 -> [1];\n        9 -> [8];\n        _ -> [LastDigit - 1, LastDigit + 1]\n    end,\n    lists:map(fun(Digit) -> N * 10 + Digit end, Candidates)."
}