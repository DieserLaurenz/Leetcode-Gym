{
    "status_code": 15,
    "lang": "rust",
    "run_success": false,
    "runtime_error": "",
    "full_runtime_error": "",
    "status_runtime": "N/A",
    "memory": 2188000,
    "question_id": "2921",
    "elapsed_time": 125,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "\"1\"\n\"9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999\"",
    "expected_output": "125046265",
    "task_finish_time": 1708372513777,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 2402,
    "total_testcases": 2523,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Rust",
    "submission_id": "1180245603",
    "status_msg": "Runtime Error",
    "state": "SUCCESS",
    "code": "impl Solution {\n    pub fn count_stepping_numbers(low: String, high: String) -> i32 {\n        let low = low.parse::<i128>().unwrap();\n        let high = high.parse::<i128>().unwrap();\n        let mod_val = 1_000_000_007;\n        let mut count = 0;\n\n        for i in 0..=9 {\n            let mut stack = vec![i];\n            while let Some(num) = stack.pop() {\n                if num >= low && num <= high {\n                    count = (count + 1) % mod_val;\n                }\n                if num == 0 || num > high {\n                    continue;\n                }\n                let last_digit = num % 10;\n                let next_nums = vec![last_digit - 1, last_digit + 1];\n                for next_num in next_nums {\n                    if next_num >= 0 && next_num <= 9 {\n                        let new_num = num * 10 + next_num;\n                        if new_num <= high {\n                            stack.push(new_num);\n                        }\n                    }\n                }\n            }\n        }\n\n        count\n    }\n}"
}