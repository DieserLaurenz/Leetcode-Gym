{
    "status_code": 11,
    "lang": "cpp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 56152000,
    "question_id": "3107",
    "elapsed_time": 165,
    "compare_result
    "code_output": "268",
    "std_output": "",
    "last_testcase": "[[8,5,2],[6,4,1],[9,7,3]]",
    "expected_output": "285",
    "task_finish_time": 1708608687018,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 313,
    "total_testcases": 779,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C++",
    "submission_id": "1183040722",
    "input_formatted": "[[8,5,2],[6,4,1],[9,7,3]]",
    "input": "[[8,5,2],[6,4,1],[9,7,3]]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "#include <vector>\n#include <queue>\n\nusing namespace std;\n\nclass Solution {\npublic:\n    long long maxSpending(vector<vector<int>>& values) {\n        priority_queue<int> pq;\n        long long result = 0;\n        int m = values.size(), n = values[0].size(), day = 1;\n\n        for (int j = n - 1; j >= 0; --j) {\n            for (int i = 0; i < m; ++i) {\n                pq.push(values[i][j]);\n            }\n            while (!pq.empty() && day <= m * n) {\n                result += (long long)pq.top() * day;\n                pq.pop();\n                ++day;\n            }\n        }\n\n        return result;\n    }\n};"
}