{
    "status_code": 11,
    "lang": "cpp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 72192000,
    "question_id": "3107",
    "elapsed_time": 271,
    "compare_result
    "code_output": "165",
    "std_output": "",
    "last_testcase": "[[8,5,2],[6,4,1],[9,7,3]]",
    "expected_output": "285",
    "task_finish_time": 1708608719952,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 9,
    "total_testcases": 779,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C++",
    "submission_id": "1183041199",
    "input_formatted": "[[8,5,2],[6,4,1],[9,7,3]]",
    "input": "[[8,5,2],[6,4,1],[9,7,3]]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "#include <vector>\n#include <queue>\n#include <functional>\n\nusing namespace std;\n\nclass Solution {\npublic:\n    long long maxSpending(vector<vector<int>>& values) {\n        auto cmp = [](const pair<int, int>& a, const pair<int, int>& b) {\n            return a.first < b.first || (a.first == b.first && a.second > b.second);\n        };\n        priority_queue<pair<int, int>, vector<pair<int, int>>, decltype(cmp)> pq(cmp);\n        long long total = 0;\n        int days = 1, m = values.size(), n = values[0].size();\n\n        for (int i = 0; i < m; ++i) {\n            for (int j = 0; j < n; ++j) {\n                pq.push({values[i][j], j});\n            }\n        }\n\n        while (!pq.empty()) {\n            int value = pq.top().first;\n            pq.pop();\n            total += (long long)value * days;\n            days++;\n        }\n\n        return total;\n    }\n};"
}