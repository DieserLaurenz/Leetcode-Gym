{
    "status_code": 11,
    "lang": "typescript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 60820000,
    "question_id": "3107",
    "elapsed_time": 161,
    "compare_result
    "code_output": "224",
    "std_output": "",
    "last_testcase": "[[8,5,2],[6,4,1],[9,7,3]]",
    "expected_output": "285",
    "task_finish_time": 1708609407236,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 3,
    "total_testcases": 779,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "TypeScript",
    "submission_id": "1183050262",
    "input_formatted": "[[8,5,2],[6,4,1],[9,7,3]]",
    "input": "[[8,5,2],[6,4,1],[9,7,3]]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "function maxSpending(values: number[][]): number {\n    const m = values.length;\n    const n = values[0].length;\n    const totalItems = m * n;\n    let result = 0;\n    const pq: number[] = [];\n    for (let i = 0; i < m; i++) {\n        for (let j = 0; j < n; j++) {\n            pq.push(values[i][j] * (j + 1));\n        }\n    }\n    pq.sort((a, b) => b - a);\n    for (let i = 0; i < totalItems; i++) {\n        result += pq[i] * (i + 1) / ((i / n) | 0 + 1);\n    }\n    return result;\n};"
}