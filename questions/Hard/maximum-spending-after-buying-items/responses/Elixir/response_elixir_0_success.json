{
    "status_code": 10,
    "lang": "elixir",
    "run_success": true,
    "status_runtime": "941 ms",
    "memory": 205856000,
    "question_id": "3107",
    "elapsed_time": 1181,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1708619135345,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 779,
    "total_testcases": 779,
    "runtime_percentile": 100,
    "status_memory": "205.9 MB",
    "memory_percentile": 100,
    "pretty_lang": "Elixir",
    "submission_id": "1183193512",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "defmodule Solution do\n  @spec max_spending(values :: [[integer]]) :: integer\n  def max_spending(values) do\n    values\n    |> Enum.map(&Enum.reverse/1)\n    |> List.flatten()\n    |> Enum.sort()\n    |> Enum.with_index(1)\n    |> Enum.reduce(0, fn {value, index}, acc -> acc + value * index end)\n  end\nend"
}