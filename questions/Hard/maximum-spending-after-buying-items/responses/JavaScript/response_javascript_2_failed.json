{
    "status_code": 11,
    "lang": "javascript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 67864000,
    "question_id": "3107",
    "elapsed_time": 181,
    "compare_result
    "code_output": "72",
    "std_output": "",
    "last_testcase": "[[8,5,2],[6,4,1],[9,7,3]]",
    "expected_output": "285",
    "task_finish_time": 1708609323675,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 4,
    "total_testcases": 779,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "JavaScript",
    "submission_id": "1183049119",
    "input_formatted": "[[8,5,2],[6,4,1],[9,7,3]]",
    "input": "[[8,5,2],[6,4,1],[9,7,3]]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "/**\n * @param {number[][]} values\n * @return {number}\n */\nvar maxSpending = function(values) {\n    let totalItems = values.length * values[0].length;\n    let maxAmount = 0;\n    let day = 1;\n\n    // Flatten and sort the values array in decreasing order\n    let allValues = [];\n    for (let i = 0; i < values.length; i++) {\n        for (let j = 0; j < values[i].length; j++) {\n            allValues.push(values[i][j]);\n        }\n    }\n    allValues.sort((a, b) => b - a);\n\n    // Calculate the maximum spending\n    for (let i = 0; i < totalItems; i++) {\n        maxAmount += allValues[i] * day;\n        if ((i + 1) % values[0].length === 0) day++;\n    }\n\n    return maxAmount;\n};"
}