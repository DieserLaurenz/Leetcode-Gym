{
    "status_code": 11,
    "lang": "javascript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 86308000,
    "question_id": "3107",
    "elapsed_time": 527,
    "compare_result
    "code_output": "73",
    "std_output": "",
    "last_testcase": "[[8,5,2],[6,4,1],[9,7,3]]",
    "expected_output": "285",
    "task_finish_time": 1708609291713,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 2,
    "total_testcases": 779,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "JavaScript",
    "submission_id": "1183048653",
    "input_formatted": "[[8,5,2],[6,4,1],[9,7,3]]",
    "input": "[[8,5,2],[6,4,1],[9,7,3]]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "/**\n * @param {number[][]} values\n * @return {number}\n */\nvar maxSpending = function(values) {\n    let pq = new MaxPriorityQueue({priority: x => x.value});\n    let m = values.length, n = values[0].length, res = 0, day = 1;\n\n    for (let i = 0; i < m; i++) {\n        for (let j = 0; j < n; j++) {\n            pq.enqueue({value: values[i][j], day: j + 1});\n        }\n    }\n\n    while (!pq.isEmpty()) {\n        let {element} = pq.dequeue();\n        res += element.value * Math.min(element.day, day++);\n    }\n\n    return res;\n};"
}