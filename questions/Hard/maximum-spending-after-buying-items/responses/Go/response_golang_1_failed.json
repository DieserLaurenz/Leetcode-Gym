{
    "status_code": 11,
    "lang": "golang",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 9952000,
    "question_id": "3107",
    "elapsed_time": 164,
    "compare_result
    "code_output": "165",
    "std_output": "",
    "last_testcase": "[[8,5,2],[6,4,1],[9,7,3]]",
    "expected_output": "285",
    "task_finish_time": 1708618437991,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 9,
    "total_testcases": 779,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Go",
    "submission_id": "1183182207",
    "input_formatted": "[[8,5,2],[6,4,1],[9,7,3]]",
    "input": "[[8,5,2],[6,4,1],[9,7,3]]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "func maxSpending(values [][]int) int64 {\n    maxDays := len(values) * len(values[0])\n    prices := make([]int, 0, maxDays)\n    \n    for _, shop := range values {\n        for _, value := range shop {\n            prices = append(prices, value)\n        }\n    }\n    \n    sort.Sort(sort.Reverse(sort.IntSlice(prices)))\n    \n    total := int64(0)\n    for day, price := range prices {\n        total += int64(price) * int64(day+1)\n    }\n    return total\n}"
}