{
    "status_code": 11,
    "lang": "python3",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 19252000,
    "question_id": "3107",
    "elapsed_time": 334,
    "compare_result
    "code_output": "302",
    "std_output": "",
    "last_testcase": "[[8,5,2],[6,4,1],[9,7,3]]",
    "expected_output": "285",
    "task_finish_time": 1708902039656,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 6,
    "total_testcases": 779,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python3",
    "submission_id": "1186193989",
    "input_formatted": "[[8,5,2],[6,4,1],[9,7,3]]",
    "input": "[[8,5,2],[6,4,1],[9,7,3]]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "from typing import List\nfrom heapq import heappush, heappop\n\nclass Solution:\n    def maxSpending(self, values: List[List[int]]) -> int:\n        m, n = len(values), len(values[0])\n        maxHeap = []\n        for i in range(m):\n            for j in range(n):\n                heappush(maxHeap, -(values[i][j] * (j + 1)))\n\n        total = 0\n        for day in range(1, m * n + 1):\n            total += -heappop(maxHeap) * day\n        return total"
}