{
    "status_code": 11,
    "lang": "python3",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 36744000,
    "question_id": "3107",
    "elapsed_time": 999,
    "compare_result
    "code_output": "165",
    "std_output": "",
    "last_testcase": "[[8,5,2],[6,4,1],[9,7,3]]",
    "expected_output": "285",
    "task_finish_time": 1708901988910,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 9,
    "total_testcases": 779,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python3",
    "submission_id": "1186193595",
    "input_formatted": "[[8,5,2],[6,4,1],[9,7,3]]",
    "input": "[[8,5,2],[6,4,1],[9,7,3]]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "from typing import List\nfrom heapq import heappush, heappop\n\nclass Solution:\n    def maxSpending(self, values: List[List[int]]) -> int:\n        heap = []\n        for i, shop in enumerate(values):\n            for j, value in enumerate(shop):\n                heappush(heap, (-value, i, j))\n        \n        result = 0\n        day = 1\n        while heap:\n            value, i, j = heappop(heap)\n            result += -value * day\n            day += 1\n        return result"
}