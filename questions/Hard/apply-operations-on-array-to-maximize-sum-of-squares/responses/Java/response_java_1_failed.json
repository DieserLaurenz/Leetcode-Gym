{
    "status_code": 11,
    "lang": "java",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 66444000,
    "display_runtime": "60",
    "question_id": "3153",
    "elapsed_time": 517,
    "compare_result
    "code_output": "80",
    "std_output": "",
    "last_testcase": "[2,6,5,8]\n2",
    "expected_output": "261",
    "task_finish_time": 1708246762603,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 918,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Java",
    "submission_id": "1178711889",
    "input_formatted": "[2,6,5,8], 2",
    "input": "[2,6,5,8]\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "import java.util.Collections;\nimport java.util.List;\n\nclass Solution {\n    public int maxSum(List<Integer> nums, int k) {\n        long mod = 1000000007;\n        long[] count = new long[32];\n        \n        for (int num : nums) {\n            for (int i = 0; i < 32; i++) {\n                if ((num & (1 << i)) != 0) {\n                    count[i]++;\n                }\n            }\n        }\n        \n        long result = 0;\n        for (int i = 31; i >= 0; i--) {\n            long take = Math.min(k, count[i]);\n            result += take * (1L << i) * (1L << i);\n            result %= mod;\n            k -= take;\n        }\n        \n        return (int) result;\n    }\n}"
}