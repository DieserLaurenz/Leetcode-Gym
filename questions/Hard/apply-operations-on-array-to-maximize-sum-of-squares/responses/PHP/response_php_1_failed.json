{
    "status_code": 11,
    "lang": "php",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 31216000,
    "question_id": "3153",
    "elapsed_time": 478,
    "compare_result
    "code_output": "100",
    "std_output": "",
    "last_testcase": "[2,6,5,8]\n2",
    "expected_output": "261",
    "task_finish_time": 1708247335029,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 8,
    "total_testcases": 918,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "PHP",
    "submission_id": "1178717581",
    "input_formatted": "[2,6,5,8], 2",
    "input": "[2,6,5,8]\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @param Integer $k\n     * @return Integer\n     */\n    function maxSum($nums, $k) {\n        rsort($nums); // Sort the numbers in descending order\n        $sum = 0;\n        $mod = 1000000007;\n        for ($i = 0; $i < $k; $i++) {\n            $sum = ($sum + pow($nums[$i], 2)) % $mod; // Sum the squares of the top k elements\n        }\n        return $sum;\n    }\n}"
}