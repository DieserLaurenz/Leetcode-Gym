{
    "status_code": 11,
    "lang": "kotlin",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 120400000,
    "question_id": "3153",
    "elapsed_time": 1420,
    "compare_result
    "code_output": "80",
    "std_output": "",
    "last_testcase": "[2,6,5,8]\n2",
    "expected_output": "261",
    "task_finish_time": 1708247604466,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 918,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Kotlin",
    "submission_id": "1178720255",
    "input_formatted": "[2,6,5,8], 2",
    "input": "[2,6,5,8]\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    fun maxSum(nums: List<Int>, k: Int): Int {\n        val mod = 1_000_000_007\n        val max = nums.maxOrNull() ?: 0\n        val bitCounts = IntArray(31)\n        for (num in nums) {\n            for (i in 0 until 31) {\n                if (num and (1 shl i) != 0) bitCounts[i]++\n            }\n        }\n        val resultNums = mutableListOf<Int>()\n        for (i in 0 until 31) {\n            if (bitCounts[i] > 0) {\n                for (j in 1..bitCounts[i]) {\n                    resultNums.add(1 shl i)\n                }\n            }\n        }\n        val sortedNums = resultNums.sortedDescending()\n        var result: Long = 0\n        for (i in 0 until k) {\n            result = (result + (sortedNums[i].toLong() * sortedNums[i]) % mod) % mod\n        }\n        return result.toInt()\n    }\n}"
}