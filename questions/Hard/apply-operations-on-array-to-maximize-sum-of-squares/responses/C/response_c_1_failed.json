{
    "status_code": 11,
    "lang": "c",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 11220000,
    "question_id": "3153",
    "elapsed_time": 107,
    "compare_result
    "code_output": "100",
    "std_output": "",
    "last_testcase": "[2,6,5,8]\n2",
    "expected_output": "261",
    "task_finish_time": 1708246875150,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 7,
    "total_testcases": 918,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C",
    "submission_id": "1178713011",
    "input_formatted": "[2,6,5,8], 2",
    "input": "[2,6,5,8]\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "#include <stdio.h>\n#include <stdlib.h>\n\n// Helper function to compare two elements\nint compare(const void *a, const void *b) {\n    return (*(int *)b - *(int *)a);\n}\n\n// Function to calculate the maximum sum of squares of k elements\nint maxSum(int* nums, int numsSize, int k) {\n    // Sort the array in non-increasing order\n    qsort(nums, numsSize, sizeof(int), compare);\n\n    // Calculate the sum of squares of the first k elements\n    long long result = 0;\n    for (int i = 0; i < k; i++) {\n        result += (long long)nums[i] * (long long)nums[i];\n    }\n\n    // Modulo 10^9 + 7\n    result %= 1000000007;\n\n    return (int)result;\n}"
}