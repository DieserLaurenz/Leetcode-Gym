{
    "status_code": 15,
    "lang": "c",
    "run_success": false,
    "runtime_error": "Line 12: Char 30: runtime error: left shift of 1 by 31 places cannot be represented in type 'int' [solution.c]",
    "full_runtime_error": "Line 12: Char 30: runtime error: left shift of 1 by 31 places cannot be represented in type 'int' [solution.c]",
    "status_runtime": "N/A",
    "memory": 5396000,
    "question_id": "3153",
    "elapsed_time": 14,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "[2,6,5,8]\n2",
    "expected_output": "261",
    "task_finish_time": 1708246910980,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 918,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C",
    "submission_id": "1178713359",
    "status_msg": "Runtime Error",
    "state": "SUCCESS",
    "code": "#define MOD 1000000007\n\nint maxSum(int* nums, int numsSize, int k) {\n    long long max_value = 0;\n    for (int i = 0; i < numsSize; ++i) {\n        max_value = (max_value > nums[i]) ? max_value : nums[i];\n    }\n\n    int bits[32] = {0};\n    for (int i = 0; i < numsSize; ++i) {\n        for (int j = 0; j < 32; ++j) {\n            if (nums[i] & (1 << j)) {\n                bits[j]++;\n            }\n        }\n    }\n\n    long long result = 0;\n    for (int i = 0; i < k; ++i) {\n        long long num = 0;\n        for (int j = 0; j < 32; ++j) {\n            if (bits[j] > i) {\n                num |= 1LL << j;\n            }\n        }\n        result = (result + num * num) % MOD;\n    }\n\n    return (int)result;\n}"
}