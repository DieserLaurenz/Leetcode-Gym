{
    "status_code": 11,
    "lang": "cpp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 89752000,
    "question_id": "3153",
    "elapsed_time": 178,
    "compare_result
    "code_output": "100",
    "std_output": "",
    "last_testcase": "[2,6,5,8]\n2",
    "expected_output": "261",
    "task_finish_time": 1708238337198,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 8,
    "total_testcases": 918,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C++",
    "submission_id": "1178621345",
    "input_formatted": "[2,6,5,8], 2",
    "input": "[2,6,5,8]\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\nclass Solution {\npublic:\n    int maxSum(vector<int>& nums, int k) {\n        const int MOD = 1e9 + 7;\n        long long sum = 0;\n        sort(nums.begin(), nums.end(), greater<int>());\n        for(int i = 0; i < k; ++i) {\n            sum += (long long)nums[i] * nums[i] % MOD;\n            sum %= MOD;\n        }\n        return (int)sum;\n    }\n};"
}