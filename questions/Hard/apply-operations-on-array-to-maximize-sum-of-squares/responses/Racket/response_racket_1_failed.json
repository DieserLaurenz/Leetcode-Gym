{
    "status_code": 11,
    "lang": "racket",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 136292000,
    "question_id": "3153",
    "elapsed_time": 652,
    "compare_result
    "code_output": "100",
    "std_output": "",
    "last_testcase": "[2,6,5,8]\n2",
    "expected_output": "261",
    "task_finish_time": 1708256618324,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 8,
    "total_testcases": 918,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Racket",
    "submission_id": "1178811856",
    "input_formatted": "[2,6,5,8], 2",
    "input": "[2,6,5,8]\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "(define/contract (max-sum nums k)\n  (-> (listof exact-integer?) exact-integer? exact-integer?)\n  (let ([mod 1000000007])\n    (define (sq x) (modulo (* x x) mod))\n    (define sorted-nums (sort (map (lambda (x) (modulo x mod)) nums) >))\n    (define (helper lst acc k)\n      (if (= k 0)\n          acc\n          (helper (cdr lst) (modulo (+ acc (sq (car lst))) mod) (- k 1))))\n    (helper sorted-nums 0 k)))"
}