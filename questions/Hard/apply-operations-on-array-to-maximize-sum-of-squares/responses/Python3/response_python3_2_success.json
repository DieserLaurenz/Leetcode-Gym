{
    "status_code": 10,
    "lang": "python3",
    "run_success": true,
    "status_runtime": "1838 ms",
    "memory": 31968000,
    "question_id": "3153",
    "elapsed_time": 1910,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1708860058560,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 918,
    "total_testcases": 918,
    "runtime_percentile": 86.15350000000001,
    "status_memory": "32 MB",
    "memory_percentile": 33.84610000000002,
    "pretty_lang": "Python3",
    "submission_id": "1185711675",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "from typing import List\n\nclass Solution:\n    def maxSum(self, nums: List[int], k: int) -> int:\n        MOD = 10**9 + 7\n        max_val = max(nums)\n        bit_count = [0] * 31\n        for num in nums:\n            for i in range(31):\n                if num & (1 << i):\n                    bit_count[i] += 1\n        \n        result = 0\n        for i in range(k):\n            curr_num = 0\n            for j in range(31):\n                if bit_count[j] > i:\n                    curr_num |= 1 << j\n            result += curr_num ** 2\n            result %= MOD\n        \n        return result"
}