{
    "status_code": 15,
    "lang": "erlang",
    "run_success": false,
    "runtime_error": "Line 5: exception error: {badkey,0}",
    "full_runtime_error": "Line 5: exception error: {badkey,0}\n[{erlang,map_get,\n         [0,#{2 => 1,5 => 1,6 => 1,8 => 1}],\n         [{error_info,#{module => erl_erts_errors}}]},\n {solution,'-max_sum/2-lc$^2/1-0-',2,[{file,\"solution.erl\"},{line,5}]},\n {solution,max_sum,2,[{file,\"solution.erl\"},{line,5}]},\n {solution,consume_test_cases,2,[{file,\"solution.erl\"},{line,26}]},\n {solution,driver,0,[{file,\"solution.erl\"},{line,12}]},\n {solution,start,0,[{file,\"solution.erl\"},{line,43}]},\n {init,start_em,1,[]},\n {init,do_boot,3,[]}]",
    "status_runtime": "N/A",
    "memory": 65960000,
    "question_id": "3153",
    "elapsed_time": 1377,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "[2,6,5,8]\n2",
    "expected_output": "261",
    "task_finish_time": 1708256741735,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 918,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Erlang",
    "submission_id": "1178813018",
    "status_msg": "Runtime Error",
    "state": "SUCCESS",
    "code": "-spec max_sum(Nums :: [integer()], K :: integer()) -> integer().\nmax_sum(Nums, K) ->\n    MaxValue = lists:max(Nums),\n    Freq = lists:foldl(fun(X, Acc) -> maps:update_with(X, fun(V) -> V + 1 end, 1, Acc) end, #{}, Nums),\n    MaxList = lists:flatten([lists:duplicate(maps:get(Key, Freq), Key) || Key <- lists:seq(0, MaxValue)]),\n    Sorted = lists:reverse(lists:sort(MaxList)),\n    SumSquares = lists:foldl(fun(X, Acc) -> (X*X rem 1000000007 + Acc) rem 1000000007 end, 0, lists:sublist(Sorted, 1, K)),\n    SumSquares."
}