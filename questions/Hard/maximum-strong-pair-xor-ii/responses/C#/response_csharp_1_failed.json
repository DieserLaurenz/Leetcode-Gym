{
    "status_code": 11,
    "lang": "csharp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 58376000,
    "question_id": "3197",
    "elapsed_time": 348,
    "compare_result": "010100001011100000101001001010001000000100100000000000100110100000001010000000000001001000000000001001000000100010100100000000001100100010000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000",
    "code_output": "0",
    "std_output": "",
    "last_testcase": "[1,2,3,4,5]",
    "expected_output": "7",
    "task_finish_time": 1708628549755,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 35,
    "total_testcases": 348,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C#",
    "submission_id": "1183349857",
    "input_formatted": "[1,2,3,4,5]",
    "input": "[1,2,3,4,5]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "public class Solution {\n    public int MaximumStrongPairXor(int[] nums) {\n        int max = 0;\n        Array.Sort(nums);\n        for (int i = nums.Length - 1; i >= 0; i--) {\n            for (int j = i; j >= 0; j--) {\n                if ((nums[i] ^ nums[j]) <= max) break; // If current XOR is already less than max, break as it will only decrease further\n                if (Math.Abs(nums[i] - nums[j]) <= Math.Min(nums[i], nums[j])) {\n                    max = Math.Max(max, nums[i] ^ nums[j]);\n                }\n            }\n        }\n        return max;\n    }\n}"
}