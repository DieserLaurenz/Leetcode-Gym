{
    "status_code": 11,
    "lang": "java",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 54956000,
    "display_runtime": "255",
    "question_id": "3197",
    "elapsed_time": 571,
    "compare_result": "100111111100011110010110110000100111101111011110111100000001011111100111111111101110110011110111110111100111001000000010111001110011101100110000000001100001000111111001111011000000100000000100000010100000111110100110100110010100111011111110000001100101000001000110011100000011000100100000111001000000101010000000100000010001100000000011100111111011",
    "code_output": "110",
    "std_output": "",
    "last_testcase": "[10,100]",
    "expected_output": "0",
    "task_finish_time": 1708619347088,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 165,
    "total_testcases": 348,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Java",
    "submission_id": "1183197113",
    "input_formatted": "[10,100]",
    "input": "[10,100]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    public int maximumStrongPairXor(int[] nums) {\n        int max = 0;\n        int mask = 0;\n        for (int bit = 31; bit >= 0; --bit) {\n            mask |= (1 << bit);\n            Set<Integer> prefixes = new HashSet<>();\n            int tempMax = max | (1 << bit);\n            for (int num : nums) {\n                if (prefixes.contains((num & mask) ^ tempMax)) {\n                    max = tempMax;\n                    break;\n                }\n                prefixes.add(num & mask);\n            }\n        }\n        return max;\n    }\n}"
}