{
    "status_code": 10,
    "lang": "scala",
    "run_success": true,
    "status_runtime": "9077 ms",
    "memory": 73404000,
    "question_id": "3197",
    "elapsed_time": 9731,
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1708629620000,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 348,
    "total_testcases": 348,
    "runtime_percentile": 100,
    "status_memory": "73.4 MB",
    "memory_percentile": 100,
    "pretty_lang": "Scala",
    "submission_id": "1183363398",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "object Solution {\n    def maximumStrongPairXor(nums: Array[Int]): Int = {\n        nums.sortInPlace()\n        var max = 0\n        for(i <- nums.indices) {\n            for(j <- i until nums.length) {\n                if (math.abs(nums(i) - nums(j)) <= math.min(nums(i), nums(j))) {\n                    max = math.max(max, nums(i) ^ nums(j))\n                }\n            }\n        }\n        max\n    }\n}"
}