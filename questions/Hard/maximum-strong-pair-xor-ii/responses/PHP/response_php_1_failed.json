{
    "status_code": 11,
    "lang": "php",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 28664000,
    "question_id": "3197",
    "elapsed_time": 5562,
    "compare_result": "100111111100011110010110110000100111101111011110111100000001011111100111111111101110110011110111110111100111001000000010111001110011101100110000000001100001000111111001111011000000100000000100000010100000111110100110100110010100111011111110000001100101000001000110011100000011000100100000111001000000101010000000100000010001100000000011100111111000",
    "code_output": "110",
    "std_output": "",
    "last_testcase": "[10,100]",
    "expected_output": "0",
    "task_finish_time": 1708628949568,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 163,
    "total_testcases": 348,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "PHP",
    "submission_id": "1183354843",
    "input_formatted": "[10,100]",
    "input": "[10,100]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @return Integer\n     */\n    function maximumStrongPairXor($nums) {\n        $maxXor = 0;\n        $n = count($nums);\n        $mask = 0;\n        for ($i = 30; $i >= 0; $i--) {\n            $mask |= (1 << $i);\n            $candidates = [];\n            foreach ($nums as $num) {\n                $candidates[] = $num & $mask;\n            }\n            $candidates = array_unique($candidates);\n            $tempMaxXor = $maxXor | (1 << $i);\n            foreach ($candidates as $candidate) {\n                if (in_array($candidate ^ $tempMaxXor, $candidates)) {\n                    $maxXor = $tempMaxXor;\n                    break;\n                }\n            }\n        }\n        return $maxXor;\n    }\n}"
}