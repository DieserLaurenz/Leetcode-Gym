{
    "status_code": 11,
    "lang": "python3",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 24096000,
    "question_id": "3197",
    "elapsed_time": 685,
    "compare_result": "0101000010111000001010010010100010000001001000000000001001101000000010100000000000010010000000000010010000001000101001000000000011001000100000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000",
    "code_output": "0",
    "std_output": "",
    "last_testcase": "[1,2,3,4,5]",
    "expected_output": "7",
    "task_finish_time": 1708902552015,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 35,
    "total_testcases": 349,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python3",
    "submission_id": "1186198038",
    "input_formatted": "[1,2,3,4,5]",
    "input": "[1,2,3,4,5]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution:\n    def maximumStrongPairXor(self, nums: List[int]) -> int:\n        answer = 0\n        nums.sort()\n        for i in range(31, -1, -1):\n            next_answer = answer | (1 << i)\n            prefixes = set()\n            for num in nums:\n                if num & next_answer == num:\n                    prefix = num >> i\n                    if (prefix ^ 1) in prefixes:\n                        answer = next_answer\n                        break\n                    prefixes.add(prefix)\n        return answer"
}