{
    "status_code": 11,
    "lang": "typescript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 122028000,
    "question_id": "3197",
    "elapsed_time": 1009,
    "compare_result": "010100000000000000000000000000000000000001000001010000010000000000010000000000010000000001000000000000000000000000010001000000000000000010000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "code_output": "12",
    "std_output": "",
    "last_testcase": "[1,2,3,4,5]",
    "expected_output": "7",
    "task_finish_time": 1708628789590,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 14,
    "total_testcases": 348,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "TypeScript",
    "submission_id": "1183352881",
    "input_formatted": "[1,2,3,4,5]",
    "input": "[1,2,3,4,5]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "function maximumStrongPairXor(nums: number[]): number {\n    nums.sort((a, b) => a - b);\n    let max = 0;\n    let trie = new Map();\n    for (let num of nums) {\n        let node = trie, maxXor = 0;\n        for (let i = 31; i >= 0; i--) {\n            let bit = (num >> i) & 1;\n            if (node.has(bit)) {\n                node = node.get(bit);\n            } else {\n                let newNode = new Map();\n                node.set(bit, newNode);\n                node = newNode;\n            }\n            if (node.has(1 - bit)) {\n                maxXor = maxXor | (1 << i);\n            }\n        }\n        max = Math.max(max, maxXor);\n        node = trie;\n        for (let i = 31; i >= 0; i--) {\n            let bit = (num >> i) & 1;\n            if (!node.has(1 - bit)) {\n                break;\n            }\n            node = node.get(1 - bit);\n        }\n    }\n    return max;\n};"
}