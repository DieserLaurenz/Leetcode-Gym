{
    "status_code": 15,
    "lang": "cpp",
    "run_success": false,
    "runtime_error": "Line 19: Char 47: runtime error: division by zero (solution.cpp)",
    "full_runtime_error": "Line 19: Char 47: runtime error: division by zero (solution.cpp)\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:28:47",
    "status_runtime": "N/A",
    "memory": 7896000,
    "question_id": "3032",
    "elapsed_time": 11,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "[2,0,1]\n4",
    "expected_output": "6",
    "task_finish_time": 1708537260160,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 948,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C++",
    "submission_id": "1182233570",
    "status_msg": "Runtime Error",
    "state": "SUCCESS",
    "code": "#include <vector>\nusing namespace std;\n\nclass Solution {\npublic:\n    long long getMaxFunctionValue(vector<int>& receiver, long long k) {\n        int n = receiver.size();\n        vector<long long> f(n, 0);\n        vector<int> visit(n, -1);\n        long long maxVal = 0;\n\n        for (int i = 0; i < n; ++i) {\n            long long sum = i;\n            int x = i;\n            long long passes = k;\n            while (passes > 0) {\n                if (visit[x] == i) { // Cycle detected\n                    long long cycleLength = f[i] - f[x];\n                    long long cycles = passes / (f[i] - f[receiver[x]]);\n                    sum += cycles * cycleLength;\n                    passes -= cycles * (f[i] - f[receiver[x]]);\n                }\n                if (passes > 0) {\n                    visit[x] = i;\n                    sum += receiver[x];\n                    f[x] = sum;\n                    x = receiver[x];\n                    --passes;\n                }\n            }\n            maxVal = max(maxVal, sum);\n        }\n        return maxVal;\n    }\n};"
}