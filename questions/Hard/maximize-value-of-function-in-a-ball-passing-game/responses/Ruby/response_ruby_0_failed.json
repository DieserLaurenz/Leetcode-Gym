{
    "status_code": 14,
    "lang": "ruby",
    "run_success": false,
    "status_runtime": "N/A",
    "memory": 212168000,
    "question_id": "3032",
    "elapsed_time": 3226,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "[0]\n10000000000",
    "expected_output": "0",
    "task_finish_time": 1708546377876,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 909,
    "total_testcases": 948,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Ruby",
    "submission_id": "1182362072",
    "status_msg": "Time Limit Exceeded",
    "state": "SUCCESS",
    "code": "# @param {Integer[]} receiver\n# @param {Integer} k\n# @return {Integer}\ndef get_max_function_value(receiver, k)\n    max_val = 0\n    n = receiver.length\n    receiver.each_with_index do |val, idx|\n        sum = idx\n        current = idx\n        k.times do\n            current = receiver[current]\n            sum += current\n        end\n        max_val = [max_val, sum].max\n    end\n    max_val\nend"
}