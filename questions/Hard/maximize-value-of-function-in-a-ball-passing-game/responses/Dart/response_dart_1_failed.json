{
    "status_code": 11,
    "lang": "dart",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 275296000,
    "question_id": "3032",
    "elapsed_time": 744,
    "compare_result
    "code_output": "4",
    "std_output": "",
    "last_testcase": "[2,0,1]\n4",
    "expected_output": "6",
    "task_finish_time": 1708546129096,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 14,
    "total_testcases": 948,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Dart",
    "submission_id": "1182359430",
    "input_formatted": "[2,0,1], 4",
    "input": "[2,0,1]\n4",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n  int getMaxFunctionValue(List<int> receiver, int k) {\n    int n = receiver.length;\n    List<int> next = List<int>.filled(n, 0);\n    List<int> count = List<int>.filled(n, 0);\n    for (int i = 0; i < n; i++) {\n      next[i] = receiver[i];\n      count[i] = 1;\n    }\n\n    for (int p = 1; p <= k; p <<= 1) {\n      if ((k & p) != 0) {\n        List<int> newCount = List<int>.filled(n, 0);\n        for (int i = 0; i < n; i++) {\n          count[i] += count[next[i]];\n          newCount[i] = count[i];\n        }\n        count = newCount;\n      }\n      List<int> newNext = List<int>.filled(n, 0);\n      for (int i = 0; i < n; i++) {\n        newNext[i] = next[next[i]];\n      }\n      next = newNext;\n    }\n\n    int maxVal = 0;\n    for (int i = 0; i < n; i++) {\n      maxVal = max(maxVal, count[i]);\n    }\n    return maxVal;\n  }\n\n  int max(int a, int b) => a > b ? a : b;\n}"
}