{
    "status_code": 14,
    "lang": "c",
    "run_success": false,
    "status_runtime": "N/A",
    "memory": 5576000,
    "question_id": "3032",
    "elapsed_time": 3022,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "[0]\n10000000000",
    "expected_output": "0",
    "task_finish_time": 1708545061302,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 909,
    "total_testcases": 948,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C",
    "submission_id": "1182347586",
    "status_msg": "Time Limit Exceeded",
    "state": "SUCCESS",
    "code": "#include <limits.h>\n\nlong long getMaxFunctionValue(int* receiver, int receiverSize, long long k) {\n    long long maxValue = LLONG_MIN;\n    for (int start = 0; start < receiverSize; ++start) {\n        long long sum = start;\n        int current = start;\n        for (long long i = 0; i < k; ++i) {\n            current = receiver[current];\n            sum += current;\n        }\n        if (sum > maxValue) {\n            maxValue = sum;\n        }\n    }\n    return maxValue;\n}"
}