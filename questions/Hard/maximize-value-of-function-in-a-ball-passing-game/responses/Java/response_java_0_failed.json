{
    "status_code": 14,
    "lang": "java",
    "run_success": false,
    "status_runtime": "N/A",
    "memory": 42916000,
    "question_id": "3032",
    "elapsed_time": 4011,
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111000000000000000000000000000000000000000",
    "code_output": "",
    "std_output": "",
    "last_testcase": "[0]\n10000000000",
    "expected_output": "0",
    "task_finish_time": 1708537408704,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 909,
    "total_testcases": 948,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Java",
    "submission_id": "1182236084",
    "status_msg": "Time Limit Exceeded",
    "state": "SUCCESS",
    "code": "import java.util.List;\n\nclass Solution {\n    public long getMaxFunctionValue(List<Integer> receiver, long k) {\n        int n = receiver.size();\n        long maxVal = 0;\n        \n        for (int start = 0; start < n; start++) {\n            long sum = start;\n            int current = start;\n            for (long i = 0; i < k; i++) {\n                current = receiver.get(current);\n                sum += current;\n            }\n            maxVal = Math.max(maxVal, sum);\n        }\n        \n        return maxVal;\n    }\n}"
}