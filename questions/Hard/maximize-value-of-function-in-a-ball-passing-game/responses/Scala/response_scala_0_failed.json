{
    "status_code": 12,
    "lang": "scala",
    "run_success": false,
    "status_runtime": "N/A",
    "memory": 56664000,
    "question_id": "3032",
    "elapsed_time": 10443,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "[0]\n10000000000",
    "expected_output": "0",
    "task_finish_time": 1708546526238,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 909,
    "total_testcases": 948,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Scala",
    "submission_id": "1182363569",
    "status_msg": "Memory Limit Exceeded",
    "state": "SUCCESS",
    "code": "object Solution {\n    def getMaxFunctionValue(receiver: List[Int], k: Long): Long = {\n        val n = receiver.length\n        var maxSum: Long = 0\n        \n        def calculateSum(start: Int): Long = {\n            var sum: Long = start\n            var current = start\n            var passes = k\n            while (passes > 0) {\n                current = receiver(current)\n                sum += current\n                passes -= 1\n            }\n            sum\n        }\n        \n        for (i <- 0 until n) {\n            val sum = calculateSum(i)\n            maxSum = maxSum max sum\n        }\n        \n        maxSum\n    }\n}"
}