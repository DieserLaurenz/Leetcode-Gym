{
    "status_code": 11,
    "lang": "javascript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 54992000,
    "question_id": "3032",
    "elapsed_time": 4010,
    "compare_result
    "code_output": "15",
    "std_output": "",
    "last_testcase": "[2,0,1]\n4",
    "expected_output": "6",
    "task_finish_time": 1708545391413,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 4,
    "total_testcases": 948,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "JavaScript",
    "submission_id": "1182351305",
    "input_formatted": "[2,0,1], 4",
    "input": "[2,0,1]\n4",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "/**\n * @param {number[]} receiver\n * @param {number} k\n * @return {number}\n */\nvar getMaxFunctionValue = function(receiver, k) {\n    const n = receiver.length;\n    let dp = new Array(n).fill(0);\n    let next = new Array(n).fill(0);\n    for (let i = 0; i < n; ++i) {\n        dp[i] = receiver[i];\n        next[i] = receiver[receiver[i]];\n    }\n\n    for (let i = 1; i < k; ++i) {\n        for (let j = 0; j < n; ++j) {\n            dp[j] += next[j];\n            next[j] = next[next[j]];\n        }\n    }\n\n    let maxFunctionValue = 0;\n    for (let i = 0; i < n; ++i) {\n        maxFunctionValue = Math.max(maxFunctionValue, dp[i] + i * (k + 1));\n    }\n\n    return maxFunctionValue;\n};"
}