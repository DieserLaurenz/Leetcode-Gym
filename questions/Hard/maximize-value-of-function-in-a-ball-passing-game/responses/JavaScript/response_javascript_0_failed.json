{
    "status_code": 14,
    "lang": "javascript",
    "run_success": false,
    "status_runtime": "N/A",
    "memory": 55036000,
    "question_id": "3032",
    "elapsed_time": 4013,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "[0]\n10000000000",
    "expected_output": "0",
    "task_finish_time": 1708545355905,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 909,
    "total_testcases": 948,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "JavaScript",
    "submission_id": "1182350892",
    "status_msg": "Time Limit Exceeded",
    "state": "SUCCESS",
    "code": "/**\n * @param {number[]} receiver\n * @param {number} k\n * @return {number}\n */\nvar getMaxFunctionValue = function(receiver, k) {\n    const n = receiver.length;\n    let maxSum = 0;\n    for (let i = 0; i < n; i++) {\n        let sum = i;\n        let current = i;\n        for (let j = 0; j < k; j++) {\n            current = receiver[current];\n            sum += current;\n        }\n        maxSum = Math.max(maxSum, sum);\n    }\n    return maxSum;\n};"
}