{
    "status_code": 14,
    "lang": "csharp",
    "run_success": false,
    "status_runtime": "N/A",
    "memory": 44180000,
    "question_id": "3032",
    "elapsed_time": 4011,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "[0]\n10000000000",
    "expected_output": "0",
    "task_finish_time": 1708545211591,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 909,
    "total_testcases": 948,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C#",
    "submission_id": "1182349230",
    "status_msg": "Time Limit Exceeded",
    "state": "SUCCESS",
    "code": "public class Solution {\n    public long GetMaxFunctionValue(IList<int> receiver, long k) {\n        int n = receiver.Count;\n        long maxVal = 0;\n        for (int start = 0; start < n; start++) {\n            long sum = start;\n            int next = receiver[start];\n            for (long j = 0; j < k; j++) {\n                sum += next;\n                next = receiver[next];\n            }\n            maxVal = Math.Max(maxVal, sum);\n        }\n        return maxVal;\n    }\n}"
}