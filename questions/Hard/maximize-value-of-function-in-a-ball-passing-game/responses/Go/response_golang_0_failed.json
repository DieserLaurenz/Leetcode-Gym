{
    "status_code": 11,
    "lang": "golang",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 2788000,
    "question_id": "3032",
    "elapsed_time": 3010,
    "compare_result
    "code_output": "5",
    "std_output": "",
    "last_testcase": "[2,0,1]\n4",
    "expected_output": "6",
    "task_finish_time": 1708546236923,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 53,
    "total_testcases": 948,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Go",
    "submission_id": "1182360565",
    "input_formatted": "[2,0,1], 4",
    "input": "[2,0,1]\n4",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "func getMaxFunctionValue(receiver []int, k int64) int64 {\n    n := len(receiver)\n    maxVal := int64(0)\n\n    for i := 0; i < n; i++ {\n        current := i\n        sum := int64(i)\n        for j := int64(0); j < k-1; j++ {\n            current = receiver[current]\n            sum += int64(current)\n        }\n        if sum > maxVal {\n            maxVal = sum\n        }\n    }\n\n    return maxVal\n}"
}