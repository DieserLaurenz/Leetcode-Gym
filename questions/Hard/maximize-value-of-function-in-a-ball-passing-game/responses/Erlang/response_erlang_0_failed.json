{
    "status_code": 11,
    "lang": "erlang",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 62828000,
    "question_id": "3032",
    "elapsed_time": 5075,
    "compare_result
    "code_output": "7",
    "std_output": "",
    "last_testcase": "[2,0,1]\n4",
    "expected_output": "6",
    "task_finish_time": 1708555792718,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 344,
    "total_testcases": 948,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Erlang",
    "submission_id": "1182444067",
    "input_formatted": "[2,0,1], 4",
    "input": "[2,0,1]\n4",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "-spec get_max_function_value(Receiver :: [integer()], K :: integer()) -> integer().\nget_max_function_value(Receiver, K) ->\n    Fun = fun(F, X, Sum, N) when N > 0 -> F(F, lists:nth(X + 1, Receiver), Sum + X, N - 1);\n                 (_, _, Sum, _) -> Sum\n          end,\n    lists:max([Fun(Fun, X, X, K) || X <- lists:seq(0, length(Receiver) - 1)])."
}