{
    "status_code": 14,
    "lang": "php",
    "run_success": false,
    "status_runtime": "N/A",
    "memory": 20104000,
    "question_id": "3032",
    "elapsed_time": 5237,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "[0]\n10000000000",
    "expected_output": "0",
    "task_finish_time": 1708545643270,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 909,
    "total_testcases": 948,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "PHP",
    "submission_id": "1182354069",
    "status_msg": "Time Limit Exceeded",
    "state": "SUCCESS",
    "code": "class Solution {\n\n    /**\n     * @param Integer[] $receiver\n     * @param Integer $k\n     * @return Integer\n     */\n    function getMaxFunctionValue($receiver, $k) {\n        $n = count($receiver);\n        $maxValue = PHP_INT_MIN;\n        for ($i = 0; $i < $n; $i++) {\n            $currentValue = $i;\n            $next = $i;\n            for ($j = 0; $j < $k; $j++) {\n                $next = $receiver[$next];\n                $currentValue += $next;\n            }\n            $maxValue = max($maxValue, $currentValue);\n        }\n        return $maxValue;\n    }\n}"
}