{
    "status_code": 14,
    "lang": "swift",
    "run_success": false,
    "status_runtime": "N/A",
    "memory": 15352000,
    "question_id": "3032",
    "elapsed_time": 5096,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "[0]\n10000000000",
    "expected_output": "0",
    "task_finish_time": 1708545799956,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 909,
    "total_testcases": 948,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Swift",
    "submission_id": "1182355801",
    "status_msg": "Time Limit Exceeded",
    "state": "SUCCESS",
    "code": "class Solution {\n    func getMaxFunctionValue(_ receiver: [Int], _ k: Int) -> Int {\n        var maxVal = 0\n        for start in 0..<receiver.count {\n            var sum = start\n            var current = start\n            for _ in 0..<k {\n                current = receiver[current]\n                sum += current\n            }\n            maxVal = max(maxVal, sum)\n        }\n        return maxVal\n    }\n}"
}