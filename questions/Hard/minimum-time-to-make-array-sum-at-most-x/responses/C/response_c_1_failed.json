{
    "status_code": 11,
    "lang": "c",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 6360000,
    "question_id": "2952",
    "elapsed_time": 27,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "[1,2,3]\n[1,2,3]\n4",
    "expected_output": "3",
    "task_finish_time": 1708912988054,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 378,
    "total_testcases": 1274,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C",
    "submission_id": "1186282053",
    "input_formatted": "[1,2,3], [1,2,3], 4",
    "input": "[1,2,3]\n[1,2,3]\n4",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "#include <stdio.h>\n#include <stdlib.h>\n\nint compare(const void *a, const void *b) {\n    return *(int*)a - *(int*)b;\n}\n\nint minimumTime(int* nums1, int nums1Size, int* nums2, int nums2Size, int x) {\n    long long total = 0, sum = 0;\n    for (int i = 0; i < nums1Size; i++) {\n        total += nums1[i];\n        nums1[i] = nums1[i] + nums2[i]; // nums1 now holds the total value each element contributes per second\n    }\n    if (total <= x) return 0;\n    qsort(nums1, nums1Size, sizeof(int), compare);\n\n    int time = 0;\n    for (int i = nums1Size - 1; i >= 0; i--) {\n        sum += nums1[i];\n        time++;\n        if (total - sum <= x) return time;\n    }\n    return -1;\n}"
}