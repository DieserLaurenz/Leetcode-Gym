{
    "status_code": 11,
    "lang": "cpp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 66720000,
    "question_id": "2952",
    "elapsed_time": 53,
    "compare_result
    "code_output": "3",
    "std_output": "",
    "last_testcase": "[1,2,3]\n[3,3,3]\n4",
    "expected_output": "-1",
    "task_finish_time": 1708912432906,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 386,
    "total_testcases": 1274,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C++",
    "submission_id": "1186277162",
    "input_formatted": "[1,2,3], [3,3,3], 4",
    "input": "[1,2,3]\n[3,3,3]\n4",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "#include <vector>\n#include <algorithm>\nusing namespace std;\n\nclass Solution {\npublic:\n    int minimumTime(vector<int>& nums1, vector<int>& nums2, int x) {\n        int n = nums1.size();\n        vector<long long> prefixSum(n + 1, 0);\n        for (int i = 0; i < n; ++i) {\n            prefixSum[i + 1] = prefixSum[i] + nums1[i];\n        }\n        if (prefixSum[n] <= x) return 0;\n        \n        long long total = prefixSum[n];\n        vector<long long> maxAfter(n + 1, 0);\n        for (int i = n - 1; i >= 0; --i) {\n            maxAfter[i] = max(maxAfter[i + 1], (long long)nums2[i]);\n        }\n        \n        int ans = INT_MAX;\n        long long curr = 0;\n        for (int i = 0; i < n; ++i) {\n            curr += nums2[i];\n            int left = i + 1, right = n, best = n;\n            while (left <= right) {\n                int mid = left + (right - left) / 2;\n                if (total - (prefixSum[mid] - prefixSum[i + 1]) + curr <= x) {\n                    best = mid;\n                    right = mid - 1;\n                } else {\n                    left = mid + 1;\n                }\n            }\n            ans = min(ans, best);\n            if (total - prefixSum[i + 1] + curr <= x) {\n                ans = min(ans, i + 1);\n                break;\n            }\n        }\n        \n        return ans == INT_MAX ? -1 : ans;\n    }\n};"
}