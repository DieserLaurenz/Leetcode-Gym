{
    "status_code": 11,
    "lang": "cpp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 67560000,
    "question_id": "2952",
    "elapsed_time": 108,
    "compare_result": "00010010111010000001101010001001001111010010010000011000000000001010100101111001000000000101100000011011100000111010000001010100101010001100010100000110000100000001100010010011100001011110011000000001000000001000011000101001010001000010001110111100000011100100100010010100000000100111000000011101011000000000010000011000110001111110100101000000100101100011100110010001000110011010000000001001101000100111100001100010010110100100110110110000010110011001001000001000000000100010000111000111001000010011001011000000101001000000100111100011111100000000011000000001101101100100101000100010000110000100000011011000100111000000100001100101011011010000100011100000010000100111001100010001000010000000010010010100000101111011011010101110000011010010010011000000001001100010011001001100000001000110100010011001000100010001000110000110000001101100000100110010111000001000110101001100001000000100010001101001110111000100000001100010001001010100001000101010101110100011111100011000000010100100101000010010100001100101100000000000000000000000000000000000000000000000000000000000000000000000000000000001010000000000000000001000010000100000000000000000000000000000000000000000000000000000000000000000100000000000010000000000000000000000000000000000000000000000000000001000000000000110000011",
    "code_output": "1",
    "std_output": "",
    "last_testcase": "[1,2,3]\n[1,2,3]\n4",
    "expected_output": "3",
    "task_finish_time": 1708912473566,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 371,
    "total_testcases": 1274,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C++",
    "submission_id": "1186277539",
    "input_formatted": "[1,2,3], [1,2,3], 4",
    "input": "[1,2,3]\n[1,2,3]\n4",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "#include <vector>\n#include <queue>\n#include <algorithm>\nusing namespace std;\n\nclass Solution {\npublic:\n    int minimumTime(vector<int>& nums1, vector<int>& nums2, int x) {\n        int n = nums1.size();\n        long long sum = 0;\n        priority_queue<pair<int, int>> pq;\n        for (int i = 0; i < n; ++i) {\n            sum += nums1[i];\n            pq.push({nums2[i] - nums1[i], i}); // difference, index\n        }\n        if (sum <= x) return 0; // already less than or equal to x\n        int time = 0;\n        while (!pq.empty() && sum > x) {\n            auto [diff, i] = pq.top(); pq.pop();\n            sum -= nums1[i];\n            nums1[i] += diff; // simulate operation and increment\n            if (nums1[i] > 0) pq.push({diff, i}); // if still positive, push back with updated diff\n            ++time;\n            if (sum <= x) return time;\n        }\n        return -1;\n    }\n};"
}