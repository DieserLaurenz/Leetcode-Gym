{
    "status_code": 11,
    "lang": "php",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 20172000,
    "question_id": "2952",
    "elapsed_time": 99,
    "compare_result": "00010010110010000001100010001000000101000010010001111000000000001010100101111001100000000001100000011010100000010010000001010100110010000100000100000110001100011001100010111011000001001100000001000001001000000100011001111000000001000000001110111110001010000000110111010100001000100111100000011001001000000100000000011001110101101101110101000000100101110011100010010001000110011110000000001001100001100111100011100010010010100101110010100000000110011000001101001011110011100010000110010111011000000001000111000000100000000000000101100011101000000000010010000001001100000000100010100000100100100000010001011000100010010000110001000100011011111000100010100100010000100011101110010001000000000000000010000100000101101011011010111011000011110001010010110110001101100010010001101100000001110110110010001001000000010100000110000100001001100000000000110011111000000000100100001100001100001100010001101001111111000100001001010000001001010100000000101001101011100010011100011010000011000100000000010010010000100111100001000000000100010001000011010000000000001100001001000010000000000000011000001101010001010100000000001000110010100000100100011100000110100110000111000001000001100000000110000100101000010000010000000000000000000000000000000000000000000000100000000000000000000110000011",
    "code_output": "2",
    "std_output": "",
    "last_testcase": "[1,2,3]\n[1,2,3]\n4",
    "expected_output": "3",
    "task_finish_time": 1708922499304,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 401,
    "total_testcases": 1274,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "PHP",
    "submission_id": "1186377544",
    "input_formatted": "[1,2,3], [1,2,3], 4",
    "input": "[1,2,3]\n[1,2,3]\n4",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n\n    /**\n     * @param Integer[] $nums1\n     * @param Integer[] $nums2\n     * @param Integer $x\n     * @return Integer\n     */\n    function minimumTime($nums1, $nums2, $x) {\n        $n = count($nums1);\n        $time = 0;\n        $total = array_sum($nums1);\n        \n        // Early check if total is already less than or equal to x\n        if ($total <= $x) return 0;\n        \n        // Calculate potential reductions and sort them in descending order\n        $reductions = [];\n        for ($i = 0; $i < $n; $i++) {\n            $reductions[$i] = $nums1[$i] + $nums2[$i] * $time - $nums2[$i];\n        }\n        array_multisort($reductions, SORT_DESC, $nums2);\n        \n        // Try to reduce the total sum to less than or equal to x\n        for ($i = 0; $i < $n; $i++) {\n            if ($total <= $x) break;\n            $total -= $reductions[$i];\n            $time++;\n            // Update future reductions based on time increment\n            for ($j = $i + 1; $j < $n; $j++) {\n                $reductions[$j] += $nums2[$j];\n            }\n        }\n        \n        return $total <= $x ? $time : -1;\n    }\n}"
}