{
    "status_code": 11,
    "lang": "csharp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 51244000,
    "question_id": "2952",
    "elapsed_time": 190,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "[1,2,3]\n[1,2,3]\n4",
    "expected_output": "3",
    "task_finish_time": 1708913107427,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 456,
    "total_testcases": 1274,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C#",
    "submission_id": "1186283060",
    "input_formatted": "[1,2,3], [1,2,3], 4",
    "input": "[1,2,3]\n[1,2,3]\n4",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "public class Solution {\n    public int MinimumTime(IList<int> nums1, IList<int> nums2, int x) {\n        int n = nums1.Count;\n        long totalSum = 0;\n        for (int i = 0; i < n; i++) {\n            totalSum += nums1[i];\n        }\n        if (totalSum <= x) return 0;\n\n        // Prefix sums of nums2 for binary search\n        long[] prefixSums = new long[n + 1];\n        for (int i = 1; i <= n; i++) {\n            prefixSums[i] = prefixSums[i - 1] + nums2[i - 1];\n        }\n\n        long minTime = long.MaxValue;\n        for (int i = 0; i < n; i++) {\n            long target = totalSum - x;\n            int left = 0, right = n;\n            while (left <= right) {\n                int mid = left + (right - left) / 2;\n                long gain = nums1[i] + nums2[i] * (long)mid;\n                if (gain >= target + prefixSums[mid]) {\n                    minTime = Math.Min(minTime, mid + 1L); // Plus one for the operation itself\n                    right = mid - 1;\n                } else {\n                    left = mid + 1;\n                }\n            }\n        }\n\n        return minTime == long.MaxValue ? -1 : (int)minTime;\n    }\n}"
}