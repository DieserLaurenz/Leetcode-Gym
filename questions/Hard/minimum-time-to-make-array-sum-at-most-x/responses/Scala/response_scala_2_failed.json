{
    "status_code": 11,
    "lang": "scala",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 57004000,
    "question_id": "2952",
    "elapsed_time": 1229,
    "compare_result": "01001010110010010110110001101010000001101101100000000100000010100100100001001000010110000000011101000000001100000000011110010100100000000000100101011100110111000100010000000011010100001001000000110100100011010000000100100100100100010001111110011000110100010000000000001000010010010010001100101011000100100000100010100010101001101000100011100100011011000010110011101000110110100001101110100110110110001100011000010111001010000010100000001110000101001110100000001100001100010101110010000000101111001001100010001101110110111010000000111000100010011011100000110111011010010011110001100100010101001010000000110001011000101110001000011000001110000010010010001011110001101010000000001011011100000000101100000111001110000001000100000010110100011100011000000000101010101101110101010101100101000110001011001000010001110000010010100101100011010010011001011010011110000111000010100100100011000101110101000100110011111011010100000001110010101100100110100100001000001110001110000101000000001100010000110000001000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000010000000111011011111100011111110011010010011110011111110110000000000011111100",
    "code_output": "-1",
    "std_output": "",
    "last_testcase": "[1,2,3]\n[1,2,3]\n4",
    "expected_output": "3",
    "task_finish_time": 1708923320416,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 423,
    "total_testcases": 1274,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Scala",
    "submission_id": "1186387689",
    "input_formatted": "[1,2,3], [1,2,3], 4",
    "input": "[1,2,3]\n[1,2,3]\n4",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "object Solution {\n    def minimumTime(nums1: List[Int], nums2: List[Int], x: Int): Int = {\n        var total = nums1.sum\n        if (total <= x) return 0\n        val n = nums1.length\n        var max = 0\n        var sum = 0\n        var j = -1\n        for (i <- 0 until n) {\n            sum += nums1(i)\n            while (j + 1 < n && sum - nums1(j + 1) + nums2(j + 1) * (i - j) <= x) {\n                j += 1\n                sum = sum - nums1(j) + nums2(j)\n            }\n            if (sum <= x) max = max.max(i - j)\n            sum += nums2(i)\n        }\n        if (max == 0) -1 else n - max\n    }\n}"
}