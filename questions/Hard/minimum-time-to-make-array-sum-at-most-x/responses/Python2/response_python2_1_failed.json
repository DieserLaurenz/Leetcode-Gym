{
    "status_code": 11,
    "lang": "python",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 12064000,
    "question_id": "2952",
    "elapsed_time": 138,
    "compare_result": "00000010110010000000100000001000000001000000000000000000000000000000100001001000000000000100000000000001000000000000000000010100100000000000000100000100000100000000000000000011000000001010010000000000000000000000000000100000000000000000001110011000000000000000000000000000000000000010000000001101000000000000000000000000100001101000100001000000000001000010100010000000000110000000000000000000100000000100000000000010000110100000100000000000010100001000000000001000000000000000000010000000001000000001000110000000100000000000000000100000100000000000000000000001001000000000100000100000000100000000000000010000000000000000000000000000001010000000000010000000010000100010000000000001000000000000000000000100000100000001000000000110000000010000010000000000001000100000010001000100000001000110000010001000000000010000000010000110000001001000000010010010011000001000000000000100000000000100010001000000110011000000100000100000000000000100000000100000001000000010101100000000000000000100000000010000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000010000000",
    "code_output": "2",
    "std_output": "",
    "last_testcase": "[1,2,3]\n[1,2,3]\n4",
    "expected_output": "3",
    "task_finish_time": 1708912720993,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 128,
    "total_testcases": 1274,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python",
    "submission_id": "1186279748",
    "input_formatted": "[1,2,3], [1,2,3], 4",
    "input": "[1,2,3]\n[1,2,3]\n4",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution(object):\n    def minimumTime(self, nums1, nums2, x):\n        \"\"\"\n        :type nums1: List[int]\n        :type nums2: List[int]\n        :type x: int\n        :rtype: int\n        \"\"\"\n        prefix_sum = [0]\n        suffix_sum = [0]\n        n = len(nums1)\n\n        for i in range(n):\n            prefix_sum.append(prefix_sum[-1] + nums1[i])\n            suffix_sum.append(suffix_sum[-1] + nums2[n-i-1])\n        \n        suffix_sum.reverse()\n\n        if prefix_sum[-1] > x:\n            min_time = float('inf')\n            for i in range(n+1):\n                low, high = 0, n-i+1\n                while low < high:\n                    mid = (low + high) // 2\n                    if prefix_sum[i] + suffix_sum[mid] > x:\n                        low = mid + 1\n                    else:\n                        high = mid\n                if low <= n-i and prefix_sum[i] + suffix_sum[low] <= x:\n                    min_time = min(min_time, i + low)\n            return min_time if min_time != float('inf') else -1\n        else:\n            return 0"
}