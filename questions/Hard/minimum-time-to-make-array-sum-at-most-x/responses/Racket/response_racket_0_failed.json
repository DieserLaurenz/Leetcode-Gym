{
    "status_code": 14,
    "lang": "racket",
    "run_success": false,
    "status_runtime": "N/A",
    "memory": 126660000,
    "question_id": "2952",
    "elapsed_time": 5042,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "[1,2,3]\n[1,2,3]\n4",
    "expected_output": "3",
    "task_finish_time": 1708923598728,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 1274,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Racket",
    "submission_id": "1186391134",
    "status_msg": "Time Limit Exceeded",
    "state": "SUCCESS",
    "code": "(define/contract (minimum-time nums1 nums2 x)\n  (-> (listof exact-integer?) (listof exact-integer?) exact-integer? exact-integer?)\n  (let loop ((sec 0) (nums1 nums1))\n    (let ((sum (apply + nums1)))\n      (if (<= sum x) sec\n          (let* ((diffs (map * nums2 (range 1 (add1 (length nums1))))) \n                 (zipped (map list nums1 diffs))\n                 (sorted (sort zipped (lambda (a b) (> (second a) (second b)))))\n                 (max-index (first (first sorted))))\n            (if (null? sorted) -1\n                (loop (add1 sec) \n                      (for/list ([i (length nums1)]) \n                        (if (= i max-index) 0 (+ (list-ref nums1 i) (list-ref nums2 i)))))))))))"
}