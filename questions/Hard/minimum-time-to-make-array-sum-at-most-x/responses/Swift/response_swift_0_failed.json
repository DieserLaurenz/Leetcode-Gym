{
    "status_code": 11,
    "lang": "swift",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 15312000,
    "question_id": "2952",
    "elapsed_time": 58,
    "compare_result
    "code_output": "-1",
    "std_output": "",
    "last_testcase": "[1,2,3]\n[1,2,3]\n4",
    "expected_output": "3",
    "task_finish_time": 1708922589622,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 389,
    "total_testcases": 1274,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Swift",
    "submission_id": "1186378605",
    "input_formatted": "[1,2,3], [1,2,3], 4",
    "input": "[1,2,3]\n[1,2,3]\n4",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    func minimumTime(_ nums1: [Int], _ nums2: [Int], _ x: Int) -> Int {\n        let n = nums1.count\n        var prefixSum = [Int](repeating: 0, count: n + 1)\n        for i in 0..<n {\n            prefixSum[i + 1] = prefixSum[i] + nums1[i]\n        }\n\n        var total = prefixSum[n]\n        if total <= x { return 0 }\n\n        var result = Int.max\n        var suffixSum = 0\n        for i in stride(from: n - 1, through: 0, by: -1) {\n            suffixSum += nums2[i]\n            total -= nums1[i]\n            var low = 0, high = i, best = -1\n            while low <= high {\n                let mid = low + (high - low) / 2\n                if prefixSum[mid] + suffixSum + total <= x {\n                    best = mid\n                    high = mid - 1\n                } else {\n                    low = mid + 1\n                }\n            }\n            if best != -1 {\n                result = min(result, n - i + best)\n            }\n        }\n\n        return result == Int.max ? -1 : result\n    }\n}"
}