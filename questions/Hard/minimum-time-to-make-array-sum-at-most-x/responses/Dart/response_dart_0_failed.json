{
    "status_code": 11,
    "lang": "dart",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 156384000,
    "question_id": "2952",
    "elapsed_time": 800,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "[1,2,3]\n[1,2,3]\n4",
    "expected_output": "3",
    "task_finish_time": 1708922861006,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 396,
    "total_testcases": 1274,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Dart",
    "submission_id": "1186381937",
    "input_formatted": "[1,2,3], [1,2,3], 4",
    "input": "[1,2,3]\n[1,2,3]\n4",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n  int minimumTime(List<int> nums1, List<int> nums2, int x) {\n    int n = nums1.length;\n    List<int> prefixSum = List.filled(n + 1, 0);\n    for (int i = 0; i < n; i++) {\n      prefixSum[i + 1] = prefixSum[i] + nums1[i];\n    }\n    if (prefixSum[n] <= x) return 0;\n\n    Map<int, int> mp = {};\n    for (int i = 0; i < n; i++) {\n      nums1[i] += nums2[i];\n      mp[nums1[i]] = i;\n    }\n\n    nums1.sort((a, b) => b.compareTo(a));\n    int time = 0;\n    for (int i = 0; i < n; i++) {\n      if (prefixSum[n] - nums1[i] <= x) {\n        return time + 1;\n      }\n      time++;\n      int index = mp[nums1[i]]!;\n      for (int j = index; j < n - 1; j++) {\n        nums1[j] = nums1[j + 1];\n        mp[nums1[j]] = j;\n      }\n      n--;\n      for (int j = index + 1; j <= n; j++) {\n        prefixSum[j] = prefixSum[j - 1] + (j - 1 < n ? nums1[j - 1] : 0);\n      }\n      if (prefixSum[n] <= x) {\n        return time;\n      }\n    }\n    return -1;\n  }\n}"
}