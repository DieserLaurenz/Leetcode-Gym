{
    "status_code": 11,
    "lang": "ruby",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 211160000,
    "question_id": "2952",
    "elapsed_time": 158,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "[1,2,3]\n[1,2,3]\n4",
    "expected_output": "3",
    "task_finish_time": 1708923195188,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 1274,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Ruby",
    "submission_id": "1186386202",
    "input_formatted": "[1,2,3], [1,2,3], 4",
    "input": "[1,2,3]\n[1,2,3]\n4",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "# @param {Integer[]} nums1\n# @param {Integer[]} nums2\n# @param {Integer} x\n# @return {Integer}\ndef minimum_time(nums1, nums2, x)\n  n = nums1.size\n  prefix_sums = [0] * (n + 1)\n  0.upto(n - 1) { |i| prefix_sums[i + 1] = prefix_sums[i] + nums1[i] }\n  max_efficiency = Array.new(n)\n  max_efficiency[n - 1] = nums1[n - 1] / nums2[n - 1].to_f\n  (n - 2).downto(0) { |i| max_efficiency[i] = [max_efficiency[i + 1], nums1[i] / nums2[i].to_f].max }\n\n  min_time = Float::INFINITY\n  sum = 0\n  nums1.each_with_index do |num, i|\n    sum += num\n    next_sum = sum\n    time = i + 1\n    if sum > x\n      left = 0\n      right = max_efficiency[i]\n      while left < right\n        mid = (left + right) / 2\n        next_sum = sum\n        (i + 1).upto(n - 1) { |j| next_sum -= [nums1[j] - mid * nums2[j], 0].max }\n        if next_sum <= x\n          right = mid\n        else\n          left = mid + 0.00001\n        end\n      end\n      time += left\n    end\n    min_time = [min_time, time].min if next_sum <= x\n  end\n\n  min_time == Float::INFINITY ? -1 : min_time.ceil\nend"
}