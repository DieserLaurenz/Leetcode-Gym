{
    "status_code": 11,
    "lang": "golang",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 5544000,
    "question_id": "2952",
    "elapsed_time": 25,
    "compare_result
    "code_output": "-1",
    "std_output": "",
    "last_testcase": "[1,2,3]\n[1,2,3]\n4",
    "expected_output": "3",
    "task_finish_time": 1708923023281,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 262,
    "total_testcases": 1274,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Go",
    "submission_id": "1186383972",
    "input_formatted": "[1,2,3], [1,2,3], 4",
    "input": "[1,2,3]\n[1,2,3]\n4",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "func minimumTime(nums1 []int, nums2 []int, x int) int {\n n := len(nums1)\n prefixSum := make([]int, n+1)\n for i := 0; i < n; i++ {\n  prefixSum[i+1] = prefixSum[i] + nums1[i]\n }\n\n if prefixSum[n] <= x {\n  return 0\n }\n\n maxTime := -1\n for i, total := 0, 0; i < n; i++ {\n  total += nums2[i]\n  left, right := i+1, n\n  for left < right {\n   mid := (left + right) / 2\n   if prefixSum[mid]-prefixSum[i+1]+total > x {\n    right = mid\n   } else {\n    left = mid + 1\n   }\n  }\n  if prefixSum[left]-prefixSum[i+1]+total <= x {\n   maxTime = max(maxTime, left)\n  }\n }\n\n return maxTime\n}\n\nfunc max(a, b int) int {\n if a > b {\n  return a\n }\n return b\n}"
}