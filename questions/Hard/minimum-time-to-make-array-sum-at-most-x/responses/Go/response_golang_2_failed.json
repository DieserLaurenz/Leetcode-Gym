{
    "status_code": 11,
    "lang": "golang",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 5592000,
    "question_id": "2952",
    "elapsed_time": 998,
    "compare_result": "00000010110010000001100010001000000001000010010001111000000000000000100101101001100000000000000000011000000000010000000001010100110000000100000100000100001100011001100010111011000001001100000001000001000000000100010001111000000001000000001110111100001010000000100110000000001000000011100000011001000000000100000000011000110001101100110101000000000001100011100010000001000110010010000000001001100001000100100000100010010010100001100010000000000100011000001100001001100011000010000010000111001000000001000110000000100000000000000001100011100000000000010010000001001100000000100010100000000100100000000001011000000000010000000001000100011010100001100010100100010000100010101100010001000000000000010000000100000101000011011010110010000011110001010011110100001101100010010001100100000001000110000010001001000000010000000110000100001001000000000010010010011000010000100100001100000100001100010001000001110111000100101000010000001001000100000000101001101001100010001100000010100000000100000000010010010000000011100000000000000100010000000011000000000000001100001000000000000000000000001000000000000000000000000000000000010010100000100000010100000100000100000010000000000000000000000000000000001000000000010000000000000000000000000000000000000000000000000000000000000000000010100011",
    "code_output": "1",
    "std_output": "",
    "last_testcase": "[1,2,3]\n[1,2,3]\n4",
    "expected_output": "3",
    "task_finish_time": 1708923062592,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 286,
    "total_testcases": 1274,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Go",
    "submission_id": "1186384457",
    "input_formatted": "[1,2,3], [1,2,3], 4",
    "input": "[1,2,3]\n[1,2,3]\n4",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "func minimumTime(nums1 []int, nums2 []int, x int) int {\n    n := len(nums1)\n    sum := 0\n    for _, num := range nums1 {\n        sum += num\n    }\n    if sum <= x {\n        return 0\n    }\n\n    minTime := make([]int, n)\n    for i := range minTime {\n        minTime[i] = 1<<31 - 1\n    }\n    for i := 0; i < n; i++ {\n        sum := nums1[i]\n        time := 0\n        for j := i; j < n && sum <= x; j++ {\n            if j != i {\n                sum += nums1[j] + nums2[j-1]\n                time++\n            }\n            for k := j; k >= 0 && sum <= x; k-- {\n                minTime[k] = min(minTime[k], time+j-i+1)\n                sum += nums2[k]\n                time++\n            }\n            sum -= nums1[j] + (time-j+i-1)*nums2[j]\n        }\n    }\n\n    result := minTime[0]\n    for _, t := range minTime {\n        if t < result {\n            result = t\n        }\n    }\n\n    if result == 1<<31-1 {\n        return -1\n    }\n    return result\n}\n\nfunc min(a, b int) int {\n    if a < b {\n        return a\n    }\n    return b\n}"
}