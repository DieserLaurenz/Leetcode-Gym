{
    "status_code": 11,
    "lang": "golang",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 5188000,
    "question_id": "2952",
    "elapsed_time": 24,
    "compare_result": "00000000000000000001000010000000000100000010010001111000000000001010000100110001100000000001100000011000100000010010000001000000010010000100000000000010001000011001100010111000000001000100000001000001000000000100011001011000000001000000000000100100001010000000100110000000001000100001100000010000001000000100000000011000010000000100010100000000100100100001000000010001000000011010000000001001000001100011100000100000010000100101000010100000000010010000001100000001100011100010000100000111000000000000000101000000000000000000000101000011001000000000010010000000000100000000000010000000000000100000000001001000100010010000100001000100010001100001100000100100000000000000101100010000000000000000010010000000000001101010011010110000000011100001000011110100000101000010000000100000000000000000000000000001000000000000000100000000001000100000000010000000000000010000100100001000001100001000000000100001000100000100101001010000001001010000000000001001100011100000010000010010100000000000000000000010010000100111100000000000000100010000000011000000000000001100001000000000000000000000001000000001010000000000000000001000010010100000100000010100000100000100000010000000000000000000000000000000101000000000000000000000000000000000000000000000000000000000000000000000000000000000000011",
    "code_output": "1",
    "std_output": "",
    "last_testcase": "[1,2,3]\n[1,2,3]\n4",
    "expected_output": "3",
    "task_finish_time": 1708922991963,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 224,
    "total_testcases": 1274,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Go",
    "submission_id": "1186383531",
    "input_formatted": "[1,2,3], [1,2,3], 4",
    "input": "[1,2,3]\n[1,2,3]\n4",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "func minimumTime(nums1 []int, nums2 []int, x int) int {\n    totalSum, maxDecrease, currentSum := 0, 0, 0\n    for i, v := range nums1 {\n        totalSum += v\n        decrease := nums1[i] + nums2[i]*(len(nums1)-1) - nums2[i]\n        currentSum += decrease\n        if currentSum > maxDecrease {\n            maxDecrease = currentSum\n        }\n        if totalSum - maxDecrease <= x {\n            return i + 1\n        }\n    }\n    if totalSum <= x {\n        return 0\n    }\n    return -1\n}"
}