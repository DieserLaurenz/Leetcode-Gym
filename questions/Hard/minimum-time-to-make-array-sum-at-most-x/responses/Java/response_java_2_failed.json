{
    "status_code": 11,
    "lang": "java",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 44956000,
    "display_runtime": "5",
    "question_id": "2952",
    "elapsed_time": 175,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "[1,2,3]\n[1,2,3]\n4",
    "expected_output": "3",
    "task_finish_time": 1708912629264,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 372,
    "total_testcases": 1274,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Java",
    "submission_id": "1186278912",
    "input_formatted": "[1,2,3], [1,2,3], 4",
    "input": "[1,2,3]\n[1,2,3]\n4",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "import java.util.PriorityQueue;\n\nclass Solution {\n    public int minimumTime(List<Integer> nums1, List<Integer> nums2, int x) {\n        long sum = 0;\n        for (int num : nums1) sum += num;\n        if (sum <= x) return 0; // If initial sum is already <= x, no operations are needed.\n        \n        PriorityQueue<Integer> pq = new PriorityQueue<>((a, b) -> b - a);\n        for (int i = 0; i < nums1.size(); i++) {\n            pq.offer(nums1.get(i) + nums2.get(i) * 2); // Max heap for the value of operation.\n        }\n        \n        int time = 0;\n        while (!pq.isEmpty() && sum > x) {\n            sum -= pq.poll(); // Perform the operation on the largest sum reduction.\n            time++;\n            if (sum <= x) return time;\n        }\n        \n        return -1; // If sum cannot be reduced to x or below.\n    }\n}"
}