{
    "status_code": 11,
    "lang": "kotlin",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 40184000,
    "question_id": "2952",
    "elapsed_time": 259,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "[1,2,3]\n[1,2,3]\n4",
    "expected_output": "3",
    "task_finish_time": 1708922787269,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 202,
    "total_testcases": 1274,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Kotlin",
    "submission_id": "1186380935",
    "input_formatted": "[1,2,3], [1,2,3], 4",
    "input": "[1,2,3]\n[1,2,3]\n4",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    fun minimumTime(nums1: List<Int>, nums2: List<Int>, x: Int): Int {\n        val sums = nums1.indices.map { i -> nums1[i].toLong() + nums2[i] * 1L }\n        var total = sums.sum()\n        if (total <= x) return 0\n        var maxRemove = 0L\n        var currentRemove = 0L\n        var j = -1\n        for (i in nums1.indices) {\n            while (j + 1 < nums1.size && total - maxRemove > x) {\n                j++\n                currentRemove += sums[j]\n                maxRemove = maxOf(maxRemove, currentRemove)\n            }\n            if (total - maxRemove <= x) return i + nums1.size - j\n            currentRemove -= sums[i]\n        }\n        return if (total - maxRemove <= x) nums1.size else -1\n    }\n}"
}