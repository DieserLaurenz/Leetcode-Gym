{
    "status_code": 11,
    "lang": "python3",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 16832000,
    "question_id": "2952",
    "elapsed_time": 148,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "[1,2,3]\n[1,2,3]\n4",
    "expected_output": "3",
    "task_finish_time": 1708912877694,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 281,
    "total_testcases": 1274,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python3",
    "submission_id": "1186281122",
    "input_formatted": "[1,2,3], [1,2,3], 4",
    "input": "[1,2,3]\n[1,2,3]\n4",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution:\n    def minimumTime(self, nums1: List[int], nums2: List[int], x: int) -> int:\n        n = len(nums1)\n        prefix_sum = [0] * (n + 1)\n        for i in range(n):\n            prefix_sum[i + 1] = prefix_sum[i] + nums1[i]\n        if prefix_sum[-1] <= x:\n            return 0\n        max_time = float('inf')\n        for i in range(n):\n            nums1[i] += nums2[i]\n        for i in range(n):\n            if nums1[i] > x:\n                continue\n            target = x - nums1[i]\n            low, high = 0, i\n            while low <= high:\n                mid = (low + high) // 2\n                if prefix_sum[i + 1] - prefix_sum[mid] <= target:\n                    high = mid - 1\n                else:\n                    low = mid + 1\n            max_time = min(max_time, i + 1 - high)\n        return max_time if max_time != float('inf') else -1"
}