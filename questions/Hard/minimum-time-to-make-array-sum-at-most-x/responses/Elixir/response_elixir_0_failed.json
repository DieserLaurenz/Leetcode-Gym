{
    "status_code": 11,
    "lang": "elixir",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 73112000,
    "question_id": "2952",
    "elapsed_time": 405,
    "compare_result
    "code_output": "2",
    "std_output": "",
    "last_testcase": "[1,2,3]\n[1,2,3]\n4",
    "expected_output": "3",
    "task_finish_time": 1708923870614,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 1274,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Elixir",
    "submission_id": "1186394554",
    "input_formatted": "[1,2,3], [1,2,3], 4",
    "input": "[1,2,3]\n[1,2,3]\n4",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "defmodule Solution do\n  @spec minimum_time(nums1 :: [integer], nums2 :: [integer], x :: integer) :: integer\n  def minimum_time(nums1, nums2, x) do\n    nums1 |> Enum.zip(nums2)\n    |> Enum.map(fn {n1, n2} -> {n1, n2, div(x - n1, n2) + 1} end)\n    |> Enum.sort_by(fn {_, _, t} -> t end)\n    |> Enum.reduce_while({0, x, 0}, fn {n1, n2, t}, {seconds, remaining, count} ->\n      if remaining >= 0 and seconds <= t do\n        {:cont, {seconds + 1, remaining - (n1 + n2 * seconds), count + 1}}\n      else\n        {:halt, count}\n      end\n    end)\n    |> case do\n      count when count == length(nums1) -> -1\n      count -> count\n    end\n  end\nend"
}