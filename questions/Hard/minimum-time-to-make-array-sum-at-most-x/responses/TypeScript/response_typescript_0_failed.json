{
    "status_code": 11,
    "lang": "typescript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 55112000,
    "question_id": "2952",
    "elapsed_time": 120,
    "compare_result
    "code_output": "2",
    "std_output": "",
    "last_testcase": "[1,2,3]\n[1,2,3]\n4",
    "expected_output": "3",
    "task_finish_time": 1708922347643,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 244,
    "total_testcases": 1274,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "TypeScript",
    "submission_id": "1186375745",
    "input_formatted": "[1,2,3], [1,2,3], 4",
    "input": "[1,2,3]\n[1,2,3]\n4",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "function minimumTime(nums1: number[], nums2: number[], x: number): number {\n    let totalSum = nums1.reduce((a, c, i) => a + c + nums2[i], 0);\n    if (totalSum <= x) return 0;\n    let prefixSums = new Array(nums1.length + 1).fill(0);\n    for (let i = 0; i < nums1.length; i++) {\n        prefixSums[i + 1] = prefixSums[i] + nums1[i] + nums2[i];\n    }\n    let ans = Number.MAX_SAFE_INTEGER;\n    for (let i = 0; i < nums1.length; i++) {\n        let left = i, right = nums1.length, best = -1;\n        while (left <= right) {\n            let mid = (left + right) >> 1;\n            if (prefixSums[mid + 1] - prefixSums[i] <= x) {\n                best = mid;\n                left = mid + 1;\n            } else {\n                right = mid - 1;\n            }\n        }\n        if (best !== -1) {\n            ans = Math.min(ans, nums1.length - (best - i + 1) + i * 2);\n        }\n    }\n    return ans === Number.MAX_SAFE_INTEGER ? -1 : ans;\n};"
}