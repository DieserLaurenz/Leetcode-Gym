{
    "status_code": 11,
    "lang": "python",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 12564000,
    "question_id": "3047",
    "elapsed_time": 11009,
    "compare_result
    "code_output": "14",
    "std_output": "",
    "last_testcase": "[8,7,3,5,7,2,4,9]",
    "expected_output": "16",
    "task_finish_time": 1708901382369,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 59,
    "total_testcases": 663,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python",
    "submission_id": "1186188737",
    "input_formatted": "[8,7,3,5,7,2,4,9]",
    "input": "[8,7,3,5,7,2,4,9]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution(object):\n    def maximumSum(self, nums):\n        from collections import defaultdict\n        from math import sqrt\n\n        def factorize(n):\n            factor = 0\n            for i in range(2, int(sqrt(n)) + 1):\n                while n % i == 0:\n                    factor ^= i\n                    n //= i\n            if n > 1:\n                factor ^= n\n            return factor\n\n        sums = defaultdict(int)\n        for num in nums:\n            factor = factorize(num)\n            sums[factor] += num\n\n        return max(sums.values())"
}