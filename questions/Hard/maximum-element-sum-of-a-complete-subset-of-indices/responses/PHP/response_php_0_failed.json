{
    "status_code": 11,
    "lang": "php",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 21368000,
    "question_id": "3047",
    "elapsed_time": 2535,
    "compare_result
    "code_output": "18",
    "std_output": "",
    "last_testcase": "[8,7,3,5,7,2,4,9]",
    "expected_output": "16",
    "task_finish_time": 1708587993939,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 27,
    "total_testcases": 663,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "PHP",
    "submission_id": "1182806765",
    "input_formatted": "[8,7,3,5,7,2,4,9]",
    "input": "[8,7,3,5,7,2,4,9]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @return Integer\n     */\n    function maximumSum($nums) {\n        $factorCount = [];\n        foreach ($nums as $num) {\n            $factors = $this->primeFactors($num);\n            $mask = 0;\n            foreach ($factors as $factor => $count) {\n                if ($count % 2 != 0) {\n                    $mask ^= (1 << ($factor % 30));\n                }\n            }\n            if (!isset($factorCount[$mask])) {\n                $factorCount[$mask] = 0;\n            }\n            $factorCount[$mask] = max($factorCount[$mask], $num);\n        }\n        \n        $maxSum = max($nums);\n        foreach ($factorCount as $i => $sumI) {\n            foreach ($factorCount as $j => $sumJ) {\n                if (($i & $j) == 0) {\n                    $maxSum = max($maxSum, $sumI + $sumJ);\n                }\n            }\n        }\n        \n        return $maxSum;\n    }\n    \n    private function primeFactors($n) {\n        $factors = [];\n        for ($i = 2; $i * $i <= $n; $i++) {\n            while ($n % $i == 0) {\n                if (!isset($factors[$i])) {\n                    $factors[$i] = 0;\n                }\n                $factors[$i]++;\n                $n /= $i;\n            }\n        }\n        if ($n > 1) {\n            $factors[$n] = (isset($factors[$n]) ? $factors[$n] + 1 : 1);\n        }\n        return $factors;\n    }\n}"
}