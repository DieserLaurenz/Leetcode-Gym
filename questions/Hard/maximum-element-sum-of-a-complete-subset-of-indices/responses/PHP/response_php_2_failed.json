{
    "status_code": 11,
    "lang": "php",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 21564000,
    "question_id": "3047",
    "elapsed_time": 5224,
    "compare_result
    "code_output": "14",
    "std_output": "",
    "last_testcase": "[8,7,3,5,7,2,4,9]",
    "expected_output": "16",
    "task_finish_time": 1708588077036,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 41,
    "total_testcases": 663,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "PHP",
    "submission_id": "1182807829",
    "input_formatted": "[8,7,3,5,7,2,4,9]",
    "input": "[8,7,3,5,7,2,4,9]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    /**\n     * @param Integer[] $nums\n     * @return Integer\n     */\n    function maximumSum($nums) {\n        $group = [];\n        foreach ($nums as $num) {\n            $sqrt = sqrt($num);\n            $key = 1;\n            for ($i = 2; $i <= $sqrt; $i++) {\n                if ($num % $i == 0) {\n                    $count = 0;\n                    while ($num % $i == 0) {\n                        $num /= $i;\n                        $count++;\n                    }\n                    if ($count % 2 == 1) {\n                        $key *= $i;\n                    }\n                }\n            }\n            if ($num > 1) {\n                $key *= $num;\n            }\n            if (!isset($group[$key])) {\n                $group[$key] = 0;\n            }\n            $group[$key] += $key;\n        }\n        return max($group);\n    }\n}"
}