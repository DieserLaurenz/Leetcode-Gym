{
    "status_code": 11,
    "lang": "python3",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 17868000,
    "question_id": "3047",
    "elapsed_time": 11010,
    "compare_result
    "code_output": "14",
    "std_output": "",
    "last_testcase": "[8,7,3,5,7,2,4,9]",
    "expected_output": "16",
    "task_finish_time": 1708901573250,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 57,
    "total_testcases": 663,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python3",
    "submission_id": "1186190293",
    "input_formatted": "[8,7,3,5,7,2,4,9]",
    "input": "[8,7,3,5,7,2,4,9]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "from typing import List\nfrom collections import defaultdict\nfrom math import gcd\n\nclass Solution:\n    def maximumSum(self, nums: List[int]) -> int:\n        def square_free_factorization(x):\n            factor = 1\n            for i in range(2, int(x**0.5) + 1):\n                if x % (i * i) == 0:\n                    x //= i * i\n                    factor *= i\n            return x\n        \n        factor_sum = defaultdict(int)\n        max_sum = 0\n        for num in nums:\n            sf_factor = square_free_factorization(num)\n            factor_sum[sf_factor] += num\n            max_sum = max(max_sum, factor_sum[sf_factor])\n        \n        return max_sum\n\n# Example usage is not required as per instruction"
}