{
    "status_code": 15,
    "lang": "dart",
    "run_success": false,
    "runtime_error": "Line 11: Char 17: Error: A value of type 'double' can't be assigned to a variable of type 'int'.",
    "full_runtime_error": "Line 11: Char 17: Error: A value of type 'double' can't be assigned to a variable of type 'int'.\n            num /= i;\n                ^",
    "status_runtime": "N/A",
    "memory": 143352000,
    "question_id": "3047",
    "elapsed_time": 371,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "[8,7,3,5,7,2,4,9]",
    "expected_output": "16",
    "task_finish_time": 1708588491114,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 663,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Dart",
    "submission_id": "1182812914",
    "status_msg": "Runtime Error",
    "state": "SUCCESS",
    "code": "class Solution {\n  int maximumSum(List<int> nums) {\n    int n = nums.length;\n    Map<int, int> maskSum = {};\n    for (var num in nums) {\n      int mask = 0;\n      for (int i = 2; i * i <= num; i++) {\n        if (num % i == 0) {\n          int count = 0;\n          while (num % i == 0) {\n            num /= i;\n            count++;\n          }\n          if (count % 2 == 1) mask ^= (1 << i);\n        }\n      }\n      if (num > 1) mask ^= (1 << num);\n      maskSum[mask] = (maskSum[mask] ?? 0) + num;\n    }\n    int result = 0;\n    for (var sum in maskSum.values) {\n      if (sum > result) result = sum;\n    }\n    return result;\n  }\n}"
}