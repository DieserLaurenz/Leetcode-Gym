{
    "status_code": 11,
    "lang": "java",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 46320000,
    "display_runtime": "813",
    "question_id": "3047",
    "elapsed_time": 1045,
    "compare_result
    "code_output": "14",
    "std_output": "",
    "last_testcase": "[8,7,3,5,7,2,4,9]",
    "expected_output": "16",
    "task_finish_time": 1708587279114,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 9,
    "total_testcases": 663,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Java",
    "submission_id": "1182798017",
    "input_formatted": "[8,7,3,5,7,2,4,9]",
    "input": "[8,7,3,5,7,2,4,9]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "import java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\nclass Solution {\n    public long maximumSum(List<Integer> nums) {\n        Map<Long, Long> freq = new HashMap<>();\n        for (int a : nums) {\n            long mask = 0;\n            for (int i = 2; i * i <= a; i++) {\n                int count = 0;\n                while (a % i == 0) {\n                    a /= i;\n                    count++;\n                }\n                if (count % 2 == 1) mask |= (1L << i);\n            }\n            if (a > 1) mask |= (1L << a);\n            freq.put(mask, freq.getOrDefault(mask, 0L) + a);\n        }\n        \n        long ans = 0;\n        for (long sum : freq.values()) {\n            ans = Math.max(ans, sum);\n        }\n        return ans;\n    }\n}"
}