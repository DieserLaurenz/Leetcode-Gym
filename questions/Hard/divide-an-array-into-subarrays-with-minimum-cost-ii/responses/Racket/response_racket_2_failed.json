{
    "status_code": 15,
    "lang": "racket",
    "run_success": false,
    "runtime_error": "Line 1: Char 19: minimum-cost: broke its own contract",
    "full_runtime_error": "Line 1: Char 19: minimum-cost: broke its own contract\n  promised: exact-integer?\n  produced: 6.0\n  in: the range of\n      (->\n       (listof exact-integer?)\n       exact-integer?\n       exact-integer?\n       exact-integer?)\n  contract from: (function minimum-cost)\n  blaming: (function minimum-cost)\n   (assuming the contract is correct)\n  context...:\n   /usr/share/racket/collects/racket/contract/private/blame.rkt:346:0: raise-blame-error\n   /usr/share/racket/collects/racket/contract/private/arrow-higher-order.rkt:375:33\n   solution.rkt:16:2\n   body of (submod \"solution.rkt\" main)",
    "status_runtime": "N/A",
    "memory": 101260000,
    "question_id": "3260",
    "elapsed_time": 293,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "[1,3,2,6,4,2]\n3\n3",
    "expected_output": "5",
    "task_finish_time": 1708443945832,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 691,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Racket",
    "submission_id": "1181083581",
    "status_msg": "Runtime Error",
    "state": "SUCCESS",
    "code": "(define/contract (minimum-cost nums k dist)\n  (-> (listof exact-integer?) exact-integer? exact-integer? exact-integer?)\n  (define (solve start k)\n    (if (= k 1)\n        (car (drop nums start))\n        (let loop ((end (+ start 1)) (min-cost +inf.0))\n          (if (> end (- (length nums) k)) min-cost\n              (loop (+ end 1) (min min-cost (+ (car (drop nums start)) (solve end (- k 1)))))))))\n  (let loop ((i 0) (res +inf.0))\n    (if (> i (- (length nums) k dist)) res\n        (loop (+ i 1) (min res (solve i k))))))"
}