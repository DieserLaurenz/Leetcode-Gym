{
    "status_code": 11,
    "lang": "javascript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 74144000,
    "question_id": "3260",
    "elapsed_time": 4029,
    "compare_result
    "code_output": "4",
    "std_output": "",
    "last_testcase": "[1,3,2,6,4,2]\n3\n3",
    "expected_output": "5",
    "task_finish_time": 1708434415772,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 11,
    "total_testcases": 691,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "JavaScript",
    "submission_id": "1180949463",
    "input_formatted": "[1,3,2,6,4,2], 3, 3",
    "input": "[1,3,2,6,4,2]\n3\n3",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "/**\n * @param {number[]} nums\n * @param {number} k\n * @param {number} dist\n * @return {number}\n */\nvar minimumCost = function(nums, k, dist) {\n    let dp = new Array(k+1).fill(0).map(() => new Array(nums.length).fill(Infinity));\n    for (let i = 0; i < nums.length; i++) dp[1][i] = nums[i];\n\n    for (let i = 2; i <= k; i++) {\n        for (let j = i-1; j < nums.length; j++) {\n            for (let l = 1; l <= dist + 1 && j-l >= 0; l++) {\n                dp[i][j] = Math.min(dp[i][j], dp[i-1][j-l] + nums[j-l]);\n            }\n        }\n    }\n\n    let ans = Infinity;\n    for (let i = nums.length-k; i < nums.length; i++) {\n        ans = Math.min(ans, dp[k][i]);\n    }\n\n    return ans;\n};"
}