{
    "status_code": 15,
    "lang": "rust",
    "run_success": false,
    "runtime_error": "",
    "full_runtime_error": "",
    "status_runtime": "N/A",
    "memory": 2152000,
    "question_id": "3260",
    "elapsed_time": 11,
    "compare_result": "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "code_output": "",
    "std_output": "",
    "last_testcase": "[1,3,2,6,4,2]\n3\n3",
    "expected_output": "5",
    "task_finish_time": 1708443726365,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 691,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Rust",
    "submission_id": "1181080265",
    "status_msg": "Runtime Error",
    "state": "SUCCESS",
    "code": "impl Solution {\n    pub fn minimum_cost(nums: Vec<i32>, k: i32, dist: i32) -> i64 {\n        let n = nums.len();\n        let mut dp = vec![vec![i64::MAX; k as usize + 1]; n + 1];\n        dp[0][0] = 0;\n\n        for i in 1..=n {\n            for j in 1..=k as usize {\n                let mut min_cost = i64::MAX;\n                for l in (0..i).rev() {\n                    if i - l > dist as usize + 1 { break; }\n                    min_cost = min_cost.min(dp[l][j - 1]);\n                    dp[i][j] = dp[i][j].min(min_cost + nums[l] as i64);\n                }\n            }\n        }\n\n        dp[n][k as usize]\n    }\n}"
}