{
    "status_code": 11,
    "lang": "ruby",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 215376000,
    "question_id": "3260",
    "elapsed_time": 3187,
    "compare_result
    "code_output": "6",
    "std_output": "",
    "last_testcase": "[10,1,2,2,2,1]\n4\n3",
    "expected_output": "15",
    "task_finish_time": 1708443422881,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 104,
    "total_testcases": 691,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Ruby",
    "submission_id": "1181075643",
    "input_formatted": "[10,1,2,2,2,1], 4, 3",
    "input": "[10,1,2,2,2,1]\n4\n3",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "def minimum_cost(nums, k, dist)\n  n = nums.size\n  dp = Array.new(k+1) { Array.new(n+1, Float::INFINITY) }\n  dp[0][0] = 0\n\n  (1..k).each do |i|\n    (i..n).each do |j|\n      (([i-1, j-dist].max)..(j-1)).each do |l|\n        dp[i][j] = [dp[i][j], dp[i-1][l] + nums[j-1]].min\n      end\n    end\n  end\n\n  dp[k][n]\nend"
}