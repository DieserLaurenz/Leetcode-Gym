{
    "status_code": 11,
    "lang": "ruby",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 215312000,
    "question_id": "3260",
    "elapsed_time": 3061,
    "compare_result
    "code_output": "6",
    "std_output": "",
    "last_testcase": "[1,3,2,6,4,2]\n3\n3",
    "expected_output": "5",
    "task_finish_time": 1708443500519,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 111,
    "total_testcases": 691,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Ruby",
    "submission_id": "1181076734",
    "input_formatted": "[1,3,2,6,4,2], 3, 3",
    "input": "[1,3,2,6,4,2]\n3\n3",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "# @param {Integer[]} nums\n# @param {Integer} k\n# @param {Integer} dist\n# @return {Integer}\ndef minimum_cost(nums, k, dist)\n  n = nums.size\n  dp = Array.new(k+1) { Array.new(n+1, Float::INFINITY) }\n  dp[0][0] = 0\n\n  (1..k).each do |i|\n    (i-1..n-1).each do |j|\n      sum = 0\n      (j+1..[j+dist+1, n].min).each do |l|\n        sum = nums[j] if l == j + 1\n        dp[i][l] = [dp[i][l], dp[i-1][j] + sum].min\n        break if l == n\n        sum += nums[l]\n      end\n    end\n  end\n\n  result = Float::INFINITY\n  (k-1..[n-1, k+dist-1].min).each do |i|\n    result = [result, dp[k][i+1]].min\n  end\n  result\nend"
}