{
    "status_code": 15,
    "lang": "dart",
    "run_success": false,
    "runtime_error": "Line 19: Char 24: Error: The getter 'Math' isn't defined for the class 'Solution'.",
    "full_runtime_error": "Line 19: Char 24: Error: The getter 'Math' isn't defined for the class 'Solution'.\nTry correcting the name to the name of an existing getter, or defining a getter or field named 'Math'.\n            dp[i][j] = Math.min(dp[i][j], dp[i - 1][x] + nums[j - 1]);\n                       ^^^^\nLine 28: Char 18: Error: The getter 'Math' isn't defined for the class 'Solution'.\nTry correcting the name to the name of an existing getter, or defining a getter or field named 'Math'.\n        answer = Math.min(answer, dp[k][i]);\n                 ^^^^",
    "status_runtime": "N/A",
    "memory": 152220000,
    "question_id": "3260",
    "elapsed_time": 399,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "[1,3,2,6,4,2]\n3\n3",
    "expected_output": "5",
    "task_finish_time": 1708435183039,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 691,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Dart",
    "submission_id": "1180958953",
    "status_msg": "Runtime Error",
    "state": "SUCCESS",
    "code": "class Solution {\n  int minimumCost(List<int> nums, int k, int dist) {\n    int n = nums.length;\n    List<int> cost = List.filled(n, 0);\n    List<List<int>> dp = List.generate(k + 1, (_) => List.filled(n + 1, double.infinity.toInt()));\n\n    for (int i = 0; i < n; i++) {\n      cost[i] = i == 0 ? nums[i] : nums[i] + cost[i - 1];\n    }\n\n    for (int i = 0; i < n; i++) {\n      dp[1][i + 1] = nums[i];\n    }\n\n    for (int i = 2; i <= k; i++) {\n      for (int j = i; j <= n; j++) {\n        for (int x = i - 1; x < j; x++) {\n          if (j - x - 1 <= dist) {\n            dp[i][j] = Math.min(dp[i][j], dp[i - 1][x] + nums[j - 1]);\n          }\n        }\n      }\n    }\n\n    int answer = double.infinity.toInt();\n    for (int i = k; i <= n; i++) {\n      if (n - i <= dist) {\n        answer = Math.min(answer, dp[k][i]);\n      }\n    }\n\n    return answer;\n  }\n}"
}