{
    "status_code": 15,
    "lang": "cpp",
    "run_success": false,
    "runtime_error": "Line 1037: Char 34: runtime error: addition of unsigned offset to 0x50b000000510 overflowed to 0x50b00000038c (stl_vector.h)",
    "full_runtime_error": "Line 1037: Char 34: runtime error: addition of unsigned offset to 0x50b000000510 overflowed to 0x50b00000038c (stl_vector.h)\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /usr/bin/../lib/gcc/x86_64-linux-gnu/11/../../../../include/c++/11/bits/stl_vector.h:1046:34",
    "status_runtime": "N/A",
    "memory": 7668000,
    "question_id": "3223",
    "elapsed_time": 11,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "\"igigee\"\n2",
    "expected_output": "3",
    "task_finish_time": 1708297957483,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 759,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C++",
    "submission_id": "1179267701",
    "status_msg": "Runtime Error",
    "state": "SUCCESS",
    "code": "#include <string>\n#include <unordered_map>\n#include <vector>\n\nusing namespace std;\n\nclass Solution {\npublic:\n    int countCompleteSubstrings(string word, int k) {\n        int res = 0;\n        for (char startChar = 'a'; startChar <= 'z'; ++startChar) {\n            vector<int> count(26, 0);\n            int total = 0, valid = 0;\n            for (int l = 0, r = 0; r < word.length(); ++r) {\n                int idx = word[r] - 'a';\n                if (++count[idx] == k) valid++;\n                if (count[idx] == 1) total++;\n                while (total > 2 || word[l] < startChar || count[word[l] - 'a'] > k) {\n                    int lIdx = word[l] - 'a';\n                    if (count[lIdx] == k) valid--;\n                    if (--count[lIdx] == 0) total--;\n                    l++;\n                }\n                if (valid == total && total > 0) res++;\n            }\n        }\n        return res;\n    }\n};"
}