{
    "status_code": 11,
    "lang": "php",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 19816000,
    "question_id": "3223",
    "elapsed_time": 5084,
    "compare_result
    "code_output": "21",
    "std_output": "",
    "last_testcase": "\"fffififmfhhmihhifhifzhihizfmmffihzfifmfmizzfzfhmfmiimzffzzifzmziiizfzmfzfiiffffmhiizimmfm\"\n2",
    "expected_output": "20",
    "task_finish_time": 1708298756322,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 715,
    "total_testcases": 759,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "PHP",
    "submission_id": "1179273459",
    "input_formatted": "\"fffififmfhhmihhifhifzhihizfmmffihzfifmfmizzfzfhmfmiimzffzzifzmziiizfzmfzfiiffffmhiizimmfm\", 2",
    "input": "\"fffififmfhhmihhifhifzhihizfmmffihzfifmfmizzfzfhmfmiimzffzzifzmziiizfzmfzfiiffffmhiizimmfm\"\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n\n    /**\n     * @param String $word\n     * @param Integer $k\n     * @return Integer\n     */\n    function countCompleteSubstrings($word, $k) {\n        $result = 0;\n        $n = strlen($word);\n        \n        for ($start = 0; $start < $n; $start++) {\n            $freq = array_fill(0, 26, 0);\n            for ($end = $start; $end < $n; $end++) {\n                $freq[ord($word[$end]) - ord('a')]++;\n                if ($freq[ord($word[$end]) - ord('a')] > $k) break;\n                \n                $allK = true;\n                $prevCharCount = -1;\n                for ($i = 0; $i < 26; $i++) {\n                    if ($freq[$i] == 0) continue;\n                    if ($freq[$i] != $k) {\n                        $allK = false;\n                        break;\n                    }\n                    if ($prevCharCount != -1 && ($i - $prevCharCount > 2)) {\n                        $allK = false;\n                        break;\n                    }\n                    $prevCharCount = $i;\n                }\n                \n                if ($allK) $result++;\n            }\n        }\n        \n        return $result;\n    }\n}"
}