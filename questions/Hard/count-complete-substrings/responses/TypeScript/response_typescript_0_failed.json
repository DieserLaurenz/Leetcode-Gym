{
    "status_code": 11,
    "lang": "typescript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 61516000,
    "question_id": "3223",
    "elapsed_time": 4033,
    "compare_result
    "code_output": "2",
    "std_output": "",
    "last_testcase": "\"igigee\"\n2",
    "expected_output": "3",
    "task_finish_time": 1708298610466,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 714,
    "total_testcases": 759,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "TypeScript",
    "submission_id": "1179272448",
    "input_formatted": "\"igigee\", 2",
    "input": "\"igigee\"\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "function countCompleteSubstrings(word: string, k: number): number {\n    let count = 0;\n    for (let start = 0; start < word.length; start++) {\n        let charCount: {[key: string]: number} = {};\n        let maxChar = '';\n        for (let end = start; end < word.length; end++) {\n            const char = word[end];\n            charCount[char] = (charCount[char] || 0) + 1;\n            if (!maxChar || charCount[char] > charCount[maxChar]) {\n                maxChar = char;\n            }\n            if (charCount[maxChar] > k) break;\n            let isValid = true;\n            Object.keys(charCount).forEach(c => {\n                if (charCount[c] !== k) {\n                    isValid = false;\n                }\n                if (Math.abs(c.charCodeAt(0) - maxChar.charCodeAt(0)) > 2) {\n                    isValid = false;\n                }\n            });\n            if (isValid && Object.keys(charCount).length * k === end - start + 1) {\n                count++;\n            }\n        }\n    }\n    return count;\n};"
}