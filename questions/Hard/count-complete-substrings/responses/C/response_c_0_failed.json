{
    "status_code": 11,
    "lang": "c",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 5908000,
    "question_id": "3223",
    "elapsed_time": 3010,
    "compare_result
    "code_output": "17",
    "std_output": "",
    "last_testcase": "\"paappppppppaaaapapaaaaapappappaapaa\"\n3",
    "expected_output": "11",
    "task_finish_time": 1708298188263,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 724,
    "total_testcases": 759,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C",
    "submission_id": "1179269345",
    "input_formatted": "\"paappppppppaaaapapaaaaapappappaapaa\", 3",
    "input": "\"paappppppppaaaapapaaaaapappappaapaa\"\n3",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "#include <string.h>\n#include <stdlib.h>\n#include <stdbool.h>\n\nint countCompleteSubstrings(char* word, int k) {\n    int count = 0;\n    int len = strlen(word);\n    int freq[26] = {0};\n    for (int start = 0; start < len; start++) {\n        memset(freq, 0, sizeof(freq));\n        for (int end = start; end < len; end++) {\n            int idx = word[end] - 'a';\n            freq[idx]++;\n            bool isValid = true;\n            int prevFreq = 0;\n            for (int i = 0; i < 26; i++) {\n                if (freq[i] == 0) continue;\n                if (freq[i] != k) {\n                    isValid = false;\n                    break;\n                }\n                if (prevFreq > 0 && (abs(prevFreq - i) > 2)) {\n                    isValid = false;\n                    break;\n                }\n                prevFreq = i;\n            }\n            if (isValid) count++;\n        }\n    }\n    return count;\n}"
}