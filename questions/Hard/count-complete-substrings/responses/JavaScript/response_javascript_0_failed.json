{
    "status_code": 11,
    "lang": "javascript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 58884000,
    "question_id": "3223",
    "elapsed_time": 4025,
    "compare_result
    "code_output": "21",
    "std_output": "",
    "last_testcase": "\"fffififmfhhmihhifhifzhihizfmmffihzfifmfmizzfzfhmfmiimzffzzifzmziiizfzmfzfiiffffmhiizimmfm\"\n2",
    "expected_output": "20",
    "task_finish_time": 1708298463942,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 732,
    "total_testcases": 759,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "JavaScript",
    "submission_id": "1179271368",
    "input_formatted": "\"fffififmfhhmihhifhifzhihizfmmffihzfifmfmizzfzfhmfmiimzffzzifzmziiizfzmfzfiiffffmhiizimmfm\", 2",
    "input": "\"fffififmfhhmihhifhifzhihizfmmffihzfifmfmizzfzfhmfmiimzffzzifzmziiizfzmfzfiiffffmhiizimmfm\"\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "/**\n * @param {string} word\n * @param {number} k\n * @return {number}\n */\nvar countCompleteSubstrings = function(word, k) {\n    let count = 0;\n    for (let start = 0; start < word.length; ++start) {\n        let freq = new Array(26).fill(0);\n        for (let end = start; end < word.length; ++end) {\n            freq[word.charCodeAt(end) - 'a'.charCodeAt(0)]++;\n            if (freq.every(f => f === 0 || f === k)) {\n                if (isValidSubstring(freq, k)) count++;\n            }\n        }\n    }\n    return count;\n\n    function isValidSubstring(freq, k) {\n        let chars = [];\n        for (let i = 0; i < 26; ++i) {\n            if (freq[i] === k) chars.push(i);\n        }\n        for (let i = 1; i < chars.length; ++i) {\n            if (chars[i] - chars[i - 1] > 2) return false;\n        }\n        return true;\n    }\n};"
}