{
    "status_code": 11,
    "lang": "python3",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 16444000,
    "question_id": "3223",
    "elapsed_time": 11018,
    "compare_result
    "code_output": "3",
    "std_output": "",
    "last_testcase": "\"gvgvvgv\"\n2",
    "expected_output": "1",
    "task_finish_time": 1708869512498,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 636,
    "total_testcases": 759,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python3",
    "submission_id": "1185816049",
    "input_formatted": "\"gvgvvgv\", 2",
    "input": "\"gvgvvgv\"\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution:\n    def countCompleteSubstrings(self, word: str, k: int) -> int:\n        def valid(s):\n            count = [0] * 26\n            for char in s:\n                count[ord(char) - ord('a')] += 1\n            for c in count:\n                if c not in (0, k):\n                    return False\n            return True\n\n        n = len(word)\n        result = 0\n        for start in range(n):\n            for end in range(start + k, n + 1, k):\n                if valid(word[start:end]):\n                    result += 1\n        return result"
}