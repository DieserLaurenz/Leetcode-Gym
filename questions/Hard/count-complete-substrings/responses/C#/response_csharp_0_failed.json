{
    "status_code": 11,
    "lang": "csharp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 66048000,
    "question_id": "3223",
    "elapsed_time": 4015,
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111011111111111111111111111111111111111111111111111111111111111111111111111111111111111011111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111000000000000000000000000",
    "code_output": "21",
    "std_output": "",
    "last_testcase": "\"fffififmfhhmihhifhifzhihizfmmffihzfifmfmizzfzfhmfmiimzffzzifzmziiizfzmfzfiiffffmhiizimmfm\"\n2",
    "expected_output": "20",
    "task_finish_time": 1708298318154,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 733,
    "total_testcases": 759,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C#",
    "submission_id": "1179270308",
    "input_formatted": "\"fffififmfhhmihhifhifzhihizfmmffihzfifmfmizzfzfhmfmiimzffzzifzmziiizfzmfzfiiffffmhiizimmfm\", 2",
    "input": "\"fffififmfhhmihhifhifzhihizfmmffihzfifmfmizzfzfhmfmiimzffzzifzmziiizfzmfzfiiffffmhiizimmfm\"\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "public class Solution {\n    public int CountCompleteSubstrings(string word, int k) {\n        int count = 0;\n        for (int start = 0; start < word.Length; start++) {\n            int[] freq = new int[26];\n            for (int end = start; end < word.Length; end++) {\n                freq[word[end] - 'a']++;\n                bool isValid = true;\n                int lastChar = -3; // Initialize with a value that is out of valid char range\n                for (int i = 0; i < 26; i++) {\n                    if (freq[i] > 0) {\n                        if (freq[i] != k) {\n                            isValid = false;\n                            break;\n                        }\n                        if (lastChar >= 0 && (i - lastChar > 2 || lastChar - i > 2)) {\n                            isValid = false;\n                            break;\n                        }\n                        lastChar = i;\n                    }\n                }\n                if (isValid) count++;\n            }\n        }\n        return count;\n    }\n}"
}