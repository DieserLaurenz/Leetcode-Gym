{
    "status_code": 11,
    "lang": "csharp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 49524000,
    "question_id": "3223",
    "elapsed_time": 304,
    "compare_result
    "code_output": "2",
    "std_output": "",
    "last_testcase": "\"igigee\"\n2",
    "expected_output": "3",
    "task_finish_time": 1708298390807,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 668,
    "total_testcases": 759,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C#",
    "submission_id": "1179270862",
    "input_formatted": "\"igigee\", 2",
    "input": "\"igigee\"\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "public class Solution {\n    public int CountCompleteSubstrings(string word, int k) {\n        int total = 0;\n        for (char c = 'a'; c <= 'z'; ++c) {\n            int count = 0;\n            int[] freq = new int[26];\n            for (int i = 0, j = 0; j < word.Length; ++j) {\n                if (word[j] == c) ++count;\n                ++freq[word[j] - 'a'];\n                while (i <= j && (count > k || freq[word[j] - 'a'] > k)) {\n                    if (word[i] == c) --count;\n                    --freq[word[i++] - 'a'];\n                }\n                if (count == k && IsValid(freq, k)) total++;\n            }\n        }\n        return total;\n    }\n    \n    private bool IsValid(int[] freq, int k) {\n        int minIndex = 25, maxIndex = 0;\n        for (int i = 0; i < 26; i++) {\n            if (freq[i] == k) {\n                minIndex = Math.Min(minIndex, i);\n                maxIndex = Math.Max(maxIndex, i);\n            } else if (freq[i] != 0) return false;\n        }\n        return maxIndex - minIndex <= 2;\n    }\n}"
}