{
    "status_code": 11,
    "lang": "swift",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 18956000,
    "question_id": "3223",
    "elapsed_time": 5065,
    "compare_result
    "code_output": "2",
    "std_output": "",
    "last_testcase": "\"igigee\"\n2",
    "expected_output": "3",
    "task_finish_time": 1708298973180,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 710,
    "total_testcases": 759,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Swift",
    "submission_id": "1179274992",
    "input_formatted": "\"igigee\", 2",
    "input": "\"igigee\"\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    func countCompleteSubstrings(_ word: String, _ k: Int) -> Int {\n        let n = word.count\n        var ans = 0\n        let word = Array(word)\n        \n        for i in 0..<n {\n            var freq = [Character: Int]()\n            var minChar = Character(\"z\"), maxChar = Character(\"a\")\n            for j in i..<n {\n                freq[word[j], default: 0] += 1\n                if word[j] < minChar {\n                    minChar = word[j]\n                }\n                if word[j] > maxChar {\n                    maxChar = word[j]\n                }\n                if freq.count > 2 || maxChar.asciiValue! - minChar.asciiValue! > 2 {\n                    break\n                }\n                if freq.allSatisfy({ $0.value == k }) {\n                    ans += 1\n                }\n            }\n        }\n        return ans\n    }\n}"
}