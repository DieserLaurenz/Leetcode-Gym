{
    "status_code": 11,
    "lang": "java",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 45760000,
    "display_runtime": "885",
    "question_id": "3223",
    "elapsed_time": 1098,
    "compare_result
    "code_output": "36",
    "std_output": "",
    "last_testcase": "\"aaabbbccc\"\n3",
    "expected_output": "6",
    "task_finish_time": 1708298051018,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 459,
    "total_testcases": 759,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Java",
    "submission_id": "1179268356",
    "input_formatted": "\"aaabbbccc\", 3",
    "input": "\"aaabbbccc\"\n3",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    public int countCompleteSubstrings(String word, int k) {\n        int totalSubstrings = 0;\n        for (char start = 'a'; start <= 'z'; start++) {\n            for (char end = start; end <= 'z' && end <= start + 2; end++) {\n                int[] freq = new int[26];\n                int count = 0;\n                for (int left = 0, right = 0; right < word.length(); right++) {\n                    if (word.charAt(right) < start || word.charAt(right) > end) {\n                        while (left <= right) {\n                            freq[word.charAt(left) - 'a'] = 0;\n                            left++;\n                        }\n                        count = 0;\n                        continue;\n                    }\n                    freq[word.charAt(right) - 'a']++;\n                    if (freq[word.charAt(right) - 'a'] == k) count++;\n                    if (freq[word.charAt(right) - 'a'] == k + 1) count--;\n                    if (count == (end - start + 1)) {\n                        totalSubstrings++;\n                        while (left < word.length() && word.charAt(left) >= start && word.charAt(left) <= end) {\n                            if (freq[word.charAt(left) - 'a'] == k) count--;\n                            freq[word.charAt(left) - 'a']--;\n                            if (freq[word.charAt(left) - 'a'] == k - 1) count++;\n                            left++;\n                            if (count == (end - start + 1)) totalSubstrings++;\n                            else break;\n                        }\n                    }\n                }\n            }\n        }\n        return totalSubstrings;\n    }\n}"
}