{
    "status_code": 11,
    "lang": "php",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 20516000,
    "question_id": "3238",
    "elapsed_time": 3037,
    "compare_result
    "code_output": "-1",
    "std_output": "",
    "last_testcase": "\"abcd\"\n\"acbe\"\n[\"a\",\"b\",\"c\",\"c\",\"e\",\"d\"]\n[\"b\",\"c\",\"b\",\"e\",\"b\",\"e\"]\n[2,5,5,1,2,20]",
    "expected_output": "28",
    "task_finish_time": 1708671371660,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 93,
    "total_testcases": 647,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "PHP",
    "submission_id": "1183757457",
    "input_formatted": "\"abcd\", \"acbe\", [\"a\",\"b\",\"c\",\"c\",\"e\",\"d\"], [\"b\",\"c\",\"b\",\"e\",\"b\",\"e\"], [2,5,5,1,2,20]",
    "input": "\"abcd\"\n\"acbe\"\n[\"a\",\"b\",\"c\",\"c\",\"e\",\"d\"]\n[\"b\",\"c\",\"b\",\"e\",\"b\",\"e\"]\n[2,5,5,1,2,20]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n\n    /**\n     * @param String $source\n     * @param String $target\n     * @param String[] $original\n     * @param String[] $changed\n     * @param Integer[] $cost\n     * @return Integer\n     */\n    function minimumCost($source, $target, $original, $changed, $cost) {\n        $n = strlen($source);\n        $m = count($original);\n        $dp = array_fill(0, $n + 1, PHP_INT_MAX);\n        $dp[0] = 0;\n\n        for ($i = 0; $i < $n; $i++) {\n            if ($dp[$i] == PHP_INT_MAX) continue;\n            for ($j = 0; $j < $m; $j++) {\n                $orig = $original[$j];\n                $chg = $changed[$j];\n                $cst = $cost[$j];\n                $len = strlen($orig);\n                if ($i + $len <= $n && substr($source, $i, $len) === $orig) {\n                    for ($k = 1; $k <= $len; $k++) {\n                        $subOrig = substr($orig, 0, $k);\n                        $subChg = substr($chg, 0, $k);\n                        if ($i + $k <= $n && substr($target, $i, $k) === $subChg) {\n                            $dp[$i + $k] = min($dp[$i + $k], $dp[$i] + $cst);\n                        }\n                    }\n                }\n            }\n        }\n\n        return $dp[$n] === PHP_INT_MAX ? -1 : $dp[$n];\n    }\n}"
}