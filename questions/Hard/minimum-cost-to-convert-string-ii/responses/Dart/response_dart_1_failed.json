{
    "status_code": 11,
    "lang": "dart",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 152776000,
    "question_id": "3238",
    "elapsed_time": 5018,
    "compare_result
    "code_output": "0",
    "std_output": "",
    "last_testcase": "\"abcd\"\n\"acbe\"\n[\"a\",\"b\",\"c\",\"c\",\"e\",\"d\"]\n[\"b\",\"c\",\"b\",\"e\",\"b\",\"e\"]\n[2,5,5,1,2,20]",
    "expected_output": "28",
    "task_finish_time": 1708671808234,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 647,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Dart",
    "submission_id": "1183762751",
    "input_formatted": "\"abcd\", \"acbe\", [\"a\",\"b\",\"c\",\"c\",\"e\",\"d\"], [\"b\",\"c\",\"b\",\"e\",\"b\",\"e\"], [2,5,5,1,2,20]",
    "input": "\"abcd\"\n\"acbe\"\n[\"a\",\"b\",\"c\",\"c\",\"e\",\"d\"]\n[\"b\",\"c\",\"b\",\"e\",\"b\",\"e\"]\n[2,5,5,1,2,20]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n  int minimumCost(String source, String target, List<String> original, List<String> changed, List<int> cost) {\n    int n = source.length;\n    List<int> dp = List.filled(n + 1, 1 << 30);\n    dp[0] = 0;\n    for (int i = 0; i < n; i++) {\n      dp[i + 1] = min(dp[i + 1], dp[i]);\n      for (int j = 0; j < original.length; j++) {\n        if (i + original[j].length <= n) {\n          String sub = source.substring(i, i + original[j].length);\n          if (sub == original[j]) {\n            for (int k = 0; k <= i; k++) {\n              String tSub = target.substring(k, min(n, k + changed[j].length));\n              if (tSub == changed[j] && dp[i] != 1 << 30) {\n                dp[min(n, k + changed[j].length)] = min(dp[min(n, k + changed[j].length)], dp[i] + cost[j]);\n              }\n            }\n          }\n        }\n      }\n    }\n    return dp[n] == 1 << 30 ? -1 : dp[n];\n  }\n\n  int min(int a, int b) => a < b ? a : b;\n}"
}