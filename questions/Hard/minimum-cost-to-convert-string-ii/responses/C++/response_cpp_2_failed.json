{
    "status_code": 11,
    "lang": "cpp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 498128000,
    "question_id": "3238",
    "elapsed_time": 4037,
    "compare_result
    "code_output": "0",
    "std_output": "",
    "last_testcase": "\"abcd\"\n\"acbe\"\n[\"a\",\"b\",\"c\",\"c\",\"e\",\"d\"]\n[\"b\",\"c\",\"b\",\"e\",\"b\",\"e\"]\n[2,5,5,1,2,20]",
    "expected_output": "28",
    "task_finish_time": 1708661500891,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 647,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C++",
    "submission_id": "1183639543",
    "input_formatted": "\"abcd\", \"acbe\", [\"a\",\"b\",\"c\",\"c\",\"e\",\"d\"], [\"b\",\"c\",\"b\",\"e\",\"b\",\"e\"], [2,5,5,1,2,20]",
    "input": "\"abcd\"\n\"acbe\"\n[\"a\",\"b\",\"c\",\"c\",\"e\",\"d\"]\n[\"b\",\"c\",\"b\",\"e\",\"b\",\"e\"]\n[2,5,5,1,2,20]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "#include <vector>\n#include <string>\n#include <unordered_map>\n#include <algorithm>\n\nusing namespace std;\n\nclass Solution {\npublic:\n    long long minimumCost(string source, string target, vector<string>& original, vector<string>& changed, vector<int>& cost) {\n        int n = source.size();\n        vector<vector<long long>> dp(n + 1, vector<long long>(n + 1, LLONG_MAX));\n        unordered_map<string, vector<pair<string, int>>> mp;\n\n        for (int i = 0; i < original.size(); i++) {\n            mp[original[i]].push_back({changed[i], cost[i]});\n        }\n\n        dp[0][0] = 0; // cost to convert empty source to empty target\n\n        for (int i = 0; i <= n; i++) {\n            for (int j = 0; j <= n; j++) {\n                if (i > 0) dp[i][j] = min(dp[i][j], dp[i-1][j]); // delete character from source\n                if (j > 0) dp[i][j] = min(dp[i][j], dp[i][j-1]); // add character to target\n                for (int k = 1; k <= i && k <= j; k++) { // replace substring of length k\n                    string sub = source.substr(i-k, k);\n                    if (mp.find(sub) != mp.end()) {\n                        for (auto &p : mp[sub]) {\n                            string to = p.first;\n                            int cst = p.second;\n                            if (to.size() <= j && target.substr(j-to.size(), to.size()) == to) {\n                                dp[i][j] = min(dp[i][j], dp[i-k][j-to.size()] + cst);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return dp[n][n] == LLONG_MAX ? -1 : dp[n][n];\n    }\n};"
}