{
    "status_code": 11,
    "lang": "python3",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 16468000,
    "question_id": "3238",
    "elapsed_time": 11009,
    "compare_result
    "code_output": "0",
    "std_output": "",
    "last_testcase": "\"abcd\"\n\"acbe\"\n[\"a\",\"b\",\"c\",\"c\",\"e\",\"d\"]\n[\"b\",\"c\",\"b\",\"e\",\"b\",\"e\"]\n[2,5,5,1,2,20]",
    "expected_output": "28",
    "task_finish_time": 1708911552416,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 647,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python3",
    "submission_id": "1186269808",
    "input_formatted": "\"abcd\", \"acbe\", [\"a\",\"b\",\"c\",\"c\",\"e\",\"d\"], [\"b\",\"c\",\"b\",\"e\",\"b\",\"e\"], [2,5,5,1,2,20]",
    "input": "\"abcd\"\n\"acbe\"\n[\"a\",\"b\",\"c\",\"c\",\"e\",\"d\"]\n[\"b\",\"c\",\"b\",\"e\",\"b\",\"e\"]\n[2,5,5,1,2,20]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "from typing import List\nfrom collections import defaultdict\n\nclass Solution:\n    def minimumCost(self, source: str, target: str, original: List[str], changed: List[str], cost: List[int]) -> int:\n        n = len(source)\n        dp = [float('inf')] * (n + 1)\n        dp[0] = 0\n        conversion_dict = defaultdict(list)\n\n        for i in range(len(original)):\n            conversion_dict[(original[i], changed[i])].append(cost[i])\n\n        for i in range(1, n + 1):\n            dp[i] = dp[i - 1]  # In case no conversion is possible, assume no cost added.\n\n            for j in range(i):\n                src_substr = source[j:i]\n                tgt_substr = target[j:i]\n                if (src_substr, tgt_substr) in conversion_dict:\n                    min_cost = min(conversion_dict[(src_substr, tgt_substr)])\n                    dp[i] = min(dp[i], dp[j] + min_cost)\n\n                for k in range(len(src_substr)):\n                    for l in range(k + 1, len(src_substr) + 1):\n                        src_sub_substr = src_substr[k:l]\n                        tgt_sub_substr = tgt_substr[k:l]\n                        if (src_sub_substr, tgt_sub_substr) in conversion_dict:\n                            min_cost = min(conversion_dict[(src_sub_substr, tgt_sub_substr)])\n                            if j + k == 0 or dp[j + k] != float('inf'):\n                                dp[i] = min(dp[i], dp[j + k] + min_cost)\n\n        return dp[n] if dp[n] != float('inf') else -1"
}