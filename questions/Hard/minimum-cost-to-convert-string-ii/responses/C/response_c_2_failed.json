{
    "status_code": 11,
    "lang": "c",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 11068000,
    "question_id": "3238",
    "elapsed_time": 651,
    "compare_result
    "code_output": "30",
    "std_output": "",
    "last_testcase": "\"abcd\"\n\"acbe\"\n[\"a\",\"b\",\"c\",\"c\",\"e\",\"d\"]\n[\"b\",\"c\",\"b\",\"e\",\"b\",\"e\"]\n[2,5,5,1,2,20]",
    "expected_output": "28",
    "task_finish_time": 1708661793651,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 248,
    "total_testcases": 647,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C",
    "submission_id": "1183642679",
    "input_formatted": "\"abcd\", \"acbe\", [\"a\",\"b\",\"c\",\"c\",\"e\",\"d\"], [\"b\",\"c\",\"b\",\"e\",\"b\",\"e\"], [2,5,5,1,2,20]",
    "input": "\"abcd\"\n\"acbe\"\n[\"a\",\"b\",\"c\",\"c\",\"e\",\"d\"]\n[\"b\",\"c\",\"b\",\"e\",\"b\",\"e\"]\n[2,5,5,1,2,20]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "#include <string.h>\n#include <limits.h>\n\nlong long dp[1001];\n\nlong long minimumCost(char* source, char* target, char** original, int originalSize, char** changed, int changedSize, int* cost, int costSize) {\n    int n = strlen(source);\n    for (int i = 0; i <= n; i++) dp[i] = LLONG_MAX;\n    dp[0] = 0; // Cost to convert an empty prefix\n\n    for (int i = 0; i < n; i++) {\n        if (source[i] == target[i]) { // No cost to change if characters are already the same\n            if (dp[i] < LLONG_MAX) {\n                dp[i+1] = dp[i];\n            }\n        }\n        for (int j = 0; j < originalSize; j++) {\n            int len = strlen(original[j]);\n            if (i + len <= n && strncmp(source+i, original[j], len) == 0 && strncmp(target+i, changed[j], len) == 0) {\n                if (dp[i] < LLONG_MAX) {\n                    dp[i + len] = dp[i + len] > dp[i] + cost[j] ? dp[i] + cost[j] : dp[i + len];\n                }\n            }\n        }\n    }\n\n    return dp[n] == LLONG_MAX ? -1 : dp[n];\n}"
}