{
    "status_code": 11,
    "lang": "golang",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 8580000,
    "question_id": "3184",
    "elapsed_time": 92,
    "compare_result": "0011111111111111111111111111111111111111111110111111111111111001100111111110010110000000001011011111011110100111000100010101000110000000000001101000010011000001000000000000100101100000000011110001110100000010000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000111111101110000000000000000000000000010000",
    "code_output": "17",
    "std_output": "",
    "last_testcase": "[3,3,5,6]",
    "expected_output": "14",
    "task_finish_time": 1708557303977,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 125,
    "total_testcases": 346,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Go",
    "submission_id": "1182455391",
    "input_formatted": "[3,3,5,6]",
    "input": "[3,3,5,6]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "func maxBalancedSubsequenceSum(nums []int) int64 {\n    maxEndingHere := int64(nums[0])\n    maxSoFar := int64(nums[0])\n\n    for i := 1; i < len(nums); i++ {\n        maxEndingHere = max(maxEndingHere+int64(nums[i]), int64(nums[i]))\n        maxSoFar = max(maxSoFar, maxEndingHere)\n    }\n\n    return maxSoFar\n}\n\nfunc max(a, b int64) int64 {\n    if a > b {\n        return a\n    }\n    return b\n}"
}