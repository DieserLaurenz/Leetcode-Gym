{
    "status_code": 11,
    "lang": "golang",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 8136000,
    "question_id": "3184",
    "elapsed_time": 95,
    "compare_result": "1101111111111111111111111111100000001001111111110000000000011111111111000000000111111111100000000000001111110101011111100000000001011010000000000110100100000000000100000000001000100000100000000000110001100110110011000000101001000000000000100000000000001000000000000000000000000000000000000000000000000000111111111011000000000000000000000000011001",
    "code_output": "-3",
    "std_output": "",
    "last_testcase": "[-2,-1]",
    "expected_output": "-1",
    "task_finish_time": 1708557271155,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 114,
    "total_testcases": 346,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Go",
    "submission_id": "1182455153",
    "input_formatted": "[-2,-1]",
    "input": "[-2,-1]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "func maxBalancedSubsequenceSum(nums []int) int64 {\n    maxSum := int64(nums[0])\n    maxVal := int64(nums[0])\n    for i := 1; i < len(nums); i++ {\n        if int64(nums[i]) >= maxVal+int64(i) {\n            maxSum += int64(nums[i])\n            maxVal = int64(nums[i]) - int64(i)\n        }\n    }\n    return maxSum\n}"
}