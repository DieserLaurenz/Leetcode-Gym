{
    "status_code": 11,
    "lang": "swift",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 20608000,
    "question_id": "3184",
    "elapsed_time": 387,
    "compare_result": "0011111111111111111111111111111111111111101111111001111101111011101111111100111110000111100001011101011110100001001011100001100000010010000000000000000101000000000100000000001000000000001000100000100000100010110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101111111010000000000000000000000000001000",
    "code_output": "8",
    "std_output": "",
    "last_testcase": "[3,3,5,6]",
    "expected_output": "14",
    "task_finish_time": 1708556880877,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 115,
    "total_testcases": 346,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Swift",
    "submission_id": "1182452234",
    "input_formatted": "[3,3,5,6]",
    "input": "[3,3,5,6]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    func maxBalancedSubsequenceSum(_ nums: [Int]) -> Int {\n        var maxSum = nums[0]\n        var minVal = nums[0]\n        for i in 1..<nums.count {\n            if nums[i] >= minVal + i {\n                maxSum = max(maxSum, maxSum + nums[i] - minVal)\n                minVal = nums[i] - i\n            }\n        }\n        return maxSum\n    }\n}"
}