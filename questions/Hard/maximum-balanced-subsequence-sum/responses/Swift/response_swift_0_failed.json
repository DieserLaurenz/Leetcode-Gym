{
    "status_code": 11,
    "lang": "swift",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 20436000,
    "question_id": "3184",
    "elapsed_time": 388,
    "compare_result": "1011111111111111111111111111111111111111111111111111111111111011101111111110011110000111111011111100011110111101001011110101100110010111000001101000000111110000000100100000000100000001000001100001110000100110110010000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000111111111110000000000000000000000000010000",
    "code_output": "8",
    "std_output": "",
    "last_testcase": "[5,-1,-3,8]",
    "expected_output": "13",
    "task_finish_time": 1708556856087,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 147,
    "total_testcases": 346,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Swift",
    "submission_id": "1182452074",
    "input_formatted": "[5,-1,-3,8]",
    "input": "[5,-1,-3,8]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    func maxBalancedSubsequenceSum(_ nums: [Int]) -> Int {\n        var maxSum = Int.min\n        var currentSum = 0\n        var minElement = Int.max\n        \n        for num in nums {\n            if num > minElement {\n                currentSum += num\n                maxSum = max(maxSum, currentSum)\n            } else {\n                currentSum = num\n                minElement = num\n            }\n        }\n        \n        return max(maxSum, nums.max()!)\n    }\n}"
}