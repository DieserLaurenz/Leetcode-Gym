{
    "status_code": 11,
    "lang": "java",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 56824000,
    "display_runtime": "1",
    "question_id": "3184",
    "elapsed_time": 287,
    "compare_result": "0011111111111111111111111111111111111111111110111111111111111001100111111110010110000000001011011111011110100111000100010101000110000000000001101000010011000001000000000000100101100000000011110001110100000010000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000111111101110000000000000000000000000010000",
    "code_output": "17",
    "std_output": "",
    "last_testcase": "[3,3,5,6]",
    "expected_output": "14",
    "task_finish_time": 1708556135371,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 125,
    "total_testcases": 346,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Java",
    "submission_id": "1182446739",
    "input_formatted": "[3,3,5,6]",
    "input": "[3,3,5,6]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    public long maxBalancedSubsequenceSum(int[] nums) {\n        long maxSum = Integer.MIN_VALUE;\n        long minPrefixSum = 0;\n        long currentSum = 0;\n        \n        for (int num : nums) {\n            currentSum += num;\n            maxSum = Math.max(maxSum, currentSum - minPrefixSum);\n            minPrefixSum = Math.min(minPrefixSum, currentSum);\n        }\n        \n        return maxSum;\n    }\n}"
}