{
    "status_code": 11,
    "lang": "java",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 56908000,
    "display_runtime": "2",
    "question_id": "3184",
    "elapsed_time": 341,
    "compare_result": "0111111111111111111111111111111111111111111110111111111111111101110101011110010111101000001011011111011111100100000000001001000101000000100101100100100000001000000000000000100000000000000000100001010000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111111101110000000000000000000000000010001",
    "code_output": "17",
    "std_output": "",
    "last_testcase": "[3,3,5,6]",
    "expected_output": "14",
    "task_finish_time": 1708556186421,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 118,
    "total_testcases": 346,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Java",
    "submission_id": "1182447104",
    "input_formatted": "[3,3,5,6]",
    "input": "[3,3,5,6]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    public long maxBalancedSubsequenceSum(int[] nums) {\n        int maxElement = Integer.MIN_VALUE;\n        for (int num : nums) {\n            maxElement = Math.max(maxElement, num);\n        }\n        \n        long sum = 0;\n        for (int num : nums) {\n            if (num == maxElement) {\n                sum += num;\n                maxElement = Integer.MIN_VALUE; // Ensure only one instance is added\n            } else if (num > 0) {\n                sum += num;\n            }\n        }\n        return sum;\n    }\n}"
}