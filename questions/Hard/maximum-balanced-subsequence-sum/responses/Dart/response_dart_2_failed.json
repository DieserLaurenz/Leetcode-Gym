{
    "status_code": 11,
    "lang": "dart",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 153232000,
    "question_id": "3184",
    "elapsed_time": 5015,
    "compare_result": "1101111111111111111111111111100000001001111111110000000000011111110101000011000011100110010110001011001111100110011000001000000001010000100001100100100000000000000000000000100000000010000000000000010000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111111111111000000000000000000000000000000",
    "code_output": "-2",
    "std_output": "",
    "last_testcase": "[-2,-1]",
    "expected_output": "-1",
    "task_finish_time": 1708557185566,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 93,
    "total_testcases": 346,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Dart",
    "submission_id": "1182454523",
    "input_formatted": "[-2,-1]",
    "input": "[-2,-1]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n  int maxBalancedSubsequenceSum(List<int> nums) {\n    int maxSum = nums[0];\n    for (int i = 0; i < nums.length; i++) {\n      int currentMax = nums[i];\n      int minElement = nums[i];\n      for (int j = i + 1; j < nums.length; j++) {\n        if (nums[j] - minElement >= j - i) {\n          currentMax += nums[j];\n          maxSum = max(maxSum, currentMax);\n        } else {\n          minElement = min(minElement, nums[j]);\n        }\n      }\n    }\n    return maxSum;\n  }\n\n  int max(int a, int b) => a > b ? a : b;\n  int min(int a, int b) => a < b ? a : b;\n}"
}