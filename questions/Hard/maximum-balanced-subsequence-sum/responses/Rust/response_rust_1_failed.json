{
    "status_code": 11,
    "lang": "rust",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 4336000,
    "question_id": "3184",
    "elapsed_time": 22,
    "compare_result": "0001000000000001111111111111101010010111101110111011101000111011101111111110011110000000001011101100011110101001000010110101101110000010001001101000000011010000000100000000000100000000001001100001100000101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101001100000000000000000000000000000000",
    "code_output": "11",
    "std_output": "",
    "last_testcase": "[3,3,5,6]",
    "expected_output": "14",
    "task_finish_time": 1708566609272,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 95,
    "total_testcases": 346,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Rust",
    "submission_id": "1182531442",
    "input_formatted": "[3,3,5,6]",
    "input": "[3,3,5,6]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "impl Solution {\n    pub fn max_balanced_subsequence_sum(nums: Vec<i32>) -> i64 {\n        let mut max_value = i64::MIN;\n        for &num in &nums {\n            max_value = max_value.max(num as i64);\n        }\n        let mut sum = 0i64;\n        let mut min_value = 0i64;\n        for i in 0..nums.len() {\n            sum += nums[i] as i64 - i as i64;\n            min_value = min_value.min(sum);\n            max_value = max_value.max(sum - min_value);\n        }\n        max_value\n    }\n}"
}