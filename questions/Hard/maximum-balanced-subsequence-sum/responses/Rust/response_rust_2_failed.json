{
    "status_code": 11,
    "lang": "rust",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 4296000,
    "question_id": "3184",
    "elapsed_time": 20,
    "compare_result": "0001111111111111111111111111100000000000110000000000000000000000000000000000000010000000000000000000000000000100000000000000000001000000000000000100000000000000000000000000000000110000000000000100110000000000000001000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000011111001110000000000000000000000000010000",
    "code_output": "17",
    "std_output": "",
    "last_testcase": "[3,3,5,6]",
    "expected_output": "14",
    "task_finish_time": 1708566641961,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 48,
    "total_testcases": 346,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Rust",
    "submission_id": "1182531756",
    "input_formatted": "[3,3,5,6]",
    "input": "[3,3,5,6]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "impl Solution {\n    pub fn max_balanced_subsequence_sum(nums: Vec<i32>) -> i64 {\n        let mut max_sum = 0;\n        let mut max_element = std::i32::MIN;\n        let mut min_element = std::i32::MAX;\n        \n        for &num in &nums {\n            if num > max_element {\n                max_sum += num as i64;\n                min_element = max_element;\n                max_element = num;\n            } else if num > min_element {\n                max_sum += num as i64;\n                min_element = num;\n            }\n        }\n        \n        max_sum\n    }\n}"
}