{
    "status_code": 11,
    "lang": "javascript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 58544000,
    "question_id": "3184",
    "elapsed_time": 2713,
    "compare_result": "0101111111111111111111111111100000001001111111110000000000011111111111000011000111111111110110100011101111110111101111101010011000111010111101010010111100100101110111111100101011111110110100001100110111101110110010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111111111101000000000000000000000000001001",
    "code_output": "11",
    "std_output": "",
    "last_testcase": "[3,3,5,6]",
    "expected_output": "14",
    "task_finish_time": 1708556502301,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 152,
    "total_testcases": 346,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "JavaScript",
    "submission_id": "1182449480",
    "input_formatted": "[3,3,5,6]",
    "input": "[3,3,5,6]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "/**\n * @param {number[]} nums\n * @return {number}\n */\nvar maxBalancedSubsequenceSum = function(nums) {\n    let maxSum = nums[0];\n    for (let i = 0; i < nums.length; i++) {\n        let currentMax = nums[i];\n        let diff = 0;\n        for (let j = i + 1; j < nums.length; j++) {\n            diff = j - i;\n            if (nums[j] - nums[i] >= diff) {\n                currentMax += nums[j];\n                i = j - 1; // Update the starting index to the last added element index\n                maxSum = Math.max(maxSum, currentMax);\n                break; // Break to start a new subsequence from the next element\n            }\n        }\n    }\n    return maxSum;\n};"
}