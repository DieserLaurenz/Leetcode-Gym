{
    "status_code": 11,
    "lang": "javascript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 58252000,
    "question_id": "3184",
    "elapsed_time": 4011,
    "compare_result": "1011111111111111111111111111111111111111111111111111111111111011101111111111111110000111111111111111111110111111101011110101111110010111001001111000011111110101110100110101100111001101101101110101110100111110110010000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000111111111110000000000000000000000000000000",
    "code_output": "8",
    "std_output": "",
    "last_testcase": "[5,-1,-3,8]",
    "expected_output": "13",
    "task_finish_time": 1708556476017,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 180,
    "total_testcases": 346,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "JavaScript",
    "submission_id": "1182449263",
    "input_formatted": "[5,-1,-3,8]",
    "input": "[5,-1,-3,8]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "/**\n * @param {number[]} nums\n * @return {number}\n */\nvar maxBalancedSubsequenceSum = function(nums) {\n    let maxSum = Number.MIN_SAFE_INTEGER;\n    let sum = 0;\n    for (let i = 0; i < nums.length; i++) {\n        sum = nums[i];\n        for (let j = i + 1; j < nums.length; j++) {\n            if (nums[j] - nums[j - 1] >= j - (j - 1)) {\n                sum += nums[j];\n                maxSum = Math.max(maxSum, sum);\n            } else {\n                break;\n            }\n        }\n        maxSum = Math.max(maxSum, sum);\n    }\n    return maxSum === Number.MIN_SAFE_INTEGER ? nums[0] : maxSum;\n};"
}