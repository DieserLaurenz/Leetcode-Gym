{
    "status_code": 11,
    "lang": "python",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 24772000,
    "question_id": "3184",
    "elapsed_time": 578,
    "compare_result": "0001111111111111111111111111100000001001111110110000000001010101100111000000000010010000000001011001001010100101000000000000000000000000000000000000000001000000000000000000000000100010000000000000010000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111111001010000000000000000000000000010000",
    "code_output": "17",
    "std_output": "",
    "last_testcase": "[3,3,5,6]",
    "expected_output": "14",
    "task_finish_time": 1708892121091,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 68,
    "total_testcases": 346,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python",
    "submission_id": "1186107184",
    "input_formatted": "[3,3,5,6]",
    "input": "[3,3,5,6]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution(object):\n    def maxBalancedSubsequenceSum(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: int\n        \"\"\"\n        max_sum = nums[0]\n        min_prefix = 0\n        prefix_sum = 0\n        for i, num in enumerate(nums):\n            prefix_sum += num\n            if i > 0:\n                max_sum = max(max_sum, prefix_sum - min_prefix)\n                min_prefix = min(min_prefix, prefix_sum - i)\n        return max_sum"
}