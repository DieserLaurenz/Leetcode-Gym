{
    "status_code": 11,
    "lang": "cpp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 71492000,
    "question_id": "3184",
    "elapsed_time": 116,
    "compare_result": "0011111111111111111111111111111111111111101111111111111111111011101111111110111110000111101011111100011110101001001011110101101110010010000001101000000111010000000100000000000100000001001001100001100000100010110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101111111100000000000000000000000000001000",
    "code_output": "6",
    "std_output": "",
    "last_testcase": "[3,3,5,6]",
    "expected_output": "14",
    "task_finish_time": 1708556036169,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 135,
    "total_testcases": 346,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C++",
    "submission_id": "1182445997",
    "input_formatted": "[3,3,5,6]",
    "input": "[3,3,5,6]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "#include <vector>\n#include <algorithm>\n\nclass Solution {\npublic:\n    long long maxBalancedSubsequenceSum(std::vector<int>& nums) {\n        std::vector<int> prefixMax(nums.size());\n        long long maxSum = nums[0];\n        prefixMax[0] = nums[0];\n        for (size_t i = 1; i < nums.size(); ++i) {\n            prefixMax[i] = std::max(prefixMax[i - 1], nums[i] + static_cast<int>(i));\n            maxSum = std::max(maxSum, static_cast<long long>(prefixMax[i] - i));\n        }\n        return maxSum;\n    }\n};"
}