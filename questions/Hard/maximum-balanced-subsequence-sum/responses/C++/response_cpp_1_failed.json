{
    "status_code": 11,
    "lang": "cpp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 68920000,
    "question_id": "3184",
    "elapsed_time": 138,
    "compare_result": "0101000000000001111111111111101010010111111110111011101000111101110101011110010111101000001011001111011111100100000000001001000101000000100101100100100000001000000000000000100000000000000000100001010000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101001110000000000000000000000000010001",
    "code_output": "17",
    "std_output": "",
    "last_testcase": "[3,3,5,6]",
    "expected_output": "14",
    "task_finish_time": 1708556060142,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 91,
    "total_testcases": 346,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C++",
    "submission_id": "1182446198",
    "input_formatted": "[3,3,5,6]",
    "input": "[3,3,5,6]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "#include <vector>\n#include <algorithm>\n\nclass Solution {\npublic:\n    long long maxBalancedSubsequenceSum(std::vector<int>& nums) {\n        long long max_sum = *std::max_element(nums.begin(), nums.end());\n        long long sum_positive = 0;\n        for (int num : nums) {\n            if (num > 0) {\n                sum_positive += num;\n            }\n        }\n        return std::max(max_sum, sum_positive);\n    }\n};"
}