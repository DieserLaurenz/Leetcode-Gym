{
    "status_code": 11,
    "lang": "typescript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 61040000,
    "question_id": "3184",
    "elapsed_time": 4010,
    "compare_result": "0011111111111111111111111111110111101101001111110100010111010011101111000000010000000111100001010000001110100000001001000000000000010001000000000000000000001000000100000000000000000000000000000000000000010010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101111111010000000000000000000000000000000",
    "code_output": "12",
    "std_output": "",
    "last_testcase": "[3,3,5,6]",
    "expected_output": "14",
    "task_finish_time": 1708556636292,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 83,
    "total_testcases": 346,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "TypeScript",
    "submission_id": "1182450449",
    "input_formatted": "[3,3,5,6]",
    "input": "[3,3,5,6]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "function maxBalancedSubsequenceSum(nums: number[]): number {\n    let maxSum = nums[0];\n    for (let i = 1; i < nums.length; i++) {\n        let currMax = nums[i];\n        let prevMax = nums[i];\n        for (let j = i - 1; j >= 0; j--) {\n            if (nums[i] - nums[j] >= i - j) {\n                prevMax = Math.max(prevMax, nums[j]);\n                currMax = Math.max(currMax, prevMax + nums[i]);\n            }\n        }\n        maxSum = Math.max(maxSum, currMax);\n    }\n    return maxSum;\n};"
}