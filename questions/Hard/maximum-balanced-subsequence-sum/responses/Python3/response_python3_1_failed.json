{
    "status_code": 11,
    "lang": "python3",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 16820000,
    "question_id": "3184",
    "elapsed_time": 51,
    "compare_result": "0001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "code_output": "6",
    "std_output": "",
    "last_testcase": "[3,3,5,6]",
    "expected_output": "14",
    "task_finish_time": 1708892237313,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 1,
    "total_testcases": 346,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python3",
    "submission_id": "1186108338",
    "input_formatted": "[3,3,5,6]",
    "input": "[3,3,5,6]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "from typing import List\n\nclass Solution:\n    def maxBalancedSubsequenceSum(self, nums: List[int]) -> int:\n        dp = [0] * (len(nums) + 1)\n        for i in range(len(nums) - 1, -1, -1):\n            dp[i] = max(dp[i + 1], nums[i] - i + dp[min(i + nums[i], len(nums))])\n        return dp[0]"
}