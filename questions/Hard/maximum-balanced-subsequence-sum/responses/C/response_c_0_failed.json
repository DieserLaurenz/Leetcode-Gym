{
    "status_code": 11,
    "lang": "c",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 12480000,
    "question_id": "3184",
    "elapsed_time": 86,
    "compare_result": "1101111111111111111111111111100000001001111111110000000000011111111111000000000111111111100000000000001111110101011111100000000001011110000000000110100100000000000100000000011000100000000000000001110001100110110011000000101000000000000000100000000000000000000000000000000000000010000000000000000000000000111111111111000000000000000000000000011001",
    "code_output": "-3",
    "std_output": "",
    "last_testcase": "[-2,-1]",
    "expected_output": "-1",
    "task_finish_time": 1708556236148,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 116,
    "total_testcases": 346,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C",
    "submission_id": "1182447524",
    "input_formatted": "[-2,-1]",
    "input": "[-2,-1]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "long long maxBalancedSubsequenceSum(int* nums, int numsSize) {\n    long long maxSum = nums[0];\n    for (int i = 1; i < numsSize; i++) {\n        if (nums[i] - nums[i - 1] >= 1) {\n            maxSum += nums[i];\n        } else {\n            nums[i] = nums[i - 1];\n        }\n    }\n    return maxSum;\n}"
}