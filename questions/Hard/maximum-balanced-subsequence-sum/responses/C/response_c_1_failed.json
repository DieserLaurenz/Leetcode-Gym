{
    "status_code": 11,
    "lang": "c",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 12784000,
    "question_id": "3184",
    "elapsed_time": 88,
    "compare_result": "0001111111111111111111111111101000011011111110111011101000111001100111111110000110000000001010001111011110100111000100010101000110000000000001101000010011000001000000000000100101100000000011110001110100000010000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000111111101110000000000000000000000000010000",
    "code_output": "17",
    "std_output": "",
    "last_testcase": "[3,3,5,6]",
    "expected_output": "14",
    "task_finish_time": 1708556260997,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 110,
    "total_testcases": 346,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C",
    "submission_id": "1182447734",
    "input_formatted": "[3,3,5,6]",
    "input": "[3,3,5,6]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "long long maxBalancedSubsequenceSum(int* nums, int numsSize) {\n    long long maxSum = 0;\n    long long minPrefixSum = 0;\n    long long currentSum = 0;\n    for (int i = 0; i < numsSize; ++i) {\n        currentSum += nums[i];\n        if (currentSum - minPrefixSum > maxSum) {\n            maxSum = currentSum - minPrefixSum;\n        }\n        if (currentSum < minPrefixSum) {\n            minPrefixSum = currentSum;\n        }\n    }\n    return maxSum > 0 ? maxSum : nums[0];\n}"
}