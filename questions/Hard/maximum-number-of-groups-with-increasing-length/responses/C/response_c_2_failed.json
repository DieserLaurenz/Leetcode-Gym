{
    "status_code": 11,
    "lang": "c",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 10756000,
    "question_id": "2919",
    "elapsed_time": 3017,
    "compare_result
    "code_output": "3",
    "std_output": "",
    "last_testcase": "[2,1,2]",
    "expected_output": "2",
    "task_finish_time": 1708598371163,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 635,
    "total_testcases": 2027,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C",
    "submission_id": "1182928486",
    "input_formatted": "[2,1,2]",
    "input": "[2,1,2]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "#include <stdio.h>\n#include <stdlib.h>\n\nint cmp(const void *a, const void *b) {\n    return *(int*)a - *(int*)b;\n}\n\nint maxIncreasingGroups(int* usageLimits, int usageLimitsSize) {\n    qsort(usageLimits, usageLimitsSize, sizeof(int), cmp);\n    int totalGroups = 0;\n    for (int groupSize = 1; groupSize <= usageLimitsSize; ++groupSize) {\n        int i = 0;\n        for (int j = 0; j < groupSize && i < usageLimitsSize; ++i) {\n            if (usageLimits[i] >= groupSize) {\n                ++j;\n                --usageLimits[i];\n            }\n        }\n        if (i == usageLimitsSize && groupSize > i) break; // If we've iterated through all elements without forming a full group\n        ++totalGroups;\n    }\n    return totalGroups;\n}"
}