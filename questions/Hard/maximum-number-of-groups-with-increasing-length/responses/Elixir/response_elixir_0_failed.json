{
    "status_code": 11,
    "lang": "elixir",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 215052000,
    "question_id": "2919",
    "elapsed_time": 1958,
    "compare_result": "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111101111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110111110111111111111111111111111111111111111111111111111101111110111111111111000111111111111111111011111111111111111111111111111111111111111111111011111111001111111101111111111010011111111111111111111111111111111111101101100111011110111111001111111111110101001111111111111111111111111111110111111000001100111111110101111111101101101111110110101111101110001101000110111101100111000010100100110000001010000000100101011000101001110011101111111111010111000001100001001110000100100001000000001000101100110000001100010000100000001000100010101000111110000000000100000010000010000000000010000000000000000000100000100000000001000011111110000000000000000000000000000000000000000010000100000000000000100000000001110000000000000000000000000000000000000000000000000000000000000001111000000000010000000000000100000000000000000000000000000000000000000000100000000000000000000000000111111000111111111111111110110110101001010000000010101000000000000000000000000000000000000000000000000000000000011000000000000000000000000000000000000000000000000000010000000000000000000000000000100000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111111011111101100011001",
    "code_output": "2",
    "std_output": "",
    "last_testcase": "[2,2,2]",
    "expected_output": "3",
    "task_finish_time": 1708608557247,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 713,
    "total_testcases": 2027,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Elixir",
    "submission_id": "1183039023",
    "input_formatted": "[2,2,2]",
    "input": "[2,2,2]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "defmodule Solution do\n  @spec max_increasing_groups(usage_limits :: [integer]) :: integer\n  def max_increasing_groups(usage_limits) do\n    usage_limits\n    |> Enum.sort()\n    |> Enum.reduce({0, 0}, fn limit, {groups, prev_group_size} ->\n      if limit > prev_group_size do\n        {groups + 1, prev_group_size + 1}\n      else\n        {groups, prev_group_size}\n      end\n    end)\n    |> elem(0)\n  end\nend"
}