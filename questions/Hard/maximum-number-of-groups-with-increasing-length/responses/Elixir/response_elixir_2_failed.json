{
    "status_code": 11,
    "lang": "elixir",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 205868000,
    "question_id": "2919",
    "elapsed_time": 1692,
    "compare_result
    "code_output": "3",
    "std_output": "",
    "last_testcase": "[2,1,2]",
    "expected_output": "2",
    "task_finish_time": 1708608633395,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 165,
    "total_testcases": 2027,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Elixir",
    "submission_id": "1183040009",
    "input_formatted": "[2,1,2]",
    "input": "[2,1,2]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "defmodule Solution do\n  @spec max_increasing_groups(usage_limits :: [integer]) :: integer\n  def max_increasing_groups(usage_limits) do\n    usage_limits\n    |> Enum.sort()\n    |> count_groups(0, 1, 0)\n  end\n\n  defp count_groups([], _group_size, groups, _), do: groups\n  defp count_groups([h | t], group_size, groups, count) when count < group_size do\n    count_groups(t, group_size, groups, count + 1)\n  end\n  defp count_groups(usage_limits, group_size, groups, count) when count == group_size do\n    count_groups(usage_limits, group_size + 1, groups + 1, 0)\n  end\nend"
}