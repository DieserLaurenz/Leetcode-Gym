{
    "status_code": 11,
    "lang": "csharp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 138000000,
    "question_id": "2919",
    "elapsed_time": 4016,
    "compare_result
    "code_output": "3",
    "std_output": "",
    "last_testcase": "[2,1,2]",
    "expected_output": "2",
    "task_finish_time": 1708598467870,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 219,
    "total_testcases": 2027,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C#",
    "submission_id": "1182929508",
    "input_formatted": "[2,1,2]",
    "input": "[2,1,2]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "public class Solution {\n    public int MaxIncreasingGroups(IList<int> usageLimits) {\n        Array.Sort(usageLimits.ToArray());\n        int group = 0, i = 0, n = usageLimits.Count;\n        while (i < n) {\n            group++;\n            int required = 1;\n            while (i < n && usageLimits[i] >= required) {\n                while (i < n && usageLimits[i] >= required) {\n                    usageLimits[i] -= required;\n                    i++;\n                    required++;\n                }\n                i = usageLimits.Take(i).ToList().FindIndex(x => x >= required);\n                if (i == -1) break;\n            }\n            i = usageLimits.ToList().FindIndex(x => x > 0);\n            if (i == -1) break;\n        }\n        return group;\n    }\n}"
}