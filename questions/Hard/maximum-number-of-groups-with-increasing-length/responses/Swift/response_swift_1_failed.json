{
    "status_code": 15,
    "lang": "swift",
    "run_success": false,
    "runtime_error": "*** Program crashed: Illegal instruction at 0x000055a9ab5fa68c ***",
    "full_runtime_error": "*** Program crashed: Illegal instruction at 0x000055a9ab5fa68c ***\nThread 0 \"prog\" crashed:\n0  0x000055a9ab5fa68c specialized Solution.maxIncreasingGroups(_:) + 268 in prog\nRegisters:\nrax 0x0000000000000003  07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07  \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\nrdx 0x000055a9ad5486f0  b8 ce d6 f6 5e 7f 00 00 03 00 00 00 02 00 00 00  \u00b8\u00ce\u00d6\u00f6^\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\nrcx 0x0000000000000005  b8 b8 b8 b8 b8 b8 b8 b8 b8 b8 b8 b8 b8 b8 b8 b8  \u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\nrbx 0x0000000000000000  b8 b8 b8 b8 b8 b8 b8 b8 b8 b8 b8 b8 b8 b8 b8 b8  \u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\nrsi 0x0000000000000004  b8 b8 b8 b8 b8 b8 b8 b8 b8 b8 b8 b8 b8 b8 b8 b8  \u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\nrdi 0x0000000000000004  b8 b8 b8 b8 b8 b8 b8 b8 b8 b8 b8 b8 b8 b8 b8 b8  \u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\nrbp 0x0000000000000001  b8 b8 b8 b8 b8 b8 b8 b8 b8 b8 b8 b8 b8 b8 b8 b8  \u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\nrsp 0x00007fff72575410  05 00 00 00 00 00 00 00 f0 86 54 ad a9 55 00 00  \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00f0\u00b7T\u00ad\u00a9U\u00b7\u00b7\n r8 0x0000000000000001  05 05 05 05 05 05 05 05 05 05 05 05 05 05 05 05  \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\n r9 0x000000000febdeda  05 05 05 05 05 05 05 05 05 05 05 05 05 05 05 05  \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\nr10 0x00007f5ef5912e98  15 7c 00 00 1a 00 0f 00 d0 96 0a 00 00 00 00 00  \u00b7|\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00d0\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\nr11 0x00007f5ef5aa7f80  f3 0f 1e fa c5 f9 6e c6 48 89 f8 c4 e2 7d 78 c0  \u00f3\u00b7\u00b7\u00fa\u00c5\u00f9n\u00c6H\u00b7\u00f8\u00c4\u00e2}x\u00c0\nr12 0x0000000000000003  f3 f3 f3 f3 f3 f3 f3 f3 f3 f3 f3 f3 f3 f3 f3 f3  \u00f3\u00f3\u00f3\u00f3\u00f3\u00f3\u00f3\u00f3\u00f3\u00f3\u00f3\u00f3\u00f3\u00f3\u00f3\u00f3\nr13 0x000055a9ab5f97e0  50 e8 7a 00 00 00 31 c0 59 c3 66 0f 1f 44 00 00  P\u00e8z\u00b7\u00b7\u00b71\u00c0Y\u00c3f\u00b7\u00b7D\u00b7\u00b7\nr14 0x000055a9ad5487c0  b8 ce d6 f6 5e 7f 00 00 03 00 00 00 00 00 00 00  \u00b8\u00ce\u00d6\u00f6^\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\nr15 0x0000000000000004  b8 b8 b8 b8 b8 b8 b8 b8 b8 b8 b8 b8 b8 b8 b8 b8  \u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\u00b8\nrip 0x000055a9ab5fa68c  0f 0b 0f 0b 0f 0b 48 89 df e8 86 30 f0 ff 4d 8b  \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7H\u00b7\u00df\u00e8\u00b70\u00f0\u00ffM\u00b7\nrflags 0x0000000000010202  \ncs 0x0033  fs 0x0000  gs 0x0000\nImages (18 omitted):",
    "status_runtime": "N/A",
    "memory": 18632000,
    "question_id": "2919",
    "elapsed_time": 672,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "[1,2,5]",
    "expected_output": "3",
    "task_finish_time": 1708598961399,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 2027,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Swift",
    "submission_id": "1182934888",
    "status_msg": "Runtime Error",
    "state": "SUCCESS",
    "code": "class Solution {\n    func maxIncreasingGroups(_ usageLimits: [Int]) -> Int {\n        let sortedLimits = usageLimits.sorted()\n        var dp = Array(repeating: 0, count: usageLimits.count + 1)\n        for limit in sortedLimits {\n            for j in stride(from: limit, through: 1, by: -1) {\n                dp[j] = max(dp[j], dp[j - 1] + 1)\n            }\n        }\n        return dp.max() ?? 0\n    }\n}"
}