{
    "status_code": 11,
    "lang": "cpp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 159028000,
    "question_id": "2919",
    "elapsed_time": 1433,
    "compare_result": "00111000000000000000000000000000000000000000000000000000000000000000000000000011000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111111000010000000000000",
    "code_output": "2",
    "std_output": "",
    "last_testcase": "[1,2,5]",
    "expected_output": "3",
    "task_finish_time": 1708598126623,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 13,
    "total_testcases": 2027,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C++",
    "submission_id": "1182925732",
    "input_formatted": "[1,2,5]",
    "input": "[1,2,5]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "#include <vector>\n#include <algorithm>\n#include <map>\n\nusing namespace std;\n\nclass Solution {\npublic:\n    int maxIncreasingGroups(vector<int>& usageLimits) {\n        map<int, int> freq;\n        for (int limit : usageLimits) {\n            freq[limit]++;\n        }\n\n        int prevGroupSize = 0, groupCount = 0;\n        while (true) {\n            int currentGroupSize = 0;\n            for (auto& [limit, count] : freq) {\n                if (count == 0) continue;\n                count--;\n                currentGroupSize++;\n                if (currentGroupSize > prevGroupSize) break;\n            }\n\n            if (currentGroupSize > prevGroupSize) {\n                prevGroupSize = currentGroupSize;\n                groupCount++;\n            } else {\n                break;\n            }\n        }\n\n        return groupCount;\n    }\n};"
}