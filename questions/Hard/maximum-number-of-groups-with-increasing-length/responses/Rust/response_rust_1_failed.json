{
    "status_code": 11,
    "lang": "rust",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 5508000,
    "question_id": "2919",
    "elapsed_time": 59,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "[1,2,5]",
    "expected_output": "3",
    "task_finish_time": 1708608185645,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 20,
    "total_testcases": 2027,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Rust",
    "submission_id": "1183034375",
    "input_formatted": "[1,2,5]",
    "input": "[1,2,5]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "impl Solution {\n    pub fn max_increasing_groups(usage_limits: Vec<i32>) -> i32 {\n        let mut freq = std::collections::HashMap::new();\n        for &limit in &usage_limits {\n            *freq.entry(limit).or_insert(0) += 1;\n        }\n        let mut counts: Vec<_> = freq.into_iter().collect();\n        counts.sort_unstable();\n        let mut result = 0;\n        let mut prev_group_size = 0;\n        let mut i = 0;\n        while i < counts.len() {\n            let (limit, mut count) = counts[i];\n            let mut group_size = prev_group_size + 1;\n            while group_size <= limit && count > 0 {\n                let num_groups = std::cmp::min(count / group_size, limit + 1 - group_size);\n                if num_groups == 0 {\n                    break;\n                }\n                result += num_groups;\n                prev_group_size += num_groups;\n                count -= num_groups * group_size;\n                group_size += 1;\n            }\n            i += 1;\n        }\n        result\n    }\n}"
}