{
    "status_code": 11,
    "lang": "elixir",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 72736000,
    "question_id": "2808",
    "elapsed_time": 932,
    "compare_result
    "code_output": "8",
    "std_output": "",
    "last_testcase": "[1,2,3,2]\n[1,2,3,2]",
    "expected_output": "3",
    "task_finish_time": 1708963724236,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 210,
    "total_testcases": 2558,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Elixir",
    "submission_id": "1186884111",
    "input_formatted": "[1,2,3,2], [1,2,3,2]",
    "input": "[1,2,3,2]\n[1,2,3,2]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "defmodule Solution do\n  @spec paint_walls(cost :: [integer], time :: [integer]) :: integer\n  def paint_walls(cost, time) do\n    Enum.zip(cost, time)\n    |> Enum.sort_by(fn {c, t} -> c / t end)\n    |> Enum.reduce({0, 0}, fn {c, t}, {total_cost, max_time} ->\n      new_max_time = max(max_time, t)\n      {total_cost + c, new_max_time}\n    end)\n    |> elem(0)\n  end\nend"
}