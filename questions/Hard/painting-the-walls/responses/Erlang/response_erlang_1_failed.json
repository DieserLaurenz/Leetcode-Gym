{
    "status_code": 11,
    "lang": "erlang",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 60868000,
    "question_id": "2808",
    "elapsed_time": 1708,
    "compare_result
    "code_output": "0",
    "std_output": "",
    "last_testcase": "[1,2,3,2]\n[1,2,3,2]",
    "expected_output": "3",
    "task_finish_time": 1708955166155,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 2558,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Erlang",
    "submission_id": "1186759606",
    "input_formatted": "[1,2,3,2], [1,2,3,2]",
    "input": "[1,2,3,2]\n[1,2,3,2]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "-spec paint_walls(Cost :: [integer()], Time :: [integer()]) -> integer().\npaint_walls(Cost, Time) ->\n    Zipped = lists:zip(Cost, Time),\n    Sorted = lists:sort(fun({Cost1, Time1}, {Cost2, Time2}) ->\n                            if\n                                Time1 > Time2 -> true;\n                                Time1 < Time2 -> false;\n                                true -> Cost1 < Cost2\n                            end\n                        end, Zipped),\n    paint_walls_helper(Sorted, 0, 0, 0).\n\npaint_walls_helper([], AccCost, _, _) -> AccCost;\npaint_walls_helper([{Cost, Time} | T], AccCost, FreeTime, PaidTime) when FreeTime >= PaidTime + Time ->\n    paint_walls_helper(T, AccCost + Cost, FreeTime, PaidTime + Time);\npaint_walls_helper([{_Cost, Time} | T], AccCost, FreeTime, PaidTime) when FreeTime < PaidTime + Time, FreeTime >= PaidTime ->\n    NewFreeTime = FreeTime + Time,\n    NewPaidTime = PaidTime + Time,\n    paint_walls_helper(T, AccCost, NewFreeTime, NewPaidTime);\npaint_walls_helper([{Cost, Time} | T], AccCost, FreeTime, PaidTime) ->\n    NewPaidTime = PaidTime + Time,\n    paint_walls_helper(T, AccCost + Cost, FreeTime, NewPaidTime)."
}