{
    "status_code": 11,
    "lang": "golang",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 6356000,
    "question_id": "2808",
    "elapsed_time": 98,
    "compare_result
    "code_output": "0",
    "std_output": "",
    "last_testcase": "[1,2,3,2]\n[1,2,3,2]",
    "expected_output": "3",
    "task_finish_time": 1708954357930,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 290,
    "total_testcases": 2558,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Go",
    "submission_id": "1186748332",
    "input_formatted": "[1,2,3,2], [1,2,3,2]",
    "input": "[1,2,3,2]\n[1,2,3,2]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "func paintWalls(cost []int, time []int) int {\n    type wall struct {\n        cost, time int\n    }\n\n    n := len(cost)\n    walls := make([]wall, n)\n    for i := range cost {\n        walls[i] = wall{cost: cost[i], time: time[i]}\n    }\n\n    sort.Slice(walls, func(i, j int) bool {\n        return walls[i].time < walls[j].time || (walls[i].time == walls[j].time && walls[i].cost < walls[j].cost)\n    })\n\n    totalTime := 0\n    for _, w := range walls {\n        totalTime += w.time\n    }\n    freePainterTime := 0\n    paidCost := 0\n    for _, w := range walls {\n        if freePainterTime < totalTime-w.time {\n            freePainterTime++\n            continue\n        }\n        paidCost += w.cost\n    }\n    return paidCost\n}"
}