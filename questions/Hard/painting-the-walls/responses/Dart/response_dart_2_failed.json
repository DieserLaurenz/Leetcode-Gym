{
    "status_code": 11,
    "lang": "dart",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 159900000,
    "question_id": "2808",
    "elapsed_time": 768,
    "compare_result
    "code_output": "8",
    "std_output": "",
    "last_testcase": "[1,2,3,2]\n[1,2,3,2]",
    "expected_output": "3",
    "task_finish_time": 1708954259730,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 210,
    "total_testcases": 2558,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Dart",
    "submission_id": "1186746985",
    "input_formatted": "[1,2,3,2], [1,2,3,2]",
    "input": "[1,2,3,2]\n[1,2,3,2]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n  int paintWalls(List<int> cost, List<int> time) {\n    List<int> sortedIndices = List.generate(cost.length, (i) => i)\n      ..sort((a, b) => cost[a] / time[a] > cost[b] / time[b] ? -1 : 1);\n    int totalTime = time.reduce((a, b) => a + b);\n    List<bool> painted = List.filled(totalTime, false);\n    int totalCost = 0;\n\n    for (int index in sortedIndices) {\n      int t = time[index];\n      bool found = false;\n      for (int i = 0; i < painted.length && !found; i++) {\n        if (!painted[i]) {\n          bool canPaint = true;\n          for (int j = i; j < i + t; j++) {\n            if (j >= painted.length || painted[j]) {\n              canPaint = false;\n              break;\n            }\n          }\n          if (canPaint) {\n            for (int j = i; j < i + t; j++) painted[j] = true;\n            totalCost += cost[index];\n            found = true;\n          }\n        }\n      }\n    }\n    return totalCost;\n  }\n}"
}