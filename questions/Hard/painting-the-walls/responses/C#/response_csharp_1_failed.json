{
    "status_code": 11,
    "lang": "csharp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 57572000,
    "question_id": "2808",
    "elapsed_time": 245,
    "compare_result
    "code_output": "2",
    "std_output": "",
    "last_testcase": "[1,2,3,2]\n[1,2,3,2]",
    "expected_output": "3",
    "task_finish_time": 1708944420016,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 283,
    "total_testcases": 2558,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C#",
    "submission_id": "1186637983",
    "input_formatted": "[1,2,3,2], [1,2,3,2]",
    "input": "[1,2,3,2]\n[1,2,3,2]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "public class Solution {\n    public int PaintWalls(int[] cost, int[] time) {\n        int n = cost.Length;\n        int[] dp = new int[n + 1];\n        for (int i = 0; i < n; i++) dp[i] = int.MaxValue;\n        dp[0] = 0;\n\n        for (int i = 0; i < n; i++) {\n            int maxTime = 0;\n            for (int j = i; j < n; j++) {\n                maxTime = Math.Max(maxTime, time[j]);\n                if (dp[i] != int.MaxValue) {\n                    dp[j + 1] = Math.Min(dp[j + 1], dp[i] + maxTime);\n                }\n            }\n        }\n\n        int minCost = int.MaxValue;\n        for (int i = 1; i <= n; i++) {\n            int costSum = 0;\n            for (int j = 0; j < i; j++) {\n                costSum += cost[j];\n            }\n            minCost = Math.Min(minCost, costSum + (dp[i] == int.MaxValue ? 0 : dp[i]));\n        }\n        return minCost;\n    }\n}"
}