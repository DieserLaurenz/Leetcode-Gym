{
    "status_code": 11,
    "lang": "python",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 11820000,
    "question_id": "2808",
    "elapsed_time": 161,
    "compare_result
    "code_output": "4",
    "std_output": "",
    "last_testcase": "[1,2,3,2]\n[1,2,3,2]",
    "expected_output": "3",
    "task_finish_time": 1708944001590,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 212,
    "total_testcases": 2558,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python",
    "submission_id": "1186633741",
    "input_formatted": "[1,2,3,2], [1,2,3,2]",
    "input": "[1,2,3,2]\n[1,2,3,2]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution(object):\n    def paintWalls(self, cost, time):\n        \"\"\"\n        :type cost: List[int]\n        :type time: List[int]\n        :rtype: int\n        \"\"\"\n        # Pair each cost with its time and sort by time then by cost\n        paired = sorted(zip(cost, time), key=lambda x: (-x[1], x[0]))\n        total_cost, total_time, max_time = 0, 0, 0\n        for c, t in paired:\n            if total_time < max_time:\n                total_time += 1\n            else:\n                total_cost += c\n                total_time += 1\n                max_time = max(max_time, t)\n        return total_cost"
}