{
    "status_code": 11,
    "lang": "python",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 11664000,
    "question_id": "2808",
    "elapsed_time": 113,
    "compare_result
    "code_output": "6",
    "std_output": "",
    "last_testcase": "[1,2,3,2]\n[1,2,3,2]",
    "expected_output": "3",
    "task_finish_time": 1708943966753,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 295,
    "total_testcases": 2558,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python",
    "submission_id": "1186633387",
    "input_formatted": "[1,2,3,2], [1,2,3,2]",
    "input": "[1,2,3,2]\n[1,2,3,2]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution(object):\n    def paintWalls(self, cost, time):\n        \"\"\"\n        :type cost: List[int]\n        :type time: List[int]\n        :rtype: int\n        \"\"\"\n        walls = sorted(range(len(cost)), key=lambda i: (time[i], -cost[i]))\n        total_cost = 0\n        max_time = 0\n        for i in walls:\n            if time[i] > max_time:\n                total_cost += cost[i]\n                max_time = time[i]\n        return total_cost"
}