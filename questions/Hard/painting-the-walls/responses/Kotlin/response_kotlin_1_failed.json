{
    "status_code": 11,
    "lang": "kotlin",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 42276000,
    "question_id": "2808",
    "elapsed_time": 411,
    "compare_result
    "code_output": "-2147483648",
    "std_output": "",
    "last_testcase": "[1,2,3,2]\n[1,2,3,2]",
    "expected_output": "3",
    "task_finish_time": 1708954087040,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 259,
    "total_testcases": 2558,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Kotlin",
    "submission_id": "1186744637",
    "input_formatted": "[1,2,3,2], [1,2,3,2]",
    "input": "[1,2,3,2]\n[1,2,3,2]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    fun paintWalls(cost: IntArray, time: IntArray): Int {\n        return cost.indices.sortedWith(compareBy({ time[it] }, { -cost[it] })).let { order ->\n            val dp = IntArray(cost.size) { Int.MAX_VALUE }\n            dp[0] = 0\n            for (i in order) {\n                for (j in dp.lastIndex downTo 1) {\n                    dp[j] = dp[j].coerceAtMost(dp[j - 1] + cost[i])\n                }\n                dp[0] += cost[i]\n                for (j in 1..time[i]) {\n                    if (j <= dp.lastIndex) {\n                        dp[j] = dp[j].coerceAtMost(dp[j - 1])\n                    }\n                }\n            }\n            dp.minOrNull() ?: 0\n        }\n    }\n}"
}