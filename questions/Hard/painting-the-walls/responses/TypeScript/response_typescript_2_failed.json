{
    "status_code": 11,
    "lang": "typescript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 60280000,
    "question_id": "2808",
    "elapsed_time": 153,
    "compare_result
    "code_output": "0",
    "std_output": "",
    "last_testcase": "[1,2,3,2]\n[1,2,3,2]",
    "expected_output": "3",
    "task_finish_time": 1708953701284,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 2558,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "TypeScript",
    "submission_id": "1186739554",
    "input_formatted": "[1,2,3,2], [1,2,3,2]",
    "input": "[1,2,3,2]\n[1,2,3,2]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "function paintWalls(cost: number[], time: number[]): number {\n  let n = cost.length;\n  let maxTime = Math.max(...time);\n  let dp = new Array(maxTime + 1).fill(0).map(() => new Array(n + 1).fill(Infinity));\n  dp[0][0] = 0;\n\n  for (let i = 1; i <= n; i++) {\n    for (let t = 0; t <= maxTime; t++) {\n      dp[t][i] = dp[t][i - 1]; // not using the free painter for the i-th wall\n      let prevTime = t - time[i - 1];\n      if (prevTime >= 0) {\n        dp[t][i] = Math.min(dp[t][i], dp[prevTime][i - 1] + cost[i - 1]); // using the paid painter\n      }\n      if (t > 0) {\n        dp[t][i] = Math.min(dp[t][i], dp[t - 1][i]); // using the free painter\n      }\n    }\n  }\n\n  let minCost = Infinity;\n  for (let t = 0; t <= maxTime; t++) {\n    minCost = Math.min(minCost, dp[t][n]);\n  }\n\n  return minCost;\n}"
}