{
    "status_code": 11,
    "lang": "python3",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 16880000,
    "question_id": "2808",
    "elapsed_time": 122,
    "compare_result
    "code_output": "7",
    "std_output": "",
    "last_testcase": "[2,3,4,2]\n[1,1,1,1]",
    "expected_output": "4",
    "task_finish_time": 1708944158379,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 475,
    "total_testcases": 2558,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python3",
    "submission_id": "1186635354",
    "input_formatted": "[2,3,4,2], [1,1,1,1]",
    "input": "[2,3,4,2]\n[1,1,1,1]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution:\n    def paintWalls(self, cost: list[int], time: list[int]) -> int:\n        events = []\n        for i, (c, t) in enumerate(zip(cost, time)):\n            events.append((t, c, i))\n        events.sort(reverse=True)  # Sort by time descending, then by cost\n        \n        free_time = 0  # Tracks the total time the free painter is painting\n        total_cost = 0  # Total cost accumulated\n        for t, c, i in events:\n            if free_time < t:  # If the free painter can paint\n                free_time += 1  # Free painter paints for 1 time unit\n            else:  # Otherwise, the paid painter must paint this wall\n                total_cost += c  # Add the cost of the paid painter\n        \n        return total_cost"
}