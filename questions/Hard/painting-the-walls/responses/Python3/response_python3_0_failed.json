{
    "status_code": 11,
    "lang": "python3",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 16672000,
    "question_id": "2808",
    "elapsed_time": 123,
    "compare_result
    "code_output": "6",
    "std_output": "",
    "last_testcase": "[2,3,4,2]\n[1,1,1,1]",
    "expected_output": "4",
    "task_finish_time": 1708944077521,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 502,
    "total_testcases": 2558,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python3",
    "submission_id": "1186634540",
    "input_formatted": "[2,3,4,2], [1,1,1,1]",
    "input": "[2,3,4,2]\n[1,1,1,1]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution:\n    def paintWalls(self, cost: list[int], time: list[int]) -> int:\n        walls = sorted(zip(cost, time), key=lambda x: -x[1])\n        total_cost = 0\n        max_time = 0\n        \n        for c, t in walls:\n            if t > max_time:\n                total_cost += c\n                max_time = t\n            else:\n                max_time -= 1\n                \n        return total_cost"
}