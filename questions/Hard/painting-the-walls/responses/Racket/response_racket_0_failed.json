{
    "status_code": 11,
    "lang": "racket",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 124616000,
    "question_id": "2808",
    "elapsed_time": 319,
    "compare_result
    "code_output": "2",
    "std_output": "",
    "last_testcase": "[2,3,4,2]\n[1,1,1,1]",
    "expected_output": "4",
    "task_finish_time": 1708954998208,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 370,
    "total_testcases": 2558,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Racket",
    "submission_id": "1186757227",
    "input_formatted": "[2,3,4,2], [1,1,1,1]",
    "input": "[2,3,4,2]\n[1,1,1,1]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "(define/contract (paint-walls cost time)\n  (-> (listof exact-integer?) (listof exact-integer?) exact-integer?)\n  (let loop ([cost-time (sort (map cons cost time) (lambda (a b) (< (cdr a) (cdr b))))]\n             [total-cost 0]\n             [time-spent 0])\n    (if (null? cost-time)\n        total-cost\n        (let ([next (car cost-time)])\n          (if (> (cdr next) time-spent)\n              (loop (cdr cost-time) (+ total-cost (car next)) (+ time-spent 1))\n              (loop (cdr cost-time) total-cost (+ time-spent 1)))))))"
}