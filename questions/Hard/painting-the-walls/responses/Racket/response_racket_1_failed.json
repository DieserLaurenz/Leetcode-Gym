{
    "status_code": 11,
    "lang": "racket",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 123876000,
    "question_id": "2808",
    "elapsed_time": 364,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "[1,2,3,2]\n[1,2,3,2]",
    "expected_output": "3",
    "task_finish_time": 1708955030847,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 244,
    "total_testcases": 2558,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Racket",
    "submission_id": "1186757725",
    "input_formatted": "[1,2,3,2], [1,2,3,2]",
    "input": "[1,2,3,2]\n[1,2,3,2]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "(define/contract (paint-walls cost time)\n  (-> (listof exact-integer?) (listof exact-integer?) exact-integer?)\n  \n  (let ([n (length cost)])\n    (let loop ([i 0] [paid-time 0] [free-time 0] [total-cost 0])\n      (if (= i n)\n          total-cost\n          (let* ([curr-cost (list-ref cost i)]\n                 [curr-time (list-ref time i)]\n                 [new-paid-time (max paid-time (+ free-time curr-time))]\n                 [new-free-time (+ free-time 1)])\n            (if (<= new-paid-time new-free-time)\n                (loop (+ i 1) new-paid-time free-time (+ total-cost curr-cost))\n                (loop (+ i 1) paid-time new-free-time total-cost)))))))"
}