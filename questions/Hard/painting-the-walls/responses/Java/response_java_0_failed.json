{
    "status_code": 11,
    "lang": "java",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 45580000,
    "display_runtime": "10",
    "question_id": "2808",
    "elapsed_time": 171,
    "compare_result
    "code_output": "6",
    "std_output": "",
    "last_testcase": "[1,2,3,2]\n[1,2,3,2]",
    "expected_output": "3",
    "task_finish_time": 1708943843361,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 451,
    "total_testcases": 2558,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Java",
    "submission_id": "1186632076",
    "input_formatted": "[1,2,3,2], [1,2,3,2]",
    "input": "[1,2,3,2]\n[1,2,3,2]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    public int paintWalls(int[] cost, int[] time) {\n        int n = cost.length;\n        int[][] dp = new int[n + 1][n + 1];\n        for (int i = 0; i <= n; i++) {\n            for (int j = 0; j <= n; j++) {\n                dp[i][j] = Integer.MAX_VALUE;\n            }\n        }\n        dp[0][0] = 0;\n        for (int i = 1; i <= n; i++) {\n            dp[i][0] = dp[i - 1][0] + cost[i - 1];\n            for (int j = 1; j <= i; j++) {\n                dp[i][j] = Math.min(dp[i][j], dp[i - 1][j - 1] + cost[i - 1]);\n                if (j <= i - 1) {\n                    dp[i][j] = Math.min(dp[i][j], dp[i - 1][j] + (time[i - 1] > j ? cost[i - 1] : 0));\n                }\n            }\n        }\n        int minCost = Integer.MAX_VALUE;\n        for (int i = 0; i <= n; i++) {\n            minCost = Math.min(minCost, dp[n][i]);\n        }\n        return minCost;\n    }\n}"
}