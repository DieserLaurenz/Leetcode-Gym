{
    "status_code": 11,
    "lang": "java",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 44828000,
    "display_runtime": "2",
    "question_id": "2808",
    "elapsed_time": 207,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "[1,2,3,2]\n[1,2,3,2]",
    "expected_output": "3",
    "task_finish_time": 1708943875745,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 367,
    "total_testcases": 2558,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Java",
    "submission_id": "1186632432",
    "input_formatted": "[1,2,3,2], [1,2,3,2]",
    "input": "[1,2,3,2]\n[1,2,3,2]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    public int paintWalls(int[] cost, int[] time) {\n        int n = cost.length;\n        int[] dp = new int[n];\n        dp[0] = cost[0]; // First wall must be painted by paid painter\n\n        for (int i = 1; i < n; i++) {\n            dp[i] = cost[i] + dp[i - 1]; // Initialize with the case where the current wall is painted by a paid painter\n            int maxTime = time[i];\n            for (int j = i - 1; j >= 0 && maxTime < i - j + 1; j--) {\n                maxTime = Math.max(maxTime, time[j]);\n                dp[i] = Math.min(dp[i], (j > 0 ? dp[j - 1] : 0) + cost[j] + cost[i]);\n            }\n        }\n\n        int minCost = dp[0];\n        for (int i = 1; i < n; i++) {\n            if (dp[i] < minCost) minCost = dp[i];\n        }\n        return minCost;\n    }\n}"
}