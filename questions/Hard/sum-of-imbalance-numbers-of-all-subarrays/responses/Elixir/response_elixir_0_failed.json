{
    "status_code": 15,
    "lang": "elixir",
    "run_success": false,
    "runtime_error": "Line 8: ** (ArithmeticError) bad argument in arithmetic expression: nil - 2",
    "full_runtime_error": "Line 8: ** (ArithmeticError) bad argument in arithmetic expression: nil - 2\n    :erlang.-(nil, 2)\n    solution.ex:8: anonymous fn/3 in Solution.sum_imbalance_numbers/1\n    (elixir 1.15.7) lib/enum.ex:4379: Enum.reduce/3\n    solution.ex:7: anonymous fn/4 in Solution.sum_imbalance_numbers/1\n    (elixir 1.15.7) lib/enum.ex:4379: Enum.reduce/3\n    solution.ex:5: anonymous fn/3 in Solution.sum_imbalance_numbers/1\n    (elixir 1.15.7) lib/enum.ex:4379: Enum.reduce/3\n    nofile:1: (file)",
    "status_runtime": "N/A",
    "memory": 72764000,
    "question_id": "2849",
    "elapsed_time": 615,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "[2,3,1,4]",
    "expected_output": "3",
    "task_finish_time": 1709017549502,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 1303,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Elixir",
    "submission_id": "1187475759",
    "status_msg": "Runtime Error",
    "state": "SUCCESS",
    "code": "defmodule Solution do\n  @spec sum_imbalance_numbers(nums :: [integer]) :: integer\n  def sum_imbalance_numbers(nums) do\n    Enum.reduce(0..length(nums)-1, 0, fn i, acc ->\n      acc + Enum.reduce(i..length(nums)-1, 0, fn j, acc_inner ->\n        sarr = Enum.slice(nums, i..j) |> Enum.sort()\n        acc_inner + Enum.reduce(0..length(sarr)-2, 0, fn k, acc_imbalance ->\n          if Enum.at(sarr, k+1) - Enum.at(sarr, k) > 1, do: acc_imbalance + 1, else: acc_imbalance\n        end)\n      end)\n    end)\n  end\nend"
}