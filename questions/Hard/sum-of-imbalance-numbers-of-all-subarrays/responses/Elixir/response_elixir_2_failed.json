{
    "status_code": 11,
    "lang": "elixir",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 71232000,
    "question_id": "2849",
    "elapsed_time": 6017,
    "compare_result
    "code_output": "0",
    "std_output": "",
    "last_testcase": "[2,3,1,4]",
    "expected_output": "3",
    "task_finish_time": 1709017603441,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 94,
    "total_testcases": 1303,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Elixir",
    "submission_id": "1187476368",
    "input_formatted": "[2,3,1,4]",
    "input": "[2,3,1,4]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "defmodule Solution do\n  @spec sum_imbalance_numbers(nums :: [integer]) :: integer\n  def sum_imbalance_numbers(nums) do\n    Enum.reduce(0..length(nums)-1, 0, fn i, acc ->\n      acc + Enum.reduce(i..length(nums)-1, 0, fn j, acc_inner ->\n        sarr = Enum.slice(nums, i..j) |> Enum.sort()\n        imbalances = Enum.chunk_by(sarr, fn x -> x end)\n                     |> Enum.map(&Enum.at(&1, -1) - Enum.at(&1, 0))\n                     |> Enum.filter(&(&1 > 0))\n                     |> Enum.count()\n        acc_inner + imbalances\n      end)\n    end)\n  end\nend"
}