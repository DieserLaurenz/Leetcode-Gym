{
    "status_code": 11,
    "lang": "racket",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 126288000,
    "question_id": "2849",
    "elapsed_time": 4088,
    "compare_result
    "code_output": "0",
    "std_output": "",
    "last_testcase": "[2,3,1,4]",
    "expected_output": "3",
    "task_finish_time": 1709017334020,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 95,
    "total_testcases": 1303,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Racket",
    "submission_id": "1187472885",
    "input_formatted": "[2,3,1,4]",
    "input": "[2,3,1,4]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "(define/contract (sum-imbalance-numbers nums)\n  (-> (listof exact-integer?) exact-integer?)\n  \n  (define (imbalance-count sarr)\n    (let loop ([i 0] [count 0])\n      (if (< i (- (length sarr) 1))\n          (loop (+ i 1) (if (> (- (list-ref sarr (+ i 1)) (list-ref sarr i)) 1) (+ count 1) count))\n          count)))\n  \n  (define (subarray-imbalance arr)\n    (let ([sorted-arr (sort arr <)])\n      (imbalance-count sorted-arr)))\n  \n  (define (sum-imbalance-helper arr)\n    (let loop ([start 0] [sum 0])\n      (if (< start (length arr))\n          (let loop-inner ([end (+ start 1)] [sum-inner sum])\n            (if (<= end (length arr))\n                (loop-inner (+ end 1) (+ sum-inner (subarray-imbalance (take (drop arr start) (- end start)))))\n                sum-inner))\n          (loop (+ start 1) sum))\n      sum))\n  \n  (sum-imbalance-helper nums))"
}