{
    "status_code": 11,
    "lang": "csharp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 43988000,
    "question_id": "3196",
    "elapsed_time": 235,
    "compare_result": "000000001011010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "code_output": "2",
    "std_output": "",
    "last_testcase": "[1,2,6,4]\n3",
    "expected_output": "3",
    "task_finish_time": 1708257310628,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 4,
    "total_testcases": 774,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C#",
    "submission_id": "1178818469",
    "input_formatted": "[1,2,6,4], 3",
    "input": "[1,2,6,4]\n3",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "public class Solution {\n    public int MaxFrequencyScore(int[] nums, long k) {\n        Array.Sort(nums);\n        long total = 0;\n        int left = 0, result = 1;\n        for (int right = 0; right < nums.Length; right++) {\n            total += (long)(nums[right] - nums[right - result + 1]) * (result - 1);\n            while (total > k) {\n                total -= nums[right] - nums[left];\n                left++;\n                result--;\n            }\n            result = Math.Max(result, right - left + 1);\n        }\n        return result;\n    }\n}"
}