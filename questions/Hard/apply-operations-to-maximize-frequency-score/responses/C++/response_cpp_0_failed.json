{
    "status_code": 11,
    "lang": "cpp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 89116000,
    "question_id": "3196",
    "elapsed_time": 185,
    "compare_result
    "code_output": "2",
    "std_output": "",
    "last_testcase": "[1,2,6,4]\n3",
    "expected_output": "3",
    "task_finish_time": 1708256908200,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 117,
    "total_testcases": 774,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C++",
    "submission_id": "1178814711",
    "input_formatted": "[1,2,6,4], 3",
    "input": "[1,2,6,4]\n3",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\nclass Solution {\npublic:\n    int maxFrequencyScore(vector<int>& nums, long long k) {\n        sort(nums.begin(), nums.end());\n        long long total = 0, left = 0, res = 0;\n        for (int right = 0; right < nums.size(); ++right) {\n            total += nums[right];\n            while (nums[right] * (right - left + 1) - total > k) {\n                total -= nums[left];\n                left += 1;\n            }\n            res = max(res, right - left + 1);\n        }\n        return res;\n    }\n};"
}