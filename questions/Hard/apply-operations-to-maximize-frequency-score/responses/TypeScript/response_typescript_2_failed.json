{
    "status_code": 11,
    "lang": "typescript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 66868000,
    "question_id": "3196",
    "elapsed_time": 252,
    "compare_result
    "code_output": "2",
    "std_output": "",
    "last_testcase": "[1,2,6,4]\n3",
    "expected_output": "3",
    "task_finish_time": 1708257519460,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 117,
    "total_testcases": 774,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "TypeScript",
    "submission_id": "1178820527",
    "input_formatted": "[1,2,6,4], 3",
    "input": "[1,2,6,4]\n3",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "function maxFrequencyScore(nums: number[], k: number): number {\n    nums.sort((a, b) => a - b);\n    let l = 0, maxFreq = 1;\n    let sum = 0;\n\n    for (let r = 1; r < nums.length; r++) {\n        sum += (nums[r] - nums[r - 1]) * (r - l);\n        while (sum > k) {\n            sum -= nums[r] - nums[l];\n            l++;\n        }\n        maxFreq = Math.max(maxFreq, r - l + 1);\n    }\n\n    return maxFreq;\n};"
}