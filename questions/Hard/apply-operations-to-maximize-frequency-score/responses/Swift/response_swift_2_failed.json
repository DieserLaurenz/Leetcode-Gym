{
    "status_code": 11,
    "lang": "swift",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 20560000,
    "question_id": "3196",
    "elapsed_time": 509,
    "compare_result
    "code_output": "2",
    "std_output": "",
    "last_testcase": "[1,2,6,4]\n3",
    "expected_output": "3",
    "task_finish_time": 1708257753078,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 117,
    "total_testcases": 774,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Swift",
    "submission_id": "1178822824",
    "input_formatted": "[1,2,6,4], 3",
    "input": "[1,2,6,4]\n3",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    func maxFrequencyScore(_ nums: [Int], _ k: Int) -> Int {\n        let sortedNums = nums.sorted()\n        var maxFreq = 1\n        var left = 0\n        var sum = 0\n        for right in 0..<sortedNums.count {\n            sum += sortedNums[right]\n            while sortedNums[right] * (right - left + 1) - sum > k {\n                sum -= sortedNums[left]\n                left += 1\n            }\n            maxFreq = max(maxFreq, right - left + 1)\n        }\n        return maxFreq\n    }\n}"
}