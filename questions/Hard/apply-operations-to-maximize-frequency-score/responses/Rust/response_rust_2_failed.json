{
    "status_code": 11,
    "lang": "rust",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 3748000,
    "question_id": "3196",
    "elapsed_time": 36,
    "compare_result
    "code_output": "2",
    "std_output": "",
    "last_testcase": "[1,2,6,4]\n3",
    "expected_output": "3",
    "task_finish_time": 1708267377785,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 117,
    "total_testcases": 774,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Rust",
    "submission_id": "1178925261",
    "input_formatted": "[1,2,6,4], 3",
    "input": "[1,2,6,4]\n3",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "impl Solution {\n    pub fn max_frequency_score(nums: Vec<i32>, k: i64) -> i32 {\n        let mut nums = nums;\n        nums.sort_unstable();\n        let mut max_freq = 0;\n        let mut left = 0;\n        let mut sum = 0i64;\n\n        for right in 0..nums.len() {\n            sum += nums[right] as i64;\n\n            while sum + k < nums[right] as i64 * (right - left + 1) as i64 {\n                sum -= nums[left] as i64;\n                left += 1;\n            }\n\n            max_freq = max_freq.max((right - left + 1) as i32);\n        }\n\n        max_freq\n    }\n}"
}