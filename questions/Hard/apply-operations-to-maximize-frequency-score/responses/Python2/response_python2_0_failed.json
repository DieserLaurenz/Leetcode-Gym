{
    "status_code": 11,
    "lang": "python",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 23452000,
    "question_id": "3196",
    "elapsed_time": 757,
    "compare_result
    "code_output": "2",
    "std_output": "",
    "last_testcase": "[1,2,6,4]\n3",
    "expected_output": "3",
    "task_finish_time": 1708860107168,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 117,
    "total_testcases": 774,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python",
    "submission_id": "1185712244",
    "input_formatted": "[1,2,6,4], 3",
    "input": "[1,2,6,4]\n3",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution(object):\n    def maxFrequencyScore(self, nums, k):\n        \"\"\"\n        :type nums: List[int]\n        :type k: int\n        :rtype: int\n        \"\"\"\n        nums.sort()\n        l = 0\n        max_freq = 0\n        total = 0\n        for r in range(len(nums)):\n            total += nums[r]\n            while nums[r] * (r - l + 1) - total > k:\n                total -= nums[l]\n                l += 1\n            max_freq = max(max_freq, r - l + 1)\n        return max_freq"
}