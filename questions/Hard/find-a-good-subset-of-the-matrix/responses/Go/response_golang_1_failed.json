{
    "status_code": 11,
    "lang": "golang",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 7352000,
    "question_id": "2826",
    "elapsed_time": 1838,
    "compare_result
    "code_output": "[]",
    "std_output": "",
    "last_testcase": "[[0,1,1,0],[0,0,0,1],[1,1,1,1]]",
    "expected_output": "[0,1]",
    "task_finish_time": 1708453985201,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 405,
    "total_testcases": 685,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Go",
    "submission_id": "1181252822",
    "input_formatted": "[[0,1,1,0],[0,0,0,1],[1,1,1,1]]",
    "input": "[[0,1,1,0],[0,0,0,1],[1,1,1,1]]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "func goodSubsetofBinaryMatrix(grid [][]int) []int {\n    for i, row := range grid {\n        good := true\n        for j := 0; j < len(grid[0]); j++ {\n            colSum := 0\n            for k := 0; k < len(grid); k++ {\n                colSum += grid[k][j]\n            }\n            if (colSum > len(grid)/2 && row[j] == 1) || (colSum == len(grid)/2 && row[j] == 1 && len(grid)%2 == 0) {\n                good = false\n                break\n            }\n        }\n        if good {\n            return []int{i}\n        }\n    }\n    return []int{}\n}"
}