{
    "status_code": 14,
    "lang": "ruby",
    "run_success": false,
    "status_runtime": "N/A",
    "memory": 215260000,
    "question_id": "2826",
    "elapsed_time": 3043,
    "compare_result": "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110000000000000000000000000000000000000000000",
    "code_output": "",
    "std_output": "",
    "last_testcase": "[[1,1,1,1],[1,1,1,1],[1,0,1,1],[1,1,0,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,0,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[0,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,0],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[0,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,0],[1,1,1,1],[0,1,1,1],[1,1,1,0],[1,1,1,1]]",
    "expected_output": "[]",
    "task_finish_time": 1708454163340,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 642,
    "total_testcases": 685,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Ruby",
    "submission_id": "1181255390",
    "status_msg": "Time Limit Exceeded",
    "state": "SUCCESS",
    "code": "# @param {Integer[][]} grid\n# @return {Integer[]}\ndef good_subsetof_binary_matrix(grid)\n  (1..grid.size).each do |subset_size|\n    grid.combination(subset_size).each do |subset|\n      valid = true\n      subset.transpose.each do |col|\n        if col.sum > subset_size / 2\n          valid = false\n          break\n        end\n      end\n      return subset.map { |row| grid.index(row) } if valid\n    end\n  end\n  []\nend"
}