{
    "status_code": 14,
    "lang": "ruby",
    "run_success": false,
    "status_runtime": "N/A",
    "memory": 211416000,
    "question_id": "3001",
    "elapsed_time": 3161,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "[8,3,9,3,8]\n2",
    "expected_output": "81",
    "task_finish_time": 1708278205970,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 869,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Ruby",
    "submission_id": "1179063924",
    "status_msg": "Time Limit Exceeded",
    "state": "SUCCESS",
    "code": "# @param {Integer[]} nums\n# @param {Integer} k\n# @return {Integer}\ndef maximum_score(nums, k)\n    mod = 10**9 + 7\n    max_score = 1\n\n    # Function to get prime score\n    def get_prime_score(x)\n        prime_factors = 0\n        for i in 2..Math.sqrt(x)\n            if x % i == 0\n                prime_factors += 1 while (x % i).zero?\n                x /= i while (x % i).zero?\n            end\n        end\n        prime_factors += 1 if x > 1\n        prime_factors\n    end\n\n    # Array to hold numbers with their prime scores\n    prime_scores = nums.map { |x| [x, get_prime_score(x)] }\n\n    # Sorting the array based on prime score, then by number in descending order\n    prime_scores.sort_by! { |x, score| [-score, -x] }\n\n    # Selecting top k elements based on their prime score\n    k.times do |i|\n        max_score = (max_score * prime_scores[i][0]) % mod\n    end\n\n    max_score\nend"
}