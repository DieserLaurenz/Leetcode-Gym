{
    "status_code": 11,
    "lang": "kotlin",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 37676000,
    "question_id": "3001",
    "elapsed_time": 461,
    "compare_result
    "code_output": "9",
    "std_output": "",
    "last_testcase": "[8,3,9,3,8]\n2",
    "expected_output": "81",
    "task_finish_time": 1708277822785,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 869,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Kotlin",
    "submission_id": "1179058323",
    "input_formatted": "[8,3,9,3,8], 2",
    "input": "[8,3,9,3,8]\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    fun maximumScore(nums: List<Int>, k: Int): Int {\n        val mod = 1000000007\n        val n = nums.size\n        var maxScore = 1L\n        val score = Array(n) { 0 }\n        for (i in nums.indices) {\n            score[i] = primeScore(nums[i])\n        }\n        val sortedIndices = score.indices.sortedWith(compareByDescending<Int> { score[it] }.thenBy { nums[it] })\n        val used = BooleanArray(n) { false }\n        for (i in 0 until k) {\n            val index = sortedIndices[i]\n            if (!used[index]) {\n                maxScore = maxScore * nums[index] % mod\n                used[index] = true\n            }\n        }\n        return maxScore.toInt()\n    }\n\n    private fun primeScore(x: Int): Int {\n        var n = x\n        var factors = 0\n        if (n % 2 == 0) {\n            factors++\n            while (n % 2 == 0) n /= 2\n        }\n        var i = 3\n        while (i <= Math.sqrt(n.toDouble()).toInt()) {\n            if (n % i == 0) {\n                factors++\n                while (n % i == 0) n /= i\n            }\n            i += 2\n        }\n        if (n > 1) factors++\n        return factors\n    }\n}"
}