{
    "status_code": 11,
    "lang": "kotlin",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 65840000,
    "question_id": "3001",
    "elapsed_time": 965,
    "compare_result
    "code_output": "24",
    "std_output": "",
    "last_testcase": "[8,3,9,3,8]\n2",
    "expected_output": "81",
    "task_finish_time": 1708277788427,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 101,
    "total_testcases": 869,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Kotlin",
    "submission_id": "1179057801",
    "input_formatted": "[8,3,9,3,8], 2",
    "input": "[8,3,9,3,8]\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    fun maximumScore(nums: List<Int>, k: Int): Int {\n        val mod = 1000000007\n        var maxScore = 1L\n\n        val primeScores = nums.map { n -> n to primeScore(n) }\n        val sortedNums = primeScores.sortedByDescending { it.second }.take(k)\n\n        for (num in sortedNums) {\n            maxScore = maxScore * num.first % mod\n        }\n\n        return maxScore.toInt()\n    }\n\n    private fun primeScore(n: Int): Int {\n        var count = 0\n        var number = n\n\n        var factor = 2\n        while (factor * factor <= number) {\n            if (number % factor == 0) {\n                count++\n                while (number % factor == 0) {\n                    number /= factor\n                }\n            }\n            factor++\n        }\n\n        if (number > 1) count++\n\n        return count\n    }\n}"
}