{
    "status_code": 11,
    "lang": "golang",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 10508000,
    "question_id": "3001",
    "elapsed_time": 467,
    "compare_result
    "code_output": "72",
    "std_output": "",
    "last_testcase": "[8,3,9,3,8]\n2",
    "expected_output": "81",
    "task_finish_time": 1708278040966,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 113,
    "total_testcases": 869,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Go",
    "submission_id": "1179061548",
    "input_formatted": "[8,3,9,3,8], 2",
    "input": "[8,3,9,3,8]\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "package main\n\nimport \"sort\"\n\nfunc maximumScore(nums []int, k int) int {\n    const mod = 1000000007\n    n := len(nums)\n    // Convert nums to pairs of (value, primeScore)\n    pairs := make([][2]int, n)\n    for i, num := range nums {\n        pairs[i] = [2]int{num, primeScore(num)}\n    }\n    // Sort pairs by prime score then by value\n    sort.Slice(pairs, func(i, j int) bool {\n        if pairs[i][1] == pairs[j][1] {\n            return pairs[i][0] > pairs[j][0]\n        }\n        return pairs[i][1] > pairs[j][1]\n    })\n\n    // Calculate maximum score\n    score := 1\n    for i := 0; i < k && i < n; i++ {\n        score = int((int64(score) * int64(pairs[i][0])) % mod)\n    }\n\n    return score\n}\n\nfunc primeScore(x int) int {\n    score := 0\n    for d := 2; d*d <= x; d++ {\n        if x%d == 0 {\n            for x%d == 0 {\n                x /= d\n            }\n            score++\n        }\n    }\n    if x > 1 {\n        score++\n    }\n    return score\n}"
}