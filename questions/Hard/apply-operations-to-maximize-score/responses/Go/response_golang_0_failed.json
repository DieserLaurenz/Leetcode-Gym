{
    "status_code": 11,
    "lang": "golang",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 2044000,
    "question_id": "3001",
    "elapsed_time": 12,
    "compare_result
    "code_output": "72",
    "std_output": "",
    "last_testcase": "[8,3,9,3,8]\n2",
    "expected_output": "81",
    "task_finish_time": 1708278008704,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 869,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Go",
    "submission_id": "1179061061",
    "input_formatted": "[8,3,9,3,8], 2",
    "input": "[8,3,9,3,8]\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "func maximumScore(nums []int, k int) int {\n    const mod = 1e9 + 7\n    n := len(nums)\n    primeScores := make([]int, n)\n\n    // Calculate prime score for each number\n    for i, num := range nums {\n        primeScores[i] = primeScore(num)\n    }\n\n    // Sort indices based on prime score and value\n    indices := make([]int, n)\n    for i := range indices {\n        indices[i] = i\n    }\n    sort.Slice(indices, func(i, j int) bool {\n        if primeScores[indices[i]] == primeScores[indices[j]] {\n            return nums[indices[i]] > nums[indices[j]]\n        }\n        return primeScores[indices[i]] > primeScores[indices[j]]\n    })\n\n    score := 1\n    for i := 0; i < k; i++ {\n        score = (score * nums[indices[i]]) % mod\n    }\n\n    return score\n}\n\nfunc primeScore(num int) int {\n    score := 0\n    for i := 2; i*i <= num; i++ {\n        if num%i == 0 {\n            score++\n            for num%i == 0 {\n                num /= i\n            }\n        }\n    }\n    if num > 1 {\n        score++\n    }\n    return score\n}"
}