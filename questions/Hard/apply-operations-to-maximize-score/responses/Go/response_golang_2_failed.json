{
    "status_code": 11,
    "lang": "golang",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 2032000,
    "question_id": "3001",
    "elapsed_time": 12,
    "compare_result
    "code_output": "72",
    "std_output": "",
    "last_testcase": "[8,3,9,3,8]\n2",
    "expected_output": "81",
    "task_finish_time": 1708278073903,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 869,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Go",
    "submission_id": "1179062050",
    "input_formatted": "[8,3,9,3,8], 2",
    "input": "[8,3,9,3,8]\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "func maximumScore(nums []int, k int) int {\n const mod = 1000000007\n primeScores := make([]int, len(nums))\n for i, num := range nums {\n  primeScores[i] = getPrimeScore(num)\n }\n\n type element struct {\n  value, primeScore int\n }\n elements := make([]element, len(nums))\n for i := range elements {\n  elements[i] = element{nums[i], primeScores[i]}\n }\n\n sort.Slice(elements, func(i, j int) bool {\n  if elements[i].primeScore == elements[j].primeScore {\n   return elements[i].value > elements[j].value\n  }\n  return elements[i].primeScore > elements[j].primeScore\n })\n\n score := 1\n for i := 0; i < k; i++ {\n  score = (score * elements[i].value) % mod\n }\n\n return score\n}\n\nfunc getPrimeScore(n int) int {\n score := 0\n for i := 2; i*i <= n; i++ {\n  if n%i == 0 {\n   score++\n   for n%i == 0 {\n    n /= i\n   }\n  }\n }\n if n > 1 {\n  score++\n }\n return score\n}"
}