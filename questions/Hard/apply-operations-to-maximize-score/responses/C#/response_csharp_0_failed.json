{
    "status_code": 11,
    "lang": "csharp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 44988000,
    "question_id": "3001",
    "elapsed_time": 283,
    "compare_result
    "code_output": "24",
    "std_output": "",
    "last_testcase": "[8,3,9,3,8]\n2",
    "expected_output": "81",
    "task_finish_time": 1708268225784,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 869,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C#",
    "submission_id": "1178934647",
    "input_formatted": "[8,3,9,3,8], 2",
    "input": "[8,3,9,3,8]\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "public class Solution {\n    private const int Mod = 1000000007;\n\n    public int MaximumScore(IList<int> nums, int k) {\n        var primeFactors = new int[100001];\n        for (int i = 2; i < 100001; i++) {\n            if (primeFactors[i] == 0) {\n                for (int j = i; j < 100001; j += i) {\n                    primeFactors[j]++;\n                }\n            }\n        }\n\n        var scores = nums.Select(x => (long)x).ToArray();\n        var primeScores = nums.Select(x => primeFactors[x]).ToArray();\n        Array.Sort(primeScores, scores);\n\n        long result = 1;\n        for (int i = nums.Count - 1; i >= nums.Count - k; i--) {\n            result = (result * scores[i]) % Mod;\n        }\n\n        return (int)result;\n    }\n}"
}