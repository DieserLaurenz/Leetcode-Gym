{
    "status_code": 11,
    "lang": "python",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 11616000,
    "question_id": "3001",
    "elapsed_time": 27,
    "compare_result
    "code_output": "72",
    "std_output": "",
    "last_testcase": "[8,3,9,3,8]\n2",
    "expected_output": "81",
    "task_finish_time": 1708860411449,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 869,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python",
    "submission_id": "1185715459",
    "input_formatted": "[8,3,9,3,8], 2",
    "input": "[8,3,9,3,8]\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution(object):\n    def maximumScore(self, nums, k):\n        \"\"\"\n        :type nums: List[int]\n        :type k: int\n        :rtype: int\n        \"\"\"\n        def prime_score(n):\n            primes = {}\n            d = 2\n            while d * d <= n:\n                while n % d == 0:\n                    if d in primes:\n                        primes[d] += 1\n                    else:\n                        primes[d] = 1\n                    n //= d\n                d += 1\n            if n > 1:\n                if n in primes:\n                    primes[n] += 1\n                else:\n                    primes[n] = 1\n            return len(primes)\n\n        nums_prime_scores = [(prime_score(num), num) for num in nums]\n        nums_prime_scores.sort(reverse=True)\n\n        score = 1\n        for i in range(k):\n            score *= nums_prime_scores[i][1]\n            score %= 10**9 + 7\n\n        return score"
}