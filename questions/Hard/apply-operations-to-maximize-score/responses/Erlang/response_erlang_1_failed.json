{
    "status_code": 15,
    "lang": "erlang",
    "run_success": false,
    "runtime_error": "Line 5: exception error: badarg",
    "full_runtime_error": "Line 5: exception error: badarg\n[{erlang,'or',[1,true],[{error_info,#{module => erl_erts_errors}}]},\n {solution,'-maximum_score/2-fun-1-',2,[{file,\"solution.erl\"},{line,5}]},\n {lists,sort,2,[{file,\"lists.erl\"},{line,1210}]},\n {solution,maximum_score,2,[{file,\"solution.erl\"},{line,4}]},\n {solution,consume_test_cases,2,[{file,\"solution.erl\"},{line,46}]},\n {solution,driver,0,[{file,\"solution.erl\"},{line,32}]},\n {solution,start,0,[{file,\"solution.erl\"},{line,63}]},\n {init,start_em,1,[]}]",
    "status_runtime": "N/A",
    "memory": 64496000,
    "question_id": "3001",
    "elapsed_time": 1361,
    "compare_result": "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "code_output": "",
    "std_output": "",
    "last_testcase": "[8,3,9,3,8]\n2",
    "expected_output": "81",
    "task_finish_time": 1708278697977,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 869,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Erlang",
    "submission_id": "1179071040",
    "status_msg": "Runtime Error",
    "state": "SUCCESS",
    "code": "-spec maximum_score(Nums :: [integer()], K :: integer()) -> integer().\nmaximum_score(Nums, K) ->\n    PrimeScores = lists:map(fun(X) -> {prime_score(X), X} end, Nums),\n    Sorted = lists:sort(fun({PS1, X1}, {PS2, X2}) ->\n                            PS1 > PS2 or (PS1 == PS2 andalso X1 > X2)\n                        end, PrimeScores),\n    Modulo = 1000000007,\n    MaxScore = lists:foldl(fun({_, X}, Acc) -> (Acc * X) rem Modulo end, 1, lists:sublist(Sorted, 1, K)),\n    MaxScore.\n\nprime_score(N) ->\n    prime_factors(N, 2, []).\n\nprime_factors(1, _, Acc) -> length(lists:usort(Acc));\nprime_factors(N, Factor, Acc) when N rem Factor == 0 ->\n    prime_factors(N div Factor, Factor, [Factor|Acc]);\nprime_factors(N, Factor, Acc) ->\n    prime_factors(N, next_factor(Factor, N), Acc).\n\nnext_factor(Factor, N) ->\n    case is_prime(Factor + 1, N) of\n        true -> Factor + 1;\n        false -> next_factor(Factor + 1, N)\n    end.\n\nis_prime(Factor, N) when Factor * Factor > N -> true;\nis_prime(Factor, N) when N rem Factor == 0 -> false;\nis_prime(Factor, N) -> is_prime(Factor + 1, N)."
}