{
    "status_code": 11,
    "lang": "javascript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 84204000,
    "question_id": "3001",
    "elapsed_time": 508,
    "compare_result": "00000100100100001000000000100000100000001000010010000011010101010001010010000011000000000000000010101000001100000000000000000011000000000000000000000010101010011000100010001000100000000001000000100000000001000000100100100001000000000001001001000000000000010010001000110000000000110000100000010000010100000110000101011000001010001000000000001000000000000001000000000001000000000010000110000000000001000000001000000000000010111000010110001000000000000000001000010000000000011001010000110100000000000001000100001100001100110000000010100000000000010001000000000000010000000100000010100000000010100010001000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "code_output": "72",
    "std_output": "",
    "last_testcase": "[8,3,9,3,8]\n2",
    "expected_output": "81",
    "task_finish_time": 1708268436486,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 113,
    "total_testcases": 869,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "JavaScript",
    "submission_id": "1178937012",
    "input_formatted": "[8,3,9,3,8], 2",
    "input": "[8,3,9,3,8]\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "/**\n * @param {number[]} nums\n * @param {number} k\n * @return {number}\n */\nvar maximumScore = function(nums, k) {\n    const MOD = 1e9 + 7;\n\n    function primeScore(x) {\n        let score = 0;\n        for (let i = 2; i * i <= x; i++) {\n            if (x % i === 0) {\n                score++;\n                while (x % i === 0) x /= i;\n            }\n        }\n        if (x > 1) score++;\n        return score;\n    }\n\n    let scores = nums.map((x, i) => ({value: x, score: primeScore(x), index: i}));\n    scores.sort((a, b) => b.score - a.score || b.value - a.value);\n\n    let result = 1, operations = 0;\n    for (let i = 0; i < scores.length && operations < k; i++) {\n        if (scores[i].score > 0) {\n            result = (result * scores[i].value) % MOD;\n            operations++;\n        }\n    }\n\n    return result;\n};"
}