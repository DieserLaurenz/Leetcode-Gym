{
    "status_code": 11,
    "lang": "cpp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 111800000,
    "question_id": "3001",
    "elapsed_time": 449,
    "compare_result
    "code_output": "72",
    "std_output": "",
    "last_testcase": "[8,3,9,3,8]\n2",
    "expected_output": "81",
    "task_finish_time": 1708267811291,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 113,
    "total_testcases": 869,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C++",
    "submission_id": "1178930058",
    "input_formatted": "[8,3,9,3,8], 2",
    "input": "[8,3,9,3,8]\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "#include <vector>\n#include <algorithm>\n#include <cmath>\n\nusing namespace std;\n\nclass Solution {\npublic:\n    static const int MOD = 1e9 + 7;\n\n    int primeScore(int x) {\n        int score = 0;\n        for (int i = 2; i <= sqrt(x); ++i) {\n            if (x % i == 0) {\n                ++score;\n                while (x % i == 0) x /= i;\n            }\n        }\n        if (x > 1) ++score;\n        return score;\n    }\n\n    int maximumScore(vector<int>& nums, int k) {\n        vector<pair<int, int>> scores;\n        for (int i = 0; i < nums.size(); ++i) {\n            scores.emplace_back(primeScore(nums[i]), nums[i]);\n        }\n        sort(scores.rbegin(), scores.rend());\n\n        long long score = 1;\n        for (int i = 0; i < min(k, (int)scores.size()); ++i) {\n            score = (score * scores[i].second) % MOD;\n        }\n\n        return score;\n    }\n};"
}