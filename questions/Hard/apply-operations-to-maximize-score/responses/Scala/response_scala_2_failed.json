{
    "status_code": 11,
    "lang": "scala",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 80476000,
    "question_id": "3001",
    "elapsed_time": 10427,
    "compare_result
    "code_output": "72",
    "std_output": "",
    "last_testcase": "[8,3,9,3,8]\n2",
    "expected_output": "81",
    "task_finish_time": 1708278342987,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 119,
    "total_testcases": 869,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Scala",
    "submission_id": "1179065826",
    "input_formatted": "[8,3,9,3,8], 2",
    "input": "[8,3,9,3,8]\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "object Solution {\n    val mod = 1000000007\n\n    def maximumScore(nums: List[Int], k: Int): Int = {\n        val scores = nums.map(x => x.toLong)\n        val sortedIndices = scores.indices.sortBy(scores(_)).reverse\n        val used = Array.fill(nums.length)(false)\n        var result = 1L\n        var operations = 0\n\n        for (i <- sortedIndices if operations < k) {\n            if (!used(i)) {\n                result = (result * scores(i)) % mod\n                used(i) = true\n                operations += 1\n            }\n        }\n        result.toInt\n    }\n}"
}