{
    "status_code": 11,
    "lang": "dart",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 146092000,
    "question_id": "3001",
    "elapsed_time": 792,
    "compare_result
    "code_output": "72",
    "std_output": "",
    "last_testcase": "[8,3,9,3,8]\n2",
    "expected_output": "81",
    "task_finish_time": 1708277883473,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 869,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Dart",
    "submission_id": "1179059216",
    "input_formatted": "[8,3,9,3,8], 2",
    "input": "[8,3,9,3,8]\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n  int maximumScore(List<int> nums, int k) {\n    const int mod = 1000000007;\n    List<int> primeScores = nums.map((x) => _primeScore(x)).toList();\n    List<int> sortedIndices = List<int>.generate(nums.length, (i) => i);\n    sortedIndices.sort((a, b) => primeScores[b].compareTo(primeScores[a]) != 0 ? primeScores[b].compareTo(primeScores[a]) : nums[b].compareTo(nums[a]));\n    int score = 1;\n    for (int i = 0; i < k; i++) {\n      score = (score * nums[sortedIndices[i]]) % mod;\n    }\n    return score;\n  }\n\n  int _primeScore(int x) {\n    int count = 0;\n    for (int i = 2; i * i <= x; i++) {\n      if (x % i == 0) {\n        while (x % i == 0) {\n          x ~/= i;\n        }\n        count++;\n      }\n    }\n    if (x > 1) count++;\n    return count;\n  }\n}"
}