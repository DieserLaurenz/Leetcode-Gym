{
    "status_code": 11,
    "lang": "javascript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 78764000,
    "question_id": "2894",
    "elapsed_time": 300,
    "compare_result": "0011111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111011011111111110101110111111011111111111111111111001111111111111101100111101111111111111101111011111101111111111111111111011110111111111111111111011001111101111100111111011110111101001111110011011101111101110111111111011111101001100111111111010101001101110100100101010111100111010010111111110111110100101111101111101011011101000011101111111111111111111001100101011010000110100000010000100100111000101110000110101111101100110100100000011101011110101000011101100100101010000010101011001100001100000011110010110001110110010000001111001001001111110001111111000010001011010011001000101001001010010001000100011001010001100000010010100001111010110110000010110011110011000001110000011000001111101000011010110110000001010110111111001110100110000010000001000010010110000001110001010001111010110100111000101010111110111000000100101101001000100010000000110000011100000000000101101000100100000011000000000000000001100000000000001100110101010100001100000001000000110110000001100000000000000000100100000000000000111000000000000000000000001001100100111000001000110100100001000010000100001010100001100000001100000001110011110000010000000011000100010010000011110000010010000000000000000000001000000000000000000100001100001100110110001000101000000010000100000110001110010110000000110001001001100000010000010000010000000000010101001000000100100000000000000100010000000000000001100001110000000000100110000000000100000000001000001101011100010000100100010100010001000000000000010100001001010010000000000100000010000010110000010001011110000100100100001001010010000100000000001100100100110000000010100000000100000000000001010000000100000001000001000000000100001000000000000000000000010000010010000000001000000000101000000000000000000011000000000000100000000000000000001001000000000000000111000001000000000110000000000100000000000000000001000000000000000000000001000000000000010000000000000000000010000000000000000000001000000010001000000101000000000000000000000000000000000000000000000001100000000000000000001000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000100000000000000000000000000000000000000000000000000000000000000100000000000000000000100000010010000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000011111000011011111111110110100001100000100011011001001110000010000011100100100111100000000011000001010100100000000010100000001",
    "code_output": "16",
    "std_output": "",
    "last_testcase": "[[3,2],[5,1],[10,1]]\n2",
    "expected_output": "17",
    "task_finish_time": 1708567683607,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 874,
    "total_testcases": 2728,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "JavaScript",
    "submission_id": "1182541388",
    "input_formatted": "[[3,2],[5,1],[10,1]], 2",
    "input": "[[3,2],[5,1],[10,1]]\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "var findMaximumElegance = function(items, k) {\n    items.sort((a, b) => b[0] - a[0]);\n    let maxElegance = 0, totalProfit = 0, categoryCount = 0;\n    const categoryMap = new Map();\n\n    for (let i = 0; i < k; i++) {\n        totalProfit += items[i][0];\n        if (!categoryMap.has(items[i][1])) {\n            categoryMap.set(items[i][1], 1);\n            categoryCount++;\n        }\n    }\n\n    maxElegance = totalProfit + categoryCount * categoryCount;\n\n    for (let i = k; i < items.length; i++) {\n        if (categoryMap.has(items[i][1]) && categoryMap.get(items[i][1]) < 1) {\n            continue;\n        }\n\n        let tempProfit = totalProfit - items[i - k][0] + items[i][0];\n        let tempCategoryCount = categoryCount;\n\n        if (!categoryMap.has(items[i][1])) {\n            tempCategoryCount++;\n        }\n\n        if (categoryMap.get(items[i - k][1]) === 1) {\n            tempCategoryCount--;\n        }\n\n        let tempElegance = tempProfit + tempCategoryCount * tempCategoryCount;\n\n        if (tempElegance > maxElegance) {\n            maxElegance = tempElegance;\n            totalProfit = tempProfit;\n            categoryCount = tempCategoryCount;\n            if (categoryMap.get(items[i - k][1]) === 1) {\n                categoryMap.delete(items[i - k][1]);\n            } else {\n                categoryMap.set(items[i - k][1], categoryMap.get(items[i - k][1]) - 1);\n            }\n            categoryMap.set(items[i][1], 1);\n        }\n    }\n\n    return maxElegance;\n};"
}