{
    "status_code": 15,
    "lang": "dart",
    "run_success": false,
    "runtime_error": "Line 14: Char 25: Error: The getter 'Math' isn't defined for the class 'Solution'.",
    "full_runtime_error": "Line 14: Char 25: Error: The getter 'Math' isn't defined for the class 'Solution'.\nTry correcting the name to the name of an existing getter, or defining a getter or field named 'Math'.\n    for (int i = 0; i < Math.min(k, maxProfits.length); i++) {\n                        ^^^^",
    "status_runtime": "N/A",
    "memory": 145212000,
    "question_id": "2894",
    "elapsed_time": 581,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "[[3,2],[5,1],[10,1]]\n2",
    "expected_output": "17",
    "task_finish_time": 1708577283476,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 2728,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Dart",
    "submission_id": "1182652657",
    "status_msg": "Runtime Error",
    "state": "SUCCESS",
    "code": "class Solution {\n  int findMaximumElegance(List<List<int>> items, int k) {\n    items.sort((a, b) => b[0].compareTo(a[0]));\n    Map<int, List<int>> profitsByCategory = {};\n    for (var item in items) {\n      profitsByCategory.putIfAbsent(item[1], () => []).add(item[0]);\n    }\n    List<int> maxProfits = [];\n    for (var entry in profitsByCategory.entries) {\n      maxProfits.add(entry.value.reduce((value, element) => value + element));\n    }\n    maxProfits.sort((a, b) => b.compareTo(a));\n    int totalProfit = 0, categoriesUsed = 0;\n    for (int i = 0; i < Math.min(k, maxProfits.length); i++) {\n      totalProfit += maxProfits[i];\n      categoriesUsed++;\n    }\n    int elegance = totalProfit + categoriesUsed * categoriesUsed;\n    return elegance;\n  }\n}"
}