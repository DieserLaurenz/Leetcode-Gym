{
    "status_code": 15,
    "lang": "dart",
    "run_success": false,
    "runtime_error": "Line 15: Char 160: Error: Expected ')' before this.",
    "full_runtime_error": "Line 15: Char 160: Error: Expected ')' before this.\n  void _dfs(int index, int currentProfit, int itemCount, Set<int> categories, List<int> profits, Map<int, int> categoryCount, int k, List<List<int>> items, int& maxElegance) {\n                                                                                                                                                               ^\nLine 11: Char 65: Error: Expected an identifier, but got '&'.\nTry inserting an identifier before '&'.\n    _dfs(0, 0, 0, Set<int>(), profits, categoryCount, k, items, &maxElegance);\n                                                                ^\nLine 25: Char 116: Error: Expected an identifier, but got '&'.\nTry inserting an identifier before '&'.\n      _dfs(index + 1, currentProfit + profits[index], itemCount + 1, categories, profits, categoryCount, k, items, &maxElegance);\n                                                                                                                   ^\nLine 30: Char 93: Error: Expected an identifier, but got '&'.\nTry inserting an identifier before '&'.\n    _dfs(index + 1, currentProfit, itemCount, categories, profits, categoryCount, k, items, &maxElegance);\n                                                                                            ^\nLine 17: Char 25: Error: The getter 'maxElegance' isn't defined for the class 'Solution'.\nTry correcting the name to the name of an existing getter, or defining a getter or field named 'maxElegance'.\n      maxElegance = max(maxElegance, currentProfit + categories.length * categories.length);\n                        ^^^^^^^^^^^\nLine 17: Char 21: Error: Inferred type argument 'dynamic' doesn't conform to the bound 'num' of the type variable 'T' on 'max'.\nTry specifying type arguments explicitly so that they conform to the bounds.\n      maxElegance = max(maxElegance, currentProfit + categories.length * categories.length);\n                    ^\norg-dartlang-sdk:///sdk/lib/_internal/vm/lib/math_patch.dart: Context: This is the type variable whose bound isn't conformed to.\nLine 17: Char 7: Error: The setter 'maxElegance' isn't defined for the class 'Solution'.\nTry correcting the name to the name of an existing setter, or defining a setter or field named 'maxElegance'.\n      maxElegance = max(maxElegance, currentProfit + categories.length * categories.length);\n      ^^^^^^^^^^^\nLine 25: Char 117: Error: The getter 'maxElegance' isn't defined for the class 'Solution'.\nTry correcting the name to the name of an existing getter, or defining a getter or field named 'maxElegance'.\n      _dfs(index + 1, currentProfit + profits[index], itemCount + 1, categories, profits, categoryCount, k, items, &maxElegance);\n                                                                                                                    ^^^^^^^^^^^\nLine 30: Char 94: Error: The getter 'maxElegance' isn't defined for the class 'Solution'.\nTry correcting the name to the name of an existing getter, or defining a getter or field named 'maxElegance'.\n    _dfs(index + 1, currentProfit, itemCount, categories, profits, categoryCount, k, items, &maxElegance);\n                                                                                             ^^^^^^^^^^^",
    "status_runtime": "N/A",
    "memory": 151428000,
    "question_id": "2894",
    "elapsed_time": 387,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "[[3,2],[5,1],[10,1]]\n2",
    "expected_output": "17",
    "task_finish_time": 1708577315765,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 2728,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Dart",
    "submission_id": "1182653146",
    "status_msg": "Runtime Error",
    "state": "SUCCESS",
    "code": "class Solution {\n  int findMaximumElegance(List<List<int>> items, int k) {\n    items.sort((a, b) => b[0] - a[0]);\n    Map<int, int> categoryCount = {};\n    List<int> profits = [];\n    for (var item in items) {\n      profits.add(item[0]);\n      categoryCount[item[1]] = (categoryCount[item[1]] ?? 0) + 1;\n    }\n    int maxElegance = 0;\n    _dfs(0, 0, 0, Set<int>(), profits, categoryCount, k, items, &maxElegance);\n    return maxElegance;\n  }\n\n  void _dfs(int index, int currentProfit, int itemCount, Set<int> categories, List<int> profits, Map<int, int> categoryCount, int k, List<List<int>> items, int& maxElegance) {\n    if (itemCount == k) {\n      maxElegance = max(maxElegance, currentProfit + categories.length * categories.length);\n      return;\n    }\n    if (index == items.length) return;\n\n    // Include this item\n    if (itemCount < k) {\n      categories.add(items[index][1]);\n      _dfs(index + 1, currentProfit + profits[index], itemCount + 1, categories, profits, categoryCount, k, items, &maxElegance);\n      categories.remove(items[index][1]);\n    }\n\n    // Exclude this item\n    _dfs(index + 1, currentProfit, itemCount, categories, profits, categoryCount, k, items, &maxElegance);\n  }\n}"
}