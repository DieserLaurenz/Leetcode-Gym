{
    "status_code": 11,
    "lang": "rust",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 16028000,
    "question_id": "2894",
    "elapsed_time": 89,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "[[1,1],[2,1],[3,1]]\n3",
    "expected_output": "7",
    "task_finish_time": 1708577859117,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 1715,
    "total_testcases": 2728,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Rust",
    "submission_id": "1182661442",
    "input_formatted": "[[1,1],[2,1],[3,1]], 3",
    "input": "[[1,1],[2,1],[3,1]]\n3",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "impl Solution {\n    pub fn find_maximum_elegance(items: Vec<Vec<i32>>, k: i32) -> i64 {\n        use std::collections::HashMap;\n        let mut map = HashMap::new();\n        for item in items.iter() {\n            map.entry(item[1]).or_insert_with(Vec::new).push(item[0]);\n        }\n\n        let mut profits: Vec<i32> = vec![];\n        for v in map.values_mut() {\n            v.sort_unstable_by(|a, b| b.cmp(a));\n            profits.push(v[0]);\n            for i in 1..v.len() {\n                profits.push(v[i] - v[0]);\n            }\n        }\n\n        profits.sort_unstable_by(|a, b| b.cmp(a));\n        let mut result = 0;\n        for i in 0..k as usize {\n            result += profits[i] as i64;\n        }\n        result += ((k as i64).min(map.len() as i64)).pow(2);\n        result\n    }\n}"
}