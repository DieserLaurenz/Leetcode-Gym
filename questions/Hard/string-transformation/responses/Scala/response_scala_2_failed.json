{
    "status_code": 11,
    "lang": "scala",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 65496000,
    "question_id": "3024",
    "elapsed_time": 10390,
    "compare_result
    "code_output": "0",
    "std_output": "",
    "last_testcase": "\"ababab\"\n\"ababab\"\n1",
    "expected_output": "2",
    "task_finish_time": 1708986094615,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 44,
    "total_testcases": 726,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Scala",
    "submission_id": "1187155575",
    "input_formatted": "\"ababab\", \"ababab\", 1",
    "input": "\"ababab\"\n\"ababab\"\n1",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "object Solution {\n    def numberOfWays(s: String, t: String, k: Long): Int = {\n        val mod = 1000000007\n        if (s == t) {\n            if (k == 1) return 0\n            if (k % 2 == 0) {\n                if (k == 2 && s.indices.exists(i => s.drop(i) + s.take(i) == t)) return 2\n                return ((k - 1) % mod).toInt\n            }\n            return 2\n        }\n\n        if (k == 1) 0\n        else {\n            val isPossibleInOneMove = s.indices.exists(i => s.drop(i) + s.take(i) == t)\n            k match {\n                case 2 if isPossibleInOneMove => 2\n                case _ if k % 2 == 0 => 2\n                case _ => 0\n            }\n        }\n    }\n}"
}