{
    "status_code": 11,
    "lang": "cpp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 6888000,
    "question_id": "3024",
    "elapsed_time": 4048,
    "compare_result
    "code_output": "12",
    "std_output": "",
    "last_testcase": "\"abcd\"\n\"cdab\"\n2",
    "expected_output": "2",
    "task_finish_time": 1708975576052,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 726,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C++",
    "submission_id": "1187054108",
    "input_formatted": "\"abcd\", \"cdab\", 2",
    "input": "\"abcd\"\n\"cdab\"\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nclass Solution {\npublic:\n    int numberOfWays(string s, string t, long long k) {\n        int MOD = 1000000007;\n        int n = s.size();\n        if (s == t && k % 2 == 0) return (k * n / 2) % MOD;\n        if (s == t && k % 2 == 1) return 0;\n        \n        long long ans = 0;\n        for (int i = 0; i < n; ++i) {\n            if (s[i] != t[i]) ans++;\n        }\n        \n        if (ans == 0) return (n * (k % 2 ? 0 : 1)) % MOD;\n        if (k == 1) return 0;\n        \n        long long ways = 1;\n        for (int i = 1; i <= k; ++i) {\n            ways = (ways * n) % MOD;\n        }\n        \n        return (ways - (k % 2 ? 0 : n) + MOD) % MOD;\n    }\n};"
}