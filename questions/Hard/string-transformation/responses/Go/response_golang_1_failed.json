{
    "status_code": 11,
    "lang": "golang",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 97176000,
    "question_id": "3024",
    "elapsed_time": 3011,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "\"abcd\"\n\"cdab\"\n2",
    "expected_output": "2",
    "task_finish_time": 1708985805617,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 90,
    "total_testcases": 726,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Go",
    "submission_id": "1187153432",
    "input_formatted": "\"abcd\", \"cdab\", 2",
    "input": "\"abcd\"\n\"cdab\"\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "func numberOfWays(s string, t string, k int64) int {\n const mod = 1000000007\n n := len(s)\n if s == t {\n  if k == 1 {\n   return 0\n  }\n  if k%3 == 0 {\n   return (2 * int(k/3)) % mod\n  }\n  return 2\n }\n\n shift := 0\n for shift < n && s[shift:] + s[:shift] != t {\n  shift++\n }\n\n if shift == n {\n  return 0\n }\n\n if k == 1 {\n  return 1\n }\n\n if (k-1)%3 == 0 || k%3 == 0 {\n  return 2\n }\n\n return 1\n}"
}