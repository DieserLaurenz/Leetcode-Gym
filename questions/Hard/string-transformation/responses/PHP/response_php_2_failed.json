{
    "status_code": 11,
    "lang": "php",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 22548000,
    "question_id": "3024",
    "elapsed_time": 38,
    "compare_result
    "code_output": "2",
    "std_output": "",
    "last_testcase": "\"ceoceo\"\n\"eoceoc\"\n4",
    "expected_output": "208",
    "task_finish_time": 1708984997449,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 57,
    "total_testcases": 726,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "PHP",
    "submission_id": "1187147052",
    "input_formatted": "\"ceoceo\", \"eoceoc\", 4",
    "input": "\"ceoceo\"\n\"eoceoc\"\n4",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n\n    /**\n     * @param String $s\n     * @param String $t\n     * @param Integer $k\n     * @return Integer\n     */\n    function numberOfWays($s, $t, $k) {\n        $mod = 1000000007;\n        $n = strlen($s);\n        if ($s === $t) {\n            if ($k === 1) return 2;\n            if ($k % 2 === 0) return ($n - 1) % $mod;\n            return 2 % $mod;\n        }\n\n        if ($k < 2) return 0;\n\n        for ($i = 0; $i < $n; $i++) {\n            if ($s[$i] !== $t[$i]) break;\n            if ($i === $n - 1) return ($n - 1) % $mod;\n        }\n\n        if ($k % 2 === 0) return 2 % $mod;\n        return 0;\n    }\n}"
}