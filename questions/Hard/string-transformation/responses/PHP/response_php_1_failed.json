{
    "status_code": 11,
    "lang": "php",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 23160000,
    "question_id": "3024",
    "elapsed_time": 41,
    "compare_result
    "code_output": "5",
    "std_output": "",
    "last_testcase": "\"ababab\"\n\"ababab\"\n1",
    "expected_output": "2",
    "task_finish_time": 1708984974561,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 104,
    "total_testcases": 726,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "PHP",
    "submission_id": "1187146873",
    "input_formatted": "\"ababab\", \"ababab\", 1",
    "input": "\"ababab\"\n\"ababab\"\n1",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n\n    /**\n     * @param String $s\n     * @param String $t\n     * @param Integer $k\n     * @return Integer\n     */\n    function numberOfWays($s, $t, $k) {\n        $mod = 1000000007;\n        if ($s == $t) {\n            if ($k % 2 == 0) {\n                return pow(2, $k - 1) % $mod;\n            } else {\n                return ((strlen($s) - 1) * pow(2, $k - 1)) % $mod;\n            }\n        } else {\n            if ($k == 1) return 0;\n            if ($s == strrev($t) && $k % 2 == 1) return 0;\n            return (2 * pow(2, $k - 2)) % $mod;\n        }\n    }\n}"
}