{
    "status_code": 11,
    "lang": "csharp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 192456000,
    "question_id": "3024",
    "elapsed_time": 4014,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "\"abcd\"\n\"cdab\"\n2",
    "expected_output": "2",
    "task_finish_time": 1708976202000,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 90,
    "total_testcases": 726,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C#",
    "submission_id": "1187061654",
    "input_formatted": "\"abcd\", \"cdab\", 2",
    "input": "\"abcd\"\n\"cdab\"\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "public class Solution {\n    public int NumberOfWays(string s, string t, long k) {\n        const int mod = 1000000007;\n        int n = s.Length;\n        if (s == t && k % 2 == 0) return (n - 1) % mod;\n        if (s == t && k % 2 == 1) return (2 * (n - 1)) % mod;\n        if (k == 1) return 0;\n        \n        int[] prefix = new int[n + 1];\n        for (int i = 0; i < n; i++) {\n            prefix[i + 1] = prefix[i] + (s[i] == t[i] ? 1 : 0);\n        }\n        if (prefix[n] == n) return (n - 1) % mod; // s equals t\n        \n        for (int i = 1; i < n; i++) {\n            if (s.Substring(i) + s.Substring(0, i) == t) {\n                if (k == 2) return 1;\n                if (k % 2 == 0) return 2;\n                return 0;\n            }\n        }\n        return 0;\n    }\n}"
}