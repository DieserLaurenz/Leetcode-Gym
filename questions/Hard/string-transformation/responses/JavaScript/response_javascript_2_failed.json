{
    "status_code": 11,
    "lang": "javascript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 60780000,
    "question_id": "3024",
    "elapsed_time": 4010,
    "compare_result
    "code_output": "0",
    "std_output": "",
    "last_testcase": "\"ababab\"\n\"ababab\"\n1",
    "expected_output": "2",
    "task_finish_time": 1708984752462,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 1,
    "total_testcases": 726,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "JavaScript",
    "submission_id": "1187144957",
    "input_formatted": "\"ababab\", \"ababab\", 1",
    "input": "\"ababab\"\n\"ababab\"\n1",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "/**\n * @param {string} s\n * @param {string} t\n * @param {number} k\n * @return {number}\n */\nvar numberOfWays = function(s, t, k) {\n    const mod = 1000000007;\n    const n = s.length;\n    if ((k < 2 && s !== t) || (k === 2 && s === t)) return 0;\n    \n    let same = 0;\n    for (let i = 0; i < n; ++i) {\n        if (s[i] !== t[i]) break;\n        same++;\n    }\n    \n    if (same === n) {\n        if (k % 2 === 1) return 0;\n        return BigInt(n - 1) * BigInt(2) % BigInt(mod);\n    }\n    \n    let ways = BigInt(1);\n    for (let i = 1; i <= k - 2; ++i) {\n        ways = ways * BigInt(n - 1) % BigInt(mod);\n    }\n    \n    return Number(ways * BigInt(2) % BigInt(mod));\n};"
}