{
    "status_code": 11,
    "lang": "rust",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 3784000,
    "question_id": "3024",
    "elapsed_time": 22,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "\"abcd\"\n\"cdab\"\n2",
    "expected_output": "2",
    "task_finish_time": 1708986185376,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 49,
    "total_testcases": 726,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Rust",
    "submission_id": "1187156403",
    "input_formatted": "\"abcd\", \"cdab\", 2",
    "input": "\"abcd\"\n\"cdab\"\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "impl Solution {\n    pub fn number_of_ways(s: String, t: String, k: i64) -> i32 {\n        const MOD: i64 = 1_000_000_007;\n        let n = s.len() as i64;\n        if s == t {\n            if k == 1 {\n                return 0;\n            } else if k % 2 == 0 {\n                return (((n - 1) * (k - 1) % MOD) + 2) as i32;\n            } else {\n                return 2;\n            }\n        } else {\n            if k == 1 {\n                return 0;\n            } else if k == 2 {\n                let mut res = 0;\n                for i in 1..s.len() {\n                    if &s[i..] == &t[..t.len()-i] && &s[..i] == &t[t.len()-i..] {\n                        res += 1;\n                    }\n                }\n                return res;\n            } else {\n                if k % 2 == 0 {\n                    return 2;\n                } else {\n                    let mut res = 0;\n                    for i in 1..s.len() {\n                        if &s[i..] == &t[..t.len()-i] && &s[..i] == &t[t.len()-i..] {\n                            res += 1;\n                        }\n                    }\n                    if res > 0 {\n                        return (((n - 1) * (k - 1) % MOD) + 2) as i32;\n                    } else {\n                        return 0;\n                    }\n                }\n            }\n        }\n    }\n}"
}