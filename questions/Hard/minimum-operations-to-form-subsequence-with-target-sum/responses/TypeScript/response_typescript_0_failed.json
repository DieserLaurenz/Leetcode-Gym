{
    "status_code": 11,
    "lang": "typescript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 52804000,
    "question_id": "3025",
    "elapsed_time": 107,
    "compare_result
    "code_output": "4",
    "std_output": "",
    "last_testcase": "[1,2,8]\n7",
    "expected_output": "1",
    "task_finish_time": 1708682585730,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 295,
    "total_testcases": 754,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "TypeScript",
    "submission_id": "1183876049",
    "input_formatted": "[1,2,8], 7",
    "input": "[1,2,8]\n7",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "function minOperations(nums: number[], target: number): number {\n    let sum = nums.reduce((a, b) => a + b, 0);\n    if (sum < target) return -1;\n    let operations = 0;\n    let freq = Array(31).fill(0);\n    for (let num of nums) {\n        freq[Math.log2(num)]++;\n    }\n    for (let i = 30; i >= 0; i--) {\n        if (target >= (1 << i)) {\n            let needed = Math.min(freq[i], target >> i);\n            target -= needed << i;\n            freq[i] -= needed;\n        }\n        if (i > 0) {\n            freq[i - 1] += freq[i] * 2;\n            operations += freq[i];\n        }\n    }\n    return target === 0 ? operations : -1;\n};"
}