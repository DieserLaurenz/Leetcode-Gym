{
    "status_code": 11,
    "lang": "python3",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 16784000,
    "question_id": "3025",
    "elapsed_time": 230,
    "compare_result
    "code_output": "-1",
    "std_output": "",
    "last_testcase": "[1,2,8]\n7",
    "expected_output": "1",
    "task_finish_time": 1708911850687,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 5,
    "total_testcases": 754,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python3",
    "submission_id": "1186272327",
    "input_formatted": "[1,2,8], 7",
    "input": "[1,2,8]\n7",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "from typing import List\nfrom collections import Counter\n\nclass Solution:\n    def minOperations(self, nums: List[int], target: int) -> int:\n        freq = Counter(nums)\n        ops = 0\n        \n        # Try to make up the target using available numbers\n        for power in range(30, -1, -1):\n            if target == 0:\n                break\n            value = 1 << power\n            while value > 1 and target >= value and freq[value]:\n                target -= value\n                freq[value] -= 1\n                freq[value // 2] += 2\n                ops += 1\n        \n        return ops if target == 0 else -1"
}