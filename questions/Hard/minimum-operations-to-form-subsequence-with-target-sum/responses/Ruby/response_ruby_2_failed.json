{
    "status_code": 11,
    "lang": "ruby",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 212632000,
    "question_id": "3025",
    "elapsed_time": 191,
    "compare_result
    "code_output": "16",
    "std_output": "",
    "last_testcase": "[1,2,8]\n7",
    "expected_output": "1",
    "task_finish_time": 1708683409979,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 4,
    "total_testcases": 754,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Ruby",
    "submission_id": "1183884395",
    "input_formatted": "[1,2,8], 7",
    "input": "[1,2,8]\n7",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "# @param {Integer[]} nums\n# @param {Integer} target\n# @return {Integer}\ndef min_operations(nums, target)\n  nums.sort!.reverse!\n  ops = 0\n  sum = 0\n  nums.each { |num| sum += num }\n\n  return -1 if sum < target\n\n  freq = Hash.new(0)\n  nums.each { |num| freq[num] += 1 }\n\n  (0..30).reverse_each do |i|\n    power = 1 << i\n    while target >= power && freq[power] > 0\n      target -= power\n      freq[power] -= 1\n    end\n    if target > 0 && freq[power] == 0\n      freq[power / 2] += 2\n      ops += 1\n    end\n  end\n\n  target == 0 ? ops : -1\nend"
}