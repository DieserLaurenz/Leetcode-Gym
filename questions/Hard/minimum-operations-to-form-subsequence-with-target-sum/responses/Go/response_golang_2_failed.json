{
    "status_code": 11,
    "lang": "golang",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 4404000,
    "question_id": "3025",
    "elapsed_time": 17,
    "compare_result
    "code_output": "3",
    "std_output": "",
    "last_testcase": "[1,2,8]\n7",
    "expected_output": "1",
    "task_finish_time": 1708683293126,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 37,
    "total_testcases": 754,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Go",
    "submission_id": "1183883211",
    "input_formatted": "[1,2,8], 7",
    "input": "[1,2,8]\n7",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "func minOperations(nums []int, target int) int {\n    freq := make(map[int]int)\n    for _, num := range nums {\n        freq[num]++\n    }\n\n    var ops int\n    for target > 0 {\n        if target%2 == 1 {\n            if freq[1] > 0 {\n                freq[1]--\n            } else {\n                return -1\n            }\n        } else {\n            if freq[target] > 0 {\n                return ops\n            }\n        }\n        target /= 2\n        ops++\n        nextFreq := make(map[int]int)\n        for k, v := range freq {\n            if k == 1 {\n                nextFreq[1] += v\n            } else {\n                nextFreq[k/2] += v * 2\n            }\n        }\n        freq = nextFreq\n    }\n    return ops\n}"
}