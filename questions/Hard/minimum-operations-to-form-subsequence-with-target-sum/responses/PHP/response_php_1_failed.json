{
    "status_code": 11,
    "lang": "php",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 21568000,
    "question_id": "3025",
    "elapsed_time": 5226,
    "compare_result
    "code_output": "8",
    "std_output": "",
    "last_testcase": "[1,2,8]\n7",
    "expected_output": "1",
    "task_finish_time": 1708682747701,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 291,
    "total_testcases": 754,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "PHP",
    "submission_id": "1183877652",
    "input_formatted": "[1,2,8], 7",
    "input": "[1,2,8]\n7",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @param Integer $target\n     * @return Integer\n     */\n    function minOperations($nums, $target) {\n        $ops = 0;\n        $sum = array_sum($nums);\n        if ($sum < $target) return -1;\n        if ($sum == $target) return 0;\n\n        rsort($nums); // Sort in descending order for greedy removal\n        while ($sum > $target) {\n            $found = false;\n            for ($i = 0; $i < count($nums); $i++) {\n                if ($nums[$i] > 1 && $sum - $nums[$i] + ($nums[$i] / 2) * 2 >= $target) {\n                    $sum = $sum - $nums[$i] + ($nums[$i] / 2) * 2;\n                    $ops++;\n                    array_push($nums, $nums[$i] / 2, $nums[$i] / 2);\n                    unset($nums[$i]);\n                    $nums = array_values($nums); // Re-index the array\n                    $found = true;\n                    break;\n                }\n            }\n            if (!$found) break; // If no valid operation found, break the loop\n        }\n\n        return $sum >= $target ? $ops : -1;\n    }\n}"
}