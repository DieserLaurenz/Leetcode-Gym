{
    "status_code": 11,
    "lang": "java",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 74792000,
    "question_id": "2839",
    "elapsed_time": 4013,
    "compare_result
    "code_output": "[6,7,7]",
    "std_output": "",
    "last_testcase": "[4,3,1,2]\n[2,4,9,5]\n[[4,1],[1,3],[2,5]]",
    "expected_output": "[6,10,7]",
    "task_finish_time": 1708639178821,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 787,
    "total_testcases": 1414,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Java",
    "submission_id": "1183459285",
    "input_formatted": "[4,3,1,2], [2,4,9,5], [[4,1],[1,3],[2,5]]",
    "input": "[4,3,1,2]\n[2,4,9,5]\n[[4,1],[1,3],[2,5]]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    public int[] maximumSumQueries(int[] nums1, int[] nums2, int[][] queries) {\n        int n = nums1.length;\n        int[] answer = new int[queries.length];\n        int[][] pairs = new int[n][2];\n\n        for (int i = 0; i < n; i++) {\n            pairs[i] = new int[]{nums1[i], nums2[i]};\n        }\n\n        Arrays.sort(pairs, (a, b) -> a[0] == b[0] ? Integer.compare(b[1], a[1]) : Integer.compare(b[0], a[0]));\n\n        for (int i = 0; i < queries.length; i++) {\n            int xi = queries[i][0];\n            int yi = queries[i][1];\n            int maxSum = -1;\n            for (int[] pair : pairs) {\n                if (pair[0] >= xi && pair[1] >= yi) {\n                    maxSum = Math.max(maxSum, pair[0] + pair[1]);\n                    break; // Found the max sum for this query, break early\n                }\n            }\n            answer[i] = maxSum;\n        }\n\n        return answer;\n    }\n}"
}