{
    "status_code": 11,
    "lang": "python",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 68216000,
    "question_id": "2839",
    "elapsed_time": 1538,
    "compare_result
    "code_output": "[10,10,10]",
    "std_output": "",
    "last_testcase": "[4,3,1,2]\n[2,4,9,5]\n[[4,1],[1,3],[2,5]]",
    "expected_output": "[6,10,7]",
    "task_finish_time": 1708902641422,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 314,
    "total_testcases": 1414,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python",
    "submission_id": "1186198725",
    "input_formatted": "[4,3,1,2], [2,4,9,5], [[4,1],[1,3],[2,5]]",
    "input": "[4,3,1,2]\n[2,4,9,5]\n[[4,1],[1,3],[2,5]]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution(object):\n    def maximumSumQueries(self, nums1, nums2, queries):\n        \"\"\"\n        :type nums1: List[int]\n        :type nums2: List[int]\n        :type queries: List[List[int]]\n        :rtype: List[int]\n        \"\"\"\n        combined = sorted(zip(nums1, nums2), key=lambda x: (x[0], x[1]))\n        max_sums = [0] * len(combined)\n        max_sum = 0\n        for i, (n1, n2) in enumerate(combined):\n            max_sum = max(max_sum, n1 + n2)\n            max_sums[i] = max_sum\n\n        result = []\n        for x, y in queries:\n            left, right = 0, len(combined) - 1\n            max_val = -1\n            while left <= right:\n                mid = (left + right) // 2\n                if combined[mid][0] >= x and combined[mid][1] >= y:\n                    max_val = max_sums[mid]\n                    right = mid - 1\n                else:\n                    left = mid + 1\n            result.append(max_val)\n        return result"
}