{
    "status_code": 11,
    "lang": "dart",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 213120000,
    "question_id": "2839",
    "elapsed_time": 711,
    "compare_result
    "code_output": "[6,10,-1]",
    "std_output": "",
    "last_testcase": "[4,3,1,2]\n[2,4,9,5]\n[[4,1],[1,3],[2,5]]",
    "expected_output": "[6,10,7]",
    "task_finish_time": 1708640226690,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 235,
    "total_testcases": 1414,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Dart",
    "submission_id": "1183468083",
    "input_formatted": "[4,3,1,2], [2,4,9,5], [[4,1],[1,3],[2,5]]",
    "input": "[4,3,1,2]\n[2,4,9,5]\n[[4,1],[1,3],[2,5]]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n  List<int> maximumSumQueries(List<int> nums1, List<int> nums2, List<List<int>> queries) {\n    List<int> sums = List<int>.generate(nums1.length, (i) => nums1[i] + nums2[i]);\n    List<int> sortedIndices = List<int>.generate(nums1.length, (i) => i)..sort((a, b) => sums[a].compareTo(sums[b]));\n    List<int> maxSums = List<int>.filled(queries.length, -1);\n\n    for (int i = 0; i < queries.length; i++) {\n      int xi = queries[i][0];\n      int yi = queries[i][1];\n      int low = 0, high = nums1.length - 1, bestIdx = -1;\n\n      while (low <= high) {\n        int mid = low + (high - low) ~/ 2;\n        if (nums1[sortedIndices[mid]] >= xi && nums2[sortedIndices[mid]] >= yi) {\n          bestIdx = sortedIndices[mid];\n          low = mid + 1;\n        } else {\n          high = mid - 1;\n        }\n      }\n\n      if (bestIdx != -1) {\n        maxSums[i] = nums1[bestIdx] + nums2[bestIdx];\n      }\n    }\n\n    return maxSums;\n  }\n}"
}