{
    "status_code": 11,
    "lang": "erlang",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 156352000,
    "question_id": "2839",
    "elapsed_time": 5098,
    "compare_result
    "code_output": "[10,10,10]",
    "std_output": "",
    "last_testcase": "[4,3,1,2]\n[2,4,9,5]\n[[4,1],[1,3],[2,5]]",
    "expected_output": "[6,10,7]",
    "task_finish_time": 1708649763728,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 279,
    "total_testcases": 1414,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Erlang",
    "submission_id": "1183538706",
    "input_formatted": "[4,3,1,2], [2,4,9,5], [[4,1],[1,3],[2,5]]",
    "input": "[4,3,1,2]\n[2,4,9,5]\n[[4,1],[1,3],[2,5]]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "-spec maximum_sum_queries(Nums1 :: [integer()], Nums2 :: [integer()], Queries :: [[integer()]]) -> [integer()].\nmaximum_sum_queries(Nums1, Nums2, Queries) ->\n    MaxSums = lists:map(fun({A, B}) -> A + B end, lists:zip(Nums1, Nums2)),\n    SortedSums = lists:zip(MaxSums, lists:seq(1, length(Nums1))),\n    SortedSumsSorted = lists:sort(fun({Sum1, _}, {Sum2, _}) -> Sum1 > Sum2 end, SortedSums),\n    lists:map(fun([X, Y]) ->\n        Answer = lists:dropwhile(fun({Sum, Idx}) ->\n            not (Nums1 -- [Nums1 -- [lists:nth(Idx, Nums1)]] >= X andalso Nums2 -- [Nums2 -- [lists:nth(Idx, Nums2)]] >= Y)\n        end, SortedSumsSorted),\n        case Answer of\n            [] -> -1;\n            [{MaxSum, _} | _] -> MaxSum\n        end\n    end, Queries)."
}