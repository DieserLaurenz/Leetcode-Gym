{
    "status_code": 11,
    "lang": "cpp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 143196000,
    "question_id": "2839",
    "elapsed_time": 4016,
    "compare_result
    "code_output": "[10,10,10]",
    "std_output": "",
    "last_testcase": "[4,3,1,2]\n[2,4,9,5]\n[[4,1],[1,3],[2,5]]",
    "expected_output": "[6,10,7]",
    "task_finish_time": 1708639014784,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 445,
    "total_testcases": 1414,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C++",
    "submission_id": "1183457849",
    "input_formatted": "[4,3,1,2], [2,4,9,5], [[4,1],[1,3],[2,5]]",
    "input": "[4,3,1,2]\n[2,4,9,5]\n[[4,1],[1,3],[2,5]]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\nclass Solution {\npublic:\n    vector<int> maximumSumQueries(vector<int>& nums1, vector<int>& nums2, vector<vector<int>>& queries) {\n        int n = nums1.size();\n        vector<int> ans(queries.size());\n        vector<pair<int, int>> elements(n);\n\n        for (int i = 0; i < n; ++i) {\n            elements[i] = {max(nums1[i], nums2[i]), nums1[i] + nums2[i]}; // Pair of max value and sum\n        }\n\n        sort(elements.begin(), elements.end()); // Sort based on max value\n\n        for (int i = 0; i < queries.size(); ++i) {\n            int xi = queries[i][0], yi = queries[i][1], maxSum = -1;\n            int requiredMax = max(xi, yi);\n\n            // Binary search to find the first element that satisfies the condition\n            int low = 0, high = n - 1, mid;\n            while (low <= high) {\n                mid = low + (high - low) / 2;\n                if (elements[mid].first >= requiredMax) {\n                    maxSum = max(maxSum, elements[mid].second);\n                    high = mid - 1; // Try to find a better solution on the left\n                } else {\n                    low = mid + 1;\n                }\n            }\n\n            // Linear search for elements that satisfy the condition\n            for (int j = low; j < n; ++j) {\n                if (elements[j].first >= requiredMax) {\n                    maxSum = max(maxSum, elements[j].second);\n                }\n            }\n\n            ans[i] = maxSum;\n        }\n\n        return ans;\n    }\n};"
}