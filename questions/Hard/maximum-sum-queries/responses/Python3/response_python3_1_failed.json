{
    "status_code": 11,
    "lang": "python3",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 69576000,
    "question_id": "2839",
    "elapsed_time": 1278,
    "compare_result
    "code_output": "[10,10,10]",
    "std_output": "",
    "last_testcase": "[4,3,1,2]\n[2,4,9,5]\n[[4,1],[1,3],[2,5]]",
    "expected_output": "[6,10,7]",
    "task_finish_time": 1708902779552,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 99,
    "total_testcases": 1414,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python3",
    "submission_id": "1186199771",
    "input_formatted": "[4,3,1,2], [2,4,9,5], [[4,1],[1,3],[2,5]]",
    "input": "[4,3,1,2]\n[2,4,9,5]\n[[4,1],[1,3],[2,5]]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "from typing import List\nfrom bisect import bisect_left\n\nclass Solution:\n    def maximumSumQueries(self, nums1: List[int], nums2: List[int], queries: List[List[int]]) -> List[int]:\n        # Pair nums1 and nums2 values and sort the pair\n        pairs = sorted((a, b) for a, b in zip(nums1, nums2))\n        \n        # Prepare prefix maximum of sums for binary search\n        prefix_max = [0]\n        for a, b in pairs:\n            prefix_max.append(max(prefix_max[-1], a + b))\n        \n        result = []\n        for x, y in queries:\n            # Find the position where both conditions are satisfied\n            idx = bisect_left(pairs, (x, y))\n            if idx == len(pairs):\n                result.append(-1)\n            else:\n                result.append(prefix_max[idx + 1])\n        return result"
}