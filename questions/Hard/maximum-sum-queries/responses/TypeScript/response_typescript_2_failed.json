{
    "status_code": 11,
    "lang": "typescript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 92868000,
    "question_id": "2839",
    "elapsed_time": 389,
    "compare_result
    "code_output": "[10,10,10]",
    "std_output": "",
    "last_testcase": "[4,3,1,2]\n[2,4,9,5]\n[[4,1],[1,3],[2,5]]",
    "expected_output": "[6,10,7]",
    "task_finish_time": 1708639708218,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 314,
    "total_testcases": 1414,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "TypeScript",
    "submission_id": "1183463637",
    "input_formatted": "[4,3,1,2], [2,4,9,5], [[4,1],[1,3],[2,5]]",
    "input": "[4,3,1,2]\n[2,4,9,5]\n[[4,1],[1,3],[2,5]]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "function maximumSumQueries(nums1: number[], nums2: number[], queries: number[][]): number[] {\n    const zipped = nums1.map((v, i) => [v, nums2[i]]).sort((a, b) => a[0] - b[0] || a[1] - b[1]);\n    const maxSums = new Array(nums1.length).fill(0);\n    maxSums[0] = zipped[0][0] + zipped[0][1];\n    for (let i = 1; i < nums1.length; i++) {\n        maxSums[i] = Math.max(maxSums[i - 1], zipped[i][0] + zipped[i][1]);\n    }\n\n    return queries.map(([xi, yi]) => {\n        let left = 0, right = zipped.length - 1, ans = -1;\n        while (left <= right) {\n            const mid = ((left + right) / 2) | 0;\n            if (zipped[mid][0] >= xi && zipped[mid][1] >= yi) {\n                ans = mid;\n                right = mid - 1;\n            } else {\n                left = mid + 1;\n            }\n        }\n        return ans === -1 ? -1 : maxSums[ans];\n    });\n};"
}