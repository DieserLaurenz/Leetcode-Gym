{
    "status_code": 11,
    "lang": "typescript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 79488000,
    "question_id": "2839",
    "elapsed_time": 4012,
    "compare_result
    "code_output": "[6,7,7]",
    "std_output": "",
    "last_testcase": "[4,3,1,2]\n[2,4,9,5]\n[[4,1],[1,3],[2,5]]",
    "expected_output": "[6,10,7]",
    "task_finish_time": 1708639674783,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 286,
    "total_testcases": 1414,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "TypeScript",
    "submission_id": "1183463349",
    "input_formatted": "[4,3,1,2], [2,4,9,5], [[4,1],[1,3],[2,5]]",
    "input": "[4,3,1,2]\n[2,4,9,5]\n[[4,1],[1,3],[2,5]]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "function maximumSumQueries(nums1: number[], nums2: number[], queries: number[][]): number[] {\n    const sums = nums1.map((num, idx) => num + nums2[idx]);\n    const sortedIndices = Array.from({ length: nums1.length }, (_, idx) => idx).sort((a, b) => sums[a] - sums[b]);\n\n    const result = queries.map(([xi, yi]) => {\n        let maxSum = -1;\n        for (const idx of sortedIndices) {\n            if (nums1[idx] >= xi && nums2[idx] >= yi) {\n                maxSum = sums[idx];\n                break; // Since we're iterating from the largest sum, first valid sum is the max\n            }\n        }\n        return maxSum;\n    });\n\n    return result;\n};"
}