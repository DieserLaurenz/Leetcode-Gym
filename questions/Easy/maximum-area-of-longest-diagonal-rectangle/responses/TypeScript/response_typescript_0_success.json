{
    "status_code": 10,
    "lang": "typescript",
    "run_success": true,
    "status_runtime": "71 ms",
    "memory": 52256000,
    "question_id": "3251",
    "elapsed_time": 87,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706459758900,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 816,
    "total_testcases": 816,
    "runtime_percentile": 36.45829999999999,
    "status_memory": "52.3 MB",
    "memory_percentile": 5.20829999999998,
    "pretty_lang": "TypeScript",
    "submission_id": "1159338721",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "function areaOfMaxDiagonal(dimensions: number[][]): number {\n    let maxDiagonal = 0;\n    let maxArea = 0;\n\n    for (const [length, width] of dimensions) {\n        const diagonal = Math.sqrt(length * length + width * width);\n        const area = length * width;\n        if (diagonal > maxDiagonal || (diagonal === maxDiagonal && area > maxArea)) {\n            maxDiagonal = diagonal;\n            maxArea = area;\n        }\n    }\n\n    return maxArea;\n}"
}