{
    "status_code": 10,
    "lang": "javascript",
    "run_success": true,
    "status_runtime": "70 ms",
    "memory": 50400000,
    "question_id": "3251",
    "elapsed_time": 95,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706459319863,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 816,
    "total_testcases": 816,
    "runtime_percentile": 25.4337,
    "status_memory": "50.4 MB",
    "memory_percentile": 11.94569999999997,
    "pretty_lang": "JavaScript",
    "submission_id": "1159333063",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "/**\n * @param {number[][]} dimensions\n * @return {number}\n */\nvar areaOfMaxDiagonal = function(dimensions) {\n    let maxDiagonal = 0, maxArea = 0;\n    for (let i = 0; i < dimensions.length; i++) {\n        const [length, width] = dimensions[i];\n        const diagonal = Math.sqrt(length * length + width * width);\n        const area = length * width;\n        if (diagonal > maxDiagonal || (diagonal === maxDiagonal && area > maxArea)) {\n            maxDiagonal = diagonal;\n            maxArea = area;\n        }\n    }\n    return maxArea;\n};"
}