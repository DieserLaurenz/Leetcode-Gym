{
    "status_code": 10,
    "lang": "c",
    "run_success": true,
    "status_runtime": "10 ms",
    "memory": 6400000,
    "question_id": "3251",
    "elapsed_time": 23,
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706450008564,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 816,
    "total_testcases": 816,
    "runtime_percentile": 73.793,
    "status_memory": "6.4 MB",
    "memory_percentile": 95.862,
    "pretty_lang": "C",
    "submission_id": "1159222181",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "int areaOfMaxDiagonal(int** dimensions, int dimensionsSize, int* dimensionsColSize) {\n    double maxDiagonal = 0;\n    int maxArea = 0;\n    for (int i = 0; i < dimensionsSize; ++i) {\n        int length = dimensions[i][0];\n        int width = dimensions[i][1];\n        double diagonal = sqrt(length * length + width * width);\n        int area = length * width;\n        if (diagonal > maxDiagonal || (diagonal == maxDiagonal && area > maxArea)) {\n            maxDiagonal = diagonal;\n            maxArea = area;\n        }\n    }\n    return maxArea;\n}"
}