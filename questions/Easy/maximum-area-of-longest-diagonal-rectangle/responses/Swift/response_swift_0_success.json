{
    "status_code": 10,
    "lang": "swift",
    "run_success": true,
    "status_runtime": "53 ms",
    "memory": 15612000,
    "question_id": "3251",
    "elapsed_time": 63,
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706460595473,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 816,
    "total_testcases": 816,
    "runtime_percentile": 35.55559999999998,
    "status_memory": "15.6 MB",
    "memory_percentile": 35.55559999999999,
    "pretty_lang": "Swift",
    "submission_id": "1159350098",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\n    func areaOfMaxDiagonal(_ dimensions: [[Int]]) -> Int {\n        var maxDiagonal = 0.0\n        var maxArea = 0\n        \n        for dimension in dimensions {\n            let length = dimension[0]\n            let width = dimension[1]\n            let diagonal = sqrt(Double(length * length + width * width))\n            let area = length * width\n            \n            // Check if this diagonal is longer than the current max\n            // Or if it's equal to the max, but with a larger area\n            if diagonal > maxDiagonal || (diagonal == maxDiagonal && area > maxArea) {\n                maxDiagonal = diagonal\n                maxArea = area\n            }\n        }\n        \n        return maxArea\n    }\n}"
}