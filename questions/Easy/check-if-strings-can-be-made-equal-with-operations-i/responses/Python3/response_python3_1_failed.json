{
    "status_code": 11,
    "lang": "python3",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 16556000,
    "question_id": "2999",
    "elapsed_time": 173,
    "compare_result
    "code_output": "true",
    "std_output": "",
    "last_testcase": "\"cmpr\"\n\"rmcp\"",
    "expected_output": "false",
    "task_finish_time": 1708694703780,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 952,
    "total_testcases": 1003,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python3",
    "submission_id": "1183990564",
    "input_formatted": "\"cmpr\", \"rmcp\"",
    "input": "\"cmpr\"\n\"rmcp\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution:\n    def canBeEqual(self, s1: str, s2: str) -> bool:\n        if s1 == s2:\n            return True\n        for i in range(2):\n            if s1[i] != s2[i] and s1[i] != s2[i + 2]:\n                return False\n        return sorted(s1) == sorted(s2)"
}