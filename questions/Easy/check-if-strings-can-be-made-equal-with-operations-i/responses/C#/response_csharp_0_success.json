{
    "status_code": 10,
    "lang": "csharp",
    "run_success": true,
    "status_runtime": "56 ms",
    "memory": 44156000,
    "question_id": "2999",
    "elapsed_time": 122,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706097169223,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 1003,
    "total_testcases": 1003,
    "runtime_percentile": 80.9521,
    "status_memory": "44.2 MB",
    "memory_percentile": 9.523100000000014,
    "pretty_lang": "C#",
    "submission_id": "1155496897",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "public class Solution {\n    public bool CanBeEqual(string s1, string s2) {\n        // Check if the characters at even indices are the same (ignoring order)\n        bool evenMatch = (s1[0] == s2[0] || s1[0] == s2[2]) && (s1[2] == s2[0] || s1[2] == s2[2]);\n\n        // Check if the characters at odd indices are the same (ignoring order)\n        bool oddMatch = (s1[1] == s2[1] || s1[1] == s2[3]) && (s1[3] == s2[1] || s1[3] == s2[3]);\n\n        return evenMatch && oddMatch;\n    }\n}"
}