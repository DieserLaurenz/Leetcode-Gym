{
    "status_code": 10,
    "lang": "erlang",
    "run_success": true,
    "status_runtime": "343 ms",
    "memory": 59740000,
    "question_id": "2999",
    "elapsed_time": 1392,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706108513030,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 1003,
    "total_testcases": 1003,
    "runtime_percentile": 100,
    "status_memory": "59.7 MB",
    "memory_percentile": 100,
    "pretty_lang": "Erlang",
    "submission_id": "1155627408",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "-spec can_be_equal(S1 :: unicode:unicode_binary(), S2 :: unicode:unicode_binary()) -> boolean().\ncan_be_equal(S1, S2) ->\n    [C1, C2, C3, C4] = binary_to_list(S1),\n    [D1, D2, D3, D4] = binary_to_list(S2),\n    lists:sort([C1, C3]) == lists:sort([D1, D3]) andalso\n    lists:sort([C2, C4]) == lists:sort([D2, D4])."
}