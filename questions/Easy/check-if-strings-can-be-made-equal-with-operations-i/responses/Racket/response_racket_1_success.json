{
    "status_code": 10,
    "lang": "racket",
    "run_success": true,
    "status_runtime": "188 ms",
    "memory": 100116000,
    "question_id": "2999",
    "elapsed_time": 257,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706108032545,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 1003,
    "total_testcases": 1003,
    "runtime_percentile": 100,
    "status_memory": "100.1 MB",
    "memory_percentile": 100,
    "pretty_lang": "Racket",
    "submission_id": "1155621117",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "(define/contract (can-be-equal s1 s2)\n  (-> string? string? boolean?)\n\n  ;; Check if characters at swappable indices are the same in both strings\n  (and (or (equal? (string-ref s1 0) (string-ref s2 0))\n           (equal? (string-ref s1 0) (string-ref s2 2)))\n       (or (equal? (string-ref s1 2) (string-ref s2 0))\n           (equal? (string-ref s1 2) (string-ref s2 2)))\n       (or (equal? (string-ref s1 1) (string-ref s2 1))\n           (equal? (string-ref s1 1) (string-ref s2 3)))\n       (or (equal? (string-ref s1 3) (string-ref s2 1))\n           (equal? (string-ref s1 3) (string-ref s2 3)))))"
}