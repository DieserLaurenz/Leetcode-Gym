{
    "status_code": 10,
    "lang": "rust",
    "run_success": true,
    "status_runtime": "0 ms",
    "memory": 2056000,
    "question_id": "2999",
    "elapsed_time": 12,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706106890817,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 1003,
    "total_testcases": 1003,
    "runtime_percentile": 100,
    "status_memory": "2.1 MB",
    "memory_percentile": 76.92309999999999,
    "pretty_lang": "Rust",
    "submission_id": "1155606384",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "impl Solution {\n    pub fn can_be_equal(s1: String, s2: String) -> bool {\n        let mut even_count1 = [0; 26];\n        let mut odd_count1 = [0; 26];\n        let mut even_count2 = [0; 26];\n        let mut odd_count2 = [0; 26];\n\n        for (i, (ch1, ch2)) in s1.chars().zip(s2.chars()).enumerate() {\n            let idx1 = (ch1 as usize) - ('a' as usize);\n            let idx2 = (ch2 as usize) - ('a' as usize);\n\n            if i % 2 == 0 {\n                even_count1[idx1] += 1;\n                even_count2[idx2] += 1;\n            } else {\n                odd_count1[idx1] += 1;\n                odd_count2[idx2] += 1;\n            }\n        }\n\n        even_count1 == even_count2 && odd_count1 == odd_count2\n    }\n}"
}