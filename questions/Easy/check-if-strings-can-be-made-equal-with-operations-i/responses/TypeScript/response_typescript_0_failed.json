{
    "status_code": 11,
    "lang": "typescript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 53668000,
    "question_id": "2999",
    "elapsed_time": 134,
    "compare_result
    "code_output": "false",
    "std_output": "",
    "last_testcase": "\"abcd\"\n\"cdab\"",
    "expected_output": "true",
    "task_finish_time": 1706099333119,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 565,
    "total_testcases": 1003,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "TypeScript",
    "submission_id": "1155517831",
    "input_formatted": "\"abcd\", \"cdab\"",
    "input": "\"abcd\"\n\"cdab\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "function canBeEqual(s1: string, s2: string): boolean {\n    // Check if the strings are already equal\n    if (s1 === s2) return true;\n\n    // Perform a swap at indices 0 and 2 in s1\n    let swap1 = s1[0] + s1[2] + s1[1] + s1[3];\n    if (swap1 === s2) return true;\n\n    // Perform a swap at indices 1 and 3 in s1\n    let swap2 = s1[0] + s1[1] + s1[3] + s1[2];\n    if (swap2 === s2) return true;\n\n    // Check after swapping both pairs\n    let swapBoth = s1[0] + s1[3] + s1[1] + s1[2];\n    return swapBoth === s2;\n};"
}