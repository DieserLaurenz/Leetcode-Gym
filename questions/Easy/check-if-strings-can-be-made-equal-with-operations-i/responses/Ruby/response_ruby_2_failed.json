{
    "status_code": 11,
    "lang": "ruby",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 211484000,
    "question_id": "2999",
    "elapsed_time": 150,
    "compare_result
    "code_output": "false",
    "std_output": "",
    "last_testcase": "\"abcd\"\n\"cdab\"",
    "expected_output": "true",
    "task_finish_time": 1706105329630,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 871,
    "total_testcases": 1003,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Ruby",
    "submission_id": "1155585857",
    "input_formatted": "\"abcd\", \"cdab\"",
    "input": "\"abcd\"\n\"cdab\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "# @param {String} s1\n# @param {String} s2\n# @return {Boolean}\ndef can_be_equal(s1, s2)\n    # Check if the strings are already equal\n    return true if s1 == s2\n\n    # Swap characters at indices 0 and 2 in s1\n    swap1 = s1[2] + s1[1] + s1[0] + s1[3]\n    return true if swap1 == s2\n\n    # Swap characters at indices 1 and 3 in s1\n    swap2 = s1[0] + s1[3] + s1[2] + s1[1]\n    return true if swap2 == s2\n\n    # Return false if neither swap results in s2\n    false\nend"
}