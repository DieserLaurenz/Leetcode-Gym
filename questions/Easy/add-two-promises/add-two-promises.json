{
    "acRate": 90.23643677033259,
    "difficulty": "Easy",
    "freqBar": null,
    "questionId": "2859",
    "frontendQuestionId": "2723",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Add Two Promises",
    "titleSlug": "add-two-promises",
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false,
    "codeSnippets": [
        {
            "lang": "JavaScript",
            "langSlug": "javascript",
            "code": "/**\n * @param {Promise} promise1\n * @param {Promise} promise2\n * @return {Promise}\n */\nvar addTwoPromises = async function(promise1, promise2) {\n    \n};\n\n/**\n * addTwoPromises(Promise.resolve(2), Promise.resolve(2))\n *   .then(console.log); // 4\n */"
        },
        {
            "lang": "TypeScript",
            "langSlug": "typescript",
            "code": "type P = Promise<number>\n\nasync function addTwoPromises(promise1: P, promise2: P): P {\n    \n};\n\n/**\n * addTwoPromises(Promise.resolve(2), Promise.resolve(2))\n *   .then(console.log); // 4\n */"
        }
    ],
    "content": "Given two promises promise1 and promise2, return a new promise. promise1 and promise2will both resolve with a number. The returned promise should resolve with the sum of the two numbers.\n\nExample 1:\n\nInput: \npromise1 = new Promise(resolve => setTimeout(() => resolve(2), 20)), \npromise2 = new Promise(resolve => setTimeout(() => resolve(5), 60))\nOutput: 7\nExplanation: The two input promises resolve with the values of 2 and 5 respectively. The returned promise should resolve with a value of 2 + 5 = 7. The time the returned promise resolves is not judged for this problem.\n\nExample 2:\n\nInput: \npromise1 = new Promise(resolve => setTimeout(() => resolve(10), 50)), \npromise2 = new Promise(resolve => setTimeout(() => resolve(-12), 30))\nOutput: -2\nExplanation: The two input promises resolve with the values of 10 and -12 respectively. The returned promise should resolve with a value of 10 + -12 = -2.\n\n\nConstraints:\n\npromise1 and promise2 arepromises that resolvewith a number\n\n"
}