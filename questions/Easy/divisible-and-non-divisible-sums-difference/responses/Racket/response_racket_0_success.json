{
    "status_code": 10,
    "lang": "racket",
    "run_success": true,
    "status_runtime": "179 ms",
    "memory": 100220000,
    "question_id": "3172",
    "elapsed_time": 277,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706197046401,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 737,
    "total_testcases": 737,
    "runtime_percentile": 100,
    "status_memory": "100.2 MB",
    "memory_percentile": 100,
    "pretty_lang": "Racket",
    "submission_id": "1156588522",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "(define/contract (difference-of-sums n m)\n  (-> exact-integer? exact-integer? exact-integer?)\n  (let ([num1 (for/sum ([i (in-range 1 (add1 n))])\n                 (if (not (zero? (modulo i m))) i 0))]\n        [num2 (for/sum ([i (in-range 1 (add1 n))])\n                 (if (zero? (modulo i m)) i 0))])\n    (- num1 num2)))"
}