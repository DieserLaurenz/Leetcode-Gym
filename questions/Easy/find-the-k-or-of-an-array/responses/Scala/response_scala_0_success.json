{
    "status_code": 10,
    "lang": "scala",
    "run_success": true,
    "status_runtime": "559 ms",
    "memory": 56900000,
    "question_id": "3183",
    "elapsed_time": 625,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706286951994,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 951,
    "total_testcases": 951,
    "runtime_percentile": 100,
    "status_memory": "56.9 MB",
    "memory_percentile": 100,
    "pretty_lang": "Scala",
    "submission_id": "1157556459",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "object Solution {\n    def findKOr(nums: Array[Int], k: Int): Int = {\n        var result = 0\n\n        // Iterate through each bit position (0 to 31)\n        for (bit <- 0 to 31) {\n            var count = 0\n\n            // Count how many numbers have this bit set\n            for (num <- nums) {\n                if ((num & (1 << bit)) != 0) {\n                    count += 1\n                }\n            }\n\n            // If at least k numbers have this bit set, include it in the result\n            if (count >= k) {\n                result |= (1 << bit)\n            }\n        }\n\n        result\n    }\n}"
}