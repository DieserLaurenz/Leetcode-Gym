{
    "status_code": 10,
    "lang": "c",
    "run_success": true,
    "status_runtime": "7 ms",
    "memory": 5612000,
    "question_id": "3183",
    "elapsed_time": 19,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706277318418,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 951,
    "total_testcases": 951,
    "runtime_percentile": 58.1396,
    "status_memory": "5.6 MB",
    "memory_percentile": 100,
    "pretty_lang": "C",
    "submission_id": "1157430547",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "int findKOr(int* nums, int numsSize, int k) {\n    int result = 0;\n\n    // Iterate over each bit position\n    for (int bit = 0; bit < 32; ++bit) {\n        int count = 0;\n        unsigned int mask = 1u << bit;  // Use unsigned int for mask\n\n        // Count how many numbers have this bit set\n        for (int i = 0; i < numsSize; ++i) {\n            if ((nums[i] & mask) != 0) {\n                ++count;\n            }\n        }\n\n        // If count is at least k, set this bit in the result\n        if (count >= k) {\n            result |= mask;\n        }\n    }\n\n    return result;\n}"
}