{
    "status_code": 11,
    "lang": "cpp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 10320000,
    "question_id": "2791",
    "elapsed_time": 19,
    "compare_result
    "code_output": "[]",
    "std_output": "",
    "last_testcase": "5\n2",
    "expected_output": "[4,5]",
    "task_finish_time": 1706291810473,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 1,
    "total_testcases": 1277,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C++",
    "submission_id": "1157628741",
    "input_formatted": "5, 2",
    "input": "5\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "#include <vector>\nusing namespace std;\n\nclass Solution {\npublic:\n    vector<int> circularGameLosers(int n, int k) {\n        vector<bool> hasReceivedBall(n, false);  // Track if a friend has received the ball\n        vector<int> losers;\n        int current = 0;  // Starting at the 1st friend\n        int passes = 0;   // Count the number of passes\n\n        while (true) {\n            current = (current + k - 1) % n;  // Calculate next position\n            if (hasReceivedBall[current]) break;  // End game if a friend receives the ball a second time\n            hasReceivedBall[current] = true;\n            passes++;\n        }\n\n        // Identifying the losers (those who never received the ball)\n        for (int i = 0; i < n; ++i) {\n            if (!hasReceivedBall[i]) {\n                losers.push_back(i + 1);  // Friend numbering starts from 1\n            }\n        }\n\n        return losers;\n    }\n};"
}