{
    "status_code": 11,
    "lang": "cpp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 10932000,
    "question_id": "2791",
    "elapsed_time": 19,
    "compare_result
    "code_output": "[1,3,4]",
    "std_output": "",
    "last_testcase": "5\n2",
    "expected_output": "[4,5]",
    "task_finish_time": 1706290607412,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 50,
    "total_testcases": 1277,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C++",
    "submission_id": "1157610523",
    "input_formatted": "5, 2",
    "input": "5\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "#include <vector>\nusing namespace std;\n\nclass Solution {\npublic:\n    vector<int> circularGameLosers(int n, int k) {\n        vector<bool> hasBall(n, false);  // Track if a friend has received the ball\n        vector<int> losers;\n        int current = 0;  // Starting at the 1st friend\n\n        for (int i = 1; i <= n; ++i) {\n            current = (current + (i * k) - 1) % n;  // Calculate next position\n            if (hasBall[current]) break;  // If a friend gets the ball second time, game ends\n            hasBall[current] = true;\n        }\n\n        // Identifying the losers (those who never received the ball)\n        for (int i = 0; i < n; ++i) {\n            if (!hasBall[i]) {\n                losers.push_back(i + 1);  // Friend numbering starts from 1\n            }\n        }\n\n        return losers;\n    }\n};"
}