{
    "status_code": 11,
    "lang": "java",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 44764000,
    "display_runtime": "1",
    "question_id": "2791",
    "elapsed_time": 208,
    "compare_result
    "code_output": "[1,3,4]",
    "std_output": "",
    "last_testcase": "5\n2",
    "expected_output": "[4,5]",
    "task_finish_time": 1706293489678,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 50,
    "total_testcases": 1277,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Java",
    "submission_id": "1157654136",
    "input_formatted": "5, 2",
    "input": "5\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    public int[] circularGameLosers(int n, int k) {\n        boolean[] receivedBall = new boolean[n];\n        int currentFriend = 0; // Starting at friend 1, indexed as 0\n        int turn = 0;\n\n        while (true) {\n            turn++;\n            currentFriend = (currentFriend + (turn * k - 1)) % n;\n            \n            if (receivedBall[currentFriend]) {\n                break; // The game ends when a friend receives the ball for the second time\n            }\n\n            receivedBall[currentFriend] = true;\n        }\n\n        // Counting friends who never received the ball\n        int countLosers = 0;\n        for (boolean hasReceived : receivedBall) {\n            if (!hasReceived) {\n                countLosers++;\n            }\n        }\n\n        // Collecting the losers in an array\n        int[] losers = new int[countLosers];\n        int index = 0;\n        for (int i = 0; i < n; i++) {\n            if (!receivedBall[i]) {\n                losers[index++] = i + 1; // Adjusting for 1-based indexing\n            }\n        }\n\n        return losers;\n    }\n}"
}