{
    "status_code": 11,
    "lang": "php",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 19876000,
    "question_id": "2791",
    "elapsed_time": 110,
    "compare_result": "00110100100010000100000100000010000000100000000100000000010000000000100000000000100000000000010000000000000100000000000000100000000000000010000000000000000100000000000000000100000000000000000010000000000000000000100000000000000000000100000000000000000000010000000000000000000000100000000000000000000000100000000000000000000000010000000000000000000000000100000000000000000000000000100000000000000000000000000010000000000000000000000000000100000000000000000000000000000100000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000000100000000000000000000000000000000010000000000000000000000000000000000100000000000000000000000000000000000100000000000000000000000000000000000010000000000000000000000000000000000000100000000000000000000000000000000000000100000000000000000000000000000000000000010000000000000000000000000000000000000000100000000000000000000000000000000000000000100000000000000000000000000000000000000000010000000000000000000000000000000000000000000100000000000000000000000000000000000000000000100000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000",
    "code_output": "[1,3,4]",
    "std_output": "",
    "last_testcase": "5\n2",
    "expected_output": "[4,5]",
    "task_finish_time": 1706298242132,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 50,
    "total_testcases": 1277,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "PHP",
    "submission_id": "1157713766",
    "input_formatted": "5, 2",
    "input": "5\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n\n    /**\n     * @param Integer $n\n     * @param Integer $k\n     * @return Integer[]\n     */\n    function circularGameLosers($n, $k) {\n        $receivedBall = array_fill(0, $n, false);\n        $current = 0;\n        $losers = [];\n\n        for ($i = 1; $i <= $n; $i++) {\n            $current = ($current + $i * $k - 1) % $n;\n            if ($receivedBall[$current]) break;\n            $receivedBall[$current] = true;\n        }\n\n        for ($j = 0; $j < $n; $j++) {\n            if (!$receivedBall[$j]) {\n                $losers[] = $j + 1;\n            }\n        }\n\n        return $losers;\n    }\n}"
}