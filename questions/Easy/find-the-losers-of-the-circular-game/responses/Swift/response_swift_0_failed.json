{
    "status_code": 11,
    "lang": "swift",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 15788000,
    "question_id": "2791",
    "elapsed_time": 35,
    "compare_result
    "code_output": "[1,3,4]",
    "std_output": "",
    "last_testcase": "5\n2",
    "expected_output": "[4,5]",
    "task_finish_time": 1706471366040,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 50,
    "total_testcases": 1277,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Swift",
    "submission_id": "1159487964",
    "input_formatted": "5, 2",
    "input": "5\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    func circularGameLosers(_ n: Int, _ k: Int) -> [Int] {\n        var hasBall = Array(repeating: false, count: n)\n        var current = 0 // Starting from the first friend\n        var steps = 1\n\n        // Continue until a friend receives the ball for the second time\n        while true {\n            // Calculate next friend to receive the ball\n            current = (current + steps * k - 1) % n\n            if hasBall[current] {\n                // Friend receives the ball for the second time, end loop\n                break\n            }\n            // Mark the friend as having received the ball\n            hasBall[current] = true\n            steps += 1\n        }\n\n        // Collect losers who did not receive the ball\n        var losers = [Int]()\n        for i in 0..<n {\n            if !hasBall[i] {\n                losers.append(i + 1) // Adjusting index to match friend numbering\n            }\n        }\n\n        return losers\n    }\n}"
}