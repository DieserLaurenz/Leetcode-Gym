{
    "status_code": 10,
    "lang": "python",
    "run_success": true,
    "status_runtime": "36 ms",
    "memory": 11616000,
    "question_id": "2791",
    "elapsed_time": 54,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1708704905122,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 1277,
    "total_testcases": 1277,
    "runtime_percentile": 50.0,
    "status_memory": "11.6 MB",
    "memory_percentile": 60.0,
    "pretty_lang": "Python",
    "submission_id": "1184112364",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution(object):\n    def circularGameLosers(self, n, k):\n        \"\"\"\n        :type n: int\n        :type k: int\n        :rtype: List[int]\n        \"\"\"\n        received = set()\n        current = 1\n        step = 0\n        \n        while True:\n            if current in received:\n                break\n            received.add(current)\n            step += 1\n            current = ((current - 1) + step * k) % n + 1\n        \n        return sorted(set(range(1, n + 1)) - received)"
}