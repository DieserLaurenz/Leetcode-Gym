{
    "acRate": 93.28388808490111,
    "difficulty": "Easy",
    "freqBar": null,
    "questionId": "2820",
    "frontendQuestionId": "2703",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Return Length of Arguments Passed",
    "titleSlug": "return-length-of-arguments-passed",
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false,
    "codeSnippets": [
        {
            "lang": "JavaScript",
            "langSlug": "javascript",
            "code": "/**\n * @param {...(null|boolean|number|string|Array|Object)} args\n * @return {number}\n */\nvar argumentsLength = function(...args) {\n    \n};\n\n/**\n * argumentsLength(1, 2, 3); // 3\n */"
        },
        {
            "lang": "TypeScript",
            "langSlug": "typescript",
            "code": "type JSONValue = null | boolean | number | string | JSONValue[] | { [key: string]: JSONValue };\n\nfunction argumentsLength(...args: JSONValue[]): number {\n    \n};\n\n/**\n * argumentsLength(1, 2, 3); // 3\n */"
        }
    ],
    "content": "Write a functionargumentsLength that returns the count of arguments passed to it.\n\nExample 1:\n\nInput: args = [5]\nOutput: 1\nExplanation:\nargumentsLength(5); // 1\n\nOne value was passed to the function so it should return 1.\n\nExample 2:\n\nInput: args = [{}, null, \"3\"]\nOutput: 3\nExplanation: \nargumentsLength({}, null, \"3\"); // 3\n\nThree values were passed to the function so it should return 3.\n\n\nConstraints:\n\nargsis a valid JSON array\n0 <= args.length <= 100\n\n"
}