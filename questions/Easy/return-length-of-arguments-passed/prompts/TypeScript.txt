Solve the following problem in TypeScript. Use the provided template as a starting point.

Template:

type JSONValue = null | boolean | number | string | JSONValue[] | { [key: string]: JSONValue };

function argumentsLength(...args: JSONValue[]): number {
    
};

/**
 * argumentsLength(1, 2, 3); // 3
 */

Problem:

Write a functionargumentsLength that returns the count of arguments passed to it.

Example 1:

Input: args = [5]
Output: 1
Explanation:
argumentsLength(5); // 1

One value was passed to the function so it should return 1.

Example 2:

Input: args = [{}, null, "3"]
Output: 3
Explanation: 
argumentsLength({}, null, "3"); // 3

Three values were passed to the function so it should return 3.


Constraints:

argsis a valid JSON array
0 <= args.length <= 100



