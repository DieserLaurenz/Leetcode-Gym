{
    "status_code": 10,
    "lang": "ruby",
    "run_success": true,
    "status_runtime": "73 ms",
    "memory": 212380000,
    "question_id": "2892",
    "elapsed_time": 255,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706071971665,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 803,
    "total_testcases": 803,
    "runtime_percentile": 57.14289999999999,
    "status_memory": "212.4 MB",
    "memory_percentile": 57.1429,
    "pretty_lang": "Ruby",
    "submission_id": "1155223170",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "# @param {Integer[]} nums\n# @return {Boolean}\ndef is_good(nums)\n  # Find the maximum element in the array which represents 'n'\n  n = nums.max\n\n  # Check if the length of nums is n + 1\n  return false unless nums.length == n + 1\n\n  # Create a hash to count occurrences of each number\n  count = Hash.new(0)\n  nums.each { |num| count[num] += 1 }\n\n  # Check that numbers 1 to n - 1 appear exactly once and n appears exactly twice\n  (1...n).each do |i|\n    return false unless count[i] == 1\n  end\n\n  count[n] == 2\nend"
}