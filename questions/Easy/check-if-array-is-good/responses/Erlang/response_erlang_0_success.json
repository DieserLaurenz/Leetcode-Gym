{
    "status_code": 10,
    "lang": "erlang",
    "run_success": true,
    "status_runtime": "294 ms",
    "memory": 59664000,
    "question_id": "2892",
    "elapsed_time": 1391,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706073891503,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 803,
    "total_testcases": 803,
    "runtime_percentile": 50.0,
    "status_memory": "59.7 MB",
    "memory_percentile": 50.0,
    "pretty_lang": "Erlang",
    "submission_id": "1155246002",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "-spec is_good(Nums :: [integer()]) -> boolean().\nis_good(Nums) ->\n    Max = lists:max(Nums),\n    Counts = lists:foldl(\n        fun(X, Acc) -> maps:update_with(X, fun(Val) -> Val + 1 end, 1, Acc) end,\n        #{}, \n        Nums\n    ),\n    LengthOk = length(Nums) == Max + 1,\n    CountsOk = lists:all(\n        fun(X) -> \n            case maps:find(X, Counts) of\n                {ok, 2} -> X == Max;\n                {ok, 1} -> X < Max;\n                _ -> false\n            end\n        end,\n        lists:seq(1, Max)\n    ),\n    LengthOk andalso CountsOk."
}