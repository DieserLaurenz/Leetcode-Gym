{
    "status_code": 10,
    "lang": "kotlin",
    "run_success": true,
    "status_runtime": "225 ms",
    "memory": 38844000,
    "question_id": "2892",
    "elapsed_time": 535,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706070531130,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 803,
    "total_testcases": 803,
    "runtime_percentile": 14.28579999999999,
    "status_memory": "38.8 MB",
    "memory_percentile": 14.28579999999999,
    "pretty_lang": "Kotlin",
    "submission_id": "1155206141",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\n    fun isGood(nums: IntArray): Boolean {\n        val n = nums.maxOrNull() ?: return false\n        if (nums.size != n + 1) return false\n\n        val frequencyMap = nums.toList().groupingBy { it }.eachCount()\n\n        if (frequencyMap[n] != 2) return false\n        for (i in 1 until n) {\n            if (frequencyMap[i] != 1) return false\n        }\n\n        return true\n    }\n}"
}