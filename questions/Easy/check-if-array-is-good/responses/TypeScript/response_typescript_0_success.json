{
    "status_code": 10,
    "lang": "typescript",
    "run_success": true,
    "status_runtime": "72 ms",
    "memory": 51672000,
    "question_id": "2892",
    "elapsed_time": 87,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706068488495,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 803,
    "total_testcases": 803,
    "runtime_percentile": 22.221900000000026,
    "status_memory": "51.7 MB",
    "memory_percentile": 5.555200000000017,
    "pretty_lang": "TypeScript",
    "submission_id": "1155183644",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "function isGood(nums: number[]): boolean {\n    const maxNum = Math.max(...nums);\n\n    // Check if the length of nums is n + 1\n    if (nums.length !== maxNum + 1) {\n        return false;\n    }\n\n    const countMap: { [key: number]: number } = {};\n\n    for (let num of nums) {\n        countMap[num] = (countMap[num] || 0) + 1;\n    }\n\n    // Check the occurrence of each number\n    for (let i = 1; i <= maxNum; i++) {\n        if (i === maxNum) {\n            // 'n' should appear twice\n            if (countMap[i] !== 2) {\n                return false;\n            }\n        } else {\n            // Other numbers should appear once\n            if (countMap[i] !== 1) {\n                return false;\n            }\n        }\n    }\n\n    return true;\n}"
}