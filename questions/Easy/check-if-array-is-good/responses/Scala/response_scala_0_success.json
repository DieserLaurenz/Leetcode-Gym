{
    "status_code": 10,
    "lang": "scala",
    "run_success": true,
    "status_runtime": "567 ms",
    "memory": 57652000,
    "question_id": "2892",
    "elapsed_time": 888,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706072452233,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 803,
    "total_testcases": 803,
    "runtime_percentile": 100,
    "status_memory": "57.7 MB",
    "memory_percentile": 100,
    "pretty_lang": "Scala",
    "submission_id": "1155228908",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "object Solution {\n    def isGood(nums: Array[Int]): Boolean = {\n        val n = nums.max\n        if (nums.length != n + 1) return false\n\n        val counts = new scala.collection.mutable.HashMap[Int, Int]()\n        nums.foreach(num => counts(num) = counts.getOrElse(num, 0) + 1)\n\n        (1 until n).forall(i => counts.getOrElse(i, 0) == 1) && counts.getOrElse(n, 0) == 2\n    }\n}"
}