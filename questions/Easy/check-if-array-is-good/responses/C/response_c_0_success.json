{
    "status_code": 10,
    "lang": "c",
    "run_success": true,
    "status_runtime": "0 ms",
    "memory": 5752000,
    "question_id": "2892",
    "elapsed_time": 24,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706067051499,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 803,
    "total_testcases": 803,
    "runtime_percentile": 100,
    "status_memory": "5.8 MB",
    "memory_percentile": 100,
    "pretty_lang": "C",
    "submission_id": "1155168846",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "#include <stdbool.h>\n\nbool isGood(int* nums, int numsSize) {\n    int maxElement = 0;\n    int count[201] = {0}; // since 1 <= num[i] <= 200\n\n    // Find the maximum element and count occurrences of each element\n    for (int i = 0; i < numsSize; i++) {\n        maxElement = (nums[i] > maxElement) ? nums[i] : maxElement;\n        count[nums[i]]++;\n    }\n\n    // Check if the array size is appropriate\n    if (numsSize != maxElement + 1) {\n        return false;\n    }\n\n    // Check if each element from 1 to maxElement - 1 appears once, and maxElement appears twice\n    for (int i = 1; i <= maxElement; i++) {\n        if (i < maxElement && count[i] != 1) {\n            return false;\n        }\n        if (i == maxElement && count[i] != 2) {\n            return false;\n        }\n    }\n\n    return true;\n}"
}