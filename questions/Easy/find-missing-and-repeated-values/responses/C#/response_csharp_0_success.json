{
    "status_code": 10,
    "lang": "csharp",
    "run_success": true,
    "status_runtime": "140 ms",
    "memory": 51932000,
    "question_id": "3227",
    "elapsed_time": 290,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706266612200,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 584,
    "total_testcases": 584,
    "runtime_percentile": 82.11640000000001,
    "status_memory": "51.9 MB",
    "memory_percentile": 59.85360000000002,
    "pretty_lang": "C#",
    "submission_id": "1157314838",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "public class Solution {\n    public int[] FindMissingAndRepeatedValues(int[][] grid) {\n        int n = grid.Length;\n        int[] count = new int[n * n + 1];\n        int[] ans = new int[2];\n\n        // Count the frequency of each number in the grid\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < n; j++) {\n                count[grid[i][j]]++;\n            }\n        }\n\n        // Find the repeated and missing numbers\n        for (int i = 1; i <= n * n; i++) {\n            if (count[i] == 2) {\n                ans[0] = i; // Repeated number\n            } else if (count[i] == 0) {\n                ans[1] = i; // Missing number\n            }\n        }\n\n        return ans;\n    }\n}"
}