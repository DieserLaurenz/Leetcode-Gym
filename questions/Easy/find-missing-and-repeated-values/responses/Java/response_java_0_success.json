{
    "status_code": 10,
    "lang": "java",
    "run_success": true,
    "status_runtime": "7 ms",
    "memory": 45448000,
    "display_runtime": "7",
    "question_id": "3227",
    "elapsed_time": 189,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706266430291,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 584,
    "total_testcases": 584,
    "runtime_percentile": 24.102399999999996,
    "status_memory": "45.4 MB",
    "memory_percentile": 15.627899999999963,
    "pretty_lang": "Java",
    "submission_id": "1157312957",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "import java.util.HashMap;\n\nclass Solution {\n    public int[] findMissingAndRepeatedValues(int[][] grid) {\n        HashMap<Integer, Integer> frequencyMap = new HashMap<>();\n        int n = grid.length;\n        int totalNumbers = n * n;\n\n        // Initialize frequency map with zeros\n        for (int i = 1; i <= totalNumbers; i++) {\n            frequencyMap.put(i, 0);\n        }\n\n        // Populate frequency map based on the grid\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < n; j++) {\n                frequencyMap.put(grid[i][j], frequencyMap.get(grid[i][j]) + 1);\n            }\n        }\n\n        int[] ans = new int[2]; // ans[0] is the repeated number, ans[1] is the missing number\n        for (int i = 1; i <= totalNumbers; i++) {\n            if (frequencyMap.get(i) == 2) {\n                ans[0] = i; // Found the repeated number\n            } else if (frequencyMap.get(i) == 0) {\n                ans[1] = i; // Found the missing number\n            }\n        }\n\n        return ans;\n    }\n}"
}