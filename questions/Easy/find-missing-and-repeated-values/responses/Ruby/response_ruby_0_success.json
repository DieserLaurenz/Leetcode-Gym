{
    "status_code": 10,
    "lang": "ruby",
    "run_success": true,
    "status_runtime": "85 ms",
    "memory": 215640000,
    "question_id": "3227",
    "elapsed_time": 244,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706267905600,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 584,
    "total_testcases": 584,
    "runtime_percentile": 81.81799999999998,
    "status_memory": "215.6 MB",
    "memory_percentile": 54.54499999999998,
    "pretty_lang": "Ruby",
    "submission_id": "1157328126",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "# @param {Integer[][]} grid\n# @return {Integer[]}\ndef find_missing_and_repeated_values(grid)\n    n = grid.length\n    count = Hash.new(0)\n\n    # Count the frequency of each number in the grid\n    grid.each do |row|\n        row.each do |num|\n            count[num] += 1\n        end\n    end\n\n    missing = 0\n    repeating = 0\n\n    # Iterate through the expected range to find the missing and repeating numbers\n    (1..(n*n)).each do |i|\n        if count[i] == 2\n            repeating = i\n        elsif count[i] == 0\n            missing = i\n        end\n    end\n\n    [repeating, missing]\nend"
}