{
    "status_code": 11,
    "lang": "python3",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 16900000,
    "question_id": "3227",
    "elapsed_time": 131,
    "compare_result
    "code_output": "[2,6]",
    "std_output": "",
    "last_testcase": "[[1,3],[2,2]]",
    "expected_output": "[2,4]",
    "task_finish_time": 1708704665342,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 584,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python3",
    "submission_id": "1184109198",
    "input_formatted": "[[1,3],[2,2]]",
    "input": "[[1,3],[2,2]]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "from typing import List\n\nclass Solution:\n    def findMissingAndRepeatedValues(self, grid: List[List[int]]) -> List[int]:\n        n = len(grid)\n        total = n**2\n        seen = set()\n        dup = -1\n        for row in grid:\n            for num in row:\n                if num in seen:\n                    dup = num\n                else:\n                    seen.add(num)\n        missing = sum(range(1, total + 1)) - sum(seen) + dup\n        return [dup, missing]"
}