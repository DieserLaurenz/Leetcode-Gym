{
    "status_code": 10,
    "lang": "kotlin",
    "run_success": true,
    "status_runtime": "263 ms",
    "memory": 44700000,
    "question_id": "3227",
    "elapsed_time": 343,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706266985127,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 584,
    "total_testcases": 584,
    "runtime_percentile": 53.02950000000009,
    "status_memory": "44.7 MB",
    "memory_percentile": 45.45410000000005,
    "pretty_lang": "Kotlin",
    "submission_id": "1157318620",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\n    fun findMissingAndRepeatedValues(grid: Array<IntArray>): IntArray {\n        val n = grid.size\n        val count = IntArray(n * n + 1) { 0 }\n\n        // Count the frequency of each number in the grid\n        for (row in grid) {\n            for (value in row) {\n                count[value]++\n            }\n        }\n\n        var repeated = -1\n        var missing = -1\n\n        // Find the repeated and missing numbers\n        for (i in 1..n * n) {\n            if (count[i] == 2) {\n                repeated = i\n            } else if (count[i] == 0) {\n                missing = i\n            }\n        }\n\n        return intArrayOf(repeated, missing)\n    }\n}"
}