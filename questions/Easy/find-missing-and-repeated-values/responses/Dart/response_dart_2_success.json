{
    "status_code": 10,
    "lang": "dart",
    "run_success": true,
    "status_runtime": "380 ms",
    "memory": 149280000,
    "question_id": "3227",
    "elapsed_time": 524,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706267185595,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 584,
    "total_testcases": 584,
    "runtime_percentile": 65.51699999999997,
    "status_memory": "149.3 MB",
    "memory_percentile": 96.5517,
    "pretty_lang": "Dart",
    "submission_id": "1157320756",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\n  List<int> findMissingAndRepeatedValues(List<List<int>> grid) {\n    int n = grid.length;\n    int size = n * n;\n    List<int> frequency = List.filled(size + 1, 0);\n    int repeated = 0;\n    int missing = 0;\n\n    // Count the frequency of each number\n    for (var row in grid) {\n      for (var num in row) {\n        frequency[num]++;\n      }\n    }\n\n    // Find the repeated and missing numbers\n    for (int i = 1; i <= size; i++) {\n      if (frequency[i] == 2) {\n        repeated = i;\n      } else if (frequency[i] == 0) {\n        missing = i;\n      }\n    }\n\n    return [repeated, missing];\n  }\n}"
}