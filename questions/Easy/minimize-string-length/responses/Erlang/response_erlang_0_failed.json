{
    "status_code": 11,
    "lang": "erlang",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 59888000,
    "question_id": "2825",
    "elapsed_time": 1898,
    "compare_result
    "code_output": "4",
    "std_output": "",
    "last_testcase": "\"aaabc\"",
    "expected_output": "3",
    "task_finish_time": 1709027699074,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 2254,
    "total_testcases": 5013,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Erlang",
    "submission_id": "1187590770",
    "input_formatted": "\"aaabc\"",
    "input": "\"aaabc\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "-spec minimized_string_length(S :: unicode:unicode_binary()) -> integer().\nminimized_string_length(S) ->\n    CountMap = lists:foldl(\n        fun(Char, Map) -> maps:update_with(Char, fun(Val) -> Val + 1 end, 1, Map) end,\n        #{}, binary_to_list(S)),\n    lists:sum([if V rem 2 == 0 -> V div 2; true -> (V div 2) + 1 end || {_, V} <- maps:to_list(CountMap)])."
}