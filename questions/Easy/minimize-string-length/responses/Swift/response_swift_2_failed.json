{
    "status_code": 11,
    "lang": "swift",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 16408000,
    "question_id": "2825",
    "elapsed_time": 43,
    "compare_result
    "code_output": "2",
    "std_output": "",
    "last_testcase": "\"aaabc\"",
    "expected_output": "3",
    "task_finish_time": 1709026894402,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 1016,
    "total_testcases": 5013,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Swift",
    "submission_id": "1187581891",
    "input_formatted": "\"aaabc\"",
    "input": "\"aaabc\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    func minimizedStringLength(_ s: String) -> Int {\n        var stack: [Character] = []\n        var lastRemoved = Character(\" \")\n        \n        for char in s {\n            if !stack.isEmpty && stack.last == char && lastRemoved != char {\n                stack.removeLast()\n                lastRemoved = char\n            } else if lastRemoved != char {\n                stack.append(char)\n            }\n        }\n        \n        return stack.count\n    }\n}"
}