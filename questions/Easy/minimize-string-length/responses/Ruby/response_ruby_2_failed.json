{
    "status_code": 11,
    "lang": "ruby",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 211524000,
    "question_id": "2825",
    "elapsed_time": 206,
    "compare_result
    "code_output": "2",
    "std_output": "",
    "last_testcase": "\"cbbd\"",
    "expected_output": "3",
    "task_finish_time": 1709027333568,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 1119,
    "total_testcases": 5013,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Ruby",
    "submission_id": "1187586648",
    "input_formatted": "\"cbbd\"",
    "input": "\"cbbd\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "# @param {String} s\n# @return {Integer}\ndef minimized_string_length(s)\n    stack = []\n    s.each_char do |c|\n        if !stack.empty? && stack.last[0] == c\n            stack.pop\n        else\n            if stack.size > 1 && stack[-2][0] == c\n                stack.pop(2)\n            else\n                stack.push([c, 1])\n            end\n        end\n    end\n    stack.length\nend"
}