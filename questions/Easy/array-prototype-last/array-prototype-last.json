{
    "acRate": 71.82427345279325,
    "difficulty": "Easy",
    "freqBar": null,
    "frontendQuestionId": "2619",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Array Prototype Last",
    "titleSlug": "array-prototype-last",
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false,
    "codeSnippets": [
        {
            "lang": "JavaScript",
            "langSlug": "javascript",
            "code": "/**  * @return {null|boolean|number|string|Array|Object}  */ Array.prototype.last = function() {      };  /**  * const arr = [1, 2, 3];  * arr.last(); // 3  */"
        },
        {
            "lang": "TypeScript",
            "langSlug": "typescript",
            "code": "declare global {     interface Array<T> {         last(): T | -1;     } }  Array.prototype.last = function() {      };  /**  * const arr = [1, 2, 3];  * arr.last(); // 3  */  export {};"
        }
    ],
    "content": "Write code that enhances all arrays such that you can call thearray.last()method on any array and it will return the last element. If there are no elements in the array, it should return-1. You may assume the array is the output ofJSON.parse.  Example 1:  Input: nums = [null, {}, 3] Output: 3 Explanation: Calling nums.last() should return the last element: 3.  Example 2:  Input: nums = [] Output: -1 Explanation: Because there are no elements, return -1.   Constraints:  arr is a valid JSON array 0 <= arr.length <= 1000  "
}