{
    "status_code": 10,
    "lang": "c",
    "run_success": true,
    "status_runtime": "7 ms",
    "memory": 6472000,
    "question_id": "3034",
    "elapsed_time": 63,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706617635918,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 807,
    "total_testcases": 807,
    "runtime_percentile": 88.2353,
    "status_memory": "6.5 MB",
    "memory_percentile": 100,
    "pretty_lang": "C",
    "submission_id": "1161005216",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "int numberOfPoints(int** nums, int numsSize, int* numsColSize) {\n    int coveredPoints[101] = {0}; // Initialize the tracking array.\n    int count = 0;\n\n    // Iterate through the nums array to mark covered points.\n    for(int i = 0; i < numsSize; i++) {\n        for(int point = nums[i][0]; point <= nums[i][1]; point++) {\n            coveredPoints[point] = 1;\n        }\n    }\n\n    // Count the number of covered points.\n    for(int i = 1; i <= 100; i++) {\n        if(coveredPoints[i]) count++;\n    }\n\n    // Return the count.\n    return count;\n}"
}