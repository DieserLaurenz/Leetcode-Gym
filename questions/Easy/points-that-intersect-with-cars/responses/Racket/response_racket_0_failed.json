{
    "status_code": 20,
    "lang": "racket",
    "run_success": false,
    "compile_error": "Line 13: Char 98: read-syntax: missing `)` to close `(` on line 20, found instead `]`",
    "full_compile_error": "Line 13: Char 98: read-syntax: missing `)` to close `(` on line 20, found instead `]`\n  compilation context...:\n   solution.rkt",
    "status_runtime": "N/A",
    "memory": 0,
    "question_id": "3034",
    "task_finish_time": 1706627449962,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": null,
    "total_testcases": null,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Racket",
    "submission_id": "1161128774",
    "status_msg": "Compile Error",
    "state": "SUCCESS",
    "code": "(define/contract (number-of-points nums)\n  (-> (listof (listof exact-integer?)) exact-integer?)\n  (let ([sorted-nums (sort nums < #:key car)])\n    (let loop ([nums sorted-nums] [current nil] [total 0])\n      (cond\n        [(null? nums) \n         (if (null? current) total (+ total (- (cadr current) (car current) 1)))]\n        [else\n         (let ([interval (car nums)])\n           (if (or (null? current) (< (cadr current) (car interval)))\n               (loop (cdr nums) interval \n                     (if (null? current) total (+ total (- (cadr current) (car current) + 1))))\n               (loop (cdr nums) (list (car current) (max (cadr current) (cadr interval))) total))]))))"
}