{
    "status_code": 10,
    "lang": "java",
    "run_success": true,
    "status_runtime": "1 ms",
    "memory": 44096000,
    "display_runtime": "1",
    "question_id": "3034",
    "elapsed_time": 119,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706617545249,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 807,
    "total_testcases": 807,
    "runtime_percentile": 100,
    "status_memory": "44.1 MB",
    "memory_percentile": 70.69779999999999,
    "pretty_lang": "Java",
    "submission_id": "1161004239",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "import java.util.List;\n\nclass Solution {\n    public int numberOfPoints(List<List<Integer>> nums) {\n        boolean[] covered = new boolean[101]; // Since endi can be up to 100\n        int count = 0;\n\n        for (List<Integer> car : nums) {\n            int start = car.get(0);\n            int end = car.get(1);\n            // Mark all points covered by the current car as true\n            for (int i = start; i <= end; i++) {\n                covered[i] = true;\n            }\n        }\n\n        // Count all points that are covered by at least one car\n        for (int i = 1; i <= 100; i++) {\n            if (covered[i]) {\n                count++;\n            }\n        }\n\n        return count;\n    }\n}"
}