{
    "status_code": 10,
    "lang": "kotlin",
    "run_success": true,
    "status_runtime": "231 ms",
    "memory": 43636000,
    "question_id": "3034",
    "elapsed_time": 573,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706627002076,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 807,
    "total_testcases": 807,
    "runtime_percentile": 22.5,
    "status_memory": "43.6 MB",
    "memory_percentile": 12.5,
    "pretty_lang": "Kotlin",
    "submission_id": "1161122616",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\n    fun numberOfPoints(nums: List<List<Int>>): Int {\n        val coveredPoints = BooleanArray(101) // Points from 0 to 100, but 0 is unused.\n        nums.forEach { (start, end) ->\n            for (point in start..end) {\n                coveredPoints[point] = true\n            }\n        }\n        // Count and return the number of true values in coveredPoints.\n        return coveredPoints.count { it }\n    }\n}"
}