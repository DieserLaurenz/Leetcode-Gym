{
    "status_code": 11,
    "lang": "golang",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 3008000,
    "question_id": "3246",
    "elapsed_time": 19,
    "compare_result
    "code_output": "false",
    "std_output": "",
    "last_testcase": "[2,4,8,16]",
    "expected_output": "true",
    "task_finish_time": 1706084208116,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 584,
    "total_testcases": 916,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Go",
    "submission_id": "1155368350",
    "input_formatted": "[2,4,8,16]",
    "input": "[2,4,8,16]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "func hasTrailingZeros(nums []int) bool {\n    // Variables to track if we've seen a number with least significant bit as 0 and 1\n    hasLSBZero := false\n    hasLSBOne := false\n\n    for _, num := range nums {\n        if num%2 == 0 {\n            hasLSBZero = true\n        } else {\n            hasLSBOne = true\n        }\n\n        // If we found numbers with different LSBs, return true\n        if hasLSBZero && hasLSBOne {\n            return true\n        }\n    }\n\n    // If all numbers have the same LSB, return false\n    return false\n}"
}