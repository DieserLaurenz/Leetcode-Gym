{
    "status_code": 10,
    "lang": "java",
    "run_success": true,
    "status_runtime": "1 ms",
    "memory": 43916000,
    "display_runtime": "1",
    "question_id": "3246",
    "elapsed_time": 135,
    "compare_result": "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706076530900,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 916,
    "total_testcases": 916,
    "runtime_percentile": 87.7351,
    "status_memory": "43.9 MB",
    "memory_percentile": 86.33390000000003,
    "pretty_lang": "Java",
    "submission_id": "1155278868",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\n    public boolean hasTrailingZeros(int[] nums) {\n        // Check if there is at least one number with a trailing zero in its binary representation\n        for (int i = 0; i < nums.length; i++) {\n            for (int j = i + 1; j < nums.length; j++) {\n                if (((nums[i] | nums[j]) & 1) == 0) {\n                    return true;  // Found a pair with a trailing zero\n                }\n            }\n        }\n        return false;  // No such pair found\n    }\n}"
}