{
    "status_code": 10,
    "lang": "javascript",
    "run_success": true,
    "status_runtime": "87 ms",
    "memory": 50740000,
    "question_id": "3246",
    "elapsed_time": 114,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706077816384,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 916,
    "total_testcases": 916,
    "runtime_percentile": 45.114299999999986,
    "status_memory": "50.7 MB",
    "memory_percentile": 5.171999999999972,
    "pretty_lang": "JavaScript",
    "submission_id": "1155294909",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "/**\n * @param {number[]} nums\n * @return {boolean}\n */\nvar hasTrailingZeros = function(nums) {\n    // Iterate through all pairs of numbers\n    for (let i = 0; i < nums.length - 1; i++) {\n        for (let j = i + 1; j < nums.length; j++) {\n            // Perform bitwise OR on the pair\n            let orResult = nums[i] | nums[j];\n\n            // Check if the result has a trailing zero\n            if ((orResult & 1) === 0) {\n                return true;\n            }\n        }\n    }\n\n    // If no such pair is found, return false\n    return false;\n};"
}