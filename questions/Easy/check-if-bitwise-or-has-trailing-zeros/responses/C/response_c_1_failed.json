{
    "status_code": 11,
    "lang": "c",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 5716000,
    "question_id": "3246",
    "elapsed_time": 28,
    "compare_result
    "code_output": "true",
    "std_output": "",
    "last_testcase": "[1,2]",
    "expected_output": "false",
    "task_finish_time": 1706077429073,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 885,
    "total_testcases": 916,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C",
    "submission_id": "1155290026",
    "input_formatted": "[1,2]",
    "input": "[1,2]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "#include <stdbool.h>\n\nbool hasTrailingZeros(int* nums, int numsSize) {\n    for (int i = 0; i < numsSize - 1; i++) {\n        for (int j = i + 1; j < numsSize; j++) {\n            if ((nums[i] & nums[j]) == 0) {  // Check if there is any bit position where both numbers have 0\n                return true;\n            }\n        }\n    }\n\n    return false;\n}"
}