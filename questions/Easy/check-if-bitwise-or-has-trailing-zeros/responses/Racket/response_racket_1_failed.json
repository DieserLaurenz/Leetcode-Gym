{
    "status_code": 20,
    "lang": "racket",
    "run_success": false,
    "compile_error": "Line 1: Char 1: read-syntax: expected a `)` to close `(`",
    "full_compile_error": "Line 1: Char 1: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 13\n  compilation context...:\n   solution.rkt",
    "status_runtime": "N/A",
    "memory": 0,
    "question_id": "3246",
    "task_finish_time": 1706091292491,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": null,
    "total_testcases": null,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Racket",
    "submission_id": "1155440484",
    "status_msg": "Compile Error",
    "state": "SUCCESS",
    "code": "(define/contract (has-trailing-zeros nums)\n  (-> (listof exact-integer?) boolean?)\n  (let loop ((remaining nums) (checked '()))\n    (cond\n      [(null? remaining) #f]  ; If we've checked all elements and found no match, return false\n      [else\n       (let* ((current (car remaining))\n              (rest (cdr remaining))\n              (new-checked (cons current checked)))\n         (or (any-pair-has-trailing-zero? current new-checked)\n             (loop rest new-checked)))]))\n\n(define (any-pair-has-trailing-zero? num lst)\n  (cond\n    [(null? lst) #f]\n    [else\n     (let ((bitwise-or (bitwise-ior num (car lst))))\n       (or (even? bitwise-or)\n           (any-pair-has-trailing-zero? num (cdr lst))))]))\n\n; Example usage\n(has-trailing-zeros '(1 2 3 4 5))  ; should return true\n(has-trailing-zeros '(2 4 8 16))   ; should return true\n(has-trailing-zeros '(1 3 5 7 9))  ; should return false"
}