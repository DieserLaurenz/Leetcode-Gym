{
    "acRate": 77.80525502318393,
    "difficulty": "Easy",
    "freqBar": null,
    "questionId": "2864",
    "frontendQuestionId": "2727",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Is Object Empty",
    "titleSlug": "is-object-empty",
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false,
    "codeSnippets": [
        {
            "lang": "JavaScript",
            "langSlug": "javascript",
            "code": "/**\n * @param {Object|Array} obj\n * @return {boolean}\n */\nvar isEmpty = function(obj) {\n    \n};"
        },
        {
            "lang": "TypeScript",
            "langSlug": "typescript",
            "code": "type JSONValue = null | boolean | number | string | JSONValue[] | { [key: string]: JSONValue };\ntype Obj = Record<string, JSONValue> | JSONValue[]\n\nfunction isEmpty(obj: Obj): boolean {\n    \n};"
        }
    ],
    "content": "Given an object or an array, return if it is empty.\n\nAn empty object contains no key-value pairs.\nAn empty array contains no elements.\n\nYou may assume the object or array is the output ofJSON.parse.\n\nExample 1:\n\nInput: obj = {\"x\": 5, \"y\": 42}\nOutput: false\nExplanation: The object has 2 key-value pairs so it is not empty.\n\nExample 2:\n\nInput: obj = {}\nOutput: true\nExplanation: The object doesn't have any key-value pairs so it is empty.\n\nExample 3:\n\nInput: obj = [null, false, 0]\nOutput: false\nExplanation: The array has 3 elements so it is not empty.\n\n\nConstraints:\n\nobj is a valid JSON object or array\n2 <= JSON.stringify(obj).length <= 105\n\n\nCan you solve it in O(1) time?"
}