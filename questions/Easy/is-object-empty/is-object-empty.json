{
    "acRate": 77.74422172970603,
    "difficulty": "Easy",
    "freqBar": null,
    "frontendQuestionId": "2727",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Is Object Empty",
    "titleSlug": "is-object-empty",
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false,
    "codeSnippets": [
        {
            "lang": "JavaScript",
            "langSlug": "javascript",
            "code": "/**  * @param {Object|Array} obj  * @return {boolean}  */ var isEmpty = function(obj) {      };"
        },
        {
            "lang": "TypeScript",
            "langSlug": "typescript",
            "code": "type JSONValue = null | boolean | number | string | JSONValue[] | { [key: string]: JSONValue }; type Obj = Record<string, JSONValue> | JSONValue[]  function isEmpty(obj: Obj): boolean {      };"
        }
    ],
    "content": "Given an object or an array, return if it is empty.  An empty object contains no key-value pairs. An empty array contains no elements.  You may assume the object or array is the output ofJSON.parse.  Example 1:  Input: obj = {\"x\": 5, \"y\": 42} Output: false Explanation: The object has 2 key-value pairs so it is not empty.  Example 2:  Input: obj = {} Output: true Explanation: The object doesn't have any key-value pairs so it is empty.  Example 3:  Input: obj = [null, false, 0] Output: false Explanation: The array has 3 elements so it is not empty.   Constraints:  obj is a valid JSON object or array 2 <= JSON.stringify(obj).length <= 105   Can you solve it in O(1) time?"
}