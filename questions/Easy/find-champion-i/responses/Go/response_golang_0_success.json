{
    "status_code": 10,
    "lang": "golang",
    "run_success": true,
    "status_runtime": "51 ms",
    "memory": 6972000,
    "question_id": "3188",
    "elapsed_time": 66,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706218192317,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 587,
    "total_testcases": 587,
    "runtime_percentile": 64.10260000000001,
    "status_memory": "7 MB",
    "memory_percentile": 89.7436,
    "pretty_lang": "Go",
    "submission_id": "1156858623",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "func findChampion(grid [][]int) int {\n    n := len(grid)\n\n    for i := 0; i < n; i++ {\n        isChampion := true\n\n        for j := 0; j < n; j++ {\n            if i != j && grid[i][j] == 0 {\n                isChampion = false\n                break\n            }\n        }\n\n        if isChampion {\n            return i\n        }\n    }\n\n    // The problem constraints guarantee that a champion exists,\n    // so this return statement will never be reached.\n    return -1\n}"
}