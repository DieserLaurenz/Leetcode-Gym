{
    "status_code": 11,
    "lang": "elixir",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 80588000,
    "question_id": "3188",
    "elapsed_time": 579,
    "compare_result
    "code_output": "\"nil\"",
    "std_output": "",
    "last_testcase": "[[0,1],[0,0]]",
    "expected_output": "0",
    "task_finish_time": 1706222870422,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 587,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Elixir",
    "submission_id": "1156896204",
    "input_formatted": "[[0,1],[0,0]]",
    "input": "[[0,1],[0,0]]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "defmodule Solution do\n  @spec find_champion(grid :: [[integer]]) :: integer\n  def find_champion(grid) do\n    Enum.find_index(grid, fn row ->\n      # Check if the current team is stronger than all other teams\n      Enum.with_index(row)\n      |> Enum.all?(fn {strength, index} -> \n        index == Enum.find_index(row, fn x -> x == 1 end) or strength == 1\n      end)\n    end)\n  end\nend"
}