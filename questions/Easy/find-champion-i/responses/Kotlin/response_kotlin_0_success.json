{
    "status_code": 10,
    "lang": "kotlin",
    "run_success": true,
    "status_runtime": "256 ms",
    "memory": 45460000,
    "question_id": "3188",
    "elapsed_time": 233,
    "compare_result": "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706217113584,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 587,
    "total_testcases": 587,
    "runtime_percentile": 100,
    "status_memory": "45.5 MB",
    "memory_percentile": 100,
    "pretty_lang": "Kotlin",
    "submission_id": "1156849074",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\n    fun findChampion(grid: Array<IntArray>): Int {\n        val n = grid.size\n        for (i in 0 until n) {\n            var isChampion = true\n            for (j in 0 until n) {\n                if (i != j && grid[j][i] == 1) {\n                    // If any team is stronger than team i, then team i cannot be the champion.\n                    isChampion = false\n                    break\n                }\n            }\n            if (isChampion) return i\n        }\n        return -1 // Return -1 if no champion is found, though the problem constraints guarantee a champion.\n    }\n}"
}