{
    "status_code": 10,
    "lang": "racket",
    "run_success": true,
    "status_runtime": "251 ms",
    "memory": 128456000,
    "question_id": "3188",
    "elapsed_time": 356,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706220111935,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 587,
    "total_testcases": 587,
    "runtime_percentile": 100,
    "status_memory": "128.5 MB",
    "memory_percentile": 100,
    "pretty_lang": "Racket",
    "submission_id": "1156875048",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "(define/contract (find-champion grid)\n  (-> (listof (listof exact-integer?)) exact-integer?)\n  (let ([n (length grid)])\n    (define (team-stronger? team1 team2)\n      (= 1 (list-ref (list-ref grid team1) team2)))\n\n    (define (champion? team)\n      (for/and ([other (in-range n)])\n        (or (= team other)\n            (team-stronger? team other))))\n\n    (for/or ([team (in-range n)])\n      (and (champion? team) team))))"
}