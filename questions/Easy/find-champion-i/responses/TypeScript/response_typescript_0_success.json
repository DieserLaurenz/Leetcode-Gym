{
    "status_code": 10,
    "lang": "typescript",
    "run_success": true,
    "status_runtime": "63 ms",
    "memory": 55404000,
    "question_id": "3188",
    "elapsed_time": 96,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706215609990,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 587,
    "total_testcases": 587,
    "runtime_percentile": 93.9394,
    "status_memory": "55.4 MB",
    "memory_percentile": 6.060700000000011,
    "pretty_lang": "TypeScript",
    "submission_id": "1156834896",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "function findChampion(grid: number[][]): number {\n    const n = grid.length;\n\n    // Iterate over each team\n    for (let i = 0; i < n; i++) {\n        let isChampion = true;\n\n        // Check if the current team is stronger than all other teams\n        for (let j = 0; j < n; j++) {\n            if (i !== j && grid[i][j] === 0) {\n                isChampion = false;\n                break;\n            }\n        }\n\n        // If the team is stronger than all others, return it as the champion\n        if (isChampion) {\n            return i;\n        }\n    }\n\n    // If no champion is found (though the problem constraints guarantee one exists)\n    return -1;\n};\n\n// Example usage\nconsole.log(findChampion([[0,1],[0,0]])); // Output: 0\nconsole.log(findChampion([[0,0,1],[1,0,1],[0,0,0]])); // Output: 1"
}