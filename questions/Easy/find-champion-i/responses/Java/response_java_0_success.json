{
    "status_code": 10,
    "lang": "java",
    "run_success": true,
    "status_runtime": "1 ms",
    "memory": 45020000,
    "display_runtime": "1",
    "question_id": "3188",
    "elapsed_time": 210,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706213689780,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 587,
    "total_testcases": 587,
    "runtime_percentile": 92.0655,
    "status_memory": "45 MB",
    "memory_percentile": 50.377799999999986,
    "pretty_lang": "Java",
    "submission_id": "1156815398",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\n    public int findChampion(int[][] grid) {\n        int n = grid.length;\n\n        for (int i = 0; i < n; i++) {\n            boolean isChampion = true;\n\n            for (int j = 0; j < n; j++) {\n                if (i != j && grid[j][i] == 1) {\n                    // If any team is stronger than team i, then team i is not the champion\n                    isChampion = false;\n                    break;\n                }\n            }\n\n            if (isChampion) {\n                // If no team is stronger than team i, then team i is the champion\n                return i;\n            }\n        }\n\n        // This line should theoretically never be reached because the problem\n        // guarantees that there will be a champion.\n        return -1;\n    }\n}"
}