{
    "status_code": 15,
    "lang": "erlang",
    "run_success": false,
    "runtime_error": "Line 4: exception error: badarg",
    "full_runtime_error": "Line 4: exception error: badarg\n[{unicode,characters_to_list,\n          [<<\"alice\">>,1],\n          [{error_info,#{module => erl_stdlib_errors}}]},\n {solution,'-is_acronym/2-fun-0-',2,[{file,\"solution.erl\"},{line,4}]},\n {lists,foldl,3,[{file,\"lists.erl\"},{line,1594}]},\n {solution,is_acronym,2,[{file,\"solution.erl\"},{line,3}]},\n {solution,consume_test_cases,2,[{file,\"solution.erl\"},{line,24}]},\n {solution,driver,0,[{file,\"solution.erl\"},{line,10}]},\n {solution,start,0,[{file,\"solution.erl\"},{line,41}]},\n {init,start_em,1,[]}]",
    "status_runtime": "N/A",
    "memory": 59564000,
    "question_id": "2977",
    "elapsed_time": 1292,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "[\"alice\",\"bob\",\"charlie\"]\n\"abc\"",
    "expected_output": "true",
    "task_finish_time": 1706064534074,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 1519,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Erlang",
    "submission_id": "1155145066",
    "status_msg": "Runtime Error",
    "state": "SUCCESS",
    "code": "-spec is_acronym(Words :: [unicode:unicode_binary()], S :: unicode:unicode_binary()) -> boolean().\nis_acronym(Words, S) ->\n    Acronym = lists:foldl(fun(Word, Acc) -> \n                            [unicode:characters_to_list(Word, 1) | Acc] \n                          end, [], Words),\n    lists:reverse(Acronym) == unicode:characters_to_list(S)."
}