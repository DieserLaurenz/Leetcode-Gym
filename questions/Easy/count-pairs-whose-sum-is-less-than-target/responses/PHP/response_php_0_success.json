{
    "status_code": 10,
    "lang": "php",
    "run_success": true,
    "status_runtime": "11 ms",
    "memory": 19896000,
    "question_id": "2917",
    "elapsed_time": 201,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706126159364,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 707,
    "total_testcases": 707,
    "runtime_percentile": 75.47160000000002,
    "status_memory": "19.9 MB",
    "memory_percentile": 5.660200000000009,
    "pretty_lang": "PHP",
    "submission_id": "1155881631",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @param Integer $target\n     * @return Integer\n     */\n    function countPairs($nums, $target) {\n        $count = 0;\n        $n = count($nums);\n\n        for ($i = 0; $i < $n; $i++) {\n            for ($j = $i + 1; $j < $n; $j++) {\n                if ($nums[$i] + $nums[$j] < $target) {\n                    $count++;\n                }\n            }\n        }\n\n        return $count;\n    }\n}"
}