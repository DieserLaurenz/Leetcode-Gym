{
    "acRate": 84.77072328530615,
    "difficulty": "Easy",
    "freqBar": null,
    "frontendQuestionId": "2652",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Sum Multiples",
    "titleSlug": "sum-multiples",
    "topicTags": [
        {
            "name": "Math",
            "id": "VG9waWNUYWdOb2RlOjg=",
            "slug": "math"
        }
    ],
    "hasSolution": false,
    "hasVideoSolution": false,
    "codeSnippets": [
        {
            "lang": "C++",
            "langSlug": "cpp",
            "code": "class Solution { public:     int sumOfMultiples(int n) {              } };"
        },
        {
            "lang": "Java",
            "langSlug": "java",
            "code": "class Solution {     public int sumOfMultiples(int n) {              } }"
        },
        {
            "lang": "Python",
            "langSlug": "python",
            "code": "class Solution(object):     def sumOfMultiples(self, n):         \"\"\"         :type n: int         :rtype: int         \"\"\"         "
        },
        {
            "lang": "Python3",
            "langSlug": "python3",
            "code": "class Solution:     def sumOfMultiples(self, n: int) -> int:         "
        },
        {
            "lang": "C",
            "langSlug": "c",
            "code": "int sumOfMultiples(int n){  }"
        },
        {
            "lang": "C#",
            "langSlug": "csharp",
            "code": "public class Solution {     public int SumOfMultiples(int n) {              } }"
        },
        {
            "lang": "JavaScript",
            "langSlug": "javascript",
            "code": "/**  * @param {number} n  * @return {number}  */ var sumOfMultiples = function(n) {      };"
        },
        {
            "lang": "TypeScript",
            "langSlug": "typescript",
            "code": "function sumOfMultiples(n: number): number {  };"
        },
        {
            "lang": "PHP",
            "langSlug": "php",
            "code": "class Solution {      /**      * @param Integer $n      * @return Integer      */     function sumOfMultiples($n) {              } }"
        },
        {
            "lang": "Swift",
            "langSlug": "swift",
            "code": "class Solution {     func sumOfMultiples(_ n: Int) -> Int {              } }"
        },
        {
            "lang": "Kotlin",
            "langSlug": "kotlin",
            "code": "class Solution {     fun sumOfMultiples(n: Int): Int {              } }"
        },
        {
            "lang": "Dart",
            "langSlug": "dart",
            "code": "class Solution {   int sumOfMultiples(int n) {    } }"
        },
        {
            "lang": "Go",
            "langSlug": "golang",
            "code": "func sumOfMultiples(n int) int {      }"
        },
        {
            "lang": "Ruby",
            "langSlug": "ruby",
            "code": "# @param {Integer} n # @return {Integer} def sum_of_multiples(n)      end"
        },
        {
            "lang": "Scala",
            "langSlug": "scala",
            "code": "object Solution {     def sumOfMultiples(n: Int): Int = {              } }"
        },
        {
            "lang": "Rust",
            "langSlug": "rust",
            "code": "impl Solution {     pub fn sum_of_multiples(n: i32) -> i32 {              } }"
        },
        {
            "lang": "Racket",
            "langSlug": "racket",
            "code": "(define/contract (sum-of-multiples n)   (-> exact-integer? exact-integer?)    )"
        },
        {
            "lang": "Erlang",
            "langSlug": "erlang",
            "code": "-spec sum_of_multiples(N :: integer()) -> integer(). sum_of_multiples(N) ->   ."
        },
        {
            "lang": "Elixir",
            "langSlug": "elixir",
            "code": "defmodule Solution do   @spec sum_of_multiples(n :: integer) :: integer   def sum_of_multiples(n) do    end end"
        }
    ],
    "content": "Given a positive integer n, find the sum of all integers in the range [1, n] inclusive that are divisible by 3, 5, or 7. Return an integer denoting the sum of all numbers in the given range satisfyingthe constraint.  Example 1:  Input: n = 7 Output: 21 Explanation: Numbers in the range [1, 7] that are divisible by 3, 5, or 7 are 3, 5, 6, 7. The sum of these numbers is 21.  Example 2:  Input: n = 10 Output: 40 Explanation: Numbers in the range [1, 10] that are divisible by 3, 5, or 7 are 3, 5, 6, 7, 9, 10. The sum of these numbers is 40.  Example 3:  Input: n = 9 Output: 30 Explanation: Numbers in the range [1, 9] that are divisible by 3, 5, or 7 are 3, 5, 6, 7, 9. The sum of these numbers is 30.   Constraints:  1 <= n <= 103  "
}