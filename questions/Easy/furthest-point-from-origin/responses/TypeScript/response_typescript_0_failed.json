{
    "status_code": 11,
    "lang": "typescript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 54720000,
    "question_id": "3019",
    "elapsed_time": 126,
    "compare_result
    "code_output": "5",
    "std_output": "",
    "last_testcase": "\"L_RL__R\"",
    "expected_output": "3",
    "task_finish_time": 1706366519480,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 255,
    "total_testcases": 1252,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "TypeScript",
    "submission_id": "1158323696",
    "input_formatted": "\"L_RL__R\"",
    "input": "\"L_RL__R\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "function furthestDistanceFromOrigin(moves: string): number {\n    let leftCount = 0;\n    let rightCount = 0;\n    let underscoreCount = 0;\n\n    // Count the number of 'L', 'R', and '_' in the input string\n    for (const move of moves) {\n        if (move === 'L') {\n            leftCount++;\n        } else if (move === 'R') {\n            rightCount++;\n        } else {\n            underscoreCount++;\n        }\n    }\n\n    // Calculate the maximum possible distance\n    // If there are more 'L's, we add underscores to 'R's to balance or exceed\n    // If there are more 'R's, we do the opposite\n    // If 'L' and 'R' are equal, all underscores can go in one direction\n    const maxDistance = Math.max(leftCount, rightCount) + underscoreCount;\n\n    return maxDistance;\n}"
}