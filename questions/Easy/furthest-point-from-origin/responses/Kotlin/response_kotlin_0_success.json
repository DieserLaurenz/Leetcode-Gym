{
    "status_code": 10,
    "lang": "kotlin",
    "run_success": true,
    "status_runtime": "169 ms",
    "memory": 34852000,
    "question_id": "3019",
    "elapsed_time": 705,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706471524156,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 1252,
    "total_testcases": 1252,
    "runtime_percentile": 57.142700000000005,
    "status_memory": "34.9 MB",
    "memory_percentile": 71.4286,
    "pretty_lang": "Kotlin",
    "submission_id": "1159489654",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\n    fun furthestDistanceFromOrigin(moves: String): Int {\n        var leftMoves = 0\n        var rightMoves = 0\n        var undecidedMoves = 0\n\n        for (move in moves) {\n            when (move) {\n                'L' -> leftMoves++\n                'R' -> rightMoves++\n                '_' -> undecidedMoves++\n            }\n        }\n\n        val diff = Math.abs(leftMoves - rightMoves)\n        return diff + undecidedMoves\n    }\n}"
}