{
    "status_code": 10,
    "lang": "python3",
    "run_success": true,
    "status_runtime": "28 ms",
    "memory": 16532000,
    "question_id": "3019",
    "elapsed_time": 59,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1708713650872,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 1252,
    "total_testcases": 1252,
    "runtime_percentile": 97.1632,
    "status_memory": "16.5 MB",
    "memory_percentile": 74.9747,
    "pretty_lang": "Python3",
    "submission_id": "1184237603",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution:\n    def furthestDistanceFromOrigin(self, moves: str) -> int:\n        l_count, r_count, underscore_count = 0, 0, 0\n        for move in moves:\n            if move == 'L':\n                l_count += 1\n            elif move == 'R':\n                r_count += 1\n            else:\n                underscore_count += 1\n        diff = abs(l_count - r_count)\n        return diff + underscore_count"
}