{
    "status_code": 10,
    "lang": "dart",
    "run_success": true,
    "status_runtime": "406 ms",
    "memory": 147180000,
    "question_id": "3019",
    "elapsed_time": 493,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706367695658,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 1252,
    "total_testcases": 1252,
    "runtime_percentile": 50.0,
    "status_memory": "147.2 MB",
    "memory_percentile": 50.0,
    "pretty_lang": "Dart",
    "submission_id": "1158337344",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\n  int furthestDistanceFromOrigin(String moves) {\n    int netRightMoves = 0; // Net number of moves to the right.\n    int flexibleMoves = 0; // Number of flexible moves ('_').\n\n    // Count net right moves and flexible moves.\n    for (int i = 0; i < moves.length; i++) {\n      if (moves[i] == 'R') {\n        netRightMoves++;\n      } else if (moves[i] == 'L') {\n        netRightMoves--;\n      } else {\n        flexibleMoves++;\n      }\n    }\n\n    // The furthest distance is the absolute value of net right moves plus all flexible moves.\n    return (netRightMoves.abs() + flexibleMoves);\n  }\n}"
}