{
    "status_code": 10,
    "lang": "swift",
    "run_success": true,
    "status_runtime": "9 ms",
    "memory": 15892000,
    "question_id": "3019",
    "elapsed_time": 17,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706367564812,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 1252,
    "total_testcases": 1252,
    "runtime_percentile": 20.0,
    "status_memory": "15.9 MB",
    "memory_percentile": 20.0,
    "pretty_lang": "Swift",
    "submission_id": "1158335831",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\n    func furthestDistanceFromOrigin(_ moves: String) -> Int {\n        var leftMoves = 0\n        var rightMoves = 0\n        var underscoreCount = 0\n\n        // Count the occurrences of each move type\n        for move in moves {\n            switch move {\n            case \"L\":\n                leftMoves += 1\n            case \"R\":\n                rightMoves += 1\n            case \"_\":\n                underscoreCount += 1\n            default:\n                break\n            }\n        }\n\n        // Calculate the initial distance based on L and R moves\n        let initialDistance = abs(rightMoves - leftMoves)\n\n        // The furthest distance can be the sum of the initial distance and all the '_' moves\n        // Since '_' can be used to either extend the current direction further or move back towards the origin\n        // to then move in the opposite direction for a potentially greater distance\n        return initialDistance + underscoreCount\n    }\n}"
}