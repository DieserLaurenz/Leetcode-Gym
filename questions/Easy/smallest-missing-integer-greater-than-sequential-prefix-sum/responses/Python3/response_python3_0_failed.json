{
    "status_code": 11,
    "lang": "python3",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 16528000,
    "question_id": "3236",
    "elapsed_time": 59,
    "compare_result
    "code_output": "7",
    "std_output": "",
    "last_testcase": "[1,2,3,2,5]",
    "expected_output": "6",
    "task_finish_time": 1708725470670,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 103,
    "total_testcases": 616,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python3",
    "submission_id": "1184350850",
    "input_formatted": "[1,2,3,2,5]",
    "input": "[1,2,3,2,5]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution:\n    def missingInteger(self, nums: List[int]) -> int:\n        longest_prefix_sum = nums[0]\n        current_sum = nums[0]\n        for i in range(1, len(nums)):\n            if nums[i] == nums[i - 1] + 1:\n                current_sum += nums[i]\n            else:\n                longest_prefix_sum = max(longest_prefix_sum, current_sum)\n                current_sum = nums[i]\n        longest_prefix_sum = max(longest_prefix_sum, current_sum)\n        \n        x = longest_prefix_sum + 1\n        while x in nums:\n            x += 1\n        return x"
}