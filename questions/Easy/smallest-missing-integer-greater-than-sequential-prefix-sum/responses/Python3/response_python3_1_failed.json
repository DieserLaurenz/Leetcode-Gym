{
    "status_code": 11,
    "lang": "python3",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 16508000,
    "question_id": "3236",
    "elapsed_time": 60,
    "compare_result
    "code_output": "4",
    "std_output": "",
    "last_testcase": "[1,2,3,2,5]",
    "expected_output": "6",
    "task_finish_time": 1708725493140,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 59,
    "total_testcases": 616,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python3",
    "submission_id": "1184351041",
    "input_formatted": "[1,2,3,2,5]",
    "input": "[1,2,3,2,5]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "from typing import List\n\nclass Solution:\n    def missingInteger(self, nums: List[int]) -> int:\n        nums.sort()\n        sum_seq = 0\n        for i in range(len(nums)):\n            if i == 0 or nums[i] == nums[i - 1] + 1:\n                sum_seq += nums[i]\n            else:\n                break\n        x = sum_seq + 1\n        while x in nums:\n            x += 1\n        return x"
}