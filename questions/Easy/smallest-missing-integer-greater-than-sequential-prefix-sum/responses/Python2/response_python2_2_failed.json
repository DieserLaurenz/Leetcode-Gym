{
    "status_code": 11,
    "lang": "python",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 11760000,
    "question_id": "3236",
    "elapsed_time": 37,
    "compare_result": "0000001110000000000000000000011011000000000000000000010000010100000000000000000000000000100100000001000000100000010100000000001000000110000100000000000000000000000000000110100000000000000000000000000000000000001000000100000000000000000000000000000000010000001000010000000000000010000010010000000000000001000010110000110001000000000010000000001011000000100101111001010001010001000000100000001000000100000000010000000000100000101000000000000001000000000000000001000000000000000101100000000000011001010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000",
    "code_output": "4",
    "std_output": "",
    "last_testcase": "[1,2,3,2,5]",
    "expected_output": "6",
    "task_finish_time": 1708725417514,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 71,
    "total_testcases": 616,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python",
    "submission_id": "1184350484",
    "input_formatted": "[1,2,3,2,5]",
    "input": "[1,2,3,2,5]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution(object):\n    def missingInteger(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: int\n        \"\"\"\n        nums.sort()\n        max_sequential = nums[0]\n        for i in range(1, len(nums)):\n            if nums[i] == max_sequential + 1:\n                max_sequential += 1\n            else:\n                break\n        sum_sequential = sum(range(nums[0], max_sequential + 1))\n        for x in range(sum_sequential, 51):\n            if x not in nums:\n                return x\n        return sum_sequential + 1"
}