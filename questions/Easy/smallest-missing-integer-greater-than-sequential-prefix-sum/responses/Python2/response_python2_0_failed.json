{
    "status_code": 11,
    "lang": "python",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 11492000,
    "question_id": "3236",
    "elapsed_time": 56,
    "compare_result
    "code_output": "7",
    "std_output": "",
    "last_testcase": "[1,2,3,2,5]",
    "expected_output": "6",
    "task_finish_time": 1708725351987,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 269,
    "total_testcases": 616,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python",
    "submission_id": "1184350009",
    "input_formatted": "[1,2,3,2,5]",
    "input": "[1,2,3,2,5]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution(object):\n    def missingInteger(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: int\n        \"\"\"\n        longest_prefix_sum = nums[0]\n        current_sum = nums[0]\n        for i in range(1, len(nums)):\n            if nums[i] == nums[i - 1] + 1:\n                current_sum += nums[i]\n            else:\n                break\n        longest_prefix_sum = current_sum\n        missing = longest_prefix_sum + 1\n        while missing in nums:\n            missing += 1\n        return missing"
}