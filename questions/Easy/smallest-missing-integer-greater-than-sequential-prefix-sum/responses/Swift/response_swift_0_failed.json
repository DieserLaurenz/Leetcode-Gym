{
    "status_code": 11,
    "lang": "swift",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 15464000,
    "question_id": "3236",
    "elapsed_time": 22,
    "compare_result
    "code_output": "7",
    "std_output": "",
    "last_testcase": "[1,2,3,2,5]",
    "expected_output": "6",
    "task_finish_time": 1706658340467,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 269,
    "total_testcases": 616,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Swift",
    "submission_id": "1161506620",
    "input_formatted": "[1,2,3,2,5]",
    "input": "[1,2,3,2,5]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    func missingInteger(_ nums: [Int]) -> Int {\n        var longestSeqLength = 1\n        var currentSum = nums[0]\n        \n        for i in 1..<nums.count {\n            if nums[i] == nums[i - 1] + 1 {\n                longestSeqLength += 1\n                currentSum += nums[i]\n            } else {\n                break\n            }\n        }\n        \n        var x = currentSum + 1\n        while nums.contains(x) {\n            x += 1\n        }\n        \n        return x\n    }\n}"
}