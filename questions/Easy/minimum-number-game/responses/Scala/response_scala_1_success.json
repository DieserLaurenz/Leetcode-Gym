{
    "status_code": 10,
    "lang": "scala",
    "run_success": true,
    "status_runtime": "579 ms",
    "memory": 55800000,
    "question_id": "3226",
    "elapsed_time": 953,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706543610204,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 804,
    "total_testcases": 804,
    "runtime_percentile": 56.25,
    "status_memory": "55.8 MB",
    "memory_percentile": 93.75,
    "pretty_lang": "Scala",
    "submission_id": "1160189516",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "object Solution {\n  def numberGame(nums: Array[Int]): Array[Int] = {\n    // Sort the array to simplify element removal\n    val sortedNums = nums.sorted\n    val arr = Array.fill(nums.length)(0)\n    var i = 0 // Index for the sortedNums\n    var j = 0 // Index for the arr\n\n    // Process elements according to game rules\n    while (i < nums.length) {\n      // Bob's turn to remove the second minimum (simulated by taking the last)\n      arr(j) = sortedNums(i + 1)\n      j += 1\n      \n      // Alice's turn to remove the first minimum\n      arr(j) = sortedNums(i)\n      j += 1\n      \n      i += 2 // Move to the next pair\n    }\n    \n    arr\n  }\n  \n  def main(args: Array[String]): Unit = {\n    // Example 1\n    val numsExample1 = Array(5, 4, 2, 3)\n    val resultExample1 = Solution.numberGame(numsExample1)\n    println(resultExample1.mkString(\"[\", \", \", \"]\"))\n\n    // Example 2\n    val numsExample2 = Array(2, 5)\n    val resultExample2 = Solution.numberGame(numsExample2)\n    println(resultExample2.mkString(\"[\", \", \", \"]\"))\n  }\n}"
}