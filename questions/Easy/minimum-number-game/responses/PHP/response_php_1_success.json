{
    "status_code": 10,
    "lang": "php",
    "run_success": true,
    "status_runtime": "19 ms",
    "memory": 19900000,
    "question_id": "3226",
    "elapsed_time": 43,
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706533967635,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 804,
    "total_testcases": 804,
    "runtime_percentile": 34.999799999999965,
    "status_memory": "19.9 MB",
    "memory_percentile": 24.999899999999982,
    "pretty_lang": "PHP",
    "submission_id": "1160072191",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @return Integer[]\n     */\n    function numberGame($nums) {\n        $arr = [];\n        while (!empty($nums)) {\n            sort($nums); // Sort $nums to get the elements in ascending order\n            $alice = array_shift($nums); // Alice removes the minimum element\n            $bob = array_shift($nums); // Bob removes the next minimum element\n\n            // According to the game, Bob's element should be appended first, then Alice's\n            // Since we're directly appending them in order, no need for array_unshift or reverse operations\n            array_push($arr, $bob); // Bob appends his element to $arr\n            array_push($arr, $alice); // Alice appends her element to $arr\n        }\n        return $arr; // Return the final order directly\n    }\n}"
}