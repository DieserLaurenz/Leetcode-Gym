{
    "status_code": 10,
    "lang": "typescript",
    "run_success": true,
    "status_runtime": "66 ms",
    "memory": 52244000,
    "question_id": "3226",
    "elapsed_time": 109,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706533882868,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 804,
    "total_testcases": 804,
    "runtime_percentile": 85.51389999999999,
    "status_memory": "52.2 MB",
    "memory_percentile": 19.62599999999999,
    "pretty_lang": "TypeScript",
    "submission_id": "1160071195",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "function numberGame(nums: number[]): number[] {\n    const arr: number[] = [];\n    nums.sort((a, b) => a - b); // Sort nums in ascending order\n\n    while (nums.length > 0) {\n        // Alice removes the minimum element (first element after sorting)\n        const alicePick = nums.shift()!;\n        // Bob removes the new minimum element (first element after Alice's pick)\n        const bobPick = nums.shift()!;\n\n        // Append picks to arr in the order: Bob's pick, then Alice's pick\n        arr.push(bobPick, alicePick);\n    }\n\n    return arr;\n};"
}