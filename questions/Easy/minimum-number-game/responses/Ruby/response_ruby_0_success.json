{
    "status_code": 10,
    "lang": "ruby",
    "run_success": true,
    "status_runtime": "64 ms",
    "memory": 211940000,
    "question_id": "3226",
    "elapsed_time": 265,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706543513069,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 804,
    "total_testcases": 804,
    "runtime_percentile": 84.0,
    "status_memory": "211.9 MB",
    "memory_percentile": 72.0,
    "pretty_lang": "Ruby",
    "submission_id": "1160188057",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "# @param {Integer[]} nums\n# @return {Integer[]}\ndef number_game(nums)\n    arr = []\n    # Sort the nums array so we can simulate the removal of minimum elements easily\n    nums.sort!\n    while !nums.empty?\n        # Alice removes the first element (minimum)\n        alice_pick = nums.shift\n        # Bob removes the next minimum (which is now the first element)\n        bob_pick = nums.shift\n        # Bob appends his pick first\n        arr << bob_pick\n        # Alice appends her pick\n        arr << alice_pick\n    end\n    arr\nend"
}