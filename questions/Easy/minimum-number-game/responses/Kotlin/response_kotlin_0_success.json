{
    "status_code": 10,
    "lang": "kotlin",
    "run_success": true,
    "status_runtime": "234 ms",
    "memory": 42416000,
    "question_id": "3226",
    "elapsed_time": 255,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706535550103,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 804,
    "total_testcases": 804,
    "runtime_percentile": 82.88289999999994,
    "status_memory": "42.4 MB",
    "memory_percentile": 14.414499999999975,
    "pretty_lang": "Kotlin",
    "submission_id": "1160091322",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\n    fun numberGame(nums: IntArray): IntArray {\n        val sortedNums = nums.sorted()\n        val arr = IntArray(nums.size)\n        for (i in sortedNums.indices step 2) {\n            // Bob's turn first, then Alice's, for the arrangement in arr.\n            arr[i] = sortedNums[i + 1] // Bob takes the higher number of the pair.\n            arr[i + 1] = sortedNums[i] // Alice takes the lower number of the pair.\n        }\n        // Since the game alternates turns between Bob and Alice for removal,\n        // and arr is filled alternately by Bob and Alice with their respective numbers,\n        // the arrangement follows from sorting nums and distributing them in pairs.\n        return arr\n    }\n}"
}