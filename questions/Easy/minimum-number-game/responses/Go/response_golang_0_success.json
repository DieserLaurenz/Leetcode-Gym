{
    "status_code": 10,
    "lang": "golang",
    "run_success": true,
    "status_runtime": "3 ms",
    "memory": 3168000,
    "question_id": "3226",
    "elapsed_time": 16,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706543469617,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 804,
    "total_testcases": 804,
    "runtime_percentile": 78.8195,
    "status_memory": "3.2 MB",
    "memory_percentile": 20.833399999999997,
    "pretty_lang": "Go",
    "submission_id": "1160187397",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "package main\n\nimport (\n \"sort\"\n)\n\nfunc numberGame(nums []int) []int {\n    // Sort nums in ascending order to easily remove the minimum element\n    sort.Ints(nums)\n\n    // Initialize the result array\n    var arr []int\n    // Loop until nums is empty\n    for len(nums) > 0 {\n        // Alice removes the minimum element (first element after sorting)\n        aliceChoice := nums[0]\n        nums = nums[1:] // Update nums by removing the element\n        \n        // Bob does the same\n        bobChoice := nums[0]\n        nums = nums[1:] // Update nums by removing the element\n\n        // First, Bob appends his choice then Alice does\n        arr = append(arr, bobChoice, aliceChoice)\n    }\n    return arr\n}\n\n// You can test the function with the examples given in the problem statement\n// func main() {\n//     example1 := []int{5,4,2,3}\n//     fmt.Println(numberGame(example1)) // Output: [3,2,5,4]\n    \n//     example2 := []int{2,5}\n//     fmt.Println(numberGame(example2)) // Output: [5,2]\n// }"
}