{
    "status_code": 10,
    "lang": "php",
    "run_success": true,
    "status_runtime": "11 ms",
    "memory": 19976000,
    "question_id": "2847",
    "elapsed_time": 148,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706257730433,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 659,
    "total_testcases": 659,
    "runtime_percentile": 60.8695,
    "status_memory": "20 MB",
    "memory_percentile": 17.391299999999966,
    "pretty_lang": "PHP",
    "submission_id": "1157222808",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\n\n    /**\n     * @param String[] $words\n     * @return Integer\n     */\n    function maximumNumberOfStringPairs($words) {\n        $reverseCount = [];\n        $pairCount = 0;\n\n        foreach ($words as $word) {\n            $reversedWord = strrev($word);\n\n            // Check if the reversed word exists in the array\n            if (isset($reverseCount[$reversedWord]) && $reverseCount[$reversedWord] > 0) {\n                // A pair is found\n                $pairCount++;\n                // Decrement the count of the reversed word as it has been paired\n                $reverseCount[$reversedWord]--;\n            } else {\n                // Add or increment the count of the word\n                if (!isset($reverseCount[$word])) {\n                    $reverseCount[$word] = 1;\n                } else {\n                    $reverseCount[$word]++;\n                }\n            }\n        }\n\n        return $pairCount;\n    }\n}"
}