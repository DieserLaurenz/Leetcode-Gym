{
    "status_code": 10,
    "lang": "javascript",
    "run_success": true,
    "status_runtime": "52 ms",
    "memory": 50804000,
    "question_id": "2847",
    "elapsed_time": 109,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706256770752,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 659,
    "total_testcases": 659,
    "runtime_percentile": 97.7808,
    "status_memory": "50.8 MB",
    "memory_percentile": 37.3082,
    "pretty_lang": "JavaScript",
    "submission_id": "1157212535",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "/**\n * @param {string[]} words\n * @return {number}\n */\nvar maximumNumberOfStringPairs = function(words) {\n    let reversedWordsSet = new Set();\n    let pairs = 0;\n\n    for (let word of words) {\n        let reversed = word.split('').reverse().join('');\n        if (reversedWordsSet.has(reversed)) {\n            pairs++;  // Increment the pair count\n            reversedWordsSet.delete(reversed);  // Remove the reversed word to avoid double counting\n        } else {\n            reversedWordsSet.add(word);  // Add the word for future matching\n        }\n    }\n\n    return pairs;\n};\n\n// Example usage\nconsole.log(maximumNumberOfStringPairs([\"cd\",\"ac\",\"dc\",\"ca\",\"zz\"])); // Output: 2\nconsole.log(maximumNumberOfStringPairs([\"ab\",\"ba\",\"cc\"])); // Output: 1\nconsole.log(maximumNumberOfStringPairs([\"aa\",\"ab\"])); // Output: 0"
}