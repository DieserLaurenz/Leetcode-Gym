{
    "status_code": 11,
    "lang": "javascript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 51916000,
    "question_id": "2847",
    "elapsed_time": 107,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "[\"aa\",\"ab\"]",
    "expected_output": "0",
    "task_finish_time": 1706255567951,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 331,
    "total_testcases": 659,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "JavaScript",
    "submission_id": "1157199539",
    "input_formatted": "[\"aa\",\"ab\"]",
    "input": "[\"aa\",\"ab\"]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "/**\n * @param {string[]} words\n * @return {number}\n */\nvar maximumNumberOfStringPairs = function(words) {\n    let wordMap = {};\n    let pairs = 0;\n\n    // Creating a map for each word\n    words.forEach(word => {\n        wordMap[word] = (wordMap[word] || 0) + 1;\n    });\n\n    // Iterating through each word to find its reversed counterpart\n    words.forEach(word => {\n        let reversed = word.split('').reverse().join('');\n        if (wordMap[reversed] && wordMap[word]) {\n            pairs++;\n            // Decrease the count or delete the word from the map\n            wordMap[reversed]--;\n            if (wordMap[reversed] === 0) delete wordMap[reversed];\n\n            wordMap[word]--;\n            if (wordMap[word] === 0) delete wordMap[word];\n        }\n    });\n\n    // Each pair is counted twice, so dividing the count by 2\n    return pairs / 2;\n};\n\n// Example usage\nconsole.log(maximumNumberOfStringPairs([\"cd\",\"ac\",\"dc\",\"ca\",\"zz\"])); // Output: 2\nconsole.log(maximumNumberOfStringPairs([\"ab\",\"ba\",\"cc\"])); // Output: 1\nconsole.log(maximumNumberOfStringPairs([\"aa\",\"ab\"])); // Output: 0"
}