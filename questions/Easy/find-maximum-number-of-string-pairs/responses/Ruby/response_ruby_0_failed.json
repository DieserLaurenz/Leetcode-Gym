{
    "status_code": 11,
    "lang": "ruby",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 211448000,
    "question_id": "2847",
    "elapsed_time": 163,
    "compare_result
    "code_output": "0",
    "std_output": "",
    "last_testcase": "[\"cd\",\"ac\",\"dc\",\"ca\",\"zz\"]",
    "expected_output": "2",
    "task_finish_time": 1706260728744,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 117,
    "total_testcases": 659,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Ruby",
    "submission_id": "1157253815",
    "input_formatted": "[\"cd\",\"ac\",\"dc\",\"ca\",\"zz\"]",
    "input": "[\"cd\",\"ac\",\"dc\",\"ca\",\"zz\"]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "# @param {String[]} words\n# @return {Integer}\ndef maximum_number_of_string_pairs(words)\n    # Create a hash to store the words that can form pairs\n    word_map = {}\n    words.each do |word|\n        reverse_word = word.reverse\n        if word_map[reverse_word]\n            # Increment the count if a pair is found\n            word_map[reverse_word] -= 1\n            word_map[reverse_word] = 0 if word_map[reverse_word] == 0\n        else\n            word_map[word] = 1\n        end\n    end\n\n    # Calculate the total number of pairs\n    pairs = word_map.values.sum / 2\n    pairs\nend"
}