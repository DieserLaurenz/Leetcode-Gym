{
    "status_code": 10,
    "lang": "cpp",
    "run_success": true,
    "status_runtime": "16 ms",
    "memory": 26392000,
    "question_id": "2847",
    "elapsed_time": 38,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706471298147,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 659,
    "total_testcases": 659,
    "runtime_percentile": 15.22440000000001,
    "status_memory": "26.4 MB",
    "memory_percentile": 6.0641000000000105,
    "pretty_lang": "C++",
    "submission_id": "1159487212",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\npublic:\n    int maximumNumberOfStringPairs(vector<string>& words) {\n        unordered_map<string, int> wordMap;\n        int pairs = 0;\n        \n        for (auto& word : words) {\n            string revWord = word;\n            reverse(revWord.begin(), revWord.end());\n            if (wordMap[revWord] > 0) {\n                pairs++;\n                wordMap[revWord]--;\n            } else {\n                wordMap[word]++;\n            }\n        }\n        \n        return pairs;\n    }\n};"
}