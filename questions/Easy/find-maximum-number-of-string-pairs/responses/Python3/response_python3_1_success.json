{
    "status_code": 10,
    "lang": "python3",
    "run_success": true,
    "status_runtime": "45 ms",
    "memory": 16624000,
    "question_id": "2847",
    "elapsed_time": 61,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1708704553483,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 659,
    "total_testcases": 659,
    "runtime_percentile": 82.36759999999998,
    "status_memory": "16.6 MB",
    "memory_percentile": 46.72179999999999,
    "pretty_lang": "Python3",
    "submission_id": "1184107713",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "from typing import List\n\nclass Solution:\n    def maximumNumberOfStringPairs(self, words: List[str]) -> int:\n        pairs = 0\n        word_map = {}\n        for word in words:\n            reversed_word = word[::-1]\n            if reversed_word in word_map and word_map[reversed_word] > 0:\n                pairs += 1\n                word_map[reversed_word] -= 1\n            else:\n                if word not in word_map:\n                    word_map[word] = 1\n                else:\n                    word_map[word] += 1\n        return pairs"
}