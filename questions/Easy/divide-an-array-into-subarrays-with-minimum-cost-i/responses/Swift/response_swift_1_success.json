{
    "status_code": 10,
    "lang": "swift",
    "run_success": true,
    "status_runtime": "27 ms",
    "memory": 15512000,
    "question_id": "3263",
    "elapsed_time": 37,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706179526223,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 988,
    "total_testcases": 988,
    "runtime_percentile": 21.739199999999975,
    "status_memory": "15.5 MB",
    "memory_percentile": 52.173899999999996,
    "pretty_lang": "Swift",
    "submission_id": "1156399357",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\n    func minimumCost(_ nums: [Int]) -> Int {\n        let n = nums.count\n        var minCost = Int.max\n\n        // Try every possible way to divide the array into 3 subarrays\n        for i in 1..<(n - 1) {\n            for j in (i + 1)..<n {\n                let cost = nums[0] + nums[i] + nums[j]\n                minCost = min(minCost, cost)\n            }\n        }\n\n        return minCost\n    }\n}"
}