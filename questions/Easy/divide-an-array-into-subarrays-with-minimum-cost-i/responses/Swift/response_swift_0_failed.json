{
    "status_code": 11,
    "lang": "swift",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 15496000,
    "question_id": "3263",
    "elapsed_time": 42,
    "compare_result
    "code_output": "18",
    "std_output": "",
    "last_testcase": "[1,2,3,12]",
    "expected_output": "6",
    "task_finish_time": 1706179455372,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 127,
    "total_testcases": 988,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Swift",
    "submission_id": "1156398667",
    "input_formatted": "[1,2,3,12]",
    "input": "[1,2,3,12]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    func minimumCost(_ nums: [Int]) -> Int {\n        let n = nums.count\n        var dp = Array(repeating: Array(repeating: Int.max, count: 4), count: n + 1)\n        dp[0][0] = 0\n\n        for i in 1...n {\n            for j in 1...3 {\n                var sum = 0\n                for k in stride(from: i, to: 0, by: -1) {\n                    sum += nums[k - 1]\n                    if dp[k - 1][j - 1] != Int.max {\n                        dp[i][j] = min(dp[i][j], dp[k - 1][j - 1] + sum)\n                    }\n                }\n            }\n        }\n\n        return dp[n][3]\n    }\n}"
}