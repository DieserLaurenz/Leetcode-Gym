{
    "status_code": 15,
    "lang": "erlang",
    "run_success": false,
    "runtime_error": "Line 10: exception error: {badfun,infinity}",
    "full_runtime_error": "Line 10: exception error: {badfun,infinity}\n[{solution,minimum_cost,1,[{file,\"solution.erl\"},{line,10}]},\n {solution,consume_test_cases,2,[{file,\"solution.erl\"},{line,31}]},\n {solution,driver,0,[{file,\"solution.erl\"},{line,19}]},\n {solution,start,0,[{file,\"solution.erl\"},{line,48}]},\n {init,start_em,1,[]},\n {init,do_boot,3,[]}]",
    "status_runtime": "N/A",
    "memory": 59648000,
    "question_id": "3263",
    "elapsed_time": 1321,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "[1,2,3,12]",
    "expected_output": "6",
    "task_finish_time": 1706189753718,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 988,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Erlang",
    "submission_id": "1156498584",
    "status_msg": "Runtime Error",
    "state": "SUCCESS",
    "code": "-spec minimum_cost(Nums :: [integer()]) -> integer().\nminimum_cost(Nums) ->\n    N = length(Nums),\n    MinCost = fun(MinCost, I, J) when I < N, J < N -> \n                  SubArray1 = lists:nth(I, Nums),\n                  SubArray2 = lists:nth(J, Nums),\n                  SubArray3 = lists:nth(N, Nums),\n                  Cost = SubArray1 + SubArray2 + SubArray3,\n                  if I + 1 < J -> MinCost(MinCost, I + 1, J);\n                     J + 1 < N -> MinCost(MinCost, 1, J + 1);\n                     true -> Cost\n                  end;\n              (MinCost, _, _) -> MinCost\n    end,\n    MinCost(infinity, 1, 2)."
}