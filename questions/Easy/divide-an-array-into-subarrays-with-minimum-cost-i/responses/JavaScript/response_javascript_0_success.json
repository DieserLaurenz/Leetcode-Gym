{
    "status_code": 10,
    "lang": "javascript",
    "run_success": true,
    "status_runtime": "76 ms",
    "memory": 53028000,
    "question_id": "3263",
    "elapsed_time": 102,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706178943223,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 988,
    "total_testcases": 988,
    "runtime_percentile": 48.80360000000001,
    "status_memory": "53 MB",
    "memory_percentile": 47.36849999999997,
    "pretty_lang": "JavaScript",
    "submission_id": "1156393688",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "/**\n * @param {number[]} nums\n * @return {number}\n */\nvar minimumCost = function(nums) {\n    let minCost = Infinity;\n\n    // Iterate over possible splits for the first and second subarrays\n    for (let i = 1; i < nums.length - 1; i++) {\n        for (let j = i + 1; j < nums.length; j++) {\n            // Calculate the cost of the current division\n            let cost = nums[0] + nums[i] + nums[j];\n            minCost = Math.min(minCost, cost);\n        }\n    }\n\n    return minCost;\n};"
}