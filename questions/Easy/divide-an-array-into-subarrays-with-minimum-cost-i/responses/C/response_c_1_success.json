{
    "status_code": 10,
    "lang": "c",
    "run_success": true,
    "status_runtime": "9 ms",
    "memory": 5604000,
    "question_id": "3263",
    "elapsed_time": 17,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706178787588,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 988,
    "total_testcases": 988,
    "runtime_percentile": 17.14289999999999,
    "status_memory": "5.6 MB",
    "memory_percentile": 55.714299999999994,
    "pretty_lang": "C",
    "submission_id": "1156392206",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "#include <limits.h>\n\nint minimumCost(int* nums, int numsSize) {\n    int minCost = INT_MAX;\n\n    for (int i = 0; i < numsSize - 2; i++) {\n        for (int j = i + 1; j < numsSize - 1; j++) {\n            int cost = nums[0] + nums[i + 1] + nums[j + 1];\n            if (cost < minCost) {\n                minCost = cost;\n            }\n        }\n    }\n\n    return minCost;\n}"
}