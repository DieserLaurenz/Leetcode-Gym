{
    "status_code": 10,
    "lang": "python",
    "run_success": true,
    "status_runtime": "15 ms",
    "memory": 11672000,
    "question_id": "3242",
    "elapsed_time": 44,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1708694929297,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 623,
    "total_testcases": 623,
    "runtime_percentile": 96.44129999999998,
    "status_memory": "11.7 MB",
    "memory_percentile": 81.1388,
    "pretty_lang": "Python",
    "submission_id": "1183993067",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution(object):\n    def maxFrequencyElements(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: int\n        \"\"\"\n        frequency = {}\n        for num in nums:\n            if num in frequency:\n                frequency[num] += 1\n            else:\n                frequency[num] = 1\n        max_freq = max(frequency.values())\n        return sum(frequency[num] for num in frequency if frequency[num] == max_freq)"
}