{
    "status_code": 10,
    "lang": "c",
    "run_success": true,
    "status_runtime": "0 ms",
    "memory": 5912000,
    "question_id": "3242",
    "elapsed_time": 13,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706122550461,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 623,
    "total_testcases": 623,
    "runtime_percentile": 100,
    "status_memory": "5.9 MB",
    "memory_percentile": 93.80529999999997,
    "pretty_lang": "C",
    "submission_id": "1155837215",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "int maxFrequencyElements(int* nums, int numsSize) {\n    int frequency[101] = {0}; // Initialize frequency array\n    int maxFreq = 0;\n    int count = 0;\n\n    // Counting the frequency of each element\n    for (int i = 0; i < numsSize; i++) {\n        frequency[nums[i]]++;\n        if (frequency[nums[i]] > maxFreq) {\n            maxFreq = frequency[nums[i]];\n        }\n    }\n\n    // Counting how many elements have the maximum frequency\n    for (int i = 0; i < 101; i++) {\n        if (frequency[i] == maxFreq) {\n            count += maxFreq;\n        }\n    }\n\n    return count;\n}"
}