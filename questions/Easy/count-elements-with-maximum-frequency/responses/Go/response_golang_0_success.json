{
    "status_code": 10,
    "lang": "golang",
    "run_success": true,
    "status_runtime": "6 ms",
    "memory": 2556000,
    "question_id": "3242",
    "elapsed_time": 33,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706125009262,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 623,
    "total_testcases": 623,
    "runtime_percentile": 34.5178,
    "status_memory": "2.6 MB",
    "memory_percentile": 60.9137,
    "pretty_lang": "Go",
    "submission_id": "1155868251",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "package main\n\nfunc maxFrequencyElements(nums []int) int {\n    frequency := make(map[int]int)\n    maxFreq := 0\n\n    // Count the frequency of each element\n    for _, num := range nums {\n        frequency[num]++\n        if frequency[num] > maxFreq {\n            maxFreq = frequency[num]\n        }\n    }\n\n    // Count the total number of elements with the maximum frequency\n    totalCount := 0\n    for _, freq := range frequency {\n        if freq == maxFreq {\n            totalCount += maxFreq\n        }\n    }\n\n    return totalCount\n}"
}