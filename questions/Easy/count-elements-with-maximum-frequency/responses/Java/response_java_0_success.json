{
    "status_code": 10,
    "lang": "java",
    "run_success": true,
    "status_runtime": "3 ms",
    "memory": 42608000,
    "display_runtime": "3",
    "question_id": "3242",
    "elapsed_time": 141,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706122072064,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 623,
    "total_testcases": 623,
    "runtime_percentile": 31.232999999999997,
    "status_memory": "42.6 MB",
    "memory_percentile": 14.329399999999996,
    "pretty_lang": "Java",
    "submission_id": "1155830702",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "import java.util.HashMap;\nimport java.util.Map;\n\nclass Solution {\n    public int maxFrequencyElements(int[] nums) {\n        Map<Integer, Integer> frequencyMap = new HashMap<>();\n        int maxFreq = 0;\n\n        // Count the frequency of each element\n        for (int num : nums) {\n            frequencyMap.put(num, frequencyMap.getOrDefault(num, 0) + 1);\n            maxFreq = Math.max(maxFreq, frequencyMap.get(num));\n        }\n\n        int totalMaxFreq = 0;\n\n        // Sum the frequencies of elements with the maximum frequency\n        for (int freq : frequencyMap.values()) {\n            if (freq == maxFreq) {\n                totalMaxFreq += freq;\n            }\n        }\n\n        return totalMaxFreq;\n    }\n}"
}