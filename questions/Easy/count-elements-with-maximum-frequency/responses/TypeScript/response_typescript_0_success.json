{
    "status_code": 10,
    "lang": "typescript",
    "run_success": true,
    "status_runtime": "63 ms",
    "memory": 52924000,
    "question_id": "3242",
    "elapsed_time": 110,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706123990309,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 623,
    "total_testcases": 623,
    "runtime_percentile": 72.52749999999999,
    "status_memory": "52.9 MB",
    "memory_percentile": 6.593499999999978,
    "pretty_lang": "TypeScript",
    "submission_id": "1155855914",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "function maxFrequencyElements(nums: number[]): number {\n    const frequencyMap = new Map<number, number>();\n\n    // Count the frequency of each number\n    for (let num of nums) {\n        frequencyMap.set(num, (frequencyMap.get(num) || 0) + 1);\n    }\n\n    let maxFrequency = 0;\n\n    // Find the maximum frequency\n    for (let frequency of frequencyMap.values()) {\n        maxFrequency = Math.max(maxFrequency, frequency);\n    }\n\n    let count = 0;\n\n    // Count how many numbers have the maximum frequency\n    for (let frequency of frequencyMap.values()) {\n        if (frequency === maxFrequency) {\n            count += frequency;\n        }\n    }\n\n    return count;\n}"
}