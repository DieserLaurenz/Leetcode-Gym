{
    "status_code": 10,
    "lang": "cpp",
    "run_success": true,
    "status_runtime": "7 ms",
    "memory": 22652000,
    "question_id": "3242",
    "elapsed_time": 25,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706121649608,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 623,
    "total_testcases": 623,
    "runtime_percentile": 40.029700000000005,
    "status_memory": "22.7 MB",
    "memory_percentile": 5.747500000000007,
    "pretty_lang": "C++",
    "submission_id": "1155824887",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "#include <vector>\n#include <unordered_map>\n\nclass Solution {\npublic:\n    int maxFrequencyElements(vector<int>& nums) {\n        // Map to store frequency of each element\n        unordered_map<int, int> frequencyMap;\n\n        // Find frequency of each element\n        for (int num : nums) {\n            frequencyMap[num]++;\n        }\n\n        // Find maximum frequency\n        int maxFreq = 0;\n        for (auto& pair : frequencyMap) {\n            if (pair.second > maxFreq) {\n                maxFreq = pair.second;\n            }\n        }\n\n        // Count elements with maximum frequency\n        int count = 0;\n        for (auto& pair : frequencyMap) {\n            if (pair.second == maxFreq) {\n                count += maxFreq;\n            }\n        }\n\n        return count;\n    }\n};"
}