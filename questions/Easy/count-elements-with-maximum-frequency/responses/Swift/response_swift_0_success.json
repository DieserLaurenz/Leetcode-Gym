{
    "status_code": 10,
    "lang": "swift",
    "run_success": true,
    "status_runtime": "11 ms",
    "memory": 15236000,
    "question_id": "3242",
    "elapsed_time": 28,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706124832116,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 623,
    "total_testcases": 623,
    "runtime_percentile": 48.101300000000016,
    "status_memory": "15.2 MB",
    "memory_percentile": 93.5896,
    "pretty_lang": "Swift",
    "submission_id": "1155866129",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\n    func maxFrequencyElements(_ nums: [Int]) -> Int {\n        var frequency = [Int: Int]() // Dictionary to store the frequency of each element\n\n        // Counting the frequency of each element\n        for num in nums {\n            frequency[num, default: 0] += 1\n        }\n\n        // Finding the maximum frequency\n        let maxFreq = frequency.values.max() ?? 0\n\n        // Counting how many elements have the maximum frequency\n        let countOfMaxFreqElements = frequency.values.filter { $0 == maxFreq }.count\n\n        return countOfMaxFreqElements * maxFreq\n    }\n}"
}