{
    "status_code": 11,
    "lang": "python",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 11472000,
    "question_id": "2870",
    "elapsed_time": 95,
    "compare_result": "011100101111011101101101110111111111111111111001111111111111111111101101111111111101011011111111111111111111111111111111111111111111011111111111111110111111101111110110111111111111011111111011111111111111011111111111111101111111111111111111111111101011111111111001011111111111111110111111111101011011111111111101011111111111110010111111111111011011110111111111011111111111111111111111101011111111111111111111111101111011111111111110111010111111001110111111111111111001111101111111011111111111111111111011111010111111111110110101111111111111111111011111111111101111111111111111111111110011111111111110111111111111111011110101111111111111111111111111110111111111101111111011010111111111111111111111111111111111111111111111111111101000011001100111101110111111111110111111111111111111100111111111111111101111111011111111111001111111111111111111111100111111111110111111011110111101111111111111111111111011110111111110111111110111111111101111111111111111101111111111111110111111111111111101111011111101111111111111111111111111111111111111010111110111111111111111111110111011111101101111110111011101110111111111110111111111111111110111110101111111111111111111111001111111111111111111111111111111111111111011111111111100111111111101111111111101111101111011111111111011111111111011111111101101101111111110111110111111111111110111111111111111111011111111111111010111011111111010111111111011111111111111111111100111001011111111111111110111111111111111111111111111111111101111111111111111111111111111101111011111110111011111111111111111111111111111111111110100110111111110101110111111111111111111111111111111101111111010111111111111110110111111010110111111111111111111011111011110101111111110111111111111111111111111111111111111111111111111101111111111111111111100111111111111111110111111111111111101101111111111111101111111111111111111111111111110011110111010111111011111011110111101111111111011111111111111111111110111111111110111111110111111111111111111111111111111111111111110111111110011111111011011110111111111101110100111101111111110111111111111111110111111111111111011101111101111111110010101111111101111111111111111111111111111111111011111111111111111111111110111110111011111110111111111111111110101111111110111111111111111111111111111010111101011110111111111111111110111110111111011111101101111110110111111111111110110111111111101111111111111111101011110111111111111111010011111111111111111111111111111111111101011111111111101111111111111111101011111111111110111111111111110111101111011111111111111111110110111111111110111101100101001111111101111110011010110111111110101111101111011010110111010111110111111011111111111111010111011110111111111111111111111111111111111111111011111111110110111111111111111111111011111111011110111111110101110011111111110101101011111111111111011111111111111110111101110111111110111111101100111100111101101111111101111110011011100111101110010111111111111",
    "code_output": "2",
    "std_output": "",
    "last_testcase": "[2,3,4,3,4]",
    "expected_output": "4",
    "task_finish_time": 1708714019435,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 2555,
    "total_testcases": 2880,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python",
    "submission_id": "1184242393",
    "input_formatted": "[2,3,4,3,4]",
    "input": "[2,3,4,3,4]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution(object):\n    def alternatingSubarray(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: int\n        \"\"\"\n        max_length = 1\n        current_length = 1\n        \n        for i in range(1, len(nums)):\n            if (nums[i] - nums[i-1]) == (-1) ** (current_length + 1):\n                current_length += 1\n                max_length = max(max_length, current_length)\n            else:\n                current_length = 1\n        \n        return max_length if max_length > 1 else -1"
}