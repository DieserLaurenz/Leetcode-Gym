{
    "status_code": 11,
    "lang": "ruby",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 212840000,
    "question_id": "2870",
    "elapsed_time": 135,
    "compare_result
    "code_output": "2",
    "std_output": "",
    "last_testcase": "[47,46,65,37,24,54,39,70]",
    "expected_output": "-1",
    "task_finish_time": 1706407796099,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 2813,
    "total_testcases": 2880,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Ruby",
    "submission_id": "1158734886",
    "input_formatted": "[47,46,65,37,24,54,39,70]",
    "input": "[47,46,65,37,24,54,39,70]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "# @param {Integer[]} nums\n# @return {Integer}\ndef alternating_subarray(nums)\n  return -1 if nums.length < 2 # If the array is too short, return -1\n\n  max_length = 1\n  current_length = 1\n\n  (1...nums.length).each do |i|\n    # Check if the current element and the previous element are alternating\n    if (nums[i] - nums[i - 1]).abs == 1 && (i == 1 || (nums[i] - nums[i - 2]) == 0)\n      current_length += 1\n      max_length = [max_length, current_length].max\n    else\n      current_length = 2 # Reset to 2 because we have at least two numbers to start an alternating pattern\n    end\n  end\n\n  # The problem statement assumes at least one alternating subarray exists, so we return max_length directly\n  max_length > 1 ? max_length : -1\nend"
}