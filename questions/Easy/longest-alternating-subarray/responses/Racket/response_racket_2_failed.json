{
    "status_code": 11,
    "lang": "racket",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 100008000,
    "question_id": "2870",
    "elapsed_time": 273,
    "compare_result
    "code_output": "2",
    "std_output": "",
    "last_testcase": "[2,3,4,3,4]",
    "expected_output": "4",
    "task_finish_time": 1706413797440,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 471,
    "total_testcases": 2880,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Racket",
    "submission_id": "1158844069",
    "input_formatted": "[2,3,4,3,4]",
    "input": "[2,3,4,3,4]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "(define/contract (alternating-subarray nums)\n  (-> (listof exact-integer?) exact-integer?)\n  (let ([n (length nums)])\n    (if (< n 2)\n        -1 ; There cannot be an alternating subarray in a list of fewer than 2 elements.\n        (let loop ([i 1] [max-len 0] [current-len 1] [last-diff (if (> n 1) (- (list-ref nums 1) (list-ref nums 0)) 0)])\n          (if (= i n)\n              (if (> max-len 1) max-len -1) ; Return -1 if no alternating subarray longer than 1 is found.\n              (let* ([diff (- (list-ref nums i) (list-ref nums (- i 1)))])\n                (if (and (not (= diff 0)) (= diff (- last-diff)))\n                    (loop (add1 i) (max max-len (add1 current-len)) (add1 current-len) (- diff))\n                    (loop (add1 i) (max max-len current-len) 1 diff))))))))"
}