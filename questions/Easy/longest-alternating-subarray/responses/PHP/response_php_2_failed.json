{
    "status_code": 11,
    "lang": "php",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 20208000,
    "question_id": "2870",
    "elapsed_time": 59,
    "compare_result
    "code_output": "2",
    "std_output": "",
    "last_testcase": "[14,30,29,49,3,23,44,21,26,52]",
    "expected_output": "-1",
    "task_finish_time": 1706400295468,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 2821,
    "total_testcases": 2880,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "PHP",
    "submission_id": "1158686642",
    "input_formatted": "[14,30,29,49,3,23,44,21,26,52]",
    "input": "[14,30,29,49,3,23,44,21,26,52]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @return Integer\n     */\n    function alternatingSubarray($nums) {\n        $maxLen = 1; // Initialize to 1 because a valid subarray needs at least 2 elements.\n        $currentLen = 1;\n\n        for ($i = 1; $i < count($nums); $i++) {\n            // Check if the current and previous elements follow an alternating pattern\n            if (abs($nums[$i] - $nums[$i - 1]) == 1) {\n                // If it's the beginning of a possible alternating subarray\n                if ($currentLen == 1 || (($nums[$i] - $nums[$i - 1]) * ($nums[$i - 1] - $nums[$i - 2]) < 0)) {\n                    $currentLen++;\n                    $maxLen = max($maxLen, $currentLen);\n                } else {\n                    $currentLen = 2; // Reset to 2 as this pair starts a new potential alternating sequence\n                }\n            } else {\n                $currentLen = 1; // Not alternating with the previous element, reset.\n            }\n        }\n\n        // Return -1 if no valid alternating subarray exists, else return the max length found\n        return $maxLen > 1 ? $maxLen : -1;\n    }\n}"
}