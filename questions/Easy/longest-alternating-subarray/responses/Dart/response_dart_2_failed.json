{
    "status_code": 11,
    "lang": "dart",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 151412000,
    "question_id": "2870",
    "elapsed_time": 577,
    "compare_result
    "code_output": "2",
    "std_output": "",
    "last_testcase": "[21,9,5]",
    "expected_output": "-1",
    "task_finish_time": 1706405154248,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 2362,
    "total_testcases": 2880,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Dart",
    "submission_id": "1158718396",
    "input_formatted": "[21,9,5]",
    "input": "[21,9,5]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n  int alternatingSubarray(List<int> nums) {\n    if (nums.length < 2) return -1;\n\n    int maxLength = -1;\n    int currentLength = 1;\n\n    for (int i = 1; i < nums.length; i++) {\n      if ((nums[i] - nums[i - 1]).abs() == 1 && (currentLength % 2 == 0 ? nums[i] - nums[i - 1] == -1 : nums[i] - nums[i - 1] == 1)) {\n        currentLength++;\n      } else {\n        currentLength = 2; // Reset to 2 as we have found a new potential start of an alternating subarray\n      }\n      if (currentLength > maxLength) {\n        maxLength = currentLength;\n      }\n    }\n\n    // Adjust for the case where no alternating subarray is found\n    return maxLength >= 2 ? maxLength : -1;\n  }\n}"
}