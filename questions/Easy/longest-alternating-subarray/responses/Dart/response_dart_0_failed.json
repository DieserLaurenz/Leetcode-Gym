{
    "status_code": 11,
    "lang": "dart",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 148548000,
    "question_id": "2870",
    "elapsed_time": 549,
    "compare_result
    "code_output": "2",
    "std_output": "",
    "last_testcase": "[2,3,4,3,4]",
    "expected_output": "4",
    "task_finish_time": 1706403954809,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 2529,
    "total_testcases": 2880,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Dart",
    "submission_id": "1158710714",
    "input_formatted": "[2,3,4,3,4]",
    "input": "[2,3,4,3,4]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n  int alternatingSubarray(List<int> nums) {\n    int maxLength = -1;\n    int currentLength = 1;\n\n    for (int i = 1; i < nums.length; i++) {\n      // Check if the current and previous elements form an alternating pattern\n      if ((nums[i] - nums[i - 1]).abs() == 1 && ((i - 1) % 2 == 0 ? nums[i] > nums[i - 1] : nums[i] < nums[i - 1])) {\n        currentLength++;\n        // Update maxLength whenever we find a longer alternating subarray\n        if (currentLength > maxLength) {\n          maxLength = currentLength;\n        }\n      } else {\n        // Reset currentLength if the pattern breaks\n        currentLength = 1;\n      }\n    }\n\n    return maxLength > 1 ? maxLength : -1;\n  }\n}"
}