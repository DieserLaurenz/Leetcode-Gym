{
    "status_code": 11,
    "lang": "php",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 20052000,
    "question_id": "2955",
    "elapsed_time": 146,
    "compare_result": "10100001111000001111000001111100000111110000011111000001111100000111110000011111000001111100000111111",
    "code_output": "85",
    "std_output": "",
    "last_testcase": "15",
    "expected_output": "80",
    "task_finish_time": 1706036092739,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 51,
    "total_testcases": 101,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "PHP",
    "submission_id": "1154890173",
    "input_formatted": "15",
    "input": "15",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n\n    /**\n     * @param Integer $purchaseAmount\n     * @return Integer\n     */\n    function accountBalanceAfterPurchase($purchaseAmount) {\n        // Finding the remainder when divided by 10\n        $remainder = $purchaseAmount % 10;\n\n        // Rounding logic\n        if ($remainder == 0) {\n            $roundedAmount = $purchaseAmount; // No rounding needed if it's already a multiple of 10\n        } elseif ($remainder <= 5) {\n            // Round up if the remainder is exactly 5, otherwise round down\n            $roundedAmount = $purchaseAmount + (5 - $remainder);\n        } else {\n            // Round up if the remainder is greater than 5\n            $roundedAmount = $purchaseAmount + (10 - $remainder);\n        }\n\n        // Calculate the new balance after the purchase\n        $newBalance = 100 - $roundedAmount;\n\n        return $newBalance;\n    }\n}"
}