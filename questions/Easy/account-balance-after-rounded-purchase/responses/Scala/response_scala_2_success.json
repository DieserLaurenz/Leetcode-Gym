{
    "status_code": 10,
    "lang": "scala",
    "run_success": true,
    "status_runtime": "414 ms",
    "memory": 51376000,
    "question_id": "2955",
    "elapsed_time": 449,
    "compare_result": "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706040350103,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 101,
    "total_testcases": 101,
    "runtime_percentile": 33.33339999999999,
    "status_memory": "51.4 MB",
    "memory_percentile": 100,
    "pretty_lang": "Scala",
    "submission_id": "1154942945",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "object Solution {\n    def accountBalanceAfterPurchase(purchaseAmount: Int): Int = {\n        // Calculate the remainder when dividing by 10\n        val remainder = purchaseAmount % 10\n        // Determine the rounded amount\n        val roundedAmount = if (remainder >= 5) purchaseAmount + (10 - remainder) else purchaseAmount - remainder\n        // Subtract the rounded amount from the initial balance\n        100 - roundedAmount\n    }\n\n    def main(args: Array[String]): Unit = {\n        // Example usage\n        println(accountBalanceAfterPurchase(9))   // Output: 90\n        println(accountBalanceAfterPurchase(15))  // Output: 80\n        println(accountBalanceAfterPurchase(11))  // Output: 90\n    }\n}"
}