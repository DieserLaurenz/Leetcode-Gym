{
    "status_code": 11,
    "lang": "scala",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 51896000,
    "question_id": "2955",
    "elapsed_time": 855,
    "compare_result": "11100001111000011111000011111100001111110000111111000011111100001111110000111111000011111100001111111",
    "code_output": "80",
    "std_output": "",
    "last_testcase": "11",
    "expected_output": "90",
    "task_finish_time": 1706039750859,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 61,
    "total_testcases": 101,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Scala",
    "submission_id": "1154936075",
    "input_formatted": "11",
    "input": "11",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "object Solution {\n    def accountBalanceAfterPurchase(purchaseAmount: Int): Int = {\n        // Calculate the nearest higher or equal multiple of 10\n        val roundedAmount = ((purchaseAmount + 9) / 10) * 10\n        // Subtract the rounded amount from the initial balance\n        100 - roundedAmount\n    }\n\n    def main(args: Array[String]): Unit = {\n        // Example usage\n        println(accountBalanceAfterPurchase(9))   // Output: 90\n        println(accountBalanceAfterPurchase(15))  // Output: 80\n    }\n}"
}