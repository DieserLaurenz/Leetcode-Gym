{
    "status_code": 10,
    "lang": "cpp",
    "run_success": true,
    "status_runtime": "0 ms",
    "memory": 7160000,
    "question_id": "2955",
    "elapsed_time": 11,
    "compare_result": "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706035377119,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 101,
    "total_testcases": 101,
    "runtime_percentile": 100,
    "status_memory": "7.2 MB",
    "memory_percentile": 7.707999999999998,
    "pretty_lang": "C++",
    "submission_id": "1154880178",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\npublic:\n    int accountBalanceAfterPurchase(int purchaseAmount) {\n        // Determine the lower and upper nearest multiples of 10\n        int lowerMultiple = purchaseAmount / 10 * 10;\n        int upperMultiple = lowerMultiple + 10;\n\n        // Determine the rounded amount\n        int roundedAmount;\n        if (purchaseAmount - lowerMultiple >= upperMultiple - purchaseAmount) {\n            roundedAmount = upperMultiple;\n        } else {\n            roundedAmount = lowerMultiple;\n        }\n\n        // Calculate and return the new balance\n        return 100 - roundedAmount;\n    }\n};"
}