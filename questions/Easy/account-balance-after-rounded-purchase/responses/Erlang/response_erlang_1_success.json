{
    "status_code": 10,
    "lang": "erlang",
    "run_success": true,
    "status_runtime": "207 ms",
    "memory": 59096000,
    "question_id": "2955",
    "elapsed_time": 1315,
    "compare_result": "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706045573710,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 101,
    "total_testcases": 101,
    "runtime_percentile": 16.66650000000002,
    "status_memory": "59.1 MB",
    "memory_percentile": 16.66660000000001,
    "pretty_lang": "Erlang",
    "submission_id": "1154994453",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "-spec account_balance_after_purchase(PurchaseAmount :: integer()) -> integer().\naccount_balance_after_purchase(PurchaseAmount) ->\n    RoundedAmount = case PurchaseAmount rem 10 of\n                        0 -> PurchaseAmount;\n                        Rem when Rem < 5 -> (PurchaseAmount div 10) * 10;\n                        _ -> ((PurchaseAmount div 10) + 1) * 10\n                    end,\n    100 - RoundedAmount."
}