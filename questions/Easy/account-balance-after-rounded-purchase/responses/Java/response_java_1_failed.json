{
    "status_code": 11,
    "lang": "java",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 40372000,
    "display_runtime": "0",
    "question_id": "2955",
    "elapsed_time": 100,
    "compare_result": "10111111111111101111111101111111110111111111011111111101111111110111111111011111111101111111110111111",
    "code_output": "90",
    "std_output": "",
    "last_testcase": "15",
    "expected_output": "80",
    "task_finish_time": 1706035500801,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 91,
    "total_testcases": 101,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Java",
    "submission_id": "1154881948",
    "input_formatted": "15",
    "input": "15",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    public int accountBalanceAfterPurchase(int purchaseAmount) {\n        // Find the next higher multiple of 10\n        int nextMultipleOfTen = (purchaseAmount + 9) / 10 * 10;\n\n        // Find the next lower multiple of 10\n        int lowerMultipleOfTen = purchaseAmount / 10 * 10;\n\n        // Choose the nearest multiple, preferring the higher in case of a tie\n        int roundedAmount = (purchaseAmount - lowerMultipleOfTen <= nextMultipleOfTen - purchaseAmount) \n                            ? lowerMultipleOfTen : nextMultipleOfTen;\n\n        // Subtract the rounded amount from the initial balance and return\n        return 100 - roundedAmount;\n    }\n}"
}