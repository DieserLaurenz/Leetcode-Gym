{
    "acRate": 81.59412690089145,
    "difficulty": "Easy",
    "freqBar": null,
    "questionId": "2860",
    "frontendQuestionId": "2724",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Sort By",
    "titleSlug": "sort-by",
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false,
    "codeSnippets": [
        {
            "lang": "JavaScript",
            "langSlug": "javascript",
            "code": "/**\n * @param {Array} arr\n * @param {Function} fn\n * @return {Array}\n */\nvar sortBy = function(arr, fn) {\n    \n};"
        },
        {
            "lang": "TypeScript",
            "langSlug": "typescript",
            "code": "type JSONValue = null | boolean | number | string | JSONValue[] | { [key: string]: JSONValue };\ntype Fn = (value: JSONValue) => number\n\nfunction sortBy(arr: JSONValue[], fn: Fn): JSONValue[] {\n    \n};"
        }
    ],
    "content": "Given an array arr and a function fn, return a sorted array sortedArr. You can assumefnonly returns numbers and those numbers determine the sort order ofsortedArr. sortedArray must be sorted in ascending order by fn output.\nYou may assume that fn will never duplicate numbers for a given array.\n\nExample 1:\n\nInput: arr = [5, 4, 1, 2, 3], fn = (x) => x\nOutput: [1, 2, 3, 4, 5]\nExplanation: fn simply returns the number passed to it so the array is sorted in ascending order.\n\nExample 2:\n\nInput: arr = [{\"x\": 1}, {\"x\": 0}, {\"x\": -1}], fn = (d) => d.x\nOutput: [{\"x\": -1}, {\"x\": 0}, {\"x\": 1}]\nExplanation: fn returns the value for the \"x\" key. So the array is sorted based on that value.\n\nExample 3:\n\nInput: arr = [[3, 4], [5, 2], [10, 1]], fn = (x) => x[1]\nOutput: [[10, 1], [5, 2], [3, 4]]\nExplanation: arr is sorted in ascending order by number at index=1.\n\n\nConstraints:\n\narr is a valid JSON array\nfn is a function that returns a number\n1 <=arr.length <= 5 * 105\n\n"
}