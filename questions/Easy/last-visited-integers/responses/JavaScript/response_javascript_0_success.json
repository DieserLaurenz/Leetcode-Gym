{
    "status_code": 10,
    "lang": "javascript",
    "run_success": true,
    "status_runtime": "64 ms",
    "memory": 51812000,
    "question_id": "3164",
    "elapsed_time": 95,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706379450996,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 706,
    "total_testcases": 706,
    "runtime_percentile": 68.22409999999994,
    "status_memory": "51.8 MB",
    "memory_percentile": 7.476199999999974,
    "pretty_lang": "JavaScript",
    "submission_id": "1158491146",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "/**\n * @param {string[]} words\n * @return {number[]}\n */\nvar lastVisitedIntegers = function(words) {\n    let nums = []; // to store visited integers\n    let result = []; // to store results for each \"prev\"\n    let prevCount = 0; // to count consecutive \"prev\" strings\n\n    for (let i = 0; i < words.length; i++) {\n        if (words[i] === \"prev\") {\n            prevCount++; // increase count for consecutive \"prev\"\n            if (prevCount <= nums.length) {\n                // If there are enough visited integers\n                result.push(nums[nums.length - prevCount]); // Push the last visited integer\n            } else {\n                result.push(-1); // Not enough visited integers\n            }\n        } else {\n            nums.push(parseInt(words[i], 10)); // Convert string to integer and push\n            prevCount = 0; // Reset consecutive \"prev\" count\n        }\n    }\n\n    return result;\n};"
}