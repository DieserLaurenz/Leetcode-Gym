{
    "status_code": 10,
    "lang": "dart",
    "run_success": true,
    "status_runtime": "411 ms",
    "memory": 149984000,
    "question_id": "3164",
    "elapsed_time": 695,
    "compare_result": "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706379634858,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 706,
    "total_testcases": 706,
    "runtime_percentile": 25.0,
    "status_memory": "150 MB",
    "memory_percentile": 50.0,
    "pretty_lang": "Dart",
    "submission_id": "1158493743",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\n  List<int> lastVisitedIntegers(List<String> words) {\n    List<int> result = [];\n    List<int> visitedIntegers = [];\n    int prevCount = 0; // To track consecutive \"prev\"\n\n    for (String word in words) {\n      if (word == \"prev\") {\n        prevCount++;\n        // If prevCount exceeds the length of visitedIntegers, push -1\n        if (prevCount > visitedIntegers.length) {\n          result.add(-1);\n        } else {\n          // Otherwise, add the (prevCount - 1)th last visited integer\n          result.add(visitedIntegers[visitedIntegers.length - prevCount]);\n        }\n      } else {\n        // Reset prevCount on encountering an integer\n        prevCount = 0;\n        // Add the integer to visitedIntegers list\n        visitedIntegers.add(int.parse(word));\n      }\n    }\n\n    return result;\n  }\n}"
}