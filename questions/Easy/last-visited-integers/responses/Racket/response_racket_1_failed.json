{
    "status_code": 11,
    "lang": "racket",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 100648000,
    "question_id": "3164",
    "elapsed_time": 330,
    "compare_result
    "code_output": "[1,2,-1]",
    "std_output": "",
    "last_testcase": "[\"1\",\"2\",\"prev\",\"prev\",\"prev\"]",
    "expected_output": "[2,1,-1]",
    "task_finish_time": 1706379880091,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 233,
    "total_testcases": 706,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Racket",
    "submission_id": "1158497099",
    "input_formatted": "[\"1\",\"2\",\"prev\",\"prev\",\"prev\"]",
    "input": "[\"1\",\"2\",\"prev\",\"prev\",\"prev\"]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "(define/contract (last-visited-integers words)\n  (-> (listof string?) (listof exact-integer?))\n  \n  (define (helper words visited prev-count result)\n    (cond\n      [(null? words) (reverse result)]\n      [(string=? (car words) \"prev\")\n       (let ((last-int (if (>= prev-count (length visited))\n                           -1\n                           (list-ref (reverse visited) prev-count))))\n         (helper (cdr words) visited (add1 prev-count) (cons last-int result)))]\n      [else\n       (helper (cdr words) (cons (string->number (car words)) visited) 0 result)]))\n  \n  (helper words '() 0 '()))"
}