{
    "status_code": 10,
    "lang": "typescript",
    "run_success": true,
    "status_runtime": "77 ms",
    "memory": 52704000,
    "question_id": "3164",
    "elapsed_time": 184,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706379483617,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 706,
    "total_testcases": 706,
    "runtime_percentile": 23.076999999999977,
    "status_memory": "52.7 MB",
    "memory_percentile": 7.692399999999991,
    "pretty_lang": "TypeScript",
    "submission_id": "1158491607",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "function lastVisitedIntegers(words: string[]): number[] {\n    const result: number[] = [];\n    const nums: number[] = [];\n    let prevCount = 0;\n\n    for (let i = 0; i < words.length; i++) {\n        if (words[i] === \"prev\") {\n            prevCount++;\n            if (prevCount <= nums.length) {\n                // If the count of \"prev\" is within the range of visited integers\n                result.push(nums[nums.length - prevCount]);\n            } else {\n                // If the count of \"prev\" exceeds the number of visited integers\n                result.push(-1);\n            }\n        } else {\n            // Reset prevCount when encountering an integer\n            prevCount = 0;\n            nums.push(parseInt(words[i]));\n        }\n    }\n\n    return result;\n};"
}