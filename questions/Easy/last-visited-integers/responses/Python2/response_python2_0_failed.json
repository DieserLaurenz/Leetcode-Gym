{
    "status_code": 15,
    "lang": "python",
    "run_success": false,
    "runtime_error": "Line 12: AttributeError: 'int' object has no attribute 'isdigit'",
    "full_runtime_error": "AttributeError: 'int' object has no attribute 'isdigit'\n    if word.isdigit():\nLine 12 in lastVisitedIntegers (Solution.py)\n    ret = Solution().lastVisitedIntegers(param_1)\nLine 40 in _driver (Solution.py)\n    _driver()\nLine 50 in <module> (Solution.py)",
    "status_runtime": "N/A",
    "memory": 11740000,
    "question_id": "3164",
    "elapsed_time": 41,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "[1,2,-1,-1,-1]",
    "expected_output": "[2,1,-1]",
    "task_finish_time": 1708713693650,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 706,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Python",
    "submission_id": "1184238119",
    "status_msg": "Runtime Error",
    "state": "SUCCESS",
    "code": "class Solution(object):\n    def lastVisitedIntegers(self, words):\n        \"\"\"\n        :type words: List[str]\n        :rtype: List[int]\n        \"\"\"\n        result = []\n        nums = []\n        prev_count = 0\n\n        for word in words:\n            if word.isdigit():\n                nums.append(int(word))\n                prev_count = 0\n            else:  # word == \"prev\"\n                prev_count += 1\n                if prev_count <= len(nums):\n                    result.append(nums[-prev_count])\n                else:\n                    result.append(-1)\n        return result"
}