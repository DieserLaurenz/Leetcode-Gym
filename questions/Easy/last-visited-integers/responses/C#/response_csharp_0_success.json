{
    "status_code": 10,
    "lang": "csharp",
    "run_success": true,
    "status_runtime": "104 ms",
    "memory": 48424000,
    "question_id": "3164",
    "elapsed_time": 203,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706379421131,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 706,
    "total_testcases": 706,
    "runtime_percentile": 100,
    "status_memory": "48.4 MB",
    "memory_percentile": 16.216300000000004,
    "pretty_lang": "C#",
    "submission_id": "1158490652",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "public class Solution {\n    public IList<int> LastVisitedIntegers(IList<string> words) {\n        List<int> lastVisited = new List<int>();\n        List<int> nums = new List<int>();\n        int prevCount = 0;\n        \n        foreach (string word in words) {\n            if (word == \"prev\") {\n                prevCount++;\n                int index = nums.Count - prevCount;\n                if (index >= 0) {\n                    lastVisited.Add(nums[index]);\n                } else {\n                    lastVisited.Add(-1);\n                }\n            } else {\n                nums.Add(int.Parse(word));\n                prevCount = 0; // reset prevCount as we encounter an integer\n            }\n        }\n        \n        return lastVisited;\n    }\n}"
}