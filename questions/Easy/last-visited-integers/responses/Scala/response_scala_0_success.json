{
    "status_code": 10,
    "lang": "scala",
    "run_success": true,
    "status_runtime": "566 ms",
    "memory": 56676000,
    "question_id": "3164",
    "elapsed_time": 823,
    "compare_result": "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706379758219,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 706,
    "total_testcases": 706,
    "runtime_percentile": 100,
    "status_memory": "56.7 MB",
    "memory_percentile": 100,
    "pretty_lang": "Scala",
    "submission_id": "1158495416",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "object Solution {\n    def lastVisitedIntegers(words: List[String]): List[Int] = {\n        var nums: List[Int] = List()\n        var result: List[Int] = List()\n        var prevCount = 0\n\n        words.foreach { word =>\n            if (word == \"prev\") {\n                prevCount += 1\n                if (prevCount <= nums.length) {\n                    result = nums(nums.length - prevCount) :: result\n                } else {\n                    result = -1 :: result\n                }\n            } else {\n                nums = nums :+ word.toInt\n                prevCount = 0\n            }\n        }\n\n        result.reverse\n    }\n}"
}