{
    "status_code": 10,
    "lang": "swift",
    "run_success": true,
    "status_runtime": "25 ms",
    "memory": 16040000,
    "question_id": "3164",
    "elapsed_time": 34,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706379560049,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 706,
    "total_testcases": 706,
    "runtime_percentile": 27.272799999999986,
    "status_memory": "16 MB",
    "memory_percentile": 27.272799999999997,
    "pretty_lang": "Swift",
    "submission_id": "1158492729",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\n    func lastVisitedIntegers(_ words: [String]) -> [Int] {\n        var nums: [Int] = []\n        var result: [Int] = []\n        var prevCount = 0\n\n        for word in words {\n            if word == \"prev\" {\n                prevCount += 1\n                if prevCount <= nums.count {\n                    result.append(nums[nums.count - prevCount])\n                } else {\n                    result.append(-1)\n                }\n            } else {\n                if let num = Int(word) {\n                    nums.append(num)\n                }\n                prevCount = 0\n            }\n        }\n\n        return result\n    }\n}"
}