{
    "status_code": 10,
    "lang": "csharp",
    "run_success": true,
    "status_runtime": "80 ms",
    "memory": 46416000,
    "question_id": "2785",
    "elapsed_time": 183,
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706638522685,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 1977,
    "total_testcases": 1977,
    "runtime_percentile": 72.72709999999998,
    "status_memory": "46.4 MB",
    "memory_percentile": 45.454399999999985,
    "pretty_lang": "C#",
    "submission_id": "1161302017",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "public class Solution {\n    public int SemiOrderedPermutation(int[] nums) {\n        int n = nums.Length;\n        int pos1 = 0, posN = 0;\n\n        // Find the positions of 1 and n\n        for (int i = 0; i < n; i++) {\n            if (nums[i] == 1) pos1 = i;\n            else if (nums[i] == n) posN = i;\n        }\n\n        // Calculate the minimum moves\n        // Moves to bring 1 to the beginning\n        int movesFor1 = pos1;\n        // Moves to bring n to the end\n        int movesForN = (n - 1) - posN;\n\n        // Adjust for their initial positions\n        // If 1 is before n in the array, moving n to the end doesn't interfere with moving 1 to the start\n        // If n comes before 1, we need one less move as moving 1 to the start will also move n towards the end\n        if (posN < pos1) {\n            movesForN--; // Reduce one move as moving 1 left will also move n right\n        }\n\n        return movesFor1 + movesForN;\n    }\n}"
}