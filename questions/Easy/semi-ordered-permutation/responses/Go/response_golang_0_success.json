{
    "status_code": 10,
    "lang": "golang",
    "run_success": true,
    "status_runtime": "10 ms",
    "memory": 3480000,
    "question_id": "2785",
    "elapsed_time": 29,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706647402689,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 1977,
    "total_testcases": 1977,
    "runtime_percentile": 32.0,
    "status_memory": "3.5 MB",
    "memory_percentile": 72.0,
    "pretty_lang": "Go",
    "submission_id": "1161415771",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "func semiOrderedPermutation(nums []int) int {\n    // Step 1: Find the index of 1 and n\n    var index1, indexN int\n    n := len(nums) // The value of n is also the last element in a permutation of n elements\n    for i, num := range nums {\n        if num == 1 {\n            index1 = i\n        } else if num == n {\n            indexN = i\n        }\n    }\n\n    // Step 2: Calculate the minimum number of operations\n    // Moving `1` to the beginning\n    operations := index1\n    // Moving `n` to the end, adjust if `1` is after `n`\n    if indexN < index1 {\n        operations += n - 1 - indexN - 1\n    } else {\n        operations += n - 1 - indexN\n    }\n\n    return operations\n}"
}