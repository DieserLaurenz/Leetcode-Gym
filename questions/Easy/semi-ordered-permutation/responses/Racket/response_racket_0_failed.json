{
    "status_code": 11,
    "lang": "racket",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 100228000,
    "question_id": "2785",
    "elapsed_time": 316,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "[2,1,4,3]",
    "expected_output": "2",
    "task_finish_time": 1706649246040,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 968,
    "total_testcases": 1977,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Racket",
    "submission_id": "1161433135",
    "input_formatted": "[2,1,4,3]",
    "input": "[2,1,4,3]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "(define/contract (semi-ordered-permutation nums)\n  (-> (listof exact-integer?) exact-integer?)\n  (let* ((n (length nums))\n         (pos1 (index-of nums 1))\n         (posn (index-of nums n)))\n    (+ (if pos1 pos1 0) ; Distance of 1 from the start\n       (if posn (- n (+ posn 1) 1) 0) ; Distance of n from the end\n       )))\n\n; Helper function to find the index of an element in a list\n(define (index-of lst elem)\n  (define (helper lst elem index)\n    (cond\n      [(null? lst) #f]\n      [(equal? (car lst) elem) index]\n      [else (helper (cdr lst) elem (add1 index))]))\n  (helper lst elem 0))"
}