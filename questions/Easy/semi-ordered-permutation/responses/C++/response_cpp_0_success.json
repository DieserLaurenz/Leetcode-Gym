{
    "status_code": 10,
    "lang": "cpp",
    "run_success": true,
    "status_runtime": "18 ms",
    "memory": 49884000,
    "question_id": "2785",
    "elapsed_time": 45,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706638094918,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 1977,
    "total_testcases": 1977,
    "runtime_percentile": 40.56580000000002,
    "status_memory": "49.9 MB",
    "memory_percentile": 12.578600000000002,
    "pretty_lang": "C++",
    "submission_id": "1161294881",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "#include <vector>\nusing namespace std;\n\nclass Solution {\npublic:\n    int semiOrderedPermutation(vector<int>& nums) {\n        int n = nums.size();\n        int pos1 = 0, posN = 0;\n        \n        // Find positions of 1 and n\n        for (int i = 0; i < n; ++i) {\n            if (nums[i] == 1) pos1 = i;\n            if (nums[i] == n) posN = i;\n        }\n        \n        // Calculate swaps for 1 and n\n        int swapsFor1 = pos1; // Moves to bring 1 to the start\n        int swapsForN = n - 1 - posN; // Moves to bring n to the end\n        \n        // If 1 is after n, we need one less swap since moving n to the end automatically brings 1 closer to the start\n        if (pos1 > posN) {\n            return swapsFor1 + swapsForN - 1;\n        } else {\n            return swapsFor1 + swapsForN;\n        }\n    }\n};"
}