{
    "status_code": 11,
    "lang": "swift",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 15204000,
    "question_id": "3252",
    "elapsed_time": 40,
    "compare_result
    "code_output": "4",
    "std_output": "",
    "last_testcase": "[1,2,3,4]",
    "expected_output": "10",
    "task_finish_time": 1706161311785,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 10,
    "total_testcases": 615,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Swift",
    "submission_id": "1156199641",
    "input_formatted": "[1,2,3,4]",
    "input": "[1,2,3,4]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    func incremovableSubarrayCount(_ nums: [Int]) -> Int {\n        var count = 0\n        \n        for start in 0..<nums.count {\n            for end in start..<nums.count {\n                if isIncremovableSubarray(nums, start, end) {\n                    count += 1\n                }\n            }\n        }\n\n        return count\n    }\n\n    private func isIncremovableSubarray(_ nums: [Int], _ start: Int, _ end: Int) -> Bool {\n        var prev = start > 0 ? nums[start - 1] : Int.min\n        for i in 0..<nums.count {\n            if i >= start && i <= end {\n                continue\n            }\n            if nums[i] <= prev {\n                return false\n            }\n            prev = nums[i]\n        }\n        return true\n    }\n}"
}