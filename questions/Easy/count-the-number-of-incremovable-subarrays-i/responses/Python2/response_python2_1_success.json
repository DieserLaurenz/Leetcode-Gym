{
    "status_code": 10,
    "lang": "python",
    "run_success": true,
    "status_runtime": "652 ms",
    "memory": 11556000,
    "question_id": "3252",
    "elapsed_time": 756,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1708703182197,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 615,
    "total_testcases": 615,
    "runtime_percentile": 19.388400000000054,
    "status_memory": "11.6 MB",
    "memory_percentile": 100,
    "pretty_lang": "Python",
    "submission_id": "1184090006",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution(object):\n    def incremovableSubarrayCount(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: int\n        \"\"\"\n        def is_strictly_increasing(lst):\n            return all(x < y for x, y in zip(lst, lst[1:]))\n\n        count = 0\n        for i in range(len(nums)):\n            for j in range(i+1, len(nums)+1):\n                if is_strictly_increasing(nums[:i] + nums[j:]):\n                    count += 1\n        return count"
}