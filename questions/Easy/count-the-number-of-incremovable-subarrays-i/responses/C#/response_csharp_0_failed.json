{
    "status_code": 11,
    "lang": "csharp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 42532000,
    "question_id": "3252",
    "elapsed_time": 171,
    "compare_result
    "code_output": "10",
    "std_output": "",
    "last_testcase": "[6,5,7,8]",
    "expected_output": "7",
    "task_finish_time": 1706155730868,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 91,
    "total_testcases": 615,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C#",
    "submission_id": "1156134961",
    "input_formatted": "[6,5,7,8]",
    "input": "[6,5,7,8]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "public class Solution {\n    public int IncremovableSubarrayCount(int[] nums) {\n        int n = nums.Length;\n        int count = 0;\n\n        for (int start = 0; start < n; start++) {\n            for (int end = start; end < n; end++) {\n                int prev = start > 0 ? nums[start - 1] : int.MinValue;\n                int next = end < n - 1 ? nums[end + 1] : int.MaxValue;\n\n                if (prev < next) {\n                    count++;\n                }\n            }\n        }\n\n        return count;\n    }\n}"
}