{
    "status_code": 11,
    "lang": "kotlin",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 36900000,
    "question_id": "3252",
    "elapsed_time": 459,
    "compare_result
    "code_output": "10",
    "std_output": "",
    "last_testcase": "[6,5,7,8]",
    "expected_output": "7",
    "task_finish_time": 1706163594882,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 91,
    "total_testcases": 615,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Kotlin",
    "submission_id": "1156228890",
    "input_formatted": "[6,5,7,8]",
    "input": "[6,5,7,8]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    fun incremovableSubarrayCount(nums: IntArray): Int {\n        val n = nums.size\n        var count = 0\n\n        // Arrays to store the maximum to the left and minimum to the right\n        val maxLeft = IntArray(n) { 0 }\n        val minRight = IntArray(n) { 0 }\n\n        // Compute maxLeft\n        maxLeft[0] = Int.MIN_VALUE\n        for (i in 1 until n) {\n            maxLeft[i] = maxOf(maxLeft[i - 1], nums[i - 1])\n        }\n\n        // Compute minRight\n        minRight[n - 1] = Int.MAX_VALUE\n        for (i in n - 2 downTo 0) {\n            minRight[i] = minOf(minRight[i + 1], nums[i + 1])\n        }\n\n        // Check each subarray\n        for (i in 0 until n) {\n            for (j in i until n) {\n                if (maxLeft[i] < minRight[j]) {\n                    count++\n                }\n            }\n        }\n\n        return count\n    }\n}"
}