{
    "status_code": 11,
    "lang": "typescript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 52288000,
    "question_id": "3252",
    "elapsed_time": 173,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "[1,2,3,4]",
    "expected_output": "10",
    "task_finish_time": 1706159089778,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 10,
    "total_testcases": 615,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "TypeScript",
    "submission_id": "1156173431",
    "input_formatted": "[1,2,3,4]",
    "input": "[1,2,3,4]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "function incremovableSubarrayCount(nums: number[]): number {\n    let count = 0;\n\n    for (let start = 0; start < nums.length; start++) {\n        for (let end = start; end < nums.length; end++) {\n            if (isIncremovable(nums, start, end)) {\n                count++;\n            }\n        }\n    }\n\n    return count;\n}\n\nfunction isIncremovable(nums: number[], start: number, end: number): boolean {\n    let left = start > 0 ? nums[start - 1] : -Infinity;\n    let right = end < nums.length - 1 ? nums[end + 1] : Infinity;\n\n    // Check if the elements before and after the subarray are in strictly increasing order.\n    for (let i = 0; i < start; i++) {\n        if (nums[i] >= left) return false;\n        left = nums[i];\n    }\n\n    for (let i = end + 1; i < nums.length; i++) {\n        if (nums[i] <= right) return false;\n        right = nums[i];\n    }\n\n    // Check if removing the subarray makes the sequence strictly increasing\n    return left < right;\n}"
}