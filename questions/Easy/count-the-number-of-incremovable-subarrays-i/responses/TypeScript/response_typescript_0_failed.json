{
    "status_code": 11,
    "lang": "typescript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 52068000,
    "question_id": "3252",
    "elapsed_time": 101,
    "compare_result
    "code_output": "10",
    "std_output": "",
    "last_testcase": "[6,5,7,8]",
    "expected_output": "7",
    "task_finish_time": 1706158489281,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 104,
    "total_testcases": 615,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "TypeScript",
    "submission_id": "1156166377",
    "input_formatted": "[6,5,7,8]",
    "input": "[6,5,7,8]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "function incremovableSubarrayCount(nums: number[]): number {\n    let count = 0;\n\n    for (let i = 0; i < nums.length; i++) {\n        for (let j = i; j < nums.length; j++) {\n            if (isStrictlyIncreasing(nums, i, j)) {\n                count++;\n            }\n        }\n    }\n\n    return count;\n}\n\nfunction isStrictlyIncreasing(nums: number[], start: number, end: number): boolean {\n    let prev = start > 0 ? nums[start - 1] : -Infinity;\n    for (let i = end + 1; i < nums.length; i++) {\n        if (nums[i] <= prev) {\n            return false;\n        }\n        prev = nums[i];\n    }\n    return true;\n}"
}