{
    "status_code": 11,
    "lang": "javascript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 50516000,
    "question_id": "3252",
    "elapsed_time": 104,
    "compare_result
    "code_output": "4",
    "std_output": "",
    "last_testcase": "[6,5,7,8]",
    "expected_output": "7",
    "task_finish_time": 1706157408898,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 78,
    "total_testcases": 615,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "JavaScript",
    "submission_id": "1156153630",
    "input_formatted": "[6,5,7,8]",
    "input": "[6,5,7,8]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "/**\n * @param {number[]} nums\n * @return {number}\n */\nvar incremovableSubarrayCount = function(nums) {\n    let count = 0;\n\n    for (let start = 0; start < nums.length; start++) {\n        for (let end = start; end < nums.length; end++) {\n            if (isIncremovable(nums, start, end)) {\n                count++;\n            }\n        }\n    }\n\n    return count;\n};\n\nfunction isIncremovable(nums, start, end) {\n    let leftNum = start > 0 ? nums[start - 1] : -Infinity;\n    let rightNum = end < nums.length - 1 ? nums[end + 1] : Infinity;\n\n    // Check if removing the subarray [start, end] makes the array strictly increasing\n    if (leftNum >= rightNum) {\n        return false;\n    }\n\n    for (let i = 0; i < start; i++) {\n        if (nums[i] >= nums[i + 1]) {\n            return false;\n        }\n    }\n\n    for (let i = end + 1; i < nums.length - 1; i++) {\n        if (nums[i] >= nums[i + 1]) {\n            return false;\n        }\n    }\n\n    return true;\n}"
}