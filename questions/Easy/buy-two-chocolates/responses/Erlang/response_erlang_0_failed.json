{
    "status_code": 11,
    "lang": "erlang",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 59592000,
    "question_id": "2756",
    "elapsed_time": 1625,
    "compare_result
    "code_output": "17",
    "std_output": "",
    "last_testcase": "[98,54,6,34,66,63,52,39]\n62",
    "expected_output": "22",
    "task_finish_time": 1706055410161,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 970,
    "total_testcases": 2003,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Erlang",
    "submission_id": "1155070353",
    "input_formatted": "[98,54,6,34,66,63,52,39], 62",
    "input": "[98,54,6,34,66,63,52,39]\n62",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "-spec buy_choco(Prices :: [integer()], Money :: integer()) -> integer().\nbuy_choco(Prices, Money) ->\n    buy_choco_helper(Prices, Money, Money, 0).\n\nbuy_choco_helper([], _Money, MinLeftover, _CurrentMin) ->\n    MinLeftover;\nbuy_choco_helper([Price | RestPrices], Money, MinLeftover, CurrentMin) ->\n    NewMinLeftover = buy_choco_with_price(RestPrices, Price, Money, MinLeftover, CurrentMin),\n    buy_choco_helper(RestPrices, Money, NewMinLeftover, CurrentMin).\n\nbuy_choco_with_price([], _Price, _Money, MinLeftover, _CurrentMin) ->\n    MinLeftover;\nbuy_choco_with_price([NextPrice | RestPrices], Price, Money, MinLeftover, CurrentMin) ->\n    TotalCost = Price + NextPrice,\n    NewLeftover = if TotalCost =< Money andalso TotalCost > CurrentMin -> Money - TotalCost; true -> MinLeftover end,\n    buy_choco_with_price(RestPrices, Price, Money, NewLeftover, CurrentMin)."
}