{
    "status_code": 11,
    "lang": "erlang",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 59836000,
    "question_id": "2756",
    "elapsed_time": 1540,
    "compare_result
    "code_output": "2",
    "std_output": "",
    "last_testcase": "[98,54,6,34,66,63,52,39]\n62",
    "expected_output": "22",
    "task_finish_time": 1706056070327,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 815,
    "total_testcases": 2003,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Erlang",
    "submission_id": "1155075410",
    "input_formatted": "[98,54,6,34,66,63,52,39], 62",
    "input": "[98,54,6,34,66,63,52,39]\n62",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "-spec buy_choco(Prices :: [integer()], Money :: integer()) -> integer().\nbuy_choco(Prices, Money) ->\n    buy_choco_helper(Prices, Money, Money).\n\nbuy_choco_helper([], _Money, MinLeftover) ->\n    MinLeftover;\nbuy_choco_helper([Price | RestPrices], Money, MinLeftover) ->\n    NewMinLeftover = find_min_leftover(RestPrices, Price, Money, MinLeftover),\n    buy_choco_helper(RestPrices, Money, NewMinLeftover).\n\nfind_min_leftover([], _Price, _Money, MinLeftover) ->\n    MinLeftover;\nfind_min_leftover([NextPrice | RestPrices], Price, Money, MinLeftover) ->\n    TotalCost = Price + NextPrice,\n    NewLeftover = if TotalCost =< Money -> min(MinLeftover, Money - TotalCost); true -> MinLeftover end,\n    find_min_leftover(RestPrices, Price, Money, NewLeftover)."
}