{
    "status_code": 11,
    "lang": "csharp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 46860000,
    "question_id": "2756",
    "elapsed_time": 227,
    "compare_result
    "code_output": "2",
    "std_output": "",
    "last_testcase": "[98,54,6,34,66,63,52,39]\n62",
    "expected_output": "22",
    "task_finish_time": 1706048573025,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 815,
    "total_testcases": 2003,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C#",
    "submission_id": "1155019624",
    "input_formatted": "[98,54,6,34,66,63,52,39], 62",
    "input": "[98,54,6,34,66,63,52,39]\n62",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "public class Solution {\n    public int BuyChoco(int[] prices, int money) {\n        // Sort the array to simplify finding the pair of chocolates\n        Array.Sort(prices);\n\n        int maxSpent = -1; // Initialize to -1 to indicate no valid pair found initially\n\n        for (int i = 0; i < prices.Length; i++) {\n            for (int j = i + 1; j < prices.Length; j++) {\n                int sum = prices[i] + prices[j];\n\n                // Check if the sum is within the budget and maximizes the amount spent\n                if (sum <= money && sum > maxSpent) {\n                    maxSpent = sum;\n                }\n            }\n        }\n\n        // If no valid pair is found, return the original amount of money\n        if (maxSpent == -1) {\n            return money;\n        } else {\n            // Return the leftover money after buying the chocolates\n            return money - maxSpent;\n        }\n    }\n}"
}