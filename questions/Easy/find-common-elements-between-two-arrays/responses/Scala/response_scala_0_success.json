{
    "status_code": 10,
    "lang": "scala",
    "run_success": true,
    "status_runtime": "671 ms",
    "memory": 57496000,
    "question_id": "3206",
    "elapsed_time": 701,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706239249367,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 1207,
    "total_testcases": 1207,
    "runtime_percentile": 21.428100000000022,
    "status_memory": "57.5 MB",
    "memory_percentile": 64.28550000000001,
    "pretty_lang": "Scala",
    "submission_id": "1157016335",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "object Solution {\n    def findIntersectionValues(nums1: Array[Int], nums2: Array[Int]): Array[Int] = {\n        val setNums1 = nums1.toSet\n        val setNums2 = nums2.toSet\n\n        val count1 = nums1.count(setNums2.contains)\n        val count2 = nums2.count(setNums1.contains)\n\n        Array(count1, count2)\n    }\n}"
}