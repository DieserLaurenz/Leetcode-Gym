{
    "status_code": 11,
    "lang": "cpp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 73532000,
    "question_id": "3206",
    "elapsed_time": 85,
    "compare_result": "0100000000010000010110000001000001000000001000001000100000000000001011100000000100000010100100000000010000000000000110000000110011000000000100000000001010001000010000000000000000001000100000000010000001011000000000011000010101000000000000000000100110000000000000001000000000000001000000000001000001000000000100010000000000000001000110100000000010000000000000000000011000000000000011001010000001001110000000000000001000001000000000000010000000000110000000000000100000000000000000100000001001010000000000110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "code_output": "[2,2]",
    "std_output": "",
    "last_testcase": "[4,3,2,3,1]\n[2,2,5,2,3,6]",
    "expected_output": "[3,4]",
    "task_finish_time": 1706225151297,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 78,
    "total_testcases": 1207,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C++",
    "submission_id": "1156912688",
    "input_formatted": "[4,3,2,3,1], [2,2,5,2,3,6]",
    "input": "[4,3,2,3,1]\n[2,2,5,2,3,6]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "#include <vector>\n#include <unordered_set>\n\nusing namespace std;\n\nclass Solution {\npublic:\n    vector<int> findIntersectionValues(vector<int>& nums1, vector<int>& nums2) {\n        unordered_set<int> set2(nums2.begin(), nums2.end());\n\n        int count1 = 0;\n        unordered_set<int> seen1;\n        for (int num : nums1) {\n            if (set2.find(num) != set2.end() && seen1.find(num) == seen1.end()) {\n                count1++;\n                seen1.insert(num);\n            }\n        }\n\n        unordered_set<int> set1(nums1.begin(), nums1.end());\n        int count2 = 0;\n        unordered_set<int> seen2;\n        for (int num : nums2) {\n            if (set1.find(num) != set1.end() && seen2.find(num) == seen2.end()) {\n                count2++;\n                seen2.insert(num);\n            }\n        }\n\n        return vector<int>{count1, count2};\n    }\n};"
}