{
    "status_code": 10,
    "lang": "python3",
    "run_success": true,
    "status_runtime": "202 ms",
    "memory": 16560000,
    "question_id": "3206",
    "elapsed_time": 241,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1708704292217,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 1207,
    "total_testcases": 1207,
    "runtime_percentile": 10.4394,
    "status_memory": "16.6 MB",
    "memory_percentile": 82.7318,
    "pretty_lang": "Python3",
    "submission_id": "1184104272",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution:\n    def findIntersectionValues(self, nums1: list[int], nums2: list[int]) -> list[int]:\n        nums1_in_nums2 = len([num for num in set(nums1) if num in nums2])\n        nums2_in_nums1 = len([num for num in set(nums2) if num in nums1])\n        return [sum(1 for i in nums1 if i in set(nums2)), sum(1 for i in nums2 if i in set(nums1))]"
}