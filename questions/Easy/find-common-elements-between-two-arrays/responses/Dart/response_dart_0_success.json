{
    "status_code": 10,
    "lang": "dart",
    "run_success": true,
    "status_runtime": "415 ms",
    "memory": 158972000,
    "question_id": "3206",
    "elapsed_time": 513,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706235410341,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 1207,
    "total_testcases": 1207,
    "runtime_percentile": 47.058399999999985,
    "status_memory": "159 MB",
    "memory_percentile": 5.881599999999989,
    "pretty_lang": "Dart",
    "submission_id": "1156986131",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\n  List<int> findIntersectionValues(List<int> nums1, List<int> nums2) {\n    // Convert the lists to sets to eliminate duplicates and allow for efficient intersection\n    var set1 = nums1.toSet();\n    var set2 = nums2.toSet();\n\n    // Find the intersection of the two sets\n    var commonElements = set1.intersection(set2);\n\n    // Count the elements in nums1 that are present in the common elements\n    int countInNums1 = nums1.where((element) => commonElements.contains(element)).length;\n    \n    // Count the elements in nums2 that are present in the common elements\n    int countInNums2 = nums2.where((element) => commonElements.contains(element)).length;\n\n    // Return the counts as a list\n    return [countInNums1, countInNums2];\n  }\n}"
}