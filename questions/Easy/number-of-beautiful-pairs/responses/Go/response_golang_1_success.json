{
    "status_code": 10,
    "lang": "golang",
    "run_success": true,
    "status_runtime": "19 ms",
    "memory": 4480000,
    "question_id": "2831",
    "elapsed_time": 43,
    "compare_result": "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706607223098,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 3005,
    "total_testcases": 3005,
    "runtime_percentile": 80.76900000000002,
    "status_memory": "4.5 MB",
    "memory_percentile": 96.1538,
    "pretty_lang": "Go",
    "submission_id": "1160897714",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "func countBeautifulPairs(nums []int) int {\n    // Helper function to find the first digit of a number\n    firstDigit := func(n int) int {\n        for n >= 10 {\n            n /= 10\n        }\n        return n\n    }\n\n    // Helper function to find the greatest common divisor (GCD) of two numbers\n    gcd := func(x, y int) int {\n        for y != 0 {\n            x, y = y, x%y\n        }\n        return x\n    }\n\n    count := 0\n    for i := 0; i < len(nums)-1; i++ {\n        firstDigitI := firstDigit(nums[i])\n        for j := i + 1; j < len(nums); j++ {\n            lastDigitJ := nums[j] % 10\n            if gcd(firstDigitI, lastDigitJ) == 1 {\n                count++\n            }\n        }\n    }\n    return count\n}"
}