{
    "status_code": 10,
    "lang": "javascript",
    "run_success": true,
    "status_runtime": "132 ms",
    "memory": 54828000,
    "question_id": "2831",
    "elapsed_time": 138,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706606718407,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 3005,
    "total_testcases": 3005,
    "runtime_percentile": 77.77799999999999,
    "status_memory": "54.8 MB",
    "memory_percentile": 6.667399999999965,
    "pretty_lang": "JavaScript",
    "submission_id": "1160892320",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "/**\n * @param {number[]} nums\n * @return {number}\n */\nvar countBeautifulPairs = function(nums) {\n    // Helper function to find the Greatest Common Divisor (GCD) of two numbers.\n    function gcd(a, b) {\n        while (b !== 0) {\n            let t = b;\n            b = a % b;\n            a = t;\n        }\n        return a;\n    }\n    \n    // Function to get the first digit of a number.\n    function getFirstDigit(n) {\n        while (n >= 10) {\n            n = Math.floor(n / 10);\n        }\n        return n;\n    }\n    \n    // Function to get the last digit of a number.\n    function getLastDigit(n) {\n        return n % 10;\n    }\n    \n    let count = 0;\n    // Iterate through all pairs\n    for (let i = 0; i < nums.length; i++) {\n        for (let j = i + 1; j < nums.length; j++) {\n            // Extract the first digit of nums[i] and the last digit of nums[j]\n            let firstDigit = getFirstDigit(nums[i]);\n            let lastDigit = getLastDigit(nums[j]);\n            // Check if they are coprime\n            if (gcd(firstDigit, lastDigit) === 1) {\n                count++;\n            }\n        }\n    }\n    \n    return count;\n};"
}