{
    "status_code": 10,
    "lang": "csharp",
    "run_success": true,
    "status_runtime": "112 ms",
    "memory": 50856000,
    "question_id": "2831",
    "elapsed_time": 202,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706606672086,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 3005,
    "total_testcases": 3005,
    "runtime_percentile": 100,
    "status_memory": "50.9 MB",
    "memory_percentile": 77.77770000000001,
    "pretty_lang": "C#",
    "submission_id": "1160891791",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "public class Solution {\n    public int CountBeautifulPairs(int[] nums) {\n        int count = 0;\n        \n        // Helper method to find the GCD of two numbers\n        int Gcd(int a, int b) {\n            while (b != 0) {\n                int temp = b;\n                b = a % b;\n                a = temp;\n            }\n            return a;\n        }\n        \n        // Helper method to get the first digit of a number\n        int FirstDigit(int num) {\n            while (num >= 10) {\n                num /= 10;\n            }\n            return num;\n        }\n        \n        // Main logic to count beautiful pairs\n        for (int i = 0; i < nums.Length - 1; i++) {\n            for (int j = i + 1; j < nums.Length; j++) {\n                int firstDigitI = FirstDigit(nums[i]);\n                int lastDigitJ = nums[j] % 10;\n                \n                // Check if the first digit of nums[i] and the last digit of nums[j] are coprime\n                if (Gcd(firstDigitI, lastDigitJ) == 1) {\n                    count++;\n                }\n            }\n        }\n        \n        return count;\n    }\n}"
}