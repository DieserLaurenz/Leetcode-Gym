{
    "status_code": 10,
    "lang": "ruby",
    "run_success": true,
    "status_runtime": "560 ms",
    "memory": 211568000,
    "question_id": "2831",
    "elapsed_time": 832,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706607264896,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 3005,
    "total_testcases": 3005,
    "runtime_percentile": 33.33339999999999,
    "status_memory": "211.6 MB",
    "memory_percentile": 66.66669999999999,
    "pretty_lang": "Ruby",
    "submission_id": "1160898181",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "# @param {Integer[]} nums\n# @return {Integer}\ndef count_beautiful_pairs(nums)\n    # Helper method to find the greatest common divisor of two numbers\n    gcd = ->(a, b) { b == 0 ? a : gcd.call(b, a % b) }\n\n    # Helper method to get the first digit of a number\n    first_digit = ->(num) { num.to_s[0].to_i }\n\n    # Helper method to get the last digit of a number\n    last_digit = ->(num) { num % 10 }\n\n    beautiful_pairs_count = 0\n\n    nums.each_with_index do |num_i, i|\n        (i+1...nums.length).each do |j|\n            num_j = nums[j]\n            # Check if the first digit of nums[i] and the last digit of nums[j] are coprime\n            if gcd.call(first_digit.call(num_i), last_digit.call(num_j)) == 1\n                beautiful_pairs_count += 1\n            end\n        end\n    end\n\n    beautiful_pairs_count\nend"
}