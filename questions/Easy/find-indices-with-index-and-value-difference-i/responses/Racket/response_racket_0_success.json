{
    "status_code": 10,
    "lang": "racket",
    "run_success": true,
    "status_runtime": "191 ms",
    "memory": 100984000,
    "question_id": "3165",
    "elapsed_time": 286,
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706251257696,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 525,
    "total_testcases": 525,
    "runtime_percentile": 100,
    "status_memory": "101 MB",
    "memory_percentile": 100,
    "pretty_lang": "Racket",
    "submission_id": "1157146934",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "(define/contract (find-indices nums indexDifference valueDifference)\n  (-> (listof exact-integer?) exact-integer? exact-integer? (listof exact-integer?))\n  \n  (let loop ((i 0))\n    (if (< i (length nums))\n        (let inner-loop ((j 0))\n          (if (< j (length nums))\n              (if (and (>= (abs (- i j)) indexDifference)\n                       (>= (abs (- (list-ref nums i) (list-ref nums j))) valueDifference))\n                  (list i j)\n                  (inner-loop (+ j 1)))\n              (loop (+ i 1))))\n        (list -1 -1))))"
}