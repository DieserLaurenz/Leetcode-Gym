{
    "status_code": 20,
    "lang": "elixir",
    "run_success": false,
    "compile_error": "error: undefined function return/1 (expected Solution to define such a function or for it to be imported, but none are available)",
    "full_compile_error": "error: undefined function return/1 (expected Solution to define such a function or for it to be imported, but none are available)\nLine 9:   Solution.find_indices/3\n** (CompileError) solution.ex: cannot compile module Solution (errors have been logged)",
    "status_runtime": "N/A",
    "memory": 0,
    "question_id": "3165",
    "task_finish_time": 1706251557839,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": null,
    "total_testcases": null,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Elixir",
    "submission_id": "1157150931",
    "status_msg": "Compile Error",
    "state": "SUCCESS",
    "code": "defmodule Solution do\n  @spec find_indices(nums :: [integer], index_difference :: integer, value_difference :: integer) :: [integer]\n  def find_indices(nums, index_difference, value_difference) do\n    n = length(nums)\n\n    for i <- 0..(n - 1) do\n      for j <- 0..(n - 1) do\n        if abs(i - j) >= index_difference and abs(Enum.at(nums, i) - Enum.at(nums, j)) >= value_difference do\n          return [i, j]\n        end\n      end\n    end\n\n    [-1, -1]\n  end\nend"
}