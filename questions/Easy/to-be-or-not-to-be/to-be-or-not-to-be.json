{
    "acRate": 61.572460203739745,
    "difficulty": "Easy",
    "freqBar": null,
    "frontendQuestionId": "2704",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "To Be Or Not To Be",
    "titleSlug": "to-be-or-not-to-be",
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false,
    "codeSnippets": [
        {
            "lang": "JavaScript",
            "langSlug": "javascript",
            "code": "/**  * @param {string} val  * @return {Object}  */ var expect = function(val) {      };  /**  * expect(5).toBe(5); // true  * expect(5).notToBe(5); // throws \"Equal\"  */"
        },
        {
            "lang": "TypeScript",
            "langSlug": "typescript",
            "code": "type ToBeOrNotToBe = {     toBe: (val: any) => boolean;     notToBe: (val: any) => boolean; };  function expect(val: any): ToBeOrNotToBe {      };  /**  * expect(5).toBe(5); // true  * expect(5).notToBe(5); // throws \"Equal\"  */"
        }
    ],
    "content": "Write a functionexpect that helps developers test their code. It should take in any valuevaland return an object with the following two functions.  toBe(val)accepts another value and returnstrueif the two values===each other. If they are not equal, it should throw an error\"Not Equal\". notToBe(val)accepts another value and returnstrueif the two values!==each other. If they are equal, it should throw an error\"Equal\".   Example 1:  Input: func = () => expect(5).toBe(5) Output: {\"value\": true} Explanation: 5 === 5 so this expression returns true.  Example 2:  Input: func = () => expect(5).toBe(null) Output: {\"error\": \"Not Equal\"} Explanation: 5 !== null so this expression throw the error \"Not Equal\".  Example 3:  Input: func = () => expect(5).notToBe(null) Output: {\"value\": true} Explanation: 5 !== null so this expression returns true.  "
}