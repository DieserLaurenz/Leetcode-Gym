{
    "status_code": 10,
    "lang": "java",
    "run_success": true,
    "status_runtime": "1 ms",
    "memory": 41968000,
    "display_runtime": "1",
    "question_id": "3176",
    "elapsed_time": 113,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706565100261,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 724,
    "total_testcases": 724,
    "runtime_percentile": 100,
    "status_memory": "42 MB",
    "memory_percentile": 40.246300000000005,
    "pretty_lang": "Java",
    "submission_id": "1160475597",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\n    public int minimumSum(int[] nums) {\n        int minSum = Integer.MAX_VALUE;\n        \n        // Iterate through all possible triplets\n        for (int i = 0; i < nums.length - 2; i++) {\n            for (int j = i + 1; j < nums.length - 1; j++) {\n                for (int k = j + 1; k < nums.length; k++) {\n                    // Check if it's a mountain triplet\n                    if (nums[i] < nums[j] && nums[k] < nums[j]) {\n                        // Calculate the sum and update minSum if it's smaller\n                        int sum = nums[i] + nums[j] + nums[k];\n                        minSum = Math.min(minSum, sum);\n                    }\n                }\n            }\n        }\n        \n        // Check if a mountain triplet was found\n        return minSum == Integer.MAX_VALUE ? -1 : minSum;\n    }\n}"
}