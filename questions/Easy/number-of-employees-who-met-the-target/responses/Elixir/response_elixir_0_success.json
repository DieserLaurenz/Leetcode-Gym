{
    "status_code": 10,
    "lang": "elixir",
    "run_success": true,
    "status_runtime": "331 ms",
    "memory": 72060000,
    "question_id": "2876",
    "elapsed_time": 390,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706617466894,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 707,
    "total_testcases": 707,
    "runtime_percentile": 100,
    "status_memory": "72.1 MB",
    "memory_percentile": 100,
    "pretty_lang": "Elixir",
    "submission_id": "1161003385",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "defmodule Solution do\n  @spec number_of_employees_who_met_target(hours :: [integer], target :: integer) :: integer\n  def number_of_employees_who_met_target(hours, target) do\n    hours\n    |> Enum.filter(fn hour -> hour >= target end)\n    |> Enum.count()\n  end\nend"
}