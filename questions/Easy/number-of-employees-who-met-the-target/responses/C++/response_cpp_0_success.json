{
    "status_code": 10,
    "lang": "cpp",
    "run_success": true,
    "status_runtime": "3 ms",
    "memory": 23268000,
    "question_id": "2876",
    "elapsed_time": 23,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706607756545,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 707,
    "total_testcases": 707,
    "runtime_percentile": 84.0498,
    "status_memory": "23.3 MB",
    "memory_percentile": 10.112299999999987,
    "pretty_lang": "C++",
    "submission_id": "1160903464",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\npublic:\n    int numberOfEmployeesWhoMetTarget(vector<int>& hours, int target) {\n        int count = 0; // Initialize a counter to keep track of employees meeting the target\n        for (int hour : hours) { // Iterate through each employee's worked hours\n            if (hour >= target) { // Check if the current employee's hours meet or exceed the target\n                count++; // Increment the counter if the condition is true\n            }\n        }\n        return count; // Return the total count of employees who met or exceeded the target hours\n    }\n};"
}