{
    "status_code": 10,
    "lang": "rust",
    "run_success": true,
    "status_runtime": "0 ms",
    "memory": 2072000,
    "question_id": "2876",
    "elapsed_time": 12,
    "compare_result": "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706617373126,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 707,
    "total_testcases": 707,
    "runtime_percentile": 100,
    "status_memory": "2.1 MB",
    "memory_percentile": 87.5,
    "pretty_lang": "Rust",
    "submission_id": "1161002363",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "impl Solution {\n    pub fn number_of_employees_who_met_target(hours: Vec<i32>, target: i32) -> i32 {\n        // Use iterator methods to filter and count the employees who met or exceeded the target hours.\n        hours.iter().filter(|&&x| x >= target).count() as i32\n    }\n}"
}