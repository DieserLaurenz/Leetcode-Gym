{
    "status_code": 11,
    "lang": "java",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 45484000,
    "display_runtime": "18",
    "question_id": "2881",
    "elapsed_time": 290,
    "compare_result
    "code_output": "[]",
    "std_output": "",
    "last_testcase": "[\"one.two.three\",\"four.five\",\"six\"]\n\".\"",
    "expected_output": "[\"one\",\"two\",\"three\",\"four\",\"five\",\"six\"]",
    "task_finish_time": 1706668587070,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 510,
    "total_testcases": 1036,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Java",
    "submission_id": "1161590773",
    "input_formatted": "[\"one.two.three\",\"four.five\",\"six\"], \".\"",
    "input": "[\"one.two.three\",\"four.five\",\"six\"]\n\".\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "import java.util.ArrayList;\nimport java.util.List;\n\nclass Solution {\n    public List<String> splitWordsBySeparator(List<String> words, char separator) {\n        List<String> result = new ArrayList<>();\n        for (String word : words) {\n            // Split the word by the separator\n            String[] splitWords = word.split(String.valueOf(separator));\n            // Iterate through the split words and add non-empty strings to the result\n            for (String splitWord : splitWords) {\n                if (!splitWord.isEmpty()) {\n                    result.add(splitWord);\n                }\n            }\n        }\n        return result;\n    }\n}"
}