{
    "status_code": 10,
    "lang": "rust",
    "run_success": true,
    "status_runtime": "12 ms",
    "memory": 2260000,
    "question_id": "2881",
    "elapsed_time": 21,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706669232739,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 1036,
    "total_testcases": 1036,
    "runtime_percentile": 25.0,
    "status_memory": "2.3 MB",
    "memory_percentile": 87.5,
    "pretty_lang": "Rust",
    "submission_id": "1161596843",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "impl Solution {\n    pub fn split_words_by_separator(words: Vec<String>, separator: char) -> Vec<String> {\n        words.iter() // Iterate over the words\n            .flat_map(|word| word.split(separator)) // Split each word by the separator, flattening the result\n            .filter(|&split| !split.is_empty()) // Filter out any empty strings resulting from the split\n            .map(|split| split.to_string()) // Convert each split &str to a String\n            .collect() // Collect into a Vec<String>\n    }\n}"
}