{
    "status_code": 10,
    "lang": "swift",
    "run_success": true,
    "status_runtime": "149 ms",
    "memory": 16236000,
    "question_id": "2881",
    "elapsed_time": 167,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706668999335,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 1036,
    "total_testcases": 1036,
    "runtime_percentile": 16.3269,
    "status_memory": "16.2 MB",
    "memory_percentile": 16.326800000000006,
    "pretty_lang": "Swift",
    "submission_id": "1161594628",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\n    func splitWordsBySeparator(_ words: [String], _ separator: Character) -> [String] {\n        // Initialize an empty array to hold the split words.\n        var splitWords = [String]()\n        \n        // Iterate over each word in the input array.\n        for word in words {\n            // Split the current word by the separator, excluding empty subsequences to ignore empty strings.\n            let splits = word.split(separator: separator, omittingEmptySubsequences: true)\n            \n            // Append each split part to the splitWords array.\n            for split in splits {\n                splitWords.append(String(split)) // Convert Substring to String before appending.\n            }\n        }\n        \n        // Return the array of split words.\n        return splitWords\n    }\n}"
}