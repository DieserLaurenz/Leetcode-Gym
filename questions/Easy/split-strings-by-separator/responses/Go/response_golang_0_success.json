{
    "status_code": 10,
    "lang": "golang",
    "run_success": true,
    "status_runtime": "22 ms",
    "memory": 7112000,
    "question_id": "2881",
    "elapsed_time": 34,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706669128919,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 1036,
    "total_testcases": 1036,
    "runtime_percentile": 64.22769999999997,
    "status_memory": "7.1 MB",
    "memory_percentile": 52.84559999999999,
    "pretty_lang": "Go",
    "submission_id": "1161595870",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "package main\n\nimport (\n    \"strings\"\n)\n\nfunc splitWordsBySeparator(words []string, separator byte) []string {\n    var result []string\n    sep := string(separator) // Convert byte to string for the separator\n    \n    for _, word := range words {\n        // Split the current word by the separator\n        splitWords := strings.Split(word, sep)\n        for _, splitWord := range splitWords {\n            // Exclude empty strings\n            if splitWord != \"\" {\n                result = append(result, splitWord)\n            }\n        }\n    }\n    \n    return result\n}"
}