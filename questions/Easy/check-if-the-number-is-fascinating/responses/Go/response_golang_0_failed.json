{
    "status_code": 20,
    "lang": "golang",
    "run_success": false,
    "compile_error": "Line 50: Char 6: main redeclared in this block (solution.go)",
    "full_compile_error": "Line 50: Char 6: main redeclared in this block (solution.go)\nLine 36: Char 6: other declaration of main (solution.go)",
    "status_runtime": "N/A",
    "memory": 0,
    "question_id": "2824",
    "task_finish_time": 1706116067549,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": null,
    "total_testcases": null,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Go",
    "submission_id": "1155736471",
    "status_msg": "Compile Error",
    "state": "SUCCESS",
    "code": "package main\n\nimport (\n \"fmt\"\n \"strconv\"\n)\n\nfunc isFascinating(n int) bool {\n // Concatenate n, 2*n, and 3*n\n concatenated := strconv.Itoa(n) + strconv.Itoa(2*n) + strconv.Itoa(3*n)\n\n // Check if the concatenated string contains all digits from 1 to 9 exactly once\n return containsAllDigits(concatenated)\n}\n\n// Helper function to check if the string contains all digits from 1 to 9 exactly once\nfunc containsAllDigits(s string) bool {\n if len(s) != 9 {\n  return false\n }\n\n digitCount := make(map[rune]int)\n for _, char := range s {\n  digitCount[char]++\n }\n\n for i := '1'; i <= '9'; i++ {\n  if digitCount[i] != 1 {\n   return false\n  }\n }\n\n return true\n}\n\nfunc main() {\n // Example tests\n fmt.Println(isFascinating(192)) // true\n fmt.Println(isFascinating(100)) // false\n}"
}