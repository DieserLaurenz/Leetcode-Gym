{
    "status_code": 10,
    "lang": "golang",
    "run_success": true,
    "status_runtime": "0 ms",
    "memory": 2068000,
    "question_id": "2824",
    "elapsed_time": 18,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706116491178,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 900,
    "total_testcases": 900,
    "runtime_percentile": 100,
    "status_memory": "2.1 MB",
    "memory_percentile": 97.7778,
    "pretty_lang": "Go",
    "submission_id": "1155743275",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "package main\n\nimport (\n    \"strconv\"\n)\n\nfunc isFascinating(n int) bool {\n    // Concatenate n, 2*n, and 3*n\n    concatenated := strconv.Itoa(n) + strconv.Itoa(2*n) + strconv.Itoa(3*n)\n\n    // Check if the concatenated string contains all digits from 1 to 9 exactly once\n    return containsAllDigits(concatenated)\n}\n\n// Helper function to check if the string contains all digits from 1 to 9 exactly once\nfunc containsAllDigits(s string) bool {\n    if len(s) != 9 {\n        return false\n    }\n\n    digitCount := make(map[rune]int)\n    for _, char := range s {\n        digitCount[char]++\n    }\n\n    for i := '1'; i <= '9'; i++ {\n        if digitCount[i] != 1 {\n            return false\n        }\n    }\n\n    return true\n}"
}