{
    "status_code": 10,
    "lang": "csharp",
    "run_success": true,
    "status_runtime": "36 ms",
    "memory": 29772000,
    "question_id": "2824",
    "elapsed_time": 73,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706112591226,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 900,
    "total_testcases": 900,
    "runtime_percentile": 30.357299999999977,
    "status_memory": "29.8 MB",
    "memory_percentile": 10.714399999999982,
    "pretty_lang": "C#",
    "submission_id": "1155683304",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "public class Solution {\n    public bool IsFascinating(int n) {\n        // Concatenate n, 2*n, and 3*n\n        string concatenated = $\"{n}{n * 2}{n * 3}\";\n\n        // Check for the length of the concatenated string\n        if (concatenated.Length != 9) {\n            return false;\n        }\n\n        // Check if concatenated string contains all digits from 1 to 9 exactly once\n        for (int i = 1; i <= 9; i++) {\n            int count = concatenated.Count(f => f == (char)(i + '0'));\n            if (count != 1) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n}"
}