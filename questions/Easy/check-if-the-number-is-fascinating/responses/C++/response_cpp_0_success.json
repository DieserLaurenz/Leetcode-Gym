{
    "status_code": 10,
    "lang": "cpp",
    "run_success": true,
    "status_runtime": "0 ms",
    "memory": 7948000,
    "question_id": "2824",
    "elapsed_time": 29,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706109468216,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 900,
    "total_testcases": 900,
    "runtime_percentile": 100,
    "status_memory": "7.9 MB",
    "memory_percentile": 5.499199999999994,
    "pretty_lang": "C++",
    "submission_id": "1155640096",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "#include <string>\n#include <algorithm>\n\nclass Solution {\npublic:\n    bool isFascinating(int n) {\n        // Concatenate n, 2n, and 3n into a string\n        std::string concatenated = std::to_string(n) + std::to_string(n * 2) + std::to_string(n * 3);\n        \n        // Check if the concatenated string has the length of 9\n        if (concatenated.length() != 9) {\n            return false;\n        }\n\n        // Sort the string\n        std::sort(concatenated.begin(), concatenated.end());\n\n        // Check if the sorted string contains all digits from '1' to '9' without any '0'\n        return concatenated == \"123456789\";\n    }\n};"
}