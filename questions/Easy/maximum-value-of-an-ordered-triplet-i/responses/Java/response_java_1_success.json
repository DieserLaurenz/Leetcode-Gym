{
    "status_code": 10,
    "lang": "java",
    "run_success": true,
    "status_runtime": "3 ms",
    "memory": 41800000,
    "display_runtime": "3",
    "question_id": "3154",
    "elapsed_time": 149,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706491143440,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 564,
    "total_testcases": 564,
    "runtime_percentile": 55.604400000000005,
    "status_memory": "41.8 MB",
    "memory_percentile": 56.26359999999999,
    "pretty_lang": "Java",
    "submission_id": "1159645259",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\n    public long maximumTripletValue(int[] nums) {\n        long maxVal = 0; // To track the maximum value of all triplets\n        int n = nums.length;\n        \n        for (int i = 0; i < n - 2; i++) {\n            for (int j = i + 1; j < n - 1; j++) {\n                for (int k = j + 1; k < n; k++) {\n                    // Calculate the value of the current triplet\n                    long currentValue = (long) (nums[i] - nums[j]) * nums[k];\n                    // Update maxVal if the current value is greater\n                    maxVal = Math.max(maxVal, currentValue);\n                }\n            }\n        }\n        \n        return maxVal;\n    }\n}"
}