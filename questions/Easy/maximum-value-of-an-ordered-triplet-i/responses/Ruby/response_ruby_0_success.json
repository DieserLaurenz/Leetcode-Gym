{
    "status_code": 10,
    "lang": "ruby",
    "run_success": true,
    "status_runtime": "171 ms",
    "memory": 211488000,
    "question_id": "3154",
    "elapsed_time": 240,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706495944155,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 564,
    "total_testcases": 564,
    "runtime_percentile": 6.666399999999995,
    "status_memory": "211.5 MB",
    "memory_percentile": 26.666700000000006,
    "pretty_lang": "Ruby",
    "submission_id": "1159683458",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "# @param {Integer[]} nums\n# @return {Integer}\ndef maximum_triplet_value(nums)\n    max_val = 0\n    n = nums.length\n    \n    # Loop through all possible triplets\n    for i in 0...(n-2)\n        for j in (i+1)...(n-1)\n            for k in (j+1)...n\n                # Calculate the value of the current triplet\n                current_val = (nums[i] - nums[j]) * nums[k]\n                # Update max_val if the current_val is greater\n                max_val = [max_val, current_val].max\n            end\n        end\n    end\n    \n    max_val\nend"
}