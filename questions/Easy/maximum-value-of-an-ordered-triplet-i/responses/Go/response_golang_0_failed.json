{
    "status_code": 11,
    "lang": "golang",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 2512000,
    "question_id": "3154",
    "elapsed_time": 12,
    "compare_result": "011111010101110000001010010100110101000010001001101100100110101001100001111001011101110100000011101111100011011100011000011100101101111000111100100101101101011001000000101001110111101001101000100000111011010100011011110101101000111110110010001100001000000001100111100010010110100101100100001000000000101010101100001010111100101101101001011010111111101000111011001011110100001111111111000110111010011110110110110100111100000011100010001000100111000111010000011110111010001001001000011101111100001000101111111000000010000000000000000010000001001100001001000000000011",
    "code_output": "42",
    "std_output": "",
    "last_testcase": "[12,6,1,2,7]",
    "expected_output": "77",
    "task_finish_time": 1706494927106,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 262,
    "total_testcases": 564,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Go",
    "submission_id": "1159674978",
    "input_formatted": "[12,6,1,2,7]",
    "input": "[12,6,1,2,7]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "func maximumTripletValue(nums []int) int64 {\n    maxVal := int64(0)\n    n := len(nums)\n\n    // Initialize min value for nums[i] - nums[j]\n    minDiff := make([]int, n)\n    minDiff[0] = nums[0]\n    for i := 1; i < n; i++ {\n        minDiff[i] = min(minDiff[i-1], nums[i])\n    }\n\n    for k := 2; k < n; k++ {\n        for j := 1; j < k; j++ {\n            diff := nums[j-1] - nums[j]\n            val := int64(diff) * int64(nums[k])\n            if val > maxVal {\n                maxVal = val\n            }\n        }\n    }\n\n    return maxVal\n}\n\nfunc min(a, b int) int {\n    if a < b {\n        return a\n    }\n    return b\n}"
}