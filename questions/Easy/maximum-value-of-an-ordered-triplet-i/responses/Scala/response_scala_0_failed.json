{
    "status_code": 11,
    "lang": "scala",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 55768000,
    "question_id": "3154",
    "elapsed_time": 516,
    "compare_result
    "code_output": "0",
    "std_output": "",
    "last_testcase": "[1000000,1,1000000]",
    "expected_output": "999999000000",
    "task_finish_time": 1706496368341,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 277,
    "total_testcases": 564,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Scala",
    "submission_id": "1159686951",
    "input_formatted": "[1000000,1,1000000]",
    "input": "[1000000,1,1000000]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "object Solution {\n    def maximumTripletValue(nums: Array[Int]): Long = {\n        var maxVal = 0L\n        val n = nums.length\n        val maxLeft = Array.fill(n)(0)\n        val minLeft = Array.fill(n)(0)\n        \n        maxLeft(0) = nums(0)\n        minLeft(0) = nums(0)\n        for (i <- 1 until n) {\n            maxLeft(i) = maxLeft(i - 1).max(nums(i))\n            minLeft(i) = minLeft(i - 1).min(nums(i))\n        }\n\n        for (j <- 1 until n - 1) {\n            if (nums(j) < maxLeft(j - 1)) {\n                for (k <- j + 1 until n) {\n                    val diff = (maxLeft(j - 1) - nums(j)) * nums(k)\n                    if (diff > maxVal) maxVal = diff\n                }\n            }\n        }\n        \n        maxVal\n    }\n}"
}