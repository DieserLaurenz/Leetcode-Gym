{
    "status_code": 10,
    "lang": "php",
    "run_success": true,
    "status_runtime": "65 ms",
    "memory": 19968000,
    "question_id": "3154",
    "elapsed_time": 87,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706493247555,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 564,
    "total_testcases": 564,
    "runtime_percentile": 100,
    "status_memory": "20 MB",
    "memory_percentile": 100,
    "pretty_lang": "PHP",
    "submission_id": "1159661552",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @return Integer\n     */\n    function maximumTripletValue($nums) {\n        $maxValue = 0;\n        $n = count($nums);\n\n        for ($i = 0; $i < $n - 2; $i++) {\n            for ($j = $i + 1; $j < $n - 1; $j++) {\n                for ($k = $j + 1; $k < $n; $k++) {\n                    $tripletValue = ($nums[$i] - $nums[$j]) * $nums[$k];\n                    $maxValue = max($maxValue, $tripletValue);\n                }\n            }\n        }\n\n        return $maxValue;\n    }\n}"
}