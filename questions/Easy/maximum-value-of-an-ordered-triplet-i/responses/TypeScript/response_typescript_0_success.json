{
    "status_code": 10,
    "lang": "typescript",
    "run_success": true,
    "status_runtime": "79 ms",
    "memory": 52288000,
    "question_id": "3154",
    "elapsed_time": 122,
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706492827889,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 564,
    "total_testcases": 564,
    "runtime_percentile": 16.666499999999992,
    "status_memory": "52.3 MB",
    "memory_percentile": 8.333400000000005,
    "pretty_lang": "TypeScript",
    "submission_id": "1159658332",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "function maximumTripletValue(nums: number[]): number {\n    let maxVal = 0;\n    // Iterate over each possible triplet in the array\n    for (let i = 0; i < nums.length - 2; i++) {\n        for (let j = i + 1; j < nums.length - 1; j++) {\n            for (let k = j + 1; k < nums.length; k++) {\n                // Calculate the value of the current triplet\n                let currentValue = (nums[i] - nums[j]) * nums[k];\n                // Update maxVal if the currentValue is greater\n                maxVal = Math.max(maxVal, currentValue);\n            }\n        }\n    }\n    // Return maxVal, or 0 if all triplets have a negative value\n    return maxVal;\n};"
}