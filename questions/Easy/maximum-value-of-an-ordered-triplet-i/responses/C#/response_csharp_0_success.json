{
    "status_code": 10,
    "lang": "csharp",
    "run_success": true,
    "status_runtime": "68 ms",
    "memory": 42052000,
    "question_id": "3154",
    "elapsed_time": 120,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706491984103,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 564,
    "total_testcases": 564,
    "runtime_percentile": 82.14290000000001,
    "status_memory": "42.1 MB",
    "memory_percentile": 10.71460000000003,
    "pretty_lang": "C#",
    "submission_id": "1159651778",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "public class Solution {\n    public long MaximumTripletValue(int[] nums) {\n        long maxTripletValue = 0;\n        int n = nums.Length;\n        \n        for (int i = 0; i < n - 2; i++) {\n            for (int j = i + 1; j < n - 1; j++) {\n                for (int k = j + 1; k < n; k++) {\n                    long currentValue = (long)(nums[i] - nums[j]) * nums[k];\n                    maxTripletValue = Math.Max(maxTripletValue, currentValue);\n                }\n            }\n        }\n\n        return maxTripletValue;\n    }\n}"
}