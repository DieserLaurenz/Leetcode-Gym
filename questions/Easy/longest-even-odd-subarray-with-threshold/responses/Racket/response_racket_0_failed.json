{
    "status_code": 11,
    "lang": "racket",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 126808000,
    "question_id": "2866",
    "elapsed_time": 478,
    "compare_result
    "code_output": "2",
    "std_output": "",
    "last_testcase": "[3,2,5,4]\n5",
    "expected_output": "3",
    "task_finish_time": 1706420789185,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 3789,
    "total_testcases": 6873,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Racket",
    "submission_id": "1158920455",
    "input_formatted": "[3,2,5,4], 5",
    "input": "[3,2,5,4]\n5",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "(define/contract (longest-alternating-subarray nums threshold)\n  (-> (listof exact-integer?) exact-integer? exact-integer?)\n  (let loop ((nums nums) (max-len 0) (current-len 0) (last-even? #f))\n    (cond\n      ((null? nums) max-len)\n      ((and (<= (car nums) threshold)\n            (or (and (even? (car nums)) (not last-even?))\n                (and (odd? (car nums)) last-even?)))\n       (loop (cdr nums)\n             (if (or (= current-len 0) last-even?)\n                 (max max-len (add1 current-len))\n                 max-len)\n             (add1 current-len)\n             (even? (car nums))))\n      (else\n       (loop (cdr nums) max-len 0 #f)))))"
}