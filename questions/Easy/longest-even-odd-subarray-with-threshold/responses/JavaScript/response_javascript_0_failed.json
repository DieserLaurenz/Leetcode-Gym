{
    "status_code": 11,
    "lang": "javascript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 57964000,
    "question_id": "2866",
    "elapsed_time": 188,
    "compare_result
    "code_output": "0",
    "std_output": "",
    "last_testcase": "[2,5]\n2",
    "expected_output": "1",
    "task_finish_time": 1706419136002,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 6600,
    "total_testcases": 6873,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "JavaScript",
    "submission_id": "1158903034",
    "input_formatted": "[2,5], 2",
    "input": "[2,5]\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "/**\n * @param {number[]} nums\n * @param {number} threshold\n * @return {number}\n */\nvar longestAlternatingSubarray = function(nums, threshold) {\n    let maxLength = 0;\n    let start = 0; // Start of the current subarray being considered.\n\n    // Iterate through the array to find valid subarrays.\n    for (let i = 0; i < nums.length; i++) {\n        // Check if the current element is within the threshold.\n        if (nums[i] > threshold) {\n            start = i + 1;\n            continue;\n        }\n\n        // If we're at the first element or if the current element violates the alternating pattern,\n        // reset the start to the current position if it is even and within the threshold.\n        if (i === 0 || nums[i] % 2 === nums[i - 1] % 2 || nums[i - 1] > threshold) {\n            if (nums[i] % 2 === 0) start = i;\n            else start = i + 1;\n        }\n\n        // Calculate the length of the current valid subarray and update maxLength if necessary.\n        // The subarray must start with an even number and alternate between even and odd.\n        if (i > start && nums[start] % 2 === 0) {\n            const length = i - start + 1;\n            maxLength = Math.max(maxLength, length);\n        }\n    }\n\n    // Check for the last element in the array if it is the end of a valid subarray.\n    if (nums[nums.length - 1] % 2 === 0 && nums[nums.length - 1] <= threshold) {\n        maxLength = Math.max(maxLength, 1);\n    }\n\n    return maxLength;\n};"
}