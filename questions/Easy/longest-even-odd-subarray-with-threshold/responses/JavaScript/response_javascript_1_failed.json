{
    "status_code": 11,
    "lang": "javascript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 57088000,
    "question_id": "2866",
    "elapsed_time": 163,
    "compare_result
    "code_output": "1",
    "std_output": "",
    "last_testcase": "[4,10,3]\n10",
    "expected_output": "2",
    "task_finish_time": 1706419734770,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 6583,
    "total_testcases": 6873,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "JavaScript",
    "submission_id": "1158909303",
    "input_formatted": "[4,10,3], 10",
    "input": "[4,10,3]\n10",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "/**\n * @param {number[]} nums\n * @param {number} threshold\n * @return {number}\n */\nvar longestAlternatingSubarray = function(nums, threshold) {\n    let maxLength = 0;\n    let start = 0; // Start of the current subarray being considered.\n\n    for (let i = 0; i < nums.length; i++) {\n        // Check if the current number exceeds the threshold or does not satisfy the alternation condition.\n        if (nums[i] > threshold || (i > start && nums[i] % 2 === nums[i - 1] % 2)) {\n            // Reset start index if current number is invalid.\n            start = i + 1;\n        } else if (i === start) {\n            // If the loop is at the start of a potential subarray, check if it begins with an even number.\n            if (nums[i] % 2 === 0 && nums[i] <= threshold) {\n                maxLength = Math.max(maxLength, 1); // Ensure at least a length of 1 for valid starts.\n            } else {\n                // If the current start is not valid, move to the next index.\n                start = i + 1;\n            }\n        } else {\n            // Calculate the length of the current valid subarray and update maxLength if necessary.\n            const length = i - start + 1;\n            maxLength = Math.max(maxLength, length);\n        }\n    }\n\n    return maxLength;\n};"
}