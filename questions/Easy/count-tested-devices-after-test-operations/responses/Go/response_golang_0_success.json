{
    "status_code": 10,
    "lang": "golang",
    "run_success": true,
    "status_runtime": "7 ms",
    "memory": 2808000,
    "question_id": "3220",
    "elapsed_time": 14,
    "compare_result": "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706147208984,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 520,
    "total_testcases": 520,
    "runtime_percentile": 16.66660000000001,
    "status_memory": "2.8 MB",
    "memory_percentile": 81.9444,
    "pretty_lang": "Go",
    "submission_id": "1156056383",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "func countTestedDevices(batteryPercentages []int) int {\n    count := 0\n\n    for i := 0; i < len(batteryPercentages); i++ {\n        if batteryPercentages[i] > 0 {\n            count++  // increment the count of tested devices\n            // decrease the battery percentage of all devices from i+1 to end\n            for j := i + 1; j < len(batteryPercentages); j++ {\n                if batteryPercentages[j] > 0 {\n                    batteryPercentages[j]--\n                }\n            }\n        }\n        // if batteryPercentages[i] is 0, simply move to the next device\n    }\n\n    return count\n}"
}