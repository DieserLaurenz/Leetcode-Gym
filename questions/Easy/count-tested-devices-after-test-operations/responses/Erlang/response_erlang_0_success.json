{
    "status_code": 10,
    "lang": "erlang",
    "run_success": true,
    "status_runtime": "280 ms",
    "memory": 59108000,
    "question_id": "3220",
    "elapsed_time": 1348,
    "compare_result": "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706150270050,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 520,
    "total_testcases": 520,
    "runtime_percentile": 100,
    "status_memory": "59.1 MB",
    "memory_percentile": 100,
    "pretty_lang": "Erlang",
    "submission_id": "1156081960",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "-spec count_tested_devices(BatteryPercentages :: [integer()]) -> integer().\ncount_tested_devices(BatteryPercentages) ->\n    count_tested_devices(BatteryPercentages, 0, 0).\n\ncount_tested_devices([], Count, _) ->\n    Count;\ncount_tested_devices([H|T], Count, Index) ->\n    case H > 0 of\n        true ->\n            UpdatedTail = lists:map(fun(X) -> max(0, X - 1) end, T),\n            count_tested_devices(UpdatedTail, Count + 1, Index + 1);\n        false ->\n            count_tested_devices(T, Count, Index + 1)\n    end."
}