{
    "status_code": 11,
    "lang": "racket",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 125968000,
    "question_id": "3220",
    "elapsed_time": 428,
    "compare_result
    "code_output": "8",
    "std_output": "",
    "last_testcase": "[1,1,2,1,3]",
    "expected_output": "3",
    "task_finish_time": 1706149129412,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 10,
    "total_testcases": 520,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Racket",
    "submission_id": "1156072082",
    "input_formatted": "[1,1,2,1,3]",
    "input": "[1,1,2,1,3]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "(define/contract (count-tested-devices batteryPercentages)\n  (-> (listof exact-integer?) exact-integer?)\n  \n  ; Helper function to decrement the battery percentages of devices\n  ; from index start to the end of the list\n  (define (decrement-batteries lst start)\n    (if (null? lst)\n        '()\n        (cons (if (< start 0)\n                  (car lst)\n                  (max 0 (- (car lst) 1)))\n              (decrement-batteries (cdr lst) (- start 1)))))\n\n  ; Main function logic\n  (let loop ([batteries batteryPercentages]\n             [index 0]\n             [count 0])\n    (cond\n      [(null? batteries) count] ; When all devices have been checked\n      [(> (car batteries) 0)\n       ; Test the device and decrement the rest\n       (loop (decrement-batteries batteries 0)\n             (+ index 1)\n             (+ count 1))]\n      [else\n       ; Move to the next device without testing\n       (loop (cdr batteries)\n             (+ index 1)\n             count)])))"
}