{
    "status_code": 14,
    "lang": "racket",
    "run_success": false,
    "status_runtime": "N/A",
    "memory": 126500000,
    "question_id": "3220",
    "elapsed_time": 5016,
    "compare_result": "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "code_output": "",
    "std_output": "",
    "last_testcase": "[1,1,2,1,3]",
    "expected_output": "3",
    "task_finish_time": 1706149185914,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 0,
    "total_testcases": 520,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Racket",
    "submission_id": "1156072568",
    "status_msg": "Time Limit Exceeded",
    "state": "SUCCESS",
    "code": "(define/contract (count-tested-devices batteryPercentages)\n  (-> (listof exact-integer?) exact-integer?)\n\n  ; Helper function to decrement the battery percentages of devices\n  ; from index start to the end of the list\n  (define (decrement-batteries lst start)\n    (if (null? lst)\n        '()\n        (cons (if (<= start 0)\n                  (max 0 (- (car lst) 1))\n                  (car lst))\n              (decrement-batteries (cdr lst) (- start 1)))))\n\n  ; Main function logic\n  (define (test-devices batteries)\n    (let loop ([remaining-batteries batteries]\n               [count 0])\n      (cond\n        [(null? remaining-batteries) count] ; When all devices have been checked\n        [(> (car remaining-batteries) 0)\n         ; Test the device and decrement the rest\n         (loop (decrement-batteries remaining-batteries 1)\n               (+ count 1))]\n        [else\n         ; Move to the next device without testing\n         (loop (cdr remaining-batteries)\n               count)]))\n    )\n  (test-devices batteryPercentages))"
}