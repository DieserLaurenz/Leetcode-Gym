{
    "status_code": 10,
    "lang": "golang",
    "run_success": true,
    "status_runtime": "3 ms",
    "memory": 2672000,
    "question_id": "3221",
    "elapsed_time": 16,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706333161313,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 648,
    "total_testcases": 648,
    "runtime_percentile": 58.6572,
    "status_memory": "2.7 MB",
    "memory_percentile": 99.6466,
    "pretty_lang": "Go",
    "submission_id": "1157971760",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "func findPeaks(mountain []int) []int {\n    var peaks []int\n    for i := 1; i < len(mountain)-1; i++ {\n        if mountain[i] > mountain[i-1] && mountain[i] > mountain[i+1] {\n            peaks = append(peaks, i)\n        }\n    }\n    return peaks\n}"
}