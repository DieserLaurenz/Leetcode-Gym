{
    "status_code": 10,
    "lang": "csharp",
    "run_success": true,
    "status_runtime": "100 ms",
    "memory": 47160000,
    "question_id": "3221",
    "elapsed_time": 268,
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706332732715,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 648,
    "total_testcases": 648,
    "runtime_percentile": 95.8904,
    "status_memory": "47.2 MB",
    "memory_percentile": 24.383499999999998,
    "pretty_lang": "C#",
    "submission_id": "1157967231",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "public class Solution {\n    public IList<int> FindPeaks(int[] mountain) {\n        List<int> peaks = new List<int>();\n        for (int i = 1; i < mountain.Length - 1; i++) {\n            if (mountain[i] > mountain[i - 1] && mountain[i] > mountain[i + 1]) {\n                peaks.Add(i);\n            }\n        }\n        return peaks;\n    }\n}"
}