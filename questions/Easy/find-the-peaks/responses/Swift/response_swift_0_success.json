{
    "status_code": 10,
    "lang": "swift",
    "run_success": true,
    "status_runtime": "18 ms",
    "memory": 15648000,
    "question_id": "3221",
    "elapsed_time": 36,
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706332966513,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 648,
    "total_testcases": 648,
    "runtime_percentile": 52.77790000000002,
    "status_memory": "15.6 MB",
    "memory_percentile": 11.111000000000008,
    "pretty_lang": "Swift",
    "submission_id": "1157969759",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\n    func findPeaks(_ mountain: [Int]) -> [Int] {\n        var peaks = [Int]()\n        for i in 1..<(mountain.count - 1) {\n            if mountain[i] > mountain[i - 1] && mountain[i] > mountain[i + 1] {\n                peaks.append(i)\n            }\n        }\n        return peaks\n    }\n}"
}