{
    "status_code": 10,
    "lang": "kotlin",
    "run_success": true,
    "status_runtime": "216 ms",
    "memory": 36708000,
    "question_id": "3221",
    "elapsed_time": 236,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706333040665,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 648,
    "total_testcases": 648,
    "runtime_percentile": 42.267800000000015,
    "status_memory": "36.7 MB",
    "memory_percentile": 98.9691,
    "pretty_lang": "Kotlin",
    "submission_id": "1157970534",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\n    fun findPeaks(mountain: IntArray): List<Int> {\n        val peaks = mutableListOf<Int>()\n        for (i in 1 until mountain.size - 1) {\n            if (mountain[i] > mountain[i - 1] && mountain[i] > mountain[i + 1]) {\n                peaks.add(i)\n            }\n        }\n        return peaks\n    }\n}"
}