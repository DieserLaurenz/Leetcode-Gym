{
    "status_code": 10,
    "lang": "java",
    "run_success": true,
    "status_runtime": "1 ms",
    "memory": 44032000,
    "display_runtime": "1",
    "question_id": "3221",
    "elapsed_time": 237,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706332628580,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 648,
    "total_testcases": 648,
    "runtime_percentile": 100,
    "status_memory": "44 MB",
    "memory_percentile": 41.3245,
    "pretty_lang": "Java",
    "submission_id": "1157966192",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\n    public List<Integer> findPeaks(int[] mountain) {\n        List<Integer> peaks = new ArrayList<>();\n        for (int i = 1; i < mountain.length - 1; i++) {\n            if (mountain[i] > mountain[i - 1] && mountain[i] > mountain[i + 1]) {\n                peaks.add(i);\n            }\n        }\n        return peaks;\n    }\n}"
}