{
    "status_code": 10,
    "lang": "rust",
    "run_success": true,
    "status_runtime": "0 ms",
    "memory": 2180000,
    "question_id": "3207",
    "elapsed_time": 15,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706437558779,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 1935,
    "total_testcases": 1935,
    "runtime_percentile": 100,
    "status_memory": "2.2 MB",
    "memory_percentile": 56.25,
    "pretty_lang": "Rust",
    "submission_id": "1159094541",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "impl Solution {\n    pub fn find_minimum_operations(s1: String, s2: String, s3: String) -> i32 {\n        // Convert strings to character vectors for easier manipulation\n        let s1 = s1.chars().collect::<Vec<_>>();\n        let s2 = s2.chars().collect::<Vec<_>>();\n        let s3 = s3.chars().collect::<Vec<_>>();\n\n        // Calculate the lengths of the strings\n        let len1 = s1.len();\n        let len2 = s2.len();\n        let len3 = s3.len();\n\n        // Initialize the number of operations to 0\n        let mut operations = 0;\n\n        // Find the smallest length among the three strings\n        let mut i = 0;\n        while i < len1 && i < len2 && i < len3 {\n            if s1[i] == s2[i] && s2[i] == s3[i] {\n                i += 1;\n            } else {\n                break;\n            }\n        }\n\n        // The number of operations required is the sum of the differences\n        // between the lengths of the strings and the length of their common prefix\n        operations = (len1 - i) + (len2 - i) + (len3 - i);\n\n        // If there's no common prefix, and the strings are different from the start,\n        // it's impossible to make them equal by deletion.\n        if i == 0 && (len1 > 0 && len2 > 0 && len3 > 0) && (s1[0] != s2[0] || s2[0] != s3[0] || s1[0] != s3[0]) {\n            return -1;\n        }\n\n        operations as i32\n    }\n}"
}