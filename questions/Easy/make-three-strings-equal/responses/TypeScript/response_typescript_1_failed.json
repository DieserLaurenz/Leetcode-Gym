{
    "status_code": 11,
    "lang": "typescript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 55256000,
    "question_id": "3207",
    "elapsed_time": 109,
    "compare_result
    "code_output": "-4",
    "std_output": "",
    "last_testcase": "\"abc\"\n\"abb\"\n\"ab\"",
    "expected_output": "2",
    "task_finish_time": 1706425799455,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 118,
    "total_testcases": 1935,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "TypeScript",
    "submission_id": "1158976596",
    "input_formatted": "\"abc\", \"abb\", \"ab\"",
    "input": "\"abc\"\n\"abb\"\n\"ab\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "function findMinimumOperations(s1: string, s2: string, s3: string): number {\n    // Find the shortest length among the three strings\n    const minLength = Math.min(s1.length, s2.length, s3.length);\n    \n    // Reduce strings to their shortest common base from the start\n    let i = 0;\n    while (i < minLength && s1[i] === s2[i] && s1[i] === s3[i]) {\n        i++;\n    }\n    s1 = s1.substring(i);\n    s2 = s2.substring(i);\n    s3 = s3.substring(i);\n    \n    // Attempt to make strings equal by removing characters from the end\n    // Start from the end and check if characters match, if not return -1\n    for (let j = 0; j < Math.min(s1.length, s2.length, s3.length); j++) {\n        if (s1[s1.length - 1 - j] !== s2[s2.length - 1 - j] || s1[s1.length - 1 - j] !== s3[s3.length - 1 - j]) {\n            return -1;\n        }\n    }\n\n    // If possible to make strings equal, calculate the total number of operations required\n    return s1.length + s2.length + s3.length - 3 * i;\n}"
}