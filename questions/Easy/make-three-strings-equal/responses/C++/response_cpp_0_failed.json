{
    "status_code": 11,
    "lang": "cpp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 10980000,
    "question_id": "3207",
    "elapsed_time": 21,
    "compare_result
    "code_output": "0",
    "std_output": "",
    "last_testcase": "\"abc\"\n\"abb\"\n\"ab\"",
    "expected_output": "2",
    "task_finish_time": 1706421137726,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 285,
    "total_testcases": 1935,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C++",
    "submission_id": "1158924072",
    "input_formatted": "\"abc\", \"abb\", \"ab\"",
    "input": "\"abc\"\n\"abb\"\n\"ab\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\npublic:\n    int findMinimumOperations(string s1, string s2, string s3) {\n        // The strategy is to keep reducing the strings from the right until all are of the same length\n        // Then compare each character from left to right\n        while (true) {\n            // Find the minimum length among the three strings\n            int minLen = min({s1.length(), s2.length(), s3.length()});\n            // Reduce the strings to the minimum length\n            if (s1.length() > minLen) s1.pop_back();\n            if (s2.length() > minLen) s2.pop_back();\n            if (s3.length() > minLen) s3.pop_back();\n\n            // If all strings are of equal length, break the loop\n            if (s1.length() == minLen && s2.length() == minLen && s3.length() == minLen) break;\n        }\n        \n        // Check if all characters are same from the start for the strings of equal length\n        for (int i = 0; i < s1.length(); ++i) {\n            if (s1[i] != s2[i] || s1[i] != s3[i]) return -1; // If any character is different, return -1\n        }\n        \n        // If all characters are same, the operation count is the sum of differences in original lengths and final length\n        return (s1.length() + s2.length() + s3.length()) - 3 * s1.length();\n    }\n};"
}