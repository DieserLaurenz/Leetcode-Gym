{
    "status_code": 11,
    "lang": "cpp",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 10748000,
    "question_id": "3207",
    "elapsed_time": 52,
    "compare_result
    "code_output": "2",
    "std_output": "",
    "last_testcase": "\"dac\"\n\"bac\"\n\"cac\"",
    "expected_output": "-1",
    "task_finish_time": 1706472108185,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 1325,
    "total_testcases": 1935,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C++",
    "submission_id": "1159496039",
    "input_formatted": "\"dac\", \"bac\", \"cac\"",
    "input": "\"dac\"\n\"bac\"\n\"cac\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\npublic:\n    int findMinimumOperations(string s1, string s2, string s3) {\n        // The idea is to iterate from the end of the strings and find the common substring.\n        // If at any point, the characters differ, and it's not possible to trim them to make the strings equal, return -1.\n        // Otherwise, calculate the number of operations needed to make them equal.\n\n        int i = s1.size() - 1, j = s2.size() - 1, k = s3.size() - 1;\n        int operations = 0;\n\n        while (i >= 0 || j >= 0 || k >= 0) {\n            char c1 = i >= 0 ? s1[i] : 0;\n            char c2 = j >= 0 ? s2[j] : 0;\n            char c3 = k >= 0 ? s3[k] : 0;\n\n            // If all non-zero characters are equal, move to the next character.\n            if ((c1 == c2 || c1 == 0 || c2 == 0) && (c2 == c3 || c2 == 0 || c3 == 0) && (c1 == c3 || c1 == 0 || c3 == 0)) {\n                if (c1 != 0) i--;\n                if (c2 != 0) j--;\n                if (c3 != 0) k--;\n            } else {\n                // If characters differ, perform an operation on the longer string(s).\n                if (i >= j && i >= k && i >= 0) { i--; operations++; }\n                else if (j > i && j >= k && j >= 0) { j--; operations++; }\n                else if (k > i && k > j && k >= 0) { k--; operations++; }\n                else return -1; // If we cannot make a move to equalize, return -1.\n            }\n        }\n\n        // Check for the case where all strings are made equal.\n        return operations;\n    }\n};"
}