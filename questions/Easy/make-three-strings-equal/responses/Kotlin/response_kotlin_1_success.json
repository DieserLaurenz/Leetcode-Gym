{
    "status_code": 10,
    "lang": "kotlin",
    "run_success": true,
    "status_runtime": "251 ms",
    "memory": 37480000,
    "question_id": "3207",
    "elapsed_time": 665,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706431080970,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 1935,
    "total_testcases": 1935,
    "runtime_percentile": 8.333700000000016,
    "status_memory": "37.5 MB",
    "memory_percentile": 25.0,
    "pretty_lang": "Kotlin",
    "submission_id": "1159030584",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\n    fun findMinimumOperations(s1: String, s2: String, s3: String): Int {\n        var commonLength = 0\n        while (commonLength < s1.length && commonLength < s2.length && commonLength < s3.length) {\n            if (s1[commonLength] == s2[commonLength] && s2[commonLength] == s3[commonLength]) {\n                commonLength++\n            } else {\n                break\n            }\n        }\n\n        // Check if the common prefix is not part of any string, which means they cannot be made equal\n        if (commonLength == 0) {\n            return -1\n        }\n\n        // Calculate the number of operations required to reduce each string to the common prefix length\n        val operations = (s1.length - commonLength) + (s2.length - commonLength) + (s3.length - commonLength)\n\n        // If operations are calculated based on common prefix, return operations, else -1 for no common prefix\n        return if (operations >= 0) operations else -1\n    }\n}"
}