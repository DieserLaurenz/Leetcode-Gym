{
    "status_code": 11,
    "lang": "scala",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 54796000,
    "question_id": "3207",
    "elapsed_time": 788,
    "compare_result
    "code_output": "-1",
    "std_output": "",
    "last_testcase": "\"abc\"\n\"abb\"\n\"ab\"",
    "expected_output": "2",
    "task_finish_time": 1706435317599,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 285,
    "total_testcases": 1935,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Scala",
    "submission_id": "1159071660",
    "input_formatted": "\"abc\", \"abb\", \"ab\"",
    "input": "\"abc\"\n\"abb\"\n\"ab\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "object Solution {\n  def findMinimumOperations(s1: String, s2: String, s3: String): Int = {\n    var (i, j, k) = (s1.length - 1, s2.length - 1, s3.length - 1)\n    var operations = 0\n\n    while (i >= 0 && j >= 0 && k >= 0) {\n      if (s1(i) == s2(j) && s2(j) == s3(k)) {\n        i -= 1\n        j -= 1\n        k -= 1\n      } else {\n        return -1 // Strings cannot be made equal\n      }\n    }\n\n    operations += (if (i >= 0) i + 1 else 0) + (if (j >= 0) j + 1 else 0) + (if (k >= 0) k + 1 else 0)\n\n    // Check for cases where two strings are equal and the third is shorter\n    if (i < 0) operations += Math.abs(j - k)\n    else if (j < 0) operations += Math.abs(i - k)\n    else if (k < 0) operations += Math.abs(i - j)\n\n    operations\n  }\n}"
}