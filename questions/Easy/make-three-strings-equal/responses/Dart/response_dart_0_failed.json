{
    "status_code": 11,
    "lang": "dart",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 153408000,
    "question_id": "3207",
    "elapsed_time": 546,
    "compare_result
    "code_output": "-6",
    "std_output": "",
    "last_testcase": "\"dac\"\n\"bac\"\n\"cac\"",
    "expected_output": "-1",
    "task_finish_time": 1706431498543,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 717,
    "total_testcases": 1935,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Dart",
    "submission_id": "1159034341",
    "input_formatted": "\"dac\", \"bac\", \"cac\"",
    "input": "\"dac\"\n\"bac\"\n\"cac\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n  int findMinimumOperations(String s1, String s2, String s3) {\n    // Calculate the minimum length among the three strings\n    int minLength = [s1.length, s2.length, s3.length].reduce((value, element) => value < element ? value : element);\n\n    // Iterate from the end of the strings until the beginning of the shortest string\n    for (int i = 0; i < minLength; i++) {\n      // Check if the characters at position `i` from the end are the same in all strings\n      if (s1[s1.length - 1 - i] != s2[s2.length - 1 - i] || s2[s2.length - 1 - i] != s3[s3.length - 1 - i]) {\n        // If any character doesn't match, return the sum of differences in lengths\n        // plus the remaining length of the shortest string minus `i`\n        return (s1.length - i) + (s2.length - i) + (s3.length - i) - 3 * minLength;\n      }\n    }\n\n    // If all characters match up to the length of the shortest string,\n    // return the sum of the differences in lengths of the strings\n    return s1.length + s2.length + s3.length - 3 * minLength;\n  }\n}"
}