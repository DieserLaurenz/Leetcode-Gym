{
    "status_code": 10,
    "lang": "c",
    "run_success": true,
    "status_runtime": "5 ms",
    "memory": 6124000,
    "question_id": "3207",
    "elapsed_time": 27,
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706422676148,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 1935,
    "total_testcases": 1935,
    "runtime_percentile": 43.33330000000001,
    "status_memory": "6.1 MB",
    "memory_percentile": 93.3333,
    "pretty_lang": "C",
    "submission_id": "1158941103",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "int findMinimumOperations(char* s1, char* s2, char* s3) {\n    int len1 = strlen(s1), len2 = strlen(s2), len3 = strlen(s3);\n\n    // The goal is to find the maximum common prefix and then calculate\n    // the total number of deletions needed to reduce all strings to this prefix.\n    int i, minOperations = 0;\n\n    // Find the smallest length among the three strings\n    int minLength = len1;\n    if (len2 < minLength) minLength = len2;\n    if (len3 < minLength) minLength = len3;\n\n    // Check each character up to the minimum length for equality\n    for (i = 0; i < minLength; ++i) {\n        if (s1[i] != s2[i] || s2[i] != s3[i]) {\n            break;\n        }\n    }\n\n    // If no common prefix is found, it's not possible to make the strings equal\n    if (i == 0) return -1;\n\n    // Calculate the total number of deletions needed\n    minOperations = (len1 - i) + (len2 - i) + (len3 - i);\n\n    return minOperations;\n}"
}