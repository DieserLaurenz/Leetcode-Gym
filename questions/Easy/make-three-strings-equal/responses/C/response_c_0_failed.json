{
    "status_code": 11,
    "lang": "c",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 5988000,
    "question_id": "3207",
    "elapsed_time": 44,
    "compare_result": "111111111110111101111111111101110110001111110110111100110011101101110001100111111001110110011110101100001011101111010100100011111100011011111011000010111111101100010110101101000100111100001110100010111010001110110010111001001010010001111100011001100011100010100000001010111000101110011011000010010110011010110110001100000010100011000110010011011111010011011101010000001101101100100101010111101011101000010110100101001011110011010100001000111110110000000100000000111010110000000010000010101000011010110111001000000110001111100100110000111101100001001110001101101101110011110000010000000100010111000110101011101111111100100100101100011101111110001001000011100100001111101110100000100100001110011100011111111111110110110011101110111010111010010001001000011100001111001100110110111010100001111100110011010111010010100100111010000111011101111001110111000110110011001111100111100001111111111101111101111011111111011101111101111011011111110111111110011111111110011110111001111111111111011111111110101101111111110000000010000000010000000000000000000000000000000011000000000000010010000000000000000010000000000000100001000000000100010000000000000000000000000000001000001000000000000000000000100101000000000100100110000000100111011011110111111101111101001011100010100011110101011000101111111111111110011111100100110110001010111010101000101111100000111110000011011110000100111010100011111001101010111101100011110000001000010101110001010101000101100110100010001000111101001010110111011101100011010101001010110111110110110100101101101100000101101010010000111001110011010100011000011110000100111110010000010010010111111101010111110101111001001111000011110111101110101011101101110100011111111111111101111111111111111101010111011011101100111001000010000000100000100000000000000000000000000000000000000010000100000000001010000000100001000000010000011000000000000000000000000001000000000000000000000000000010100000000000000000000000000000000100000000000",
    "code_output": "-1",
    "std_output": "",
    "last_testcase": "\"oby\"\n\"obz\"\n\"obf\"",
    "expected_output": "3",
    "task_finish_time": 1706422075054,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 908,
    "total_testcases": 1935,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "C",
    "submission_id": "1158934209",
    "input_formatted": "\"oby\", \"obz\", \"obf\"",
    "input": "\"oby\"\n\"obz\"\n\"obf\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "int findMinimumOperations(char* s1, char* s2, char* s3) {\n    int len1 = strlen(s1), len2 = strlen(s2), len3 = strlen(s3);\n    // Find the shortest length among the three strings\n    int minLen = len1 < len2 ? (len1 < len3 ? len1 : len3) : (len2 < len3 ? len2 : len3);\n\n    int operations = 0;\n    // Count operations needed to make lengths of s1, s2, and s3 equal to minLen\n    operations += len1 - minLen;\n    operations += len2 - minLen;\n    operations += len3 - minLen;\n\n    // Check if making lengths equal will also make the strings equal\n    for (int i = 0; i < minLen; ++i) {\n        if (s1[i] != s2[i] || s2[i] != s3[i] || s1[i] != s3[i]) {\n            return -1; // Cannot make the strings equal\n        }\n    }\n\n    return operations;\n}"
}