{
    "status_code": 11,
    "lang": "javascript",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 56332000,
    "question_id": "3199",
    "elapsed_time": 1383,
    "compare_result
    "code_output": "4",
    "std_output": "",
    "last_testcase": "5\n2",
    "expected_output": "3",
    "task_finish_time": 1706168210710,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 24,
    "total_testcases": 827,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "JavaScript",
    "submission_id": "1156285854",
    "input_formatted": "5, 2",
    "input": "5\n2",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "/**\n * @param {number} n\n * @param {number} limit\n * @return {number}\n */\nvar distributeCandies = function(n, limit) {\n    // Initialize a 3D array with zeros\n    let dp = Array.from({ length: n + 1 }, () =>\n        Array.from({ length: limit + 1 }, () => Array(limit + 1).fill(0))\n    );\n\n    // Base case: one way to distribute 0 candies\n    for (let j = 0; j <= limit; j++) {\n        for (let k = 0; k <= limit; k++) {\n            dp[0][j][k] = 1;\n        }\n    }\n\n    // Fill the dp array\n    for (let i = 1; i <= n; i++) {\n        for (let j = 0; j <= limit; j++) {\n            for (let k = 0; k <= limit; k++) {\n                let sum = 0;\n                for (let x = 0; x <= j && x <= i; x++) {\n                    sum += dp[i - x][k][limit - k];\n                }\n                dp[i][j][k] = sum;\n            }\n        }\n    }\n\n    // Sum up all the ways to distribute n candies\n    let totalWays = 0;\n    for (let j = 0; j <= limit; j++) {\n        for (let k = 0; k <= limit; k++) {\n            totalWays += dp[n][j][k];\n        }\n    }\n\n    return totalWays;\n};"
}