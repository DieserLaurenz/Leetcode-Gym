{
    "status_code": 10,
    "lang": "php",
    "run_success": true,
    "status_runtime": "31 ms",
    "memory": 19800000,
    "question_id": "3199",
    "elapsed_time": 145,
    "compare_result": "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706169713084,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 827,
    "total_testcases": 827,
    "runtime_percentile": 50.0,
    "status_memory": "19.8 MB",
    "memory_percentile": 50.0,
    "pretty_lang": "PHP",
    "submission_id": "1156301877",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\n\n    /**\n     * @param Integer $n\n     * @param Integer $limit\n     * @return Integer\n     */\n    function distributeCandies($n, $limit) {\n        $count = 0;\n\n        // Iterate for the first child\n        for ($i = 0; $i <= $limit; $i++) {\n            // Iterate for the second child\n            for ($j = 0; $j <= $limit; $j++) {\n                // Calculate candies for the third child\n                $k = $n - $i - $j;\n\n                // Check if the distribution is valid\n                if ($k >= 0 && $k <= $limit) {\n                    $count++;\n                }\n            }\n        }\n\n        return $count;\n    }\n}"
}