{
    "status_code": 10,
    "lang": "csharp",
    "run_success": true,
    "status_runtime": "16 ms",
    "memory": 27396000,
    "question_id": "3199",
    "elapsed_time": 65,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706167730644,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 827,
    "total_testcases": 827,
    "runtime_percentile": 98.3051,
    "status_memory": "27.4 MB",
    "memory_percentile": 10.169699999999992,
    "pretty_lang": "C#",
    "submission_id": "1156280389",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "public class Solution {\n    public int DistributeCandies(int n, int limit) {\n        int count = 0;\n\n        // Iterate through all possible distributions for the first two children\n        for (int firstChild = 0; firstChild <= limit; firstChild++) {\n            for (int secondChild = 0; secondChild <= limit; secondChild++) {\n                int thirdChild = n - firstChild - secondChild;\n\n                // Check if the distribution is valid for the third child\n                if (thirdChild >= 0 && thirdChild <= limit) {\n                    count++;\n                }\n            }\n        }\n\n        return count;\n    }\n}"
}