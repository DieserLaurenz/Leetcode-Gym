{
    "status_code": 10,
    "lang": "cpp",
    "run_success": true,
    "status_runtime": "13 ms",
    "memory": 7416000,
    "question_id": "3199",
    "elapsed_time": 26,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706166041143,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 827,
    "total_testcases": 827,
    "runtime_percentile": 43.67309999999999,
    "status_memory": "7.4 MB",
    "memory_percentile": 7.166799999999997,
    "pretty_lang": "C++",
    "submission_id": "1156260320",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\npublic:\n    int distributeCandies(int n, int limit) {\n        int count = 0;\n        // Iterate over all possible distributions\n        for (int i = 0; i <= limit; ++i) {\n            for (int j = 0; j <= limit; ++j) {\n                for (int k = 0; k <= limit; ++k) {\n                    // Check if the distribution sums up to n\n                    if (i + j + k == n) {\n                        count++;\n                    }\n                }\n            }\n        }\n        return count;\n    }\n};"
}