{
    "status_code": 10,
    "lang": "elixir",
    "run_success": true,
    "status_runtime": "655 ms",
    "memory": 71704000,
    "question_id": "2998",
    "elapsed_time": 757,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706141389044,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 1967,
    "total_testcases": 1967,
    "runtime_percentile": 100,
    "status_memory": "71.7 MB",
    "memory_percentile": 100,
    "pretty_lang": "Elixir",
    "submission_id": "1156011102",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "defmodule Solution do\n  @spec count_symmetric_integers(low :: integer, high :: integer) :: integer\n  def count_symmetric_integers(low, high) do\n    Enum.reduce(low..high, 0, fn x, acc ->\n      if is_symmetric_integer?(x), do: acc + 1, else: acc\n    end)\n  end\n\n  defp is_symmetric_integer?(x) do\n    digits = Integer.digits(x)\n    length = length(digits)\n\n    if rem(length, 2) == 1 do\n      false\n    else\n      mid = div(length, 2)\n      first_half = Enum.take(digits, mid)\n      second_half = Enum.drop(digits, mid)\n      Enum.sum(first_half) == Enum.sum(second_half)\n    end\n  end\nend"
}