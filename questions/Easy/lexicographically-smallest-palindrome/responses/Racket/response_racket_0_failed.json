{
    "status_code": 14,
    "lang": "racket",
    "run_success": false,
    "status_runtime": "N/A",
    "memory": 126912000,
    "question_id": "2816",
    "elapsed_time": 5019,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "\"lcwrzpjzjyhfdsfzprigqsstriqdvrbmfkruuqpsnajxffgakuqotjmjjgkgsyqtdnxsfnzjcwyjebirvlgcekmxgbpsiqjcwehmhwclzpldexnkurqrnwnjcqbayykbbviggzkfavpbayttjpsrsbyuufuumlmhxeygwocjzgtaadvsdlhcfivcnxhcwjezuqfefvuaqugkqrerushkceohobhjsmlfwyoqwbeohqpihajpdfyzaaemfwcarvmdzsqkklwdqflzkhwvzacekadxludiohafmhsvgiurvaaknphalelybgkezvdbwtknodbdgksyxbgceotcosimcnzjbudntqctgjmpnlgqujlcldinkdaoatlmuupsxwzlbgplugpgbszpgvarzohjwhlocuwwxjofjcdnufmzajycdpxhhikjfbqobjjppskgemiviojgtpmwrlstlmxkccmevkxgcejdzyexrchzomaieudqlvjwqdusflgsjbpvwzdkjfrjemigyrpxpgjahtckxrzqdkvwtvynvxvbkfrhxvelacrokqnguduzurdeloohzbvtteqosmxbmeotcdvnzjmcmvjyqclbbuauvkqdcdpxpcfrsolvrtdljfhiqgvqvwxerwhrpiuoqrknboxlrwphzfxeqgvkwcyefmbkupyuywuafftahgfcovrossylgnfffishynbbbhqmmfemkrlvelnlfurbfdersdxtjfnjlfthykkybvfykalhjyoaljnedylrhihkgrmxtddqkxwpotcmrtodbqoscervcabmmavdcgbkoedligbvrzrhhoesriyapvdynqtarmbgblcyzxyribwgsfrpclnsazbqnfvttccoskyfu\"",
    "expected_output": "\"lcwksoccjthfdqbzarigcprfrgqbirbmfkclbgbmnajqffdakaqirjejhgkgrvbgdldefkbgcdvaebbaclgcckmqbbosimccoehmhqcdtpldekhihrlrdenjcabajhkabvfgbykfahpbajnfjpsdsbedfbruflmheelgkmcfmgqaabbndhhcfffcglhcsjevocfefatafagkqrepukbkceocobhgqelfwhoqrbeobnkihajidfhwaaemfqcaqihdjldkklldqffckhpdcacekaaubbdcohafmcmjgiudcaaembhalelebgkbzhdblednodbdggnqkbgcalecohifcbvjbndntqckdjmpnkcqhajcldinkdamajlfjkdswvpbbgglfgpdbsjpgqareiajohhccuewxdjeccdkuemcajxcdpshhikjfbjobjimegkgemijbojbfjkihhspdcxjacmeukdccejdxweucchhojaieraqgpjsbdpgflggbbpvwsdkjfljamadknidlcjahqcknpmjdkcqtndnbjvbcfihocelacgbkqnggdbdondelbdhzbkgbelelahbmeaacduigjmcmfahocdbbuaakecacdphkcffqdllkkdljdhiqacqfmeaawhfdijahiknboebrqohwfleqghbocoeckbkuperqkgafatafefcovejschlgcfffchhdnbbaaqgmfcmkgleehmlfurbfdebsdspjfnjabphafkybgfvbakhjabacjnedrlrhihkedlptdcqhmheoccmisobbqmkccglcabbeavdcgbkfedldgbvrgkghjejriqakadffqjanmbgblckfmbribqgrfrpcgirazbqdfhtjccoskwcl\"",
    "task_finish_time": 1706386258945,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 4220,
    "total_testcases": 4519,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Racket",
    "submission_id": "1158571413",
    "status_msg": "Time Limit Exceeded",
    "state": "SUCCESS",
    "code": "(define/contract (make-smallest-palindrome s)\n  (-> string? string?)\n  (let* ([len (string-length s)]\n         [half (quotient len 2)]\n         [s-list (string->list s)])\n    (define (make-palindrome lst n)\n      (if (>= n half)\n          lst\n          (let ([left (list-ref lst n)]\n                [right (list-ref lst (- len n 1))])\n            (if (char<? left right)\n                (make-palindrome (list-set lst (- len n 1) left) (+ n 1))\n                (make-palindrome (list-set lst n right) (+ n 1))))))\n    (list->string (make-palindrome s-list 0))))"
}