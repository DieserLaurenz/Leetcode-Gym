{
    "status_code": 20,
    "lang": "scala",
    "run_success": false,
    "compile_error": "Line 9: error: type mismatch; (in solution.scala)",
    "full_compile_error": "Line 9: error: type mismatch; (in solution.scala)\n found   : Int\n required: Char\n                chars(i) = minChar\n                           ^\nLine 10: error: type mismatch; (in solution.scala)\n found   : Int\n required: Char\n                chars(n - 1 - i) = minChar\n                                   ^",
    "status_runtime": "N/A",
    "memory": 0,
    "question_id": "2816",
    "task_finish_time": 1706386147148,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": null,
    "total_testcases": null,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Scala",
    "submission_id": "1158570339",
    "status_msg": "Compile Error",
    "state": "SUCCESS",
    "code": "object Solution {\n    def makeSmallestPalindrome(s: String): String = {\n        val chars = s.toCharArray\n        val n = s.length\n        for (i <- 0 until n / 2) {\n            if (chars(i) != chars(n - 1 - i)) {\n                // Replace the character at either end with the lexicographically smaller one.\n                val minChar = Math.min(chars(i), chars(n - 1 - i))\n                chars(i) = minChar\n                chars(n - 1 - i) = minChar\n            }\n        }\n        new String(chars)\n    }\n}"
}