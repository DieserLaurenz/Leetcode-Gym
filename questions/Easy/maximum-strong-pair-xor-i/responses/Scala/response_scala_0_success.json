{
    "status_code": 10,
    "lang": "scala",
    "run_success": true,
    "status_runtime": "548 ms",
    "memory": 56608000,
    "question_id": "3193",
    "elapsed_time": 590,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706486827813,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 860,
    "total_testcases": 860,
    "runtime_percentile": 100,
    "status_memory": "56.6 MB",
    "memory_percentile": 100,
    "pretty_lang": "Scala",
    "submission_id": "1159612140",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "object Solution {\n    def maximumStrongPairXor(nums: Array[Int]): Int = {\n        var max_xor = 0\n        for (i <- nums.indices; j <- i until nums.length) {\n            if (Math.abs(nums(i) - nums(j)) <= Math.min(nums(i), nums(j))) {\n                max_xor = Math.max(max_xor, nums(i) ^ nums(j))\n            }\n        }\n        max_xor\n    }\n}"
}