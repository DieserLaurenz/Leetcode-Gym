{
    "status_code": 10,
    "lang": "javascript",
    "run_success": true,
    "status_runtime": "67 ms",
    "memory": 50556000,
    "question_id": "3193",
    "elapsed_time": 125,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706482683909,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 860,
    "total_testcases": 860,
    "runtime_percentile": 46.96120000000002,
    "status_memory": "50.6 MB",
    "memory_percentile": 12.154400000000011,
    "pretty_lang": "JavaScript",
    "submission_id": "1159586502",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "/**\n * @param {number[]} nums\n * @return {number}\n */\nvar maximumStrongPairXor = function(nums) {\n    let max_xor = 0;\n    nums.sort((a, b) => a - b); // Sort the array to easily check for strong pairs\n\n    for (let i = 0; i < nums.length; i++) {\n        for (let j = i; j < nums.length; j++) {\n            // Check if it's a strong pair\n            if (Math.abs(nums[i] - nums[j]) <= Math.min(nums[i], nums[j])) {\n                max_xor = Math.max(max_xor, nums[i] ^ nums[j]);\n            }\n        }\n    }\n\n    return max_xor;\n};"
}