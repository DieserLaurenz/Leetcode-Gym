{
    "status_code": 10,
    "lang": "python3",
    "run_success": true,
    "status_runtime": "90 ms",
    "memory": 16592000,
    "question_id": "3193",
    "elapsed_time": 102,
    "compare_result": "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1708714937267,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 860,
    "total_testcases": 860,
    "runtime_percentile": 84.99549999999995,
    "status_memory": "16.6 MB",
    "memory_percentile": 73.6153,
    "pretty_lang": "Python3",
    "submission_id": "1184253377",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "from typing import List\n\nclass Solution:\n    def maximumStrongPairXor(self, nums: List[int]) -> int:\n        max_xor = 0\n        nums = list(set(nums))  # Remove duplicates to optimize\n        nums.sort()\n        for i in range(len(nums)):\n            for j in range(i, len(nums)):\n                x, y = nums[i], nums[j]\n                if abs(x - y) <= min(x, y):\n                    max_xor = max(max_xor, x ^ y)\n        return max_xor"
}