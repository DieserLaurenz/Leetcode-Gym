{
    "status_code": 10,
    "lang": "python3",
    "run_success": true,
    "status_runtime": "44 ms",
    "memory": 16508000,
    "question_id": "3044",
    "elapsed_time": 57,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1708724276734,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 619,
    "total_testcases": 619,
    "runtime_percentile": 43.51160000000003,
    "status_memory": "16.5 MB",
    "memory_percentile": 78.24440000000001,
    "pretty_lang": "Python3",
    "submission_id": "1184341747",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "from typing import List\n\nclass Solution:\n    def minOperations(self, nums: List[int], k: int) -> int:\n        target_set = set(range(1, k + 1))\n        collected_set = set()\n        operations = 0\n        for num in reversed(nums):\n            operations += 1\n            collected_set.add(num)\n            if collected_set >= target_set:\n                break\n        return operations"
}