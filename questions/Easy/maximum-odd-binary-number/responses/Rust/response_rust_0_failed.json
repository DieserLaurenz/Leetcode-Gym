{
    "status_code": 11,
    "lang": "rust",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 2120000,
    "question_id": "3055",
    "elapsed_time": 13,
    "compare_result
    "code_output": "\"0011\"",
    "std_output": "",
    "last_testcase": "\"0101\"",
    "expected_output": "\"1001\"",
    "task_finish_time": 1706464302116,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 37,
    "total_testcases": 985,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Rust",
    "submission_id": "1159401022",
    "input_formatted": "\"0101\"",
    "input": "\"0101\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "impl Solution {\n    pub fn maximum_odd_binary_number(s: String) -> String {\n        let ones = s.chars().filter(|&c| c == '1').count();\n        let zeros = s.len() - ones;\n        \"0\".repeat(zeros) + &\"1\".repeat(ones - 1) + \"1\"\n    }\n}"
}