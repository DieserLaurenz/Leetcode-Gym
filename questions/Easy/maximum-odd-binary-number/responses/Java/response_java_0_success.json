{
    "status_code": 10,
    "lang": "java",
    "run_success": true,
    "status_runtime": "2 ms",
    "memory": 43248000,
    "display_runtime": "2",
    "question_id": "3055",
    "elapsed_time": 183,
    "compare_result": "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706463601577,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 985,
    "total_testcases": 985,
    "runtime_percentile": 86.5583,
    "status_memory": "43.2 MB",
    "memory_percentile": 61.74299999999999,
    "pretty_lang": "Java",
    "submission_id": "1159391413",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\n    public String maximumOddBinaryNumber(String s) {\n        int countOnes = 0;\n        // Count the number of '1's in the string\n        for (int i = 0; i < s.length(); i++) {\n            if (s.charAt(i) == '1') {\n                countOnes++;\n            }\n        }\n\n        StringBuilder result = new StringBuilder();\n        // Place all '1's except one at the beginning\n        for (int i = 0; i < countOnes - 1; i++) {\n            result.append('1');\n        }\n\n        // Fill the rest with '0's\n        for (int i = countOnes - 1; i < s.length() - 1; i++) {\n            result.append('0');\n        }\n\n        // Place the last '1' at the end to ensure the number is odd\n        result.append('1');\n\n        return result.toString();\n    }\n}"
}