{
    "status_code": 10,
    "lang": "csharp",
    "run_success": true,
    "status_runtime": "64 ms",
    "memory": 42500000,
    "question_id": "3055",
    "elapsed_time": 115,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706463794564,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 985,
    "total_testcases": 985,
    "runtime_percentile": 71.15349999999994,
    "status_memory": "42.5 MB",
    "memory_percentile": 51.92279999999999,
    "pretty_lang": "C#",
    "submission_id": "1159394011",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "public class Solution {\n    public string MaximumOddBinaryNumber(string s) {\n        int onesCount = 0;\n        // Count the number of '1's in the input string\n        foreach (char c in s) {\n            if (c == '1') {\n                onesCount++;\n            }\n        }\n        \n        // If all characters are '1's, just return the string as it is but ensure the last character is '1'\n        if (onesCount == s.Length) {\n            return s;\n        }\n        \n        // Create a new string with all '1's except the last one, which should be '1'\n        // This ensures the maximum odd number. The rest are filled with '0's up to the length of the original string\n        return new string('1', onesCount - 1) + new string('0', s.Length - onesCount) + '1';\n    }\n}"
}