{
    "status_code": 11,
    "lang": "ruby",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 211760000,
    "question_id": "3055",
    "elapsed_time": 260,
    "compare_result
    "code_output": "\"0011\"",
    "std_output": "",
    "last_testcase": "\"0101\"",
    "expected_output": "\"1001\"",
    "task_finish_time": 1706464133839,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 37,
    "total_testcases": 985,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Ruby",
    "submission_id": "1159398770",
    "input_formatted": "\"0101\"",
    "input": "\"0101\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "# @param {String} s\n# @return {String}\ndef maximum_odd_binary_number(s)\n    # Count the number of ones in the string\n    ones = s.count('1')\n    # Count the number of zeros in the string\n    zeros = s.count('0')\n    # The maximum odd binary number will have all zeros followed by ones-1 (since one '1' must be at the end to make it odd)\n    # and then the last digit must be '1' to make it odd.\n    result = '0' * zeros + '1' * (ones - 1) + '1'\n    result\nend"
}