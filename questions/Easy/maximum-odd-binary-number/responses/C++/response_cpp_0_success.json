{
    "status_code": 10,
    "lang": "cpp",
    "run_success": true,
    "status_runtime": "8 ms",
    "memory": 8572000,
    "question_id": "3055",
    "elapsed_time": 16,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706463566523,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 985,
    "total_testcases": 985,
    "runtime_percentile": 23.368899999999996,
    "status_memory": "8.6 MB",
    "memory_percentile": 16.2518,
    "pretty_lang": "C++",
    "submission_id": "1159390936",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\npublic:\n    string maximumOddBinaryNumber(string s) {\n        int ones = 0; // Count of '1's in the string\n        for (char c : s) {\n            if (c == '1') ++ones;\n        }\n        \n        string result = \"\"; // Initialize the result string\n        \n        // Add all '1's except one to the beginning of the result string\n        for (int i = 0; i < ones - 1; ++i) {\n            result += '1';\n        }\n        \n        // Add '0's based on the length of the input string minus the number of '1's\n        for (int i = 0; i < s.length() - ones; ++i) {\n            result += '0';\n        }\n        \n        // Ensure to add the last '1' to make the number odd\n        result += '1';\n        \n        return result;\n    }\n};"
}