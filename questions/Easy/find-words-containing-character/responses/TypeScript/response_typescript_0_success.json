{
    "status_code": 10,
    "lang": "typescript",
    "run_success": true,
    "status_runtime": "87 ms",
    "memory": 53556000,
    "question_id": "3194",
    "elapsed_time": 109,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706334681161,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 912,
    "total_testcases": 912,
    "runtime_percentile": 15.599999999999978,
    "status_memory": "53.6 MB",
    "memory_percentile": 9.200000000000019,
    "pretty_lang": "TypeScript",
    "submission_id": "1157987558",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "function findWordsContaining(words: string[], x: string): number[] {\n    // Create an array to store the indices\n    const indices: number[] = [];\n\n    // Loop through each word in the array\n    for (let i = 0; i < words.length; i++) {\n        // Check if the current word contains the character x\n        if (words[i].indexOf(x) !== -1) {\n            // If yes, push the index of the word to the indices array\n            indices.push(i);\n        }\n    }\n\n    // Return the array of indices\n    return indices;\n};"
}