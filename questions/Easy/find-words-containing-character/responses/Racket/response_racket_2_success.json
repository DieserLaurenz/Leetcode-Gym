{
    "status_code": 10,
    "lang": "racket",
    "run_success": true,
    "status_runtime": "214 ms",
    "memory": 124100000,
    "question_id": "3194",
    "elapsed_time": 337,
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706353511740,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 912,
    "total_testcases": 912,
    "runtime_percentile": 100,
    "status_memory": "124.1 MB",
    "memory_percentile": 100,
    "pretty_lang": "Racket",
    "submission_id": "1158185893",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "(define/contract (find-words-containing words x)\n  (-> (listof string?) char? (listof exact-integer?))\n  (for/list ([word words]\n             [index (in-naturals)]\n             #:when (string-contains? word x))\n    index))\n\n(define (string-contains? str char)\n  (ormap (lambda (c) (char=? c char)) (string->list str)))"
}