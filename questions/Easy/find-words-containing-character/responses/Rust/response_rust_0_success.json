{
    "status_code": 10,
    "lang": "rust",
    "run_success": true,
    "status_runtime": "4 ms",
    "memory": 2220000,
    "question_id": "3194",
    "elapsed_time": 14,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706353417447,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 912,
    "total_testcases": 912,
    "runtime_percentile": 41.610800000000005,
    "status_memory": "2.2 MB",
    "memory_percentile": 26.845699999999994,
    "pretty_lang": "Rust",
    "submission_id": "1158184983",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "impl Solution {\n    pub fn find_words_containing(words: Vec<String>, x: char) -> Vec<i32> {\n        words.iter().enumerate()\n            .filter_map(|(i, word)| {\n                if word.contains(x) { Some(i as i32) } else { None }\n            })\n            .collect()\n    }\n}"
}