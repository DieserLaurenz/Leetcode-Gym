{
    "status_code": 10,
    "lang": "c",
    "run_success": true,
    "status_runtime": "12 ms",
    "memory": 7068000,
    "question_id": "3194",
    "elapsed_time": 25,
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706333851755,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 912,
    "total_testcases": 912,
    "runtime_percentile": 72.51739999999997,
    "status_memory": "7.1 MB",
    "memory_percentile": 97.2286,
    "pretty_lang": "C",
    "submission_id": "1157978797",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "#include <stdlib.h>\n\n/**\n * Note: The returned array must be malloced, assume caller calls free().\n */\nint* findWordsContaining(char** words, int wordsSize, char x, int* returnSize) {\n    int* indices = (int*)malloc(sizeof(int) * wordsSize);\n    int count = 0;\n    for (int i = 0; i < wordsSize; i++) {\n        char* word = words[i];\n        while (*word != '\\0') {\n            if (*word == x) {\n                indices[count++] = i;\n                break;\n            }\n            word++;\n        }\n    }\n    *returnSize = count;\n    return realloc(indices, sizeof(int) * count);\n}"
}