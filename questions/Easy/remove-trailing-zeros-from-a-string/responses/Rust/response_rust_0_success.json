{
    "status_code": 10,
    "lang": "rust",
    "run_success": true,
    "status_runtime": "3 ms",
    "memory": 2412000,
    "question_id": "2819",
    "elapsed_time": 13,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706637564340,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 756,
    "total_testcases": 756,
    "runtime_percentile": 60.0,
    "status_memory": "2.4 MB",
    "memory_percentile": 10.0,
    "pretty_lang": "Rust",
    "submission_id": "1161285958",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "impl Solution {\n    pub fn remove_trailing_zeros(num: String) -> String {\n        let mut chars = num.chars().rev(); // Reverse iterator\n        let mut non_zero_pos = 0;\n\n        // Iterate until a non-zero character is found or iterator ends\n        for (i, c) in chars.enumerate() {\n            if c != '0' {\n                non_zero_pos = i;\n                break;\n            }\n        }\n\n        // Slice the string to exclude trailing zeros\n        let result = &num[..num.len() - non_zero_pos];\n        result.to_string()\n    }\n}"
}