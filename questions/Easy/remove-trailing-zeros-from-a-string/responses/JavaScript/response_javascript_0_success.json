{
    "status_code": 10,
    "lang": "javascript",
    "run_success": true,
    "status_runtime": "52 ms",
    "memory": 51592000,
    "question_id": "2819",
    "elapsed_time": 155,
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706637245861,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 756,
    "total_testcases": 756,
    "runtime_percentile": 96.1597,
    "status_memory": "51.6 MB",
    "memory_percentile": 13.372199999999975,
    "pretty_lang": "JavaScript",
    "submission_id": "1161280594",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "/**\n * @param {string} num\n * @return {string}\n */\nvar removeTrailingZeros = function(num) {\n    // Use the regular expression /0+$/ to match trailing zeros in the string.\n    // The $ sign ensures that we are only matching zeros at the end of the string.\n    // Replace matched trailing zeros with an empty string to remove them.\n    return num.replace(/0+$/, '');\n};"
}