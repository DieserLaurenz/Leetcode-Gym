{
    "status_code": 10,
    "lang": "c",
    "run_success": true,
    "status_runtime": "0 ms",
    "memory": 6344000,
    "question_id": "2819",
    "elapsed_time": 17,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706637189888,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 756,
    "total_testcases": 756,
    "runtime_percentile": 100,
    "status_memory": "6.3 MB",
    "memory_percentile": 96.66659999999999,
    "pretty_lang": "C",
    "submission_id": "1161279619",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "char * removeTrailingZeros(char * num) {\n    // Find the length of the string\n    int length = 0;\n    while (num[length] != '\\0') {\n        length++;\n    }\n\n    // Find the index of the last non-zero character\n    int lastIndex = length - 1;\n    while (lastIndex >= 0 && num[lastIndex] == '0') {\n        lastIndex--;\n    }\n\n    // If there are trailing zeros, terminate the string right after the last non-zero character\n    if (lastIndex < length - 1) {\n        num[lastIndex + 1] = '\\0';\n    }\n\n    return num;\n}"
}