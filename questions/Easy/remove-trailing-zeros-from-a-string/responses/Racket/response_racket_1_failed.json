{
    "status_code": 20,
    "lang": "racket",
    "run_success": false,
    "compile_error": "Line 5: Char 35: drop-while: unbound identifier",
    "full_compile_error": "Line 5: Char 35: drop-while: unbound identifier\n  in: drop-while\n  compilation context...:\n   solution.rkt\n  location...:\n   prog_joined.rkt:16:34",
    "status_runtime": "N/A",
    "memory": 0,
    "question_id": "2819",
    "task_finish_time": 1706637636886,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": null,
    "total_testcases": null,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Racket",
    "submission_id": "1161287154",
    "status_msg": "Compile Error",
    "state": "SUCCESS",
    "code": "(define/contract (remove-trailing-zeros num)\n  (-> string? string?)\n  (let* ((chars (string->list num)) ; Convert the string to a list of characters\n         (reversed-chars (reverse chars)) ; Reverse the list to deal with \"trailing\" zeros\n         (trimmed-reversed-chars (drop-while (lambda (c) (char=? c #\\0)) reversed-chars)) ; Remove leading zeros\n         (trimmed-chars (reverse trimmed-reversed-chars))) ; Reverse back to original order\n    (list->string trimmed-chars))) ; Convert the list back to a string"
}