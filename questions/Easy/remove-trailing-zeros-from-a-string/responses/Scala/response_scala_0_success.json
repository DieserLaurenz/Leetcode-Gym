{
    "status_code": 10,
    "lang": "scala",
    "run_success": true,
    "status_runtime": "519 ms",
    "memory": 55356000,
    "question_id": "2819",
    "elapsed_time": 607,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706637524116,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 756,
    "total_testcases": 756,
    "runtime_percentile": 100,
    "status_memory": "55.4 MB",
    "memory_percentile": 100,
    "pretty_lang": "Scala",
    "submission_id": "1161285365",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "object Solution {\n    def removeTrailingZeros(num: String): String = {\n        // Use regex to replace trailing zeros. The regex \"\\\\d+?(?=0*$)\" matches digits that are followed by any number of zeros at the end of the string.\n        // The \"$\" signifies the end of the string, and \"0*\" matches any number of zeros.\n        // However, we directly need to remove these zeros, not the digits before them, hence the simpler approach:\n        num.replaceAll(\"0*$\", \"\")\n    }\n}"
}