{
    "status_code": 11,
    "lang": "erlang",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 60272000,
    "question_id": "2819",
    "elapsed_time": 1489,
    "compare_result
    "code_output": "\"51231\"",
    "std_output": "",
    "last_testcase": "\"51230100\"",
    "expected_output": "\"512301\"",
    "task_finish_time": 1706637762768,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 70,
    "total_testcases": 756,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Erlang",
    "submission_id": "1161289225",
    "input_formatted": "\"51230100\"",
    "input": "\"51230100\"",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "-spec remove_trailing_zeros(Num :: unicode:unicode_binary()) -> unicode:unicode_binary().\nremove_trailing_zeros(Num) ->\n    remove_trailing_zeros(Num, <<>>).\n\nremove_trailing_zeros(<<>>, Acc) ->\n    Acc;\nremove_trailing_zeros(<<48, Rest/binary>>, <<>>) -> % ASCII 48 is '0'\n    remove_trailing_zeros(Rest, <<>>);\nremove_trailing_zeros(<<48, Rest/binary>>, Acc) -> % ASCII 48 is '0'\n    remove_trailing_zeros(Rest, Acc);\nremove_trailing_zeros(<<Char, Rest/binary>>, Acc) ->\n    remove_trailing_zeros(Rest, <<Acc/binary, Char>>)."
}