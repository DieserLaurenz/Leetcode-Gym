{
    "status_code": 10,
    "lang": "erlang",
    "run_success": true,
    "status_runtime": "339 ms",
    "memory": 59992000,
    "question_id": "2819",
    "elapsed_time": 2199,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706637876773,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 756,
    "total_testcases": 756,
    "runtime_percentile": 100,
    "status_memory": "60 MB",
    "memory_percentile": 100,
    "pretty_lang": "Erlang",
    "submission_id": "1161291137",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "-spec remove_trailing_zeros(Num :: unicode:unicode_binary()) -> unicode:unicode_binary().\nremove_trailing_zeros(Num) ->\n    %% Reverse the binary to start removing zeros from the original end\n    Reversed = lists:reverse(binary:bin_to_list(Num)),\n    %% Remove trailing zeros\n    Trimmed = lists:dropwhile(fun(C) -> C == $0 end, Reversed),\n    %% Reverse again to restore original order without trailing zeros\n    list_to_binary(lists:reverse(Trimmed))."
}