{
    "status_code": 10,
    "lang": "rust",
    "run_success": true,
    "status_runtime": "2 ms",
    "memory": 2132000,
    "question_id": "3093",
    "elapsed_time": 11,
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706690516928,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 639,
    "total_testcases": 639,
    "runtime_percentile": 55.172399999999996,
    "status_memory": "2.1 MB",
    "memory_percentile": 34.48279999999999,
    "pretty_lang": "Rust",
    "submission_id": "1161838958",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "impl Solution {\n    pub fn sum_indices_with_k_set_bits(nums: Vec<i32>, k: i32) -> i32 {\n        let mut sum = 0;\n        for (index, &value) in nums.iter().enumerate() {\n            if index.count_ones() as i32 == k {\n                sum += value;\n            }\n        }\n        sum\n    }\n}"
}