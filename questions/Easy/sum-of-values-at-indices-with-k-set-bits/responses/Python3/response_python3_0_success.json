{
    "status_code": 10,
    "lang": "python3",
    "run_success": true,
    "status_runtime": "83 ms",
    "memory": 17012000,
    "question_id": "3093",
    "elapsed_time": 91,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1708734107680,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 639,
    "total_testcases": 639,
    "runtime_percentile": 25.927600000000016,
    "status_memory": "17 MB",
    "memory_percentile": 42.431700000000006,
    "pretty_lang": "Python3",
    "submission_id": "1184407617",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "from typing import List\n\nclass Solution:\n    def sumIndicesWithKSetBits(self, nums: List[int], k: int) -> int:\n        def countSetBits(n: int) -> int:\n            count = 0\n            while n:\n                count += n & 1\n                n >>= 1\n            return count\n        \n        return sum(nums[i] for i in range(len(nums)) if countSetBits(i) == k)"
}