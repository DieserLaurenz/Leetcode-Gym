{
    "status_code": 10,
    "lang": "javascript",
    "run_success": true,
    "status_runtime": "78 ms",
    "memory": 51668000,
    "question_id": "3093",
    "elapsed_time": 85,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706690210859,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 639,
    "total_testcases": 639,
    "runtime_percentile": 34.72539999999997,
    "status_memory": "51.7 MB",
    "memory_percentile": 12.527199999999961,
    "pretty_lang": "JavaScript",
    "submission_id": "1161835894",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "/**\n * @param {number[]} nums\n * @param {number} k\n * @return {number}\n */\nvar sumIndicesWithKSetBits = function(nums, k) {\n    let sum = 0;\n    // Helper function to count set bits in an integer's binary representation\n    function countSetBits(n) {\n        let count = 0;\n        while (n) {\n            count += n & 1;\n            n >>= 1;\n        }\n        return count;\n    }\n    // Iterate over the indices of nums\n    for (let i = 0; i < nums.length; i++) {\n        // Count set bits in the current index\n        if (countSetBits(i) === k) {\n            // If the number of set bits equals k, add the corresponding element to sum\n            sum += nums[i];\n        }\n    }\n    return sum;\n};"
}