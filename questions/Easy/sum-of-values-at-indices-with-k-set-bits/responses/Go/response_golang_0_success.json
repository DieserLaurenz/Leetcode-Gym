{
    "status_code": 10,
    "lang": "golang",
    "run_success": true,
    "status_runtime": "5 ms",
    "memory": 4040000,
    "question_id": "3093",
    "elapsed_time": 17,
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706690407051,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 639,
    "total_testcases": 639,
    "runtime_percentile": 82.4,
    "status_memory": "4 MB",
    "memory_percentile": 48.0,
    "pretty_lang": "Go",
    "submission_id": "1161837870",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "func sumIndicesWithKSetBits(nums []int, k int) int {\n    sum := 0\n    for i, num := range nums {\n        if countSetBits(i) == k {\n            sum += num\n        }\n    }\n    return sum\n}\n\n// Helper function to count set bits in an integer's binary representation\nfunc countSetBits(n int) int {\n    count := 0\n    for n > 0 {\n        count += n & 1\n        n >>= 1\n    }\n    return count\n}"
}