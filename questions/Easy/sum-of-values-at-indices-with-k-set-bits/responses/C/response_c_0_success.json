{
    "status_code": 10,
    "lang": "c",
    "run_success": true,
    "status_runtime": "0 ms",
    "memory": 6080000,
    "question_id": "3093",
    "elapsed_time": 66,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706690130856,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 639,
    "total_testcases": 639,
    "runtime_percentile": 100,
    "status_memory": "6.1 MB",
    "memory_percentile": 86.5218,
    "pretty_lang": "C",
    "submission_id": "1161835076",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "int sumIndicesWithKSetBits(int* nums, int numsSize, int k){\n    int sum = 0; // To store the sum of elements\n    \n    // Function to count set bits in an integer's binary representation\n    int countSetBits(int n) {\n        int count = 0;\n        while (n) {\n            count += n & 1; // Increment count if the last bit is set\n            n >>= 1; // Right shift to check the next bit\n        }\n        return count;\n    }\n    \n    // Iterate through the array\n    for (int i = 0; i < numsSize; i++) {\n        if (countSetBits(i) == k) { // Check if the index has exactly k set bits\n            sum += nums[i]; // Add the corresponding element to sum\n        }\n    }\n    \n    return sum; // Return the sum of elements\n}"
}