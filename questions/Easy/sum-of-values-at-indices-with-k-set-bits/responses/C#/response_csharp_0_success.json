{
    "status_code": 10,
    "lang": "csharp",
    "run_success": true,
    "status_runtime": "103 ms",
    "memory": 44948000,
    "question_id": "3093",
    "elapsed_time": 172,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706690176910,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 639,
    "total_testcases": 639,
    "runtime_percentile": 18.840500000000034,
    "status_memory": "44.9 MB",
    "memory_percentile": 39.85530000000003,
    "pretty_lang": "C#",
    "submission_id": "1161835520",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "public class Solution {\n    public int SumIndicesWithKSetBits(IList<int> nums, int k) {\n        int sum = 0;\n        for (int i = 0; i < nums.Count; i++) {\n            // Count the set bits of the current index\n            int setBits = CountSetBits(i);\n            // If the count of set bits equals k, add the value at that index to sum\n            if (setBits == k) {\n                sum += nums[i];\n            }\n        }\n        return sum;\n    }\n\n    private int CountSetBits(int number) {\n        int count = 0;\n        while (number > 0) {\n            count += number & 1; // Increment count if the least significant bit is 1\n            number >>= 1; // Shift the bits of number to the right by 1\n        }\n        return count;\n    }\n}"
}