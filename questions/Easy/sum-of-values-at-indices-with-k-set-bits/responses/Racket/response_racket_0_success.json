{
    "status_code": 10,
    "lang": "racket",
    "run_success": true,
    "status_runtime": "243 ms",
    "memory": 100516000,
    "question_id": "3093",
    "elapsed_time": 353,
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706690560540,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 639,
    "total_testcases": 639,
    "runtime_percentile": 100,
    "status_memory": "100.5 MB",
    "memory_percentile": 100,
    "pretty_lang": "Racket",
    "submission_id": "1161839357",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "(define/contract (sum-indices-with-k-set-bits nums k)\n  (-> (listof exact-integer?) exact-integer? exact-integer?)\n  ;; Helper function to count set bits in the binary representation of a number\n  (define (count-set-bits n)\n    (if (= n 0)\n        0\n        (+ (modulo n 2) (count-set-bits (quotient n 2)))))\n  ;; Main function body\n  (let loop ((i 0) (sum 0))\n    (if (< i (length nums))\n        (let ((current-num (list-ref nums i)))\n          (if (= (count-set-bits i) k)\n              (loop (+ i 1) (+ sum current-num))\n              (loop (+ i 1) sum)))\n        sum)))"
}