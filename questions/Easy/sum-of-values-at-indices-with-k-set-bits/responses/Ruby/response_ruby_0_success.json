{
    "status_code": 10,
    "lang": "ruby",
    "run_success": true,
    "status_runtime": "64 ms",
    "memory": 211540000,
    "question_id": "3093",
    "elapsed_time": 131,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706690433348,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 639,
    "total_testcases": 639,
    "runtime_percentile": 100,
    "status_memory": "211.5 MB",
    "memory_percentile": 50.0,
    "pretty_lang": "Ruby",
    "submission_id": "1161838142",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "# @param {Integer[]} nums\n# @param {Integer} k\n# @return {Integer}\ndef sum_indices_with_k_set_bits(nums, k)\n    sum = 0\n    nums.each_with_index do |num, index|\n        # Count the set bits in the binary representation of the index\n        set_bits = index.to_s(2).count('1')\n        # Sum the element if its index has exactly k set bits\n        sum += num if set_bits == k\n    end\n    sum\nend\n\n# Example usage:\nputs sum_indices_with_k_set_bits([5,10,1,5,2], 1) # Output: 13\nputs sum_indices_with_k_set_bits([4,3,2,1], 2)    # Output: 1"
}