{
    "status_code": 10,
    "lang": "kotlin",
    "run_success": true,
    "status_runtime": "220 ms",
    "memory": 38556000,
    "question_id": "3093",
    "elapsed_time": 354,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706690335296,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 639,
    "total_testcases": 639,
    "runtime_percentile": 27.906500000000026,
    "status_memory": "38.6 MB",
    "memory_percentile": 34.88349999999999,
    "pretty_lang": "Kotlin",
    "submission_id": "1161837137",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "class Solution {\n    fun sumIndicesWithKSetBits(nums: List<Int>, k: Int): Int {\n        var sum = 0\n        \n        // Function to count set bits in an integer's binary representation\n        fun countSetBits(n: Int): Int {\n            var count = 0\n            var number = n\n            while (number > 0) {\n                count += number and 1\n                number = number shr 1\n            }\n            return count\n        }\n        \n        // Iterate over indices and sum elements with indices having k set bits\n        nums.indices.forEach { index ->\n            if (countSetBits(index) == k) {\n                sum += nums[index]\n            }\n        }\n        \n        return sum\n    }\n}"
}