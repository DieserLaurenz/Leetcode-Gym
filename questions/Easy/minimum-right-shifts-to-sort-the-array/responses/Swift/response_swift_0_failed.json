{
    "status_code": 11,
    "lang": "swift",
    "run_success": true,
    "status_runtime": "N/A",
    "memory": 15496000,
    "question_id": "3045",
    "elapsed_time": 29,
    "compare_result
    "code_output": "3",
    "std_output": "",
    "last_testcase": "[1,3,5]",
    "expected_output": "0",
    "task_finish_time": 1706555196068,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 693,
    "total_testcases": 813,
    "runtime_percentile": null,
    "status_memory": "N/A",
    "memory_percentile": null,
    "pretty_lang": "Swift",
    "submission_id": "1160372279",
    "input_formatted": "[1,3,5]",
    "input": "[1,3,5]",
    "status_msg": "Wrong Answer",
    "state": "SUCCESS",
    "code": "class Solution {\n    func minimumRightShifts(_ nums: [Int]) -> Int {\n        let n = nums.count\n        var descCount = 0\n        var shiftIndex = 0\n        \n        for i in 0..<n {\n            if nums[i] > nums[(i + 1) % n] {\n                descCount += 1\n                shiftIndex = (i + 1) % n\n            }\n        }\n        \n        // If array is already sorted or if there's exactly one point of rotation\n        if descCount == 0 {\n            return 0\n        } else if descCount == 1 {\n            // The number of right shifts needed is equivalent to the position\n            // of the element where the array should start to be sorted.\n            return n - shiftIndex\n        } else {\n            // More than one point of rotation indicates it's impossible to sort\n            // the array with right shifts alone.\n            return -1\n        }\n    }\n}"
}