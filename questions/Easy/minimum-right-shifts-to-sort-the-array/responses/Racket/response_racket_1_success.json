{
    "status_code": 10,
    "lang": "racket",
    "run_success": true,
    "status_runtime": "191 ms",
    "memory": 100168000,
    "question_id": "3045",
    "elapsed_time": 312,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706563699577,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 813,
    "total_testcases": 813,
    "runtime_percentile": 100,
    "status_memory": "100.2 MB",
    "memory_percentile": 100,
    "pretty_lang": "Racket",
    "submission_id": "1160463468",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "(define/contract (minimum-right-shifts nums)\n  (-> (listof exact-integer?) exact-integer?)\n  (let* ([n (length nums)]\n         [sorted-nums (sort nums <)]\n         [is-sorted (equal? nums sorted-nums)])\n    (if is-sorted\n        0\n        (let loop ([shifts 1])\n          (if (= shifts n)\n              -1\n              (let* ([shifted-nums (append (drop nums (- n shifts)) (take nums (- n shifts)))]\n                     [is-sorted-now (equal? shifted-nums sorted-nums)])\n                (if is-sorted-now\n                    shifts\n                    (loop (+ shifts 1)))))))))"
}