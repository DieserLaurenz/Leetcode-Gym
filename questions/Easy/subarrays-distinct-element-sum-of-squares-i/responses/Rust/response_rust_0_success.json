{
    "status_code": 10,
    "lang": "rust",
    "run_success": true,
    "status_runtime": "3 ms",
    "memory": 2160000,
    "question_id": "3163",
    "elapsed_time": 12,
    "compare_result": "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706678684478,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 707,
    "total_testcases": 707,
    "runtime_percentile": 100,
    "status_memory": "2.2 MB",
    "memory_percentile": 62.5,
    "pretty_lang": "Rust",
    "submission_id": "1161701359",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "impl Solution {\n    pub fn sum_counts(nums: Vec<i32>) -> i32 {\n        let mut sum = 0;\n        let n = nums.len();\n        \n        for i in 0..n {\n            let mut distinct_count = 0;\n            let mut freq = vec![0; 101]; // Since nums[i] is in the range 1 to 100\n            \n            for j in i..n {\n                if freq[nums[j] as usize] == 0 {\n                    distinct_count += 1; // New distinct element\n                }\n                freq[nums[j] as usize] += 1;\n                sum += distinct_count * distinct_count; // Square of distinct count for this subarray\n            }\n        }\n        \n        sum\n    }\n}"
}