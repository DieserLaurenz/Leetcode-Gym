{
    "status_code": 10,
    "lang": "typescript",
    "run_success": true,
    "status_runtime": "69 ms",
    "memory": 55672000,
    "question_id": "3163",
    "elapsed_time": 97,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706669837787,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 707,
    "total_testcases": 707,
    "runtime_percentile": 82.35280000000003,
    "status_memory": "55.7 MB",
    "memory_percentile": 5.882000000000016,
    "pretty_lang": "TypeScript",
    "submission_id": "1161602530",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "function sumCounts(nums: number[]): number {\n    let sum = 0;\n\n    // Iterate over all subarrays\n    for (let i = 0; i < nums.length; i++) {\n        let distinct = new Set<number>();\n        for (let j = i; j < nums.length; j++) {\n            distinct.add(nums[j]);\n            // Add the square of the current size of the set (distinct count) to sum\n            sum += distinct.size ** 2;\n        }\n    }\n\n    return sum;\n}"
}