{
    "status_code": 10,
    "lang": "c",
    "run_success": true,
    "status_runtime": "7 ms",
    "memory": 5836000,
    "question_id": "3163",
    "elapsed_time": 16,
    "compare_result": "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706669731791,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 707,
    "total_testcases": 707,
    "runtime_percentile": 47.82609999999999,
    "status_memory": "5.8 MB",
    "memory_percentile": 100,
    "pretty_lang": "C",
    "submission_id": "1161601536",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "int sumCounts(int* nums, int numsSize) {\n    int sum = 0;\n    for (int i = 0; i < numsSize; i++) {\n        int seen[101] = {0}; // Reset seen array for each subarray start.\n        int distinctCount = 0;\n        for (int j = i; j < numsSize; j++) {\n            if (!seen[nums[j]]) { // If nums[j] not already seen in this subarray.\n                seen[nums[j]] = 1; // Mark as seen.\n                distinctCount++; // Increment distinct count.\n            }\n            sum += distinctCount * distinctCount; // Add square of distinct count to sum.\n        }\n    }\n    return sum;\n}"
}