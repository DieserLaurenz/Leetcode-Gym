{
    "status_code": 10,
    "lang": "scala",
    "run_success": true,
    "status_runtime": "701 ms",
    "memory": 57040000,
    "question_id": "3163",
    "elapsed_time": 866,
    "compare_result
    "code_output": "",
    "std_output": "",
    "last_testcase": "",
    "expected_output": "",
    "task_finish_time": 1706678649552,
    "task_name": "judger.judgetask.Judge",
    "finished": true,
    "total_correct": 707,
    "total_testcases": 707,
    "runtime_percentile": 100,
    "status_memory": "57 MB",
    "memory_percentile": 100,
    "pretty_lang": "Scala",
    "submission_id": "1161700903",
    "status_msg": "Accepted",
    "state": "SUCCESS",
    "code": "object Solution {\n  def sumCounts(nums: List[Int]): Int = {\n    var sum = 0\n    val n = nums.length\n    for (i <- nums.indices) {\n      val freq = scala.collection.mutable.Map[Int, Int]()\n      var distinctCount = 0\n      for (j <- i until n) {\n        freq(nums(j)) = freq.getOrElse(nums(j), 0) + 1\n        if (freq(nums(j)) == 1) distinctCount += 1\n        sum += distinctCount * distinctCount\n      }\n    }\n    sum\n  }\n}"
}